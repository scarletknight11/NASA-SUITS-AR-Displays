{
  "name": "com.unity.xr.openxr",
  "displayName": "OpenXR Plugin",
  "version": "1.4.1",
  "unity": "2020.3",
  "unityRelease": "0b14",
  "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
  "keywords": [
    "openxr",
    "xr",
    "reality",
    "xreditorsubsystem"
  ],
  "dependencies": {
    "com.unity.xr.management": "4.0.1",
    "com.unity.xr.legacyinputhelpers": "2.1.2",
    "com.unity.inputsystem": "1.3.0"
  },
  "samples": [
    {
      "displayName": "Controller",
      "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
      "path": "Samples~/Controller"
    },
    {
      "displayName": "Meshing Subsystem Feature",
      "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
      "path": "Samples~/MeshingFeature"
    },
    {
      "displayName": "Intercept Feature",
      "description": "Demonstrates how to intercept an OpenXR method.",
      "path": "Samples~/InterceptFeature"
    }
  ],
  "upm": {
    "changelog": "### Fixed\n* Fixed an issue that would cause failure to load OpenXR loader when non-ascii characters in project path.\n* Fixed an editor crash issue when updating OpenXR package version and then enter Playmode.\n* Fixed `EyeGaze` functionality not working in the `Controller` sample.\n* Fixed Oculus `MenuButton` not being recognized in script.\n* Fixed an issue that some OpenXR Editor settings not being serialized properly.\n* Fixed `Failed to suggest bindings for interaction profile` console error spamming when a runtime doesn't support a certain interaction profile.\n\n### Updated\n* Updated OpenXR Loader to 1.0.20.\n* Updated Render Mode naming to Single Pass Instanced / Multiview for Android platform.\n* Updated Input System dependency to 1.3.0.\n* Updated XR mirror view to be based on the occlusion mesh line loop data obtained from `xrGetVisibilityMaskKHR`.\n\n### Added\n* Added runtime failures handling to completely shut down OpenXR when runtime error occurred.\n* Added support to dynamically discover runtimes by registry key.\n* Added logging for no MainCamera tag detected when depthSubmission mode enabled.\n* Added console error logging if entering playmode on unsupported platforms.\n* Added support to automatically open OpenXR project validator if any issues detected after package update.\n* Added API `OpenXRFeature.GetViewConfigurationTypeForRenderPass`, which returns viewConfigurationType for the given renderPass index.\n* Added pre-init support for UWP / WSA platform. Note: OpenXR got unchecked by upgrading to this version (only on UWP), but options chosen under `Features` remained as they were."
  },
  "upmCi": {
    "footprint": "58198a01010057b814e06dbb0a7b20360326793c"
  },
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
    "type": "git",
    "revision": "3e32a6803be6624fae3cad273ca346404003bd5f"
  }
}
