#include "pch-cpp.hpp"

#ifndef _MSC_VER
# include <alloca.h>
#else
# include <malloc.h>
#endif


#include <limits>
#include <stdint.h>


struct VirtualActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1>
struct VirtualActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2>
struct VirtualActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R>
struct VirtualFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};

// System.Action`1<UnityEngine.Font>
struct Action_1_tD91E4D0ED3C2E385D3BDD4B3EA48B5F99D39F1DC;
// System.Action`1<System.Int32>
struct Action_1_tD69A6DC9FBE94131E52F5A73B2A9D4AB51EEC404;
// System.Action`1<System.Object>
struct Action_1_t6F9EB113EB3F16226AEF811A2744F4111C116C87;
// System.Action`1<UnityEngine.Object>
struct Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A;
// System.Action`1<TMPro.TMP_TextInfo>
struct Action_1_tB93AB717F9D419A1BEC832FF76E74EAA32184CC1;
// System.Action`2<System.Int32,System.Int32>
struct Action_2_tD7438462601D3939500ED67463331FE00CFFBDB8;
// System.Comparison`1<System.Int32>
struct Comparison_1_tB7DE1436CB53924C2FC41FF926D074C1ACC14D89;
// System.Collections.Generic.Dictionary`2<System.Action`1<UnityEngine.Object>,System.Collections.Generic.LinkedListNode`1<System.Action`1<UnityEngine.Object>>>
struct Dictionary_2_t9FB13B661433DEEC78301CAC98E6FF103A9FF47E;
// System.Collections.Generic.Dictionary`2<System.Int32,System.Int32>
struct Dictionary_2_tABE19B9C5C52F1DE14F0D3287B2696E7D7419180;
// System.Collections.Generic.Dictionary`2<System.String,System.Int32>
struct Dictionary_2_t5C8F46F5D57502270DD9E1DA8303B23C7FE85588;
// System.Collections.Generic.Dictionary`2<System.String,System.String>
struct Dictionary_2_t46B2DB028096FA2B828359E52F37F3105A83AD83;
// System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Glyph>
struct Dictionary_2_tC61348D10610A6B3D7B65102D82AC3467D59EAA7;
// System.Collections.Generic.Dictionary`2<System.UInt32,TMPro.TMP_Character>
struct Dictionary_2_tCB5FEF8D6CEA1557D9B9BA25946AD6BF3E6C14D0;
// TMPro.FastAction`1<System.Boolean>
struct FastAction_1_tFC26007E6ECC49160C91059DC218FDD0602EE4F3;
// TMPro.FastAction`1<System.Object>
struct FastAction_1_t30779A2821DCE05CA702D5800B30CABF67687135;
// TMPro.FastAction`1<UnityEngine.Object>
struct FastAction_1_tE50C6A692DF85AB55BE3160B659FA7DF19DFA005;
// TMPro.FastAction`2<System.Boolean,UnityEngine.Material>
struct FastAction_2_tECA23F8F5AC1D6DF8BAB8AEDD017A064D210F83A;
// TMPro.FastAction`2<System.Boolean,UnityEngine.Object>
struct FastAction_2_t67E5AC7D6D05EC71192B279EA4EC495B4B3B4A9B;
// TMPro.FastAction`2<System.Object,TMPro.Compute_DT_EventArgs>
struct FastAction_2_t7A930CE5DBE699F7BADA18E19F951E3D68821A0D;
// TMPro.FastAction`3<UnityEngine.GameObject,UnityEngine.Material,UnityEngine.Material>
struct FastAction_3_tF1621854653F0CB64C7EE2C86A181B843FA49E77;
// System.Func`3<System.Int32,System.String,TMPro.TMP_FontAsset>
struct Func_3_tC721DF8CDD07ED66A4833A19A2ED2302608C906C;
// System.Func`3<System.Int32,System.String,TMPro.TMP_SpriteAsset>
struct Func_3_t6F6D9932638EA1A5A45303C6626C818C25D164E5;
// System.Collections.Generic.HashSet`1<System.Int32>
struct HashSet_1_t4A2F2B74276D0AD3ED0F873045BD61E9504ECAE2;
// System.Collections.Generic.HashSet`1<System.UInt32>
struct HashSet_1_t5DD20B42149A11AEBF12A75505306E6EFC34943A;
// System.Collections.Generic.IEnumerable`1<System.Object>
struct IEnumerable_1_tF95C9E01A913DD50575531C8305932628663D9E9;
// System.Collections.Generic.IEnumerable`1<System.String>
struct IEnumerable_1_t349E66EC5F09B881A8E52EE40A1AB9EC60E08E44;
// System.Collections.Generic.IList`1<System.Int32>
struct IList_1_tFB8BE2ED9A601C1259EAB8D73D1B3E96EA321FA1;
// System.Collections.Generic.LinkedList`1<System.Action`1<UnityEngine.Object>>
struct LinkedList_1_tA75C78C76C8C00278F758EE6873486604C8C880C;
// System.Collections.Generic.List`1<UnityEngine.GameObject>
struct List_1_tB951CE80B58D1BF9650862451D8DAD8C231F207B;
// System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph>
struct List_1_t95DB74B8EE315F8F92B7B96D93C901C8C3F6FE2C;
// System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect>
struct List_1_t425D3A455811E316D2DF73E46CF9CD90A4341C1B;
// System.Collections.Generic.List`1<System.Int32>
struct List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73;
// System.Collections.Generic.List`1<System.Object>
struct List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D;
// System.Collections.Generic.List`1<System.Single>
struct List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918;
// System.Collections.Generic.List`1<System.String>
struct List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD;
// System.Collections.Generic.List`1<TMPro.TMP_Character>
struct List_1_tCE1ACAA0C2736A7797B2C134895298CAB10BEB5E;
// System.Collections.Generic.List`1<TMPro.TMP_FontAsset>
struct List_1_t06C3ABB0C6F2347B32881E33D154431EADAE3ECF;
// System.Collections.Generic.List`1<TMPro.TMP_Glyph>
struct List_1_tAB7976FADCF872E418770E60783056C23394843D;
// System.Collections.Generic.List`1<System.UInt32>
struct List_1_t9B68833848E4C4D7F623C05F6B77F0449396354A;
// UnityEngine.UI.CoroutineTween.TweenRunner`1<UnityEngine.UI.CoroutineTween.ColorTween>
struct TweenRunner_1_t5BB0582F926E75E2FE795492679A6CF55A4B4BC4;
// UnityEngine.Events.UnityAction`2<System.Char,System.Int32>
struct UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007;
// UnityEngine.Events.UnityAction`3<System.Object,System.Int32,System.Int32>
struct UnityAction_3_t2F4C93AEE3F6452801100D902D54CF21027541D8;
// UnityEngine.Events.UnityAction`3<System.Object,System.Object,System.Int32>
struct UnityAction_3_tFD664A83B91518A4F822E02F501557F29ECCF487;
// UnityEngine.Events.UnityAction`3<System.String,System.Int32,System.Int32>
struct UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6;
// UnityEngine.Events.UnityAction`3<System.String,System.String,System.Int32>
struct UnityAction_3_tA4BA03B0D2CAB7D20E7006E36EF6B1D662432039;
// UnityEngine.Events.UnityEvent`2<System.Char,System.Int32>
struct UnityEvent_2_tE1EF7CBD9965CD9466B63C1AD8FB3661A30C25B3;
// UnityEngine.Events.UnityEvent`3<System.Object,System.Int32,System.Int32>
struct UnityEvent_3_tD7E14BDD38F12B63EFECBD1604C666F9AF100EAA;
// UnityEngine.Events.UnityEvent`3<System.Object,System.Object,System.Int32>
struct UnityEvent_3_tCE934710A8225E2574DC47F0C89DD63B7324C18F;
// UnityEngine.Events.UnityEvent`3<System.String,System.Int32,System.Int32>
struct UnityEvent_3_t5EE2DC870C12CB60384C5FCBB0DAD36392E701AD;
// UnityEngine.Events.UnityEvent`3<System.String,System.String,System.Int32>
struct UnityEvent_3_t978FAA968D1FEECACADDD0969B822861FA0C6622;
// TMPro.TMP_TextProcessingStack`1<System.Int32>[]
struct TMP_TextProcessingStack_1U5BU5D_t08293E0BB072311BB96170F351D1083BCA97B9B2;
// UnityEngine.Vector3[][]
struct Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D;
// System.Byte[]
struct ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031;
// System.Char[]
struct CharU5BU5D_t799905CF001DD5F13F7DBB310181FC4D8B7D0AAB;
// UnityEngine.Color32[]
struct Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259;
// OpenCvSharp.DMatch[]
struct DMatchU5BU5D_t5146FE58B7CF480941ED1CBE7375F150A69CBD34;
// System.Decimal[]
struct DecimalU5BU5D_t93BA0C88FA80728F73B792EE1A5199D0C060B615;
// System.Delegate[]
struct DelegateU5BU5D_tC5AB7E8F745616680F337909D3A8E6C722CDF771;
// System.Double[]
struct DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE;
// TMPro.FontWeight[]
struct FontWeightU5BU5D_t2A406B5BAB0DD0F06E7F1773DB062E4AF98067BA;
// TMPro.HighlightState[]
struct HighlightStateU5BU5D_tA878A0AF1F4F52882ACD29515AADC277EE135622;
// TMPro.HorizontalAlignmentOptions[]
struct HorizontalAlignmentOptionsU5BU5D_t4D185662282BFB910D8B9A8199E91578E9422658;
// System.Int16[]
struct Int16U5BU5D_t8175CE8DD9C9F9FB0CF4F58E45BC570575B43CFB;
// System.Int32[]
struct Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C;
// System.IntPtr[]
struct IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832;
// OpenCvSharp.KeyPoint[]
struct KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17;
// UnityEngine.Keyframe[]
struct KeyframeU5BU5D_t63250A46914A6A07B2A6689850D47D7D19D80BA3;
// UnityEngine.Material[]
struct MaterialU5BU5D_t2B1D11C42DB07A4400C0535F92DBB87A2E346D3D;
// TMPro.MaterialReference[]
struct MaterialReferenceU5BU5D_t7491D335AB3E3E13CE9C0F5E931F396F6A02E1F2;
// System.Object[]
struct ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918;
// OpenCvSharp.Point[]
struct PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B;
// OpenCvSharp.Point2d[]
struct Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485;
// OpenCvSharp.Point2f[]
struct Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953;
// OpenCvSharp.Point3d[]
struct Point3dU5BU5D_tCFCFAEE9362D1E9BA210F2CBFABAEC68D052F43D;
// OpenCvSharp.Point3f[]
struct Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2;
// OpenCvSharp.Point3i[]
struct Point3iU5BU5D_t4ADE5D61157E49120DBB2AC37D0C253B312688EC;
// OpenCvSharp.Range[]
struct RangeU5BU5D_t7A815EED0DB267C51F9F6C0507B9579B68391756;
// OpenCvSharp.Rect[]
struct RectU5BU5D_t8D707798510E7E6C5EDA64E457B86964B724B96A;
// TMPro.RichTextTagAttribute[]
struct RichTextTagAttributeU5BU5D_t5816316EFD8F59DBC30B9F88E15828C564E47B6D;
// System.Single[]
struct SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C;
// System.Diagnostics.StackTrace[]
struct StackTraceU5BU5D_t32FBCB20930EAF5BAE3F450FF75228E5450DA0DF;
// System.String[]
struct StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248;
// TMPro.TMP_CharacterInfo[]
struct TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99;
// TMPro.TMP_ColorGradient[]
struct TMP_ColorGradientU5BU5D_t2F65E8C42F268DFF33BB1392D94BCF5B5087308A;
// TMPro.TMP_FontWeightPair[]
struct TMP_FontWeightPairU5BU5D_t0A3A5955F13FEB2F7329D81BA157110DB99F9F37;
// TMPro.TMP_LineInfo[]
struct TMP_LineInfoU5BU5D_tE485ECF6A7A96441C72B53D75E7A5A5461A2CA0E;
// TMPro.TMP_LinkInfo[]
struct TMP_LinkInfoU5BU5D_tE11BE54A5923BD2148E716289F44EA465E06536E;
// TMPro.TMP_MeshInfo[]
struct TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7;
// TMPro.TMP_PageInfo[]
struct TMP_PageInfoU5BU5D_tE3DAAA8E2E9147F97C424A9034F677A516E8DAF9;
// TMPro.TMP_SubMesh[]
struct TMP_SubMeshU5BU5D_t48FE70F8537594C6446E85588EB5D69635194CB9;
// TMPro.TMP_SubMeshUI[]
struct TMP_SubMeshUIU5BU5D_tC77B263183A59A75345C26152457207EAC3BBF29;
// TMPro.TMP_WordInfo[]
struct TMP_WordInfoU5BU5D_tD1759E5A84DCCCD42B718D79E953E72A432BB4DC;
// UnityEngine.Texture2D[]
struct Texture2DU5BU5D_t05332F1E3F7D4493E304C702201F9BE4F9236191;
// System.Type[]
struct TypeU5BU5D_t97234E1129B564EB38B8D85CAC2AD8B5B9522FFB;
// System.UInt16[]
struct UInt16U5BU5D_tEB7C42D811D999D2AA815BADC3FCCDD9C67B3F83;
// System.UInt32[]
struct UInt32U5BU5D_t02FBD658AD156A17574ECE6106CF1FBFCC9807FA;
// OpenCvSharp.Vec2f[]
struct Vec2fU5BU5D_t605FE443F498ED80B628FC0E98240C847D9C22FF;
// OpenCvSharp.Vec3b[]
struct Vec3bU5BU5D_t65AD1F336D24EA9AD600B4A6CB27B3B517C138EE;
// OpenCvSharp.Vec3d[]
struct Vec3dU5BU5D_t7F6500BD6738D9EF9379BBF49E20270DD8FE005E;
// OpenCvSharp.Vec3f[]
struct Vec3fU5BU5D_tED5C8EB686AD5A75ACA66EC986897DE59ABF6C4D;
// OpenCvSharp.Vec4d[]
struct Vec4dU5BU5D_t4CD1D642D7FE8D7D780F5089E9047773F65F29E7;
// OpenCvSharp.Vec4f[]
struct Vec4fU5BU5D_t3B2FBCD7291E3C966FB625B86393DC5CDB180A64;
// OpenCvSharp.Vec4i[]
struct Vec4iU5BU5D_tA592A0B55AB1329BD078300CADFC474499AA7157;
// OpenCvSharp.Vec6d[]
struct Vec6dU5BU5D_tD00B137B3DBEF1DB6F17CA62572E730E9D27FE42;
// OpenCvSharp.Vec6f[]
struct Vec6fU5BU5D_t592D4E62D13229DBA0A9CD133ADE98A5E27449C3;
// UnityEngine.Vector2[]
struct Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA;
// UnityEngine.Vector3[]
struct Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C;
// UnityEngine.Vector4[]
struct Vector4U5BU5D_tC0F3A7115F85007510F6D173968200CD31BCF7AD;
// TMPro.WordWrapState[]
struct WordWrapStateU5BU5D_t473D59C9DBCC949CE72EF1EB471CBA152A6CEAC9;
// TMPro.TMP_Text/UnicodeChar[]
struct UnicodeCharU5BU5D_t67F27D09F8EB28D2C42DFF16FE60054F157012F5;
// TMPro.Examples.VertexJitter/VertexAnim[]
struct VertexAnimU5BU5D_tC74236D4EB454A8EF2CE1E6145CE5F78E1D5CF38;
// System.Byte[,]
struct ByteU5BU2CU5D_tFF0F8305C018904B90DCD1740962BABBC458B638;
// System.Double[,]
struct DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE;
// System.Int16[,]
struct Int16U5BU2CU5D_tA1085F28F76441E5B3C4F55200C853889884825E;
// System.Int32[,]
struct Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F;
// OpenCvSharp.Point[,]
struct PointU5BU2CU5D_t75336C640C8EF9A5D74131EF2FF56ADE1E04A0A3;
// OpenCvSharp.Point2d[,]
struct Point2dU5BU2CU5D_t7484AAFF04C19494AB4D23D45BE7FB1371C8B4DE;
// OpenCvSharp.Point2f[,]
struct Point2fU5BU2CU5D_t534637B478C32FFC446C173967390F3A2A61FBEF;
// OpenCvSharp.Point3d[,]
struct Point3dU5BU2CU5D_tF448DE8BEF99C9C7200AC09879C34D2B9BB16E43;
// OpenCvSharp.Point3f[,]
struct Point3fU5BU2CU5D_t956F68C0D8D3E941181E3BDAA0CDF49861545B6C;
// OpenCvSharp.Point3i[,]
struct Point3iU5BU2CU5D_t9D63D6246F01F8C00A5D07420A3EC8F43E7EB075;
// OpenCvSharp.Rect[,]
struct RectU5BU2CU5D_t466728D2C4C1410891B29B2693FA0796C414CC2D;
// System.Single[,]
struct SingleU5BU2CU5D_t8C95DA2D5056EB0490FC7DCB1ED30E33DE1D53F4;
// System.UInt16[,]
struct UInt16U5BU2CU5D_t2C918D9FF94D8CF06CE395FB8C6B931FA8B8AE1B;
// OpenCvSharp.Vec3b[,]
struct Vec3bU5BU2CU5D_tE90BFA4A10C08A985D030E3187325900CBF521B5;
// OpenCvSharp.Vec3d[,]
struct Vec3dU5BU2CU5D_t29CB373947AD17A0ECF7B4EEB20936B21D140804;
// OpenCvSharp.Vec4f[,]
struct Vec4fU5BU2CU5D_t54D8EA2F459F41BD179635792BF550EB3E317FDF;
// OpenCvSharp.Vec4i[,]
struct Vec4iU5BU2CU5D_t438C08E75365B75E4142B910325D19F21F4C6CD9;
// OpenCvSharp.Vec6f[,]
struct Vec6fU5BU2CU5D_t7C67D2C5EDBC06D656BC54F1A2409DE9F3334AAE;
// UnityEngine.AnimationCurve
struct AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354;
// System.AsyncCallback
struct AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C;
// UnityEngine.EventSystems.BaseRaycaster
struct BaseRaycaster_t7DC8158FD3CA0193455344379DD5FF7CD5F1F832;
// UnityEngine.Behaviour
struct Behaviour_t01970CFBBA658497AE30F311C447DB0440BAB7FA;
// System.Reflection.Binder
struct Binder_t91BFCE95A7057FADF4D8A1A342AFE52872246235;
// UnityEngine.Camera
struct Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184;
// UnityEngine.Canvas
struct Canvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26;
// UnityEngine.CanvasRenderer
struct CanvasRenderer_tAB9A55A976C4E3B2B37D0CE5616E5685A8B43860;
// UnityEngine.Component
struct Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3;
// UnityEngine.Coroutine
struct Coroutine_t85EA685566A254C23F3FD77AB5BDFFFF8799596B;
// OpenCvSharp.CvErrorCallback
struct CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D;
// OpenCvSharp.CvMouseCallback
struct CvMouseCallback_t22DBBF4F8817261C6B75DDC580CF521ACF39D8FB;
// System.Delegate
struct Delegate_t;
// System.DelegateData
struct DelegateData_t9B286B493293CD2D23A5B2B5EF0E5B1324C2B77E;
// DyiPinchGrab.DyiHandManipulation
struct DyiHandManipulation_t160359CE7BE193C1B024ED59838120193F7F1DE9;
// UnityEngine.EventSystems.EventSystem
struct EventSystem_t61C51380B105BE9D2C39C4F15B7E655659957707;
// System.Exception
struct Exception_t;
// TMPro.FaceInfo_Legacy
struct FaceInfo_Legacy_t23B118EFD5AB7162515ABF18C0212DF155CCF7B8;
// TMPro.FastAction
struct FastAction_t32D4ADE06921D3EAB9BCE9B6397C82A4A898644D;
// UnityEngine.Font
struct Font_tC95270EA3198038970422D78B74A7F2E218A96B6;
// UnityEngine.GameObject
struct GameObject_t76FEDD663AB33C991A9C9A23129337651094216F;
// System.IAsyncResult
struct IAsyncResult_t7B9B5A0ECB35DCEC31B8A8122C37D687369253B5;
// System.Collections.IDictionary
struct IDictionary_t6D03155AF1FA9083817AA5B6AD7DEEACC26AB220;
// System.Collections.IEnumerator
struct IEnumerator_t7B609C2FFA6EB5167D9C62A0C32A21DE2F666DAA;
// TMPro.ITextPreprocessor
struct ITextPreprocessor_tDBB49C8B68D7B80E8D233B9D9666C43981EFAAB9;
// UnityEngine.Events.InvokableCallList
struct InvokableCallList_t309E1C8C7CE885A0D2F98C84CEA77A8935688382;
// TMPro.KerningTable
struct KerningTable_t040C3FE3B519B12AADE1C5B00628581551D5AB6B;
// UnityEngine.UI.LayoutElement
struct LayoutElement_tB1F24CC11AF4AA87015C8D8EE06D22349C5BF40A;
// OpenCvSharp.MatForeachFunctionByte
struct MatForeachFunctionByte_t52C7B3A433F3DF065CEE966CFD028E1464F529E3;
// OpenCvSharp.MatForeachFunctionDouble
struct MatForeachFunctionDouble_tCB6307339EB3912EDCF067F2028EED37BA32CC8A;
// OpenCvSharp.MatForeachFunctionFloat
struct MatForeachFunctionFloat_t38C2418BF9FC6D10EC034037EEDAC2BBB0C4AF6A;
// OpenCvSharp.MatForeachFunctionInt16
struct MatForeachFunctionInt16_t0374522FDC4CD56E472D78560D8F1FD39A449FE1;
// OpenCvSharp.MatForeachFunctionInt32
struct MatForeachFunctionInt32_tA11F413E4816D4EFA4C297DD08A7F76F9D1707DA;
// OpenCvSharp.MatForeachFunctionVec2b
struct MatForeachFunctionVec2b_tCF74100FFE496D5E2545413E6CA03932B0269828;
// OpenCvSharp.MatForeachFunctionVec2d
struct MatForeachFunctionVec2d_t6D8706FAC992DA48312959CD2531779CC37A3F10;
// OpenCvSharp.MatForeachFunctionVec2f
struct MatForeachFunctionVec2f_tB9D8C2EFCC61319FFF721E85B231D2D4B55565E2;
// OpenCvSharp.MatForeachFunctionVec2i
struct MatForeachFunctionVec2i_t7565625E15043384966DC1F8D1FC9E30C517B131;
// OpenCvSharp.MatForeachFunctionVec2s
struct MatForeachFunctionVec2s_tBD0DE263650799DB4E89AE906793FA7095033392;
// OpenCvSharp.MatForeachFunctionVec3b
struct MatForeachFunctionVec3b_t2031975BC30858291EFC4F7F2C65874DB23FCFE6;
// OpenCvSharp.MatForeachFunctionVec3d
struct MatForeachFunctionVec3d_tFE706CFA749551FE931D7640ADA60D79651814D5;
// OpenCvSharp.MatForeachFunctionVec3f
struct MatForeachFunctionVec3f_t11B96B79774D7E26DE67C65013BDE101110233F2;
// OpenCvSharp.MatForeachFunctionVec3i
struct MatForeachFunctionVec3i_tB9D7085FC547C65EFCA6B1497E5BF9CA22C9A593;
// OpenCvSharp.MatForeachFunctionVec3s
struct MatForeachFunctionVec3s_t3DB326D6C50ACF576CE95D082A30B15FDE66F42A;
// OpenCvSharp.MatForeachFunctionVec4b
struct MatForeachFunctionVec4b_tC0FE30A53B19679D93C118745DE736E3EC44EC5A;
// OpenCvSharp.MatForeachFunctionVec4d
struct MatForeachFunctionVec4d_tD463FA199BE73911A54402FAC92ABD91E8CE2466;
// OpenCvSharp.MatForeachFunctionVec4f
struct MatForeachFunctionVec4f_t40CF1C2E1E36DFA715D1FC6AC1DF722C6DB3CD29;
// OpenCvSharp.MatForeachFunctionVec4i
struct MatForeachFunctionVec4i_t5C0E76789E10044BA3866336D8758D103889DBF3;
// OpenCvSharp.MatForeachFunctionVec4s
struct MatForeachFunctionVec4s_tD7215B7DB75D388FF85DE10F1C93A5E1312FA613;
// OpenCvSharp.MatForeachFunctionVec6b
struct MatForeachFunctionVec6b_t78482390F33F672897BB7CD1FD2DB5FAE11702F4;
// OpenCvSharp.MatForeachFunctionVec6d
struct MatForeachFunctionVec6d_tA03EFFDD425E1A67808E7DACBBD496DEB341BB46;
// OpenCvSharp.MatForeachFunctionVec6f
struct MatForeachFunctionVec6f_t2B2D96C4B8BDB138726237FF466911814ADE7E52;
// OpenCvSharp.MatForeachFunctionVec6i
struct MatForeachFunctionVec6i_t19BEECEE67385C47EB2A204AB29CE3182A496D6C;
// OpenCvSharp.MatForeachFunctionVec6s
struct MatForeachFunctionVec6s_tE4986F3BA0F08AF223FCBEE33726A82C739DCD89;
// UnityEngine.Material
struct Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3;
// System.Reflection.MemberFilter
struct MemberFilter_tF644F1AE82F611B677CE1964D5A3277DDA21D553;
// UnityEngine.Mesh
struct Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4;
// UnityEngine.MeshFilter
struct MeshFilter_t6D1CE2473A1E45AC73013400585A1163BF66B2F5;
// System.Reflection.MethodInfo
struct MethodInfo_t;
// UnityEngine.MonoBehaviour
struct MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71;
// System.NotSupportedException
struct NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A;
// UnityEngine.Object
struct Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C;
// OpenCvSharp.OpenCvSharpException
struct OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A;
// System.OperatingSystem
struct OperatingSystem_t08A94435A5C7D999B5553B6C58763A6F2E3C8557;
// UnityEngine.Events.PersistentCallGroup
struct PersistentCallGroup_tB826EDF15DC80F71BCBCD8E410FD959A04C33F25;
// UnityEngine.EventSystems.PointerEventData
struct PointerEventData_t9670F3C7D823CCB738A1604C72A1EB90292396FB;
// System.Random
struct Random_t79716069EDE67D1D7734F60AE402D0CA3FB6B4C8;
// UnityEngine.UI.RectMask2D
struct RectMask2D_tACF92BE999C791A665BD1ADEABF5BCEB82846670;
// UnityEngine.RectTransform
struct RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5;
// UnityEngine.Renderer
struct Renderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF;
// System.Runtime.Serialization.SafeSerializationManager
struct SafeSerializationManager_tCBB85B95DFD1634237140CD892E82D06ECB3F5E6;
// System.String
struct String_t;
// System.Text.StringBuilder
struct StringBuilder_t;
// TMPro.TMP_Character
struct TMP_Character_t7D37A55EF1A9FF6D0BFE6D50E86A00F80E7FAF35;
// TMPro.TMP_ColorGradient
struct TMP_ColorGradient_t17B51752B4E9499A1FF7D875DCEC1D15A0F4AEBB;
// TMPro.Examples.TMP_ExampleScript_01
struct TMP_ExampleScript_01_t12A14830C25DE1BA02443B22907A196BE4B44305;
// TMPro.TMP_FontAsset
struct TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160;
// TMPro.TMP_FontFeatureTable
struct TMP_FontFeatureTable_t726A09E64FDF682A8FFE294BB6CFE7747F6C40EA;
// TMPro.Examples.TMP_FrameRateCounter
struct TMP_FrameRateCounter_t65C436069EE403C827CBE41C38F5B5C9D2FC946B;
// TMPro.TMP_SpriteAnimator
struct TMP_SpriteAnimator_t2E0F016A61CA343E3222FF51E7CF0E53F9F256E4;
// TMPro.TMP_SpriteAsset
struct TMP_SpriteAsset_t81F779E6F705CE190DC0D1F93A954CB8B1774B39;
// TMPro.TMP_Style
struct TMP_Style_tA9E5B1B35EBFE24EF980CEA03251B638282E120C;
// TMPro.TMP_StyleSheet
struct TMP_StyleSheet_t70C71699F5CB2D855C361DBB78A44C901236C859;
// TMPro.TMP_Text
struct TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9;
// TMPro.TMP_TextElement
struct TMP_TextElement_t262A55214F712D4274485ABE5676E5254B84D0A5;
// TMPro.Examples.TMP_TextEventCheck
struct TMP_TextEventCheck_tC19A6E94690E74ED73926E8EDC5F611501DC6233;
// TMPro.TMP_TextEventHandler
struct TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333;
// TMPro.TMP_TextInfo
struct TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D;
// TMPro.Examples.TMP_TextInfoDebugTool
struct TMP_TextInfoDebugTool_tC8728D25321C0091ECD61B136B0E3A5B4AB4B76F;
// TMPro.Examples.TMP_TextSelector_A
struct TMP_TextSelector_A_t088F530FC9DE9E7B6AC9720D50A05B757189B294;
// TMPro.Examples.TMP_TextSelector_B
struct TMP_TextSelector_B_t57166268B8E5437286F55085EA19969D0A528CC2;
// TMPro.Examples.TMP_UiFrameRateCounter
struct TMP_UiFrameRateCounter_t3CB67462256A3570DFD0BD10261E7CABB11AFC0E;
// TMPro.Examples.TMPro_InstructionOverlay
struct TMPro_InstructionOverlay_t1CFD12C64F70D5D2FBE29466015C02776A406B62;
// TMPro.Examples.TeleType
struct TeleType_tA6F2E696EFE0B4124756D8810A7AAFB7829EE2F5;
// TMPro.Examples.TextConsoleSimulator
struct TextConsoleSimulator_t986082F574CD2A38D6E40D856C6A9926D7EF49D2;
// TMPro.TextContainer
struct TextContainer_t949A6EBEE5C8832723E73D8D3DCF4C8D0B3D7F3C;
// UnityEngine.TextMesh
struct TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8;
// TMPro.TextMeshPro
struct TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E;
// TMPro.Examples.TextMeshProFloatingText
struct TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31;
// TMPro.TextMeshProUGUI
struct TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957;
// TMPro.Examples.TextMeshSpawner
struct TextMeshSpawner_tB6905931E9BE4D7A2A2E37A51E221A7B462D75BB;
// UnityEngine.Texture2D
struct Texture2D_tE6505BC111DD8A424A9DBE8E05D7D09E11FFFCF4;
// UnityEngine.Transform
struct Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1;
// System.Type
struct Type_t;
// UnityEngine.Events.UnityAction
struct UnityAction_t11A1F3B953B365C072A5DCC32677EE1796A962A7;
// System.Version
struct Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7;
// TMPro.Examples.VertexColorCycler
struct VertexColorCycler_t527535DC3F38CBB70E8A4B35907DA8EC4FC62C8D;
// UnityEngine.UI.VertexHelper
struct VertexHelper_tB905FCB02AE67CBEE5F265FE37A5938FC5D136FE;
// TMPro.Examples.VertexJitter
struct VertexJitter_t5D8689E23D1DD2CCF81ACE6FFC9E34797E8AE4C7;
// TMPro.Examples.VertexShakeA
struct VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F;
// TMPro.Examples.VertexShakeB
struct VertexShakeB_tA3849618A1BE8DCE150A615F38CE2E247FC6F6C8;
// TMPro.Examples.VertexZoom
struct VertexZoom_t51F05EB153497034D27896F07590D790A73981A6;
// System.Void
struct Void_t4861ACF8F4594C3437BB48B6E56783494B843915;
// UnityEngine.WaitForEndOfFrame
struct WaitForEndOfFrame_tE38D80923E3F8380069B423968C25ABE50A46663;
// UnityEngine.WaitForSeconds
struct WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3;
// TMPro.Examples.WarpTextExample
struct WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E;
// OpenCvSharp.Util.WindowsLibraryLoader
struct WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7;
// UnityEngine.Camera/CameraCallback
struct CameraCallback_t844E527BFE37BC0495E7F67993E43C07642DA9DD;
// UnityEngine.Canvas/WillRenderCanvases
struct WillRenderCanvases_tA4A6E66DBA797DCB45B995DBA449A9D1D80D0FBC;
// UnityEngine.Font/FontTextureRebuildCallback
struct FontTextureRebuildCallback_t76D5E172DF8AA57E67763D453AAC40F0961D09B1;
// UnityEngine.UI.MaskableGraphic/CullStateChangedEvent
struct CullStateChangedEvent_t6073CD0D951EC1256BF74B8F9107D68FC89B99B8;
// UnityEngine.RectTransform/ReapplyDrivenProperties
struct ReapplyDrivenProperties_t3482EA130A01FF7EE2EEFE37F66A5215D08CFE24;
// TMPro.TMP_TextEventHandler/CharacterSelectionEvent
struct CharacterSelectionEvent_t5D7AF67F47A37175CF8615AD66DEC4A0AA021392;
// TMPro.TMP_TextEventHandler/LineSelectionEvent
struct LineSelectionEvent_t526120C6113E0638913B951E3D1D7B1CF94F0880;
// TMPro.TMP_TextEventHandler/LinkSelectionEvent
struct LinkSelectionEvent_t5CE74F742D231580ED2C810ECE394E1A2BC81B3D;
// TMPro.TMP_TextEventHandler/SpriteSelectionEvent
struct SpriteSelectionEvent_t770551D2973013622C464E817FA74D53BCD4FD95;
// TMPro.TMP_TextEventHandler/WordSelectionEvent
struct WordSelectionEvent_t340E6006406B5E90F7190C56218E8F7E3712945E;
// TMPro.Examples.TeleType/<Start>d__4
struct U3CStartU3Ed__4_t34C4F7117E4A5E63F9D03A9DD3C2493CEB376E75;
// TMPro.Examples.TextConsoleSimulator/<RevealCharacters>d__7
struct U3CRevealCharactersU3Ed__7_tB14F85C7FC57BEFD555A1A9CD8D3FF41E0F676F9;
// TMPro.Examples.TextConsoleSimulator/<RevealWords>d__8
struct U3CRevealWordsU3Ed__8_t912CFD430C602C79AE6BC1BC6C4AEBF101B4D7C8;
// TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshFloatingText>d__13
struct U3CDisplayTextMeshFloatingTextU3Ed__13_tFC924C56A4F46E6D8D46B95035B8A6D215A180A1;
// TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshProFloatingText>d__12
struct U3CDisplayTextMeshProFloatingTextU3Ed__12_tF5C7EAAA1230794883FCB2D5C767C12F48C50C76;
// TMPro.Examples.VertexColorCycler/<AnimateVertexColors>d__3
struct U3CAnimateVertexColorsU3Ed__3_t88CF335125784EBBA1DA65AF7B815F1814D31264;
// TMPro.Examples.VertexJitter/<AnimateVertexColors>d__11
struct U3CAnimateVertexColorsU3Ed__11_t2EF4BA1F3569F2C4ECDD4AD4980AAC251CD1D956;
// TMPro.Examples.VertexShakeA/<AnimateVertexColors>d__11
struct U3CAnimateVertexColorsU3Ed__11_t2E62EF65D8AE7185E18D8711E582A76E45AC843E;
// TMPro.Examples.VertexShakeB/<AnimateVertexColors>d__10
struct U3CAnimateVertexColorsU3Ed__10_tD6C6C3147726423C8C82952A638432E12AA2C91E;
// TMPro.Examples.VertexZoom/<>c__DisplayClass10_0
struct U3CU3Ec__DisplayClass10_0_t62C0E1CEED92DDFC3DD4C58EC8806FC7D82A7FB7;
// TMPro.Examples.VertexZoom/<AnimateVertexColors>d__10
struct U3CAnimateVertexColorsU3Ed__10_t2EB585545BBB614E711BE1D5C7BF139053486123;
// TMPro.Examples.WarpTextExample/<WarpText>d__8
struct U3CWarpTextU3Ed__8_tF1A14DF86D48AE9144155D4BF8E31E63471F358E;

IL2CPP_EXTERN_C RuntimeClass* Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* BadImageFormatException_t7EBAEDCD74D3274D00106EC0051755C18D20E552_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Comparison_1_tB7DE1436CB53924C2FC41FF926D074C1ACC14D89_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Console_t5EDF9498D011BD48287171978EDBBA6964829C3E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DllNotFoundException_t8CAE636A394C482C9FCF38FB7B7929506319D534_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Exception_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* GameObject_t76FEDD663AB33C991A9C9A23129337651094216F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IntPtr_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* KeyframeU5BU5D_t63250A46914A6A07B2A6689850D47D7D19D80BA3_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Math_tEB65DE7CA8B083C412C969C92981C030865486CE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* RectTransformUtility_t65C00A84A72F17D78B81F2E7D88C2AA98AB61244_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* RuntimeObject_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* String_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* TMP_TextUtilities_tD7ED516E31C2AA0EB607D587C0BB0FE71A8BB934_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Type_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CAnimateVertexColorsU3Ed__10_t2EB585545BBB614E711BE1D5C7BF139053486123_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CAnimateVertexColorsU3Ed__10_tD6C6C3147726423C8C82952A638432E12AA2C91E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CAnimateVertexColorsU3Ed__11_t2E62EF65D8AE7185E18D8711E582A76E45AC843E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CAnimateVertexColorsU3Ed__11_t2EF4BA1F3569F2C4ECDD4AD4980AAC251CD1D956_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CAnimateVertexColorsU3Ed__3_t88CF335125784EBBA1DA65AF7B815F1814D31264_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CDisplayTextMeshFloatingTextU3Ed__13_tFC924C56A4F46E6D8D46B95035B8A6D215A180A1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CDisplayTextMeshProFloatingTextU3Ed__12_tF5C7EAAA1230794883FCB2D5C767C12F48C50C76_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CRevealCharactersU3Ed__7_tB14F85C7FC57BEFD555A1A9CD8D3FF41E0F676F9_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CRevealWordsU3Ed__8_t912CFD430C602C79AE6BC1BC6C4AEBF101B4D7C8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CStartU3Ed__4_t34C4F7117E4A5E63F9D03A9DD3C2493CEB376E75_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CU3Ec__DisplayClass10_0_t62C0E1CEED92DDFC3DD4C58EC8806FC7D82A7FB7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CWarpTextU3Ed__8_tF1A14DF86D48AE9144155D4BF8E31E63471F358E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UnityAction_3_tA4BA03B0D2CAB7D20E7006E36EF6B1D662432039_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VertexAnimU5BU5D_tC74236D4EB454A8EF2CE1E6145CE5F78E1D5CF38_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* WaitForEndOfFrame_tE38D80923E3F8380069B423968C25ABE50A46663_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C String_t* _stringLiteral0133981053AC767ED98F641B459173B5499F4EB0;
IL2CPP_EXTERN_C String_t* _stringLiteral042E81C2165064627022D513DE063F1AE9F8EF49;
IL2CPP_EXTERN_C String_t* _stringLiteral0570B799853B77BFC04E0AB8BD83CD1E5089060A;
IL2CPP_EXTERN_C String_t* _stringLiteral0E5ACD8F8AECEE8F67E336B26C4EAF8C98F34BD0;
IL2CPP_EXTERN_C String_t* _stringLiteral15196F05B117690F3E12E56AA0C43803EA0D2A46;
IL2CPP_EXTERN_C String_t* _stringLiteral1BF20F795791AC67CCC9E2B5B855E3A9D68CDDD6;
IL2CPP_EXTERN_C String_t* _stringLiteral269F8BFBE6C7517C00380B92291D0799AAB2F285;
IL2CPP_EXTERN_C String_t* _stringLiteral2A5808F3B889783C5484106C7296410EA27F30B5;
IL2CPP_EXTERN_C String_t* _stringLiteral3D340328C9A8D4C7396701777F9419AB7A7D1DD7;
IL2CPP_EXTERN_C String_t* _stringLiteral3EE2B7884D8BAA386714E3413F22889095B05B25;
IL2CPP_EXTERN_C String_t* _stringLiteral488BBD09F4A1A1F043A936DD66A4830B2FFA8FFC;
IL2CPP_EXTERN_C String_t* _stringLiteral49F573D371AD0ACE3EA6E766EE4177DA2021309B;
IL2CPP_EXTERN_C String_t* _stringLiteral5225EE496AAB278285733EDA00B46385A27F58CC;
IL2CPP_EXTERN_C String_t* _stringLiteral598081DBD06E8B1A338629AF7933F9131C6D33AB;
IL2CPP_EXTERN_C String_t* _stringLiteral5A3D6FC5AC03F283E51A1E494164E2F6D006FCE2;
IL2CPP_EXTERN_C String_t* _stringLiteral69CE07E5C7ADCC833DA3E659BC9009F6C3C1346A;
IL2CPP_EXTERN_C String_t* _stringLiteral6C3B90D0C27E620F9CB6F4530546C591AB0C5E12;
IL2CPP_EXTERN_C String_t* _stringLiteral71BD498E5FC7E3B8709294B88AB8FAB2CFF77CAE;
IL2CPP_EXTERN_C String_t* _stringLiteral7F85A2723BB62FEF95DD6F8C5F0FF606EA62246A;
IL2CPP_EXTERN_C String_t* _stringLiteral81151D1E9FF5F53A008A360CAFF19A0083D10880;
IL2CPP_EXTERN_C String_t* _stringLiteral8ACAA4E0B28437F5FD1A41CE6591A16813F05377;
IL2CPP_EXTERN_C String_t* _stringLiteral924CB591C7F83A8003577672F4A8CAFA3D9C6F31;
IL2CPP_EXTERN_C String_t* _stringLiteral9D329ACFC4F7EECCB821A7FEF99A0F23E1C721B7;
IL2CPP_EXTERN_C String_t* _stringLiteral9ECD13393A1BC799BB4763A4E4CD5B53E220C53A;
IL2CPP_EXTERN_C String_t* _stringLiteralA18A4AE569C5BE88A9C406093C040EFEBFF78C5E;
IL2CPP_EXTERN_C String_t* _stringLiteralA294DAD207C32424675CE40B7B7673FBE9C295B3;
IL2CPP_EXTERN_C String_t* _stringLiteralA2EC275CC698277AF27C3AFD1084563679CC06EB;
IL2CPP_EXTERN_C String_t* _stringLiteralA6107EE62A5874EF8D2DEAC7D3C0A9F07B89E096;
IL2CPP_EXTERN_C String_t* _stringLiteralA87D266F5AAE1AF5998468D25833A8C6AD50D4FD;
IL2CPP_EXTERN_C String_t* _stringLiteralAB3448E21FA53C63C06270903A13B17D02935BE0;
IL2CPP_EXTERN_C String_t* _stringLiteralC088F0B05AACBA3A2E3A89109BF6E8C25EB734D1;
IL2CPP_EXTERN_C String_t* _stringLiteralCCFEDFAABA1932DDBD53E5E640ADC53339EB2C8D;
IL2CPP_EXTERN_C String_t* _stringLiteralCEB055F85C5660DEABF3989A924C2D2EDB0C8C84;
IL2CPP_EXTERN_C String_t* _stringLiteralD00074DE8ACBEBA7EF28BE447E997E8352E84502;
IL2CPP_EXTERN_C String_t* _stringLiteralD99C319B457682A09D028AF022D0B2EE6B4D48A6;
IL2CPP_EXTERN_C String_t* _stringLiteralE2138FA8D137D1C6C81747FE1638815DDE9177B0;
IL2CPP_EXTERN_C String_t* _stringLiteralEE3657997C5E6EC82CDE374326A95906F03A3315;
IL2CPP_EXTERN_C String_t* _stringLiteralF1B6AAF37DDF842141E903D071B58A3BDF13A5C6;
IL2CPP_EXTERN_C String_t* _stringLiteralFF988BE1271FBA06A4FB243CE21817E36A0AE666;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponentInChildren_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_m60A1B193FDBBFB3719065622DB5E0BB21CA4ABDC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisRenderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF_mC91ACC92AD57CA6CA00991DAF1DB3830BCE07AF8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_m23F8F2F9DD5A54329CEB47D53B4CAA8BC4A562AA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_m991A1A2A2EFE70B64BBECFF1B44EE5C04FF8994E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EnumerableEx_ToArray_TisString_t_mEFCCD6680E378258F94F29E25E24E2A0BA967DE8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FastAction_1_Add_m368726E3508DB2176C4F87A79C0C0CC4816176D6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FastAction_1_Remove_mB29130AC90F5F8967CD89587717469E44E4D186F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_AddComponent_TisRectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5_m771EB78FF8813B5AFF21AC0D252E5461943E6388_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_AddComponent_TisTextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31_m3DBA7F56D8D880227B1D70FAA3DF6988A4EE69F1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_AddComponent_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_m15E50057DA76710B136ADF4E7CA55A463D9DA3EB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_AddComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_mD3BE0A75BBE971456A1D7C8C6F6688A094A81C9C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_AddComponent_TisTextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8_mFAD74D91BCACF9C3FAE6960EB58D5C346DDBD9C2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponentInParent_TisCanvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26_m0A41CB7A7F9A10FCC98D1C7B5799D57C2724D991_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_mA59A63181077B821132B53D44724D7F86C6FECB3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisTextContainer_t949A6EBEE5C8832723E73D8D3DCF4C8D0B3D7F3C_mA04134D48462B7543775CE11D71859B1D2A99872_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_mBDBF977A8C7734F6EDD83FC65C6FDDE74427611E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_m788ADD6C98FD3A1039F72A865AB7D335AEA6116F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_m0248A96C5334E9A93E6994B7780478BCD994EA3D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_m2F86E252D086E288E02FA1C830B7E86C0A431E51_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_mF10DB1D3CBB0B14215F0E4F8AB4934A1955E5351_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Clear_m6CD2E5AAE6552A27AECCC57936767B4DCFC902B1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Clear_mF6795DE5F49C1D0B91D6A0955F448B22970D67A9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Sort_m90CDC07AEBE737318A490F4C2BC6F2955443EDA4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_m0BAB01B25B1D62E100CC97401B1A9972D6DEB6EC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_m17F501B5A5C289ECE1B4F3D6EBF05DFA421433F8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_mC29D3D824786832A31096310B3B3016B8B42B802_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_m545762F67009314D9C63DD209B42FFF950569B05_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_mFE556F47C4CD09EAC6C898EF39D4A8EC112CFC50_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* NativeMethods_IsMono_mBE2BBA2371C5C5A24F2A12E405C3677CF2F663E8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* NativeMethods_TryPInvoke_m107EA381079C0171D039D89C9527B5C720F5E704_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Object_Instantiate_TisRectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5_m432798BF76671A2FB88A9BF403D2F706ADA37236_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Resources_Load_TisFont_tC95270EA3198038970422D78B74A7F2E218A96B6_mF1595237572FCE3E2EE060D2038BE3F341DB7901_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Resources_Load_TisMaterial_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3_m28782CC70624922DAF3B0FB13930E4EB59848128_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Resources_Load_TisTMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160_m4C7F47B73C641ED180784E089759867A85127C13_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TMP_TextEventCheck_OnCharacterSelection_mB421E2CFB617397137CF1AE9CC2F49E46EB3F0AE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TMP_TextEventCheck_OnLineSelection_mE0538FFAFE04A286F937907D0E4664338DCF1559_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TMP_TextEventCheck_OnLinkSelection_m72BF9241651D44805590F1DBADF2FD864D209779_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TMP_TextEventCheck_OnSpriteSelection_mD88D899DE3321CC15502BB1174709BE290AB6215_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TMP_TextEventCheck_OnWordSelection_m180B102DAED1F3313F2F4BB6CF588FF96C8CAB79_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TMP_TextSelector_B_ON_TEXT_CHANGED_m5B53EF1608E98B6A56AAA386085A3216B35A51EE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* TextConsoleSimulator_ON_TEXT_CHANGED_m050ECF4852B6A82000133662D6502577DFD57C3A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Type_GetType_m80C621C4D91A89DDEE6D3DDF343925B30F99BC45_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CAnimateVertexColorsU3Ed__10_System_Collections_IEnumerator_Reset_m5A5869FEFA67D5E9659F1145B83581D954550C1A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CAnimateVertexColorsU3Ed__10_System_Collections_IEnumerator_Reset_mDE5E71C88F5096FD70EB061287ADF0B847732821_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CAnimateVertexColorsU3Ed__11_System_Collections_IEnumerator_Reset_m15291DCCCEC264095634B26DD6F24D52360BDAF0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CAnimateVertexColorsU3Ed__11_System_Collections_IEnumerator_Reset_m2F84864A089CBA0B878B7AC1EA39A49B82682A90_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CAnimateVertexColorsU3Ed__3_System_Collections_IEnumerator_Reset_m319AC50F2DE1572FB7D7AF4F5F65958D01477899_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDisplayTextMeshFloatingTextU3Ed__13_System_Collections_IEnumerator_Reset_mC3C5ED94D6E74FB8551D2654A9279CF3E9E1DEBE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CDisplayTextMeshProFloatingTextU3Ed__12_System_Collections_IEnumerator_Reset_mDE1C8E5AAFA2BE515D1868F76D4921E627F51112_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CRevealCharactersU3Ed__7_System_Collections_IEnumerator_Reset_mD12057609EFCBCA8E7B61B0421D4A7C5A206C8C3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CRevealWordsU3Ed__8_System_Collections_IEnumerator_Reset_mE5E0678716735BDF0D632FE43E392981E75A1C4D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CStartU3Ed__4_System_Collections_IEnumerator_Reset_m9B7AEE80C1E70D2D2FF5811A54AFD6189CD7F5A9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CU3Ec_U3C_cctorU3Eb__1286_0_m3CEB893697AD4AF356D15350AAE6136FB0D0A49B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CU3Ec_U3C_cctorU3Eb__1286_1_m71C25B4F275F33A4FF39BFEC18D7EBBA195B06BC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CU3Ec__DisplayClass10_0_U3CAnimateVertexColorsU3Eb__0_m8E51A05E012CCFA439DCF10A8B5C4FA196E4344A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CWarpTextU3Ed__8_System_Collections_IEnumerator_Reset_m07746C332D2D8CE5DEA59873C26F2FAD4B369B42_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_2_AddListener_mE2FC084F4ADB9D24D904D6A39A83763969F91E27_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_2_RemoveListener_m57B7F9B719A15831F63EA67147A848E324F3760B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3_AddListener_mB8CBD686B0A41D0A0F0D809824E8904A827C3188_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3_AddListener_mE456028DE63E2FF37E53F2618AA321B5551B881A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3_RemoveListener_m9741C57D75E2CE8CCD912E252CBACCE5FC950523_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* UnityEvent_3_RemoveListener_mA451198DCB5DD86D0B87D256F26293566D209026_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* VertexJitter_ON_TEXT_CHANGED_m0CF9C49A1033B4475C04A417440F39490FED64A8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* VertexShakeA_ON_TEXT_CHANGED_mE7A41CEFDB0008A1CD15F156EFEE1C895A92EE77_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* VertexShakeB_ON_TEXT_CHANGED_mF8641640C828A9664AE03AF01CB4832E14EF436D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* VertexZoom_ON_TEXT_CHANGED_mFF049D0455A7DD19D6BDACBEEB737B4AAE32DDA7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeType* CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D_0_0_0_var;
struct Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B;
struct Delegate_t_marshaled_com;
struct Delegate_t_marshaled_pinvoke;
struct Exception_t_marshaled_com;
struct Exception_t_marshaled_pinvoke;
struct Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7;
struct Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2;
struct Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3;

struct Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D;
struct ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031;
struct Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259;
struct DMatchU5BU5D_t5146FE58B7CF480941ED1CBE7375F150A69CBD34;
struct DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE;
struct Int16U5BU5D_t8175CE8DD9C9F9FB0CF4F58E45BC570575B43CFB;
struct Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C;
struct IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832;
struct KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17;
struct KeyframeU5BU5D_t63250A46914A6A07B2A6689850D47D7D19D80BA3;
struct ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918;
struct PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B;
struct Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485;
struct Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953;
struct Point3dU5BU5D_tCFCFAEE9362D1E9BA210F2CBFABAEC68D052F43D;
struct Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2;
struct Point3iU5BU5D_t4ADE5D61157E49120DBB2AC37D0C253B312688EC;
struct RangeU5BU5D_t7A815EED0DB267C51F9F6C0507B9579B68391756;
struct RectU5BU5D_t8D707798510E7E6C5EDA64E457B86964B724B96A;
struct SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C;
struct StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248;
struct TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99;
struct TMP_LineInfoU5BU5D_tE485ECF6A7A96441C72B53D75E7A5A5461A2CA0E;
struct TMP_LinkInfoU5BU5D_tE11BE54A5923BD2148E716289F44EA465E06536E;
struct TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7;
struct TMP_WordInfoU5BU5D_tD1759E5A84DCCCD42B718D79E953E72A432BB4DC;
struct UInt16U5BU5D_tEB7C42D811D999D2AA815BADC3FCCDD9C67B3F83;
struct Vec2fU5BU5D_t605FE443F498ED80B628FC0E98240C847D9C22FF;
struct Vec3bU5BU5D_t65AD1F336D24EA9AD600B4A6CB27B3B517C138EE;
struct Vec3dU5BU5D_t7F6500BD6738D9EF9379BBF49E20270DD8FE005E;
struct Vec3fU5BU5D_tED5C8EB686AD5A75ACA66EC986897DE59ABF6C4D;
struct Vec4dU5BU5D_t4CD1D642D7FE8D7D780F5089E9047773F65F29E7;
struct Vec4fU5BU5D_t3B2FBCD7291E3C966FB625B86393DC5CDB180A64;
struct Vec4iU5BU5D_tA592A0B55AB1329BD078300CADFC474499AA7157;
struct Vec6dU5BU5D_tD00B137B3DBEF1DB6F17CA62572E730E9D27FE42;
struct Vec6fU5BU5D_t592D4E62D13229DBA0A9CD133ADE98A5E27449C3;
struct Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA;
struct Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C;
struct VertexAnimU5BU5D_tC74236D4EB454A8EF2CE1E6145CE5F78E1D5CF38;
struct ByteU5BU2CU5D_tFF0F8305C018904B90DCD1740962BABBC458B638;
struct DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE;
struct Int16U5BU2CU5D_tA1085F28F76441E5B3C4F55200C853889884825E;
struct Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F;
struct PointU5BU2CU5D_t75336C640C8EF9A5D74131EF2FF56ADE1E04A0A3;
struct Point2dU5BU2CU5D_t7484AAFF04C19494AB4D23D45BE7FB1371C8B4DE;
struct Point2fU5BU2CU5D_t534637B478C32FFC446C173967390F3A2A61FBEF;
struct Point3dU5BU2CU5D_tF448DE8BEF99C9C7200AC09879C34D2B9BB16E43;
struct Point3fU5BU2CU5D_t956F68C0D8D3E941181E3BDAA0CDF49861545B6C;
struct Point3iU5BU2CU5D_t9D63D6246F01F8C00A5D07420A3EC8F43E7EB075;
struct RectU5BU2CU5D_t466728D2C4C1410891B29B2693FA0796C414CC2D;
struct SingleU5BU2CU5D_t8C95DA2D5056EB0490FC7DCB1ED30E33DE1D53F4;
struct UInt16U5BU2CU5D_t2C918D9FF94D8CF06CE395FB8C6B931FA8B8AE1B;
struct Vec3bU5BU2CU5D_tE90BFA4A10C08A985D030E3187325900CBF521B5;
struct Vec3dU5BU2CU5D_t29CB373947AD17A0ECF7B4EEB20936B21D140804;
struct Vec4fU5BU2CU5D_t54D8EA2F459F41BD179635792BF550EB3E317FDF;
struct Vec4iU5BU2CU5D_t438C08E75365B75E4142B910325D19F21F4C6CD9;
struct Vec6fU5BU2CU5D_t7C67D2C5EDBC06D656BC54F1A2409DE9F3334AAE;

IL2CPP_EXTERN_C_BEGIN
IL2CPP_EXTERN_C_END

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// TMPro.FastAction`1<UnityEngine.Object>
struct FastAction_1_tE50C6A692DF85AB55BE3160B659FA7DF19DFA005  : public RuntimeObject
{
	// System.Collections.Generic.LinkedList`1<System.Action`1<A>> TMPro.FastAction`1::delegates
	LinkedList_1_tA75C78C76C8C00278F758EE6873486604C8C880C* ___delegates_0;
	// System.Collections.Generic.Dictionary`2<System.Action`1<A>,System.Collections.Generic.LinkedListNode`1<System.Action`1<A>>> TMPro.FastAction`1::lookup
	Dictionary_2_t9FB13B661433DEEC78301CAC98E6FF103A9FF47E* ___lookup_1;
};

// System.Collections.Generic.List`1<System.Int32>
struct List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73  : public RuntimeObject
{
	// T[] System.Collections.Generic.List`1::_items
	Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject* ____syncRoot_4;
};

struct List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73_StaticFields
{
	// T[] System.Collections.Generic.List`1::s_emptyArray
	Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___s_emptyArray_5;
};

// System.Collections.Generic.List`1<System.Object>
struct List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D  : public RuntimeObject
{
	// T[] System.Collections.Generic.List`1::_items
	ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject* ____syncRoot_4;
};

struct List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D_StaticFields
{
	// T[] System.Collections.Generic.List`1::s_emptyArray
	ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* ___s_emptyArray_5;
};

// System.Collections.Generic.List`1<System.Single>
struct List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918  : public RuntimeObject
{
	// T[] System.Collections.Generic.List`1::_items
	SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject* ____syncRoot_4;
};

struct List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918_StaticFields
{
	// T[] System.Collections.Generic.List`1::s_emptyArray
	SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___s_emptyArray_5;
};

// System.Collections.Generic.List`1<System.String>
struct List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD  : public RuntimeObject
{
	// T[] System.Collections.Generic.List`1::_items
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject* ____syncRoot_4;
};

struct List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD_StaticFields
{
	// T[] System.Collections.Generic.List`1::s_emptyArray
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* ___s_emptyArray_5;
};

// UnityEngine.EventSystems.AbstractEventData
struct AbstractEventData_tAE1A127ED657117548181D29FFE4B1B14D8E67F7  : public RuntimeObject
{
	// System.Boolean UnityEngine.EventSystems.AbstractEventData::m_Used
	bool ___m_Used_0;
};
struct Il2CppArrayBounds;

// MRTKExtensions.Gesture.GestureUtils
struct GestureUtils_tACAF019F3FB4FD7BF68E59F89FEAFFBB78EB8992  : public RuntimeObject
{
};

// System.Reflection.MemberInfo
struct MemberInfo_t  : public RuntimeObject
{
};

// OpenCvSharp.NativeMethods
struct NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC  : public RuntimeObject
{
};

struct NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields
{
	// System.Boolean OpenCvSharp.NativeMethods::tried
	bool ___tried_0;
	// System.String[] OpenCvSharp.NativeMethods::RuntimeDllNames
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* ___RuntimeDllNames_5;
	// System.String[] OpenCvSharp.NativeMethods::OpenCVDllNames
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* ___OpenCVDllNames_6;
	// OpenCvSharp.CvErrorCallback OpenCvSharp.NativeMethods::ErrorHandlerThrowException
	CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* ___ErrorHandlerThrowException_9;
	// OpenCvSharp.CvErrorCallback OpenCvSharp.NativeMethods::ErrorHandlerIgnorance
	CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* ___ErrorHandlerIgnorance_10;
	// OpenCvSharp.CvErrorCallback OpenCvSharp.NativeMethods::ErrorHandlerDefault
	CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* ___ErrorHandlerDefault_11;
};

// System.OperatingSystem
struct OperatingSystem_t08A94435A5C7D999B5553B6C58763A6F2E3C8557  : public RuntimeObject
{
	// System.Version System.OperatingSystem::_version
	Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* ____version_0;
	// System.PlatformID System.OperatingSystem::_platform
	int32_t ____platform_1;
	// System.String System.OperatingSystem::_servicePack
	String_t* ____servicePack_2;
	// System.String System.OperatingSystem::_versionString
	String_t* ____versionString_3;
};

// System.String
struct String_t  : public RuntimeObject
{
	// System.Int32 System.String::_stringLength
	int32_t ____stringLength_4;
	// System.Char System.String::_firstChar
	Il2CppChar ____firstChar_5;
};

struct String_t_StaticFields
{
	// System.String System.String::Empty
	String_t* ___Empty_6;
};

// System.Text.StringBuilder
struct StringBuilder_t  : public RuntimeObject
{
	// System.Char[] System.Text.StringBuilder::m_ChunkChars
	CharU5BU5D_t799905CF001DD5F13F7DBB310181FC4D8B7D0AAB* ___m_ChunkChars_0;
	// System.Text.StringBuilder System.Text.StringBuilder::m_ChunkPrevious
	StringBuilder_t* ___m_ChunkPrevious_1;
	// System.Int32 System.Text.StringBuilder::m_ChunkLength
	int32_t ___m_ChunkLength_2;
	// System.Int32 System.Text.StringBuilder::m_ChunkOffset
	int32_t ___m_ChunkOffset_3;
	// System.Int32 System.Text.StringBuilder::m_MaxCapacity
	int32_t ___m_MaxCapacity_4;
};

// TMPro.TMPro_EventManager
struct TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9  : public RuntimeObject
{
};

struct TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_StaticFields
{
	// TMPro.FastAction`2<System.Object,TMPro.Compute_DT_EventArgs> TMPro.TMPro_EventManager::COMPUTE_DT_EVENT
	FastAction_2_t7A930CE5DBE699F7BADA18E19F951E3D68821A0D* ___COMPUTE_DT_EVENT_0;
	// TMPro.FastAction`2<System.Boolean,UnityEngine.Material> TMPro.TMPro_EventManager::MATERIAL_PROPERTY_EVENT
	FastAction_2_tECA23F8F5AC1D6DF8BAB8AEDD017A064D210F83A* ___MATERIAL_PROPERTY_EVENT_1;
	// TMPro.FastAction`2<System.Boolean,UnityEngine.Object> TMPro.TMPro_EventManager::FONT_PROPERTY_EVENT
	FastAction_2_t67E5AC7D6D05EC71192B279EA4EC495B4B3B4A9B* ___FONT_PROPERTY_EVENT_2;
	// TMPro.FastAction`2<System.Boolean,UnityEngine.Object> TMPro.TMPro_EventManager::SPRITE_ASSET_PROPERTY_EVENT
	FastAction_2_t67E5AC7D6D05EC71192B279EA4EC495B4B3B4A9B* ___SPRITE_ASSET_PROPERTY_EVENT_3;
	// TMPro.FastAction`2<System.Boolean,UnityEngine.Object> TMPro.TMPro_EventManager::TEXTMESHPRO_PROPERTY_EVENT
	FastAction_2_t67E5AC7D6D05EC71192B279EA4EC495B4B3B4A9B* ___TEXTMESHPRO_PROPERTY_EVENT_4;
	// TMPro.FastAction`3<UnityEngine.GameObject,UnityEngine.Material,UnityEngine.Material> TMPro.TMPro_EventManager::DRAG_AND_DROP_MATERIAL_EVENT
	FastAction_3_tF1621854653F0CB64C7EE2C86A181B843FA49E77* ___DRAG_AND_DROP_MATERIAL_EVENT_5;
	// TMPro.FastAction`1<System.Boolean> TMPro.TMPro_EventManager::TEXT_STYLE_PROPERTY_EVENT
	FastAction_1_tFC26007E6ECC49160C91059DC218FDD0602EE4F3* ___TEXT_STYLE_PROPERTY_EVENT_6;
	// TMPro.FastAction`1<UnityEngine.Object> TMPro.TMPro_EventManager::COLOR_GRADIENT_PROPERTY_EVENT
	FastAction_1_tE50C6A692DF85AB55BE3160B659FA7DF19DFA005* ___COLOR_GRADIENT_PROPERTY_EVENT_7;
	// TMPro.FastAction TMPro.TMPro_EventManager::TMP_SETTINGS_PROPERTY_EVENT
	FastAction_t32D4ADE06921D3EAB9BCE9B6397C82A4A898644D* ___TMP_SETTINGS_PROPERTY_EVENT_8;
	// TMPro.FastAction TMPro.TMPro_EventManager::RESOURCE_LOAD_EVENT
	FastAction_t32D4ADE06921D3EAB9BCE9B6397C82A4A898644D* ___RESOURCE_LOAD_EVENT_9;
	// TMPro.FastAction`2<System.Boolean,UnityEngine.Object> TMPro.TMPro_EventManager::TEXTMESHPRO_UGUI_PROPERTY_EVENT
	FastAction_2_t67E5AC7D6D05EC71192B279EA4EC495B4B3B4A9B* ___TEXTMESHPRO_UGUI_PROPERTY_EVENT_10;
	// TMPro.FastAction`1<UnityEngine.Object> TMPro.TMPro_EventManager::TEXT_CHANGED_EVENT
	FastAction_1_tE50C6A692DF85AB55BE3160B659FA7DF19DFA005* ___TEXT_CHANGED_EVENT_11;
};

// UnityEngine.Events.UnityEventBase
struct UnityEventBase_t4968A4C72559F35C0923E4BD9C042C3A842E1DB8  : public RuntimeObject
{
	// UnityEngine.Events.InvokableCallList UnityEngine.Events.UnityEventBase::m_Calls
	InvokableCallList_t309E1C8C7CE885A0D2F98C84CEA77A8935688382* ___m_Calls_0;
	// UnityEngine.Events.PersistentCallGroup UnityEngine.Events.UnityEventBase::m_PersistentCalls
	PersistentCallGroup_tB826EDF15DC80F71BCBCD8E410FD959A04C33F25* ___m_PersistentCalls_1;
	// System.Boolean UnityEngine.Events.UnityEventBase::m_CallsDirty
	bool ___m_CallsDirty_2;
};

// System.ValueType
struct ValueType_t6D9B272BD21782F0A9A14F2E41F85A50E97A986F  : public RuntimeObject
{
};
// Native definition for P/Invoke marshalling of System.ValueType
struct ValueType_t6D9B272BD21782F0A9A14F2E41F85A50E97A986F_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.ValueType
struct ValueType_t6D9B272BD21782F0A9A14F2E41F85A50E97A986F_marshaled_com
{
};

// OpenCvSharp.Util.WindowsLibraryLoader
struct WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7  : public RuntimeObject
{
	// System.Collections.Generic.List`1<System.String> OpenCvSharp.Util.WindowsLibraryLoader::loadedAssemblies
	List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* ___loadedAssemblies_4;
	// System.Collections.Generic.Dictionary`2<System.String,System.String> OpenCvSharp.Util.WindowsLibraryLoader::processorArchitecturePlatforms
	Dictionary_2_t46B2DB028096FA2B828359E52F37F3105A83AD83* ___processorArchitecturePlatforms_5;
	// System.Collections.Generic.Dictionary`2<System.String,System.Int32> OpenCvSharp.Util.WindowsLibraryLoader::processorArchitectureAddressWidthPlatforms
	Dictionary_2_t5C8F46F5D57502270DD9E1DA8303B23C7FE85588* ___processorArchitectureAddressWidthPlatforms_6;
	// System.Collections.Generic.List`1<System.String> OpenCvSharp.Util.WindowsLibraryLoader::<AdditionalPaths>k__BackingField
	List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* ___U3CAdditionalPathsU3Ek__BackingField_7;
	// System.Object OpenCvSharp.Util.WindowsLibraryLoader::syncLock
	RuntimeObject* ___syncLock_8;
};

struct WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_StaticFields
{
	// OpenCvSharp.Util.WindowsLibraryLoader OpenCvSharp.Util.WindowsLibraryLoader::instance
	WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* ___instance_0;
};

// UnityEngine.YieldInstruction
struct YieldInstruction_tFCE35FD0907950EFEE9BC2890AC664E41C53728D  : public RuntimeObject
{
};
// Native definition for P/Invoke marshalling of UnityEngine.YieldInstruction
struct YieldInstruction_tFCE35FD0907950EFEE9BC2890AC664E41C53728D_marshaled_pinvoke
{
};
// Native definition for COM marshalling of UnityEngine.YieldInstruction
struct YieldInstruction_tFCE35FD0907950EFEE9BC2890AC664E41C53728D_marshaled_com
{
};

// OpenCvSharp.NativeMethods/<>c
struct U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7  : public RuntimeObject
{
};

struct U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_StaticFields
{
	// OpenCvSharp.NativeMethods/<>c OpenCvSharp.NativeMethods/<>c::<>9
	U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7* ___U3CU3E9_0;
};

// TMPro.Examples.TeleType/<Start>d__4
struct U3CStartU3Ed__4_t34C4F7117E4A5E63F9D03A9DD3C2493CEB376E75  : public RuntimeObject
{
	// System.Int32 TMPro.Examples.TeleType/<Start>d__4::<>1__state
	int32_t ___U3CU3E1__state_0;
	// System.Object TMPro.Examples.TeleType/<Start>d__4::<>2__current
	RuntimeObject* ___U3CU3E2__current_1;
	// TMPro.Examples.TeleType TMPro.Examples.TeleType/<Start>d__4::<>4__this
	TeleType_tA6F2E696EFE0B4124756D8810A7AAFB7829EE2F5* ___U3CU3E4__this_2;
	// System.Int32 TMPro.Examples.TeleType/<Start>d__4::<totalVisibleCharacters>5__2
	int32_t ___U3CtotalVisibleCharactersU3E5__2_3;
	// System.Int32 TMPro.Examples.TeleType/<Start>d__4::<counter>5__3
	int32_t ___U3CcounterU3E5__3_4;
};

// TMPro.Examples.TextConsoleSimulator/<RevealCharacters>d__7
struct U3CRevealCharactersU3Ed__7_tB14F85C7FC57BEFD555A1A9CD8D3FF41E0F676F9  : public RuntimeObject
{
	// System.Int32 TMPro.Examples.TextConsoleSimulator/<RevealCharacters>d__7::<>1__state
	int32_t ___U3CU3E1__state_0;
	// System.Object TMPro.Examples.TextConsoleSimulator/<RevealCharacters>d__7::<>2__current
	RuntimeObject* ___U3CU3E2__current_1;
	// TMPro.TMP_Text TMPro.Examples.TextConsoleSimulator/<RevealCharacters>d__7::textComponent
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___textComponent_2;
	// TMPro.Examples.TextConsoleSimulator TMPro.Examples.TextConsoleSimulator/<RevealCharacters>d__7::<>4__this
	TextConsoleSimulator_t986082F574CD2A38D6E40D856C6A9926D7EF49D2* ___U3CU3E4__this_3;
	// TMPro.TMP_TextInfo TMPro.Examples.TextConsoleSimulator/<RevealCharacters>d__7::<textInfo>5__2
	TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* ___U3CtextInfoU3E5__2_4;
	// System.Int32 TMPro.Examples.TextConsoleSimulator/<RevealCharacters>d__7::<totalVisibleCharacters>5__3
	int32_t ___U3CtotalVisibleCharactersU3E5__3_5;
	// System.Int32 TMPro.Examples.TextConsoleSimulator/<RevealCharacters>d__7::<visibleCount>5__4
	int32_t ___U3CvisibleCountU3E5__4_6;
};

// TMPro.Examples.TextConsoleSimulator/<RevealWords>d__8
struct U3CRevealWordsU3Ed__8_t912CFD430C602C79AE6BC1BC6C4AEBF101B4D7C8  : public RuntimeObject
{
	// System.Int32 TMPro.Examples.TextConsoleSimulator/<RevealWords>d__8::<>1__state
	int32_t ___U3CU3E1__state_0;
	// System.Object TMPro.Examples.TextConsoleSimulator/<RevealWords>d__8::<>2__current
	RuntimeObject* ___U3CU3E2__current_1;
	// TMPro.TMP_Text TMPro.Examples.TextConsoleSimulator/<RevealWords>d__8::textComponent
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___textComponent_2;
	// System.Int32 TMPro.Examples.TextConsoleSimulator/<RevealWords>d__8::<totalWordCount>5__2
	int32_t ___U3CtotalWordCountU3E5__2_3;
	// System.Int32 TMPro.Examples.TextConsoleSimulator/<RevealWords>d__8::<totalVisibleCharacters>5__3
	int32_t ___U3CtotalVisibleCharactersU3E5__3_4;
	// System.Int32 TMPro.Examples.TextConsoleSimulator/<RevealWords>d__8::<counter>5__4
	int32_t ___U3CcounterU3E5__4_5;
	// System.Int32 TMPro.Examples.TextConsoleSimulator/<RevealWords>d__8::<visibleCount>5__5
	int32_t ___U3CvisibleCountU3E5__5_6;
};

// TMPro.Examples.VertexColorCycler/<AnimateVertexColors>d__3
struct U3CAnimateVertexColorsU3Ed__3_t88CF335125784EBBA1DA65AF7B815F1814D31264  : public RuntimeObject
{
	// System.Int32 TMPro.Examples.VertexColorCycler/<AnimateVertexColors>d__3::<>1__state
	int32_t ___U3CU3E1__state_0;
	// System.Object TMPro.Examples.VertexColorCycler/<AnimateVertexColors>d__3::<>2__current
	RuntimeObject* ___U3CU3E2__current_1;
	// TMPro.Examples.VertexColorCycler TMPro.Examples.VertexColorCycler/<AnimateVertexColors>d__3::<>4__this
	VertexColorCycler_t527535DC3F38CBB70E8A4B35907DA8EC4FC62C8D* ___U3CU3E4__this_2;
	// TMPro.TMP_TextInfo TMPro.Examples.VertexColorCycler/<AnimateVertexColors>d__3::<textInfo>5__2
	TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* ___U3CtextInfoU3E5__2_3;
	// System.Int32 TMPro.Examples.VertexColorCycler/<AnimateVertexColors>d__3::<currentCharacter>5__3
	int32_t ___U3CcurrentCharacterU3E5__3_4;
};

// TMPro.Examples.VertexJitter/<AnimateVertexColors>d__11
struct U3CAnimateVertexColorsU3Ed__11_t2EF4BA1F3569F2C4ECDD4AD4980AAC251CD1D956  : public RuntimeObject
{
	// System.Int32 TMPro.Examples.VertexJitter/<AnimateVertexColors>d__11::<>1__state
	int32_t ___U3CU3E1__state_0;
	// System.Object TMPro.Examples.VertexJitter/<AnimateVertexColors>d__11::<>2__current
	RuntimeObject* ___U3CU3E2__current_1;
	// TMPro.Examples.VertexJitter TMPro.Examples.VertexJitter/<AnimateVertexColors>d__11::<>4__this
	VertexJitter_t5D8689E23D1DD2CCF81ACE6FFC9E34797E8AE4C7* ___U3CU3E4__this_2;
	// TMPro.TMP_TextInfo TMPro.Examples.VertexJitter/<AnimateVertexColors>d__11::<textInfo>5__2
	TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* ___U3CtextInfoU3E5__2_3;
	// System.Int32 TMPro.Examples.VertexJitter/<AnimateVertexColors>d__11::<loopCount>5__3
	int32_t ___U3CloopCountU3E5__3_4;
	// TMPro.Examples.VertexJitter/VertexAnim[] TMPro.Examples.VertexJitter/<AnimateVertexColors>d__11::<vertexAnim>5__4
	VertexAnimU5BU5D_tC74236D4EB454A8EF2CE1E6145CE5F78E1D5CF38* ___U3CvertexAnimU3E5__4_5;
	// TMPro.TMP_MeshInfo[] TMPro.Examples.VertexJitter/<AnimateVertexColors>d__11::<cachedMeshInfo>5__5
	TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* ___U3CcachedMeshInfoU3E5__5_6;
};

// TMPro.Examples.VertexShakeA/<AnimateVertexColors>d__11
struct U3CAnimateVertexColorsU3Ed__11_t2E62EF65D8AE7185E18D8711E582A76E45AC843E  : public RuntimeObject
{
	// System.Int32 TMPro.Examples.VertexShakeA/<AnimateVertexColors>d__11::<>1__state
	int32_t ___U3CU3E1__state_0;
	// System.Object TMPro.Examples.VertexShakeA/<AnimateVertexColors>d__11::<>2__current
	RuntimeObject* ___U3CU3E2__current_1;
	// TMPro.Examples.VertexShakeA TMPro.Examples.VertexShakeA/<AnimateVertexColors>d__11::<>4__this
	VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F* ___U3CU3E4__this_2;
	// TMPro.TMP_TextInfo TMPro.Examples.VertexShakeA/<AnimateVertexColors>d__11::<textInfo>5__2
	TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* ___U3CtextInfoU3E5__2_3;
	// UnityEngine.Vector3[][] TMPro.Examples.VertexShakeA/<AnimateVertexColors>d__11::<copyOfVertices>5__3
	Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* ___U3CcopyOfVerticesU3E5__3_4;
};

// TMPro.Examples.VertexShakeB/<AnimateVertexColors>d__10
struct U3CAnimateVertexColorsU3Ed__10_tD6C6C3147726423C8C82952A638432E12AA2C91E  : public RuntimeObject
{
	// System.Int32 TMPro.Examples.VertexShakeB/<AnimateVertexColors>d__10::<>1__state
	int32_t ___U3CU3E1__state_0;
	// System.Object TMPro.Examples.VertexShakeB/<AnimateVertexColors>d__10::<>2__current
	RuntimeObject* ___U3CU3E2__current_1;
	// TMPro.Examples.VertexShakeB TMPro.Examples.VertexShakeB/<AnimateVertexColors>d__10::<>4__this
	VertexShakeB_tA3849618A1BE8DCE150A615F38CE2E247FC6F6C8* ___U3CU3E4__this_2;
	// TMPro.TMP_TextInfo TMPro.Examples.VertexShakeB/<AnimateVertexColors>d__10::<textInfo>5__2
	TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* ___U3CtextInfoU3E5__2_3;
	// UnityEngine.Vector3[][] TMPro.Examples.VertexShakeB/<AnimateVertexColors>d__10::<copyOfVertices>5__3
	Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* ___U3CcopyOfVerticesU3E5__3_4;
};

// TMPro.Examples.VertexZoom/<>c__DisplayClass10_0
struct U3CU3Ec__DisplayClass10_0_t62C0E1CEED92DDFC3DD4C58EC8806FC7D82A7FB7  : public RuntimeObject
{
	// System.Collections.Generic.List`1<System.Single> TMPro.Examples.VertexZoom/<>c__DisplayClass10_0::modifiedCharScale
	List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918* ___modifiedCharScale_0;
	// System.Comparison`1<System.Int32> TMPro.Examples.VertexZoom/<>c__DisplayClass10_0::<>9__0
	Comparison_1_tB7DE1436CB53924C2FC41FF926D074C1ACC14D89* ___U3CU3E9__0_1;
};

// TMPro.Examples.VertexZoom/<AnimateVertexColors>d__10
struct U3CAnimateVertexColorsU3Ed__10_t2EB585545BBB614E711BE1D5C7BF139053486123  : public RuntimeObject
{
	// System.Int32 TMPro.Examples.VertexZoom/<AnimateVertexColors>d__10::<>1__state
	int32_t ___U3CU3E1__state_0;
	// System.Object TMPro.Examples.VertexZoom/<AnimateVertexColors>d__10::<>2__current
	RuntimeObject* ___U3CU3E2__current_1;
	// TMPro.Examples.VertexZoom TMPro.Examples.VertexZoom/<AnimateVertexColors>d__10::<>4__this
	VertexZoom_t51F05EB153497034D27896F07590D790A73981A6* ___U3CU3E4__this_2;
	// TMPro.Examples.VertexZoom/<>c__DisplayClass10_0 TMPro.Examples.VertexZoom/<AnimateVertexColors>d__10::<>8__1
	U3CU3Ec__DisplayClass10_0_t62C0E1CEED92DDFC3DD4C58EC8806FC7D82A7FB7* ___U3CU3E8__1_3;
	// TMPro.TMP_TextInfo TMPro.Examples.VertexZoom/<AnimateVertexColors>d__10::<textInfo>5__2
	TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* ___U3CtextInfoU3E5__2_4;
	// TMPro.TMP_MeshInfo[] TMPro.Examples.VertexZoom/<AnimateVertexColors>d__10::<cachedMeshInfoVertexData>5__3
	TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* ___U3CcachedMeshInfoVertexDataU3E5__3_5;
	// System.Collections.Generic.List`1<System.Int32> TMPro.Examples.VertexZoom/<AnimateVertexColors>d__10::<scaleSortingOrder>5__4
	List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73* ___U3CscaleSortingOrderU3E5__4_6;
};

// TMPro.Examples.WarpTextExample/<WarpText>d__8
struct U3CWarpTextU3Ed__8_tF1A14DF86D48AE9144155D4BF8E31E63471F358E  : public RuntimeObject
{
	// System.Int32 TMPro.Examples.WarpTextExample/<WarpText>d__8::<>1__state
	int32_t ___U3CU3E1__state_0;
	// System.Object TMPro.Examples.WarpTextExample/<WarpText>d__8::<>2__current
	RuntimeObject* ___U3CU3E2__current_1;
	// TMPro.Examples.WarpTextExample TMPro.Examples.WarpTextExample/<WarpText>d__8::<>4__this
	WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* ___U3CU3E4__this_2;
	// System.Single TMPro.Examples.WarpTextExample/<WarpText>d__8::<old_CurveScale>5__2
	float ___U3Cold_CurveScaleU3E5__2_3;
	// UnityEngine.AnimationCurve TMPro.Examples.WarpTextExample/<WarpText>d__8::<old_curve>5__3
	AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* ___U3Cold_curveU3E5__3_4;
};

// TMPro.TMP_TextProcessingStack`1<TMPro.FontWeight>
struct TMP_TextProcessingStack_1_tA5C8CED87DD9E73F6359E23B334FFB5B6F813FD4 
{
	// T[] TMPro.TMP_TextProcessingStack`1::itemStack
	FontWeightU5BU5D_t2A406B5BAB0DD0F06E7F1773DB062E4AF98067BA* ___itemStack_0;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::index
	int32_t ___index_1;
	// T TMPro.TMP_TextProcessingStack`1::m_DefaultItem
	int32_t ___m_DefaultItem_2;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_Capacity
	int32_t ___m_Capacity_3;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_RolloverSize
	int32_t ___m_RolloverSize_4;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_Count
	int32_t ___m_Count_5;
};

// TMPro.TMP_TextProcessingStack`1<TMPro.HorizontalAlignmentOptions>
struct TMP_TextProcessingStack_1_t243EA1B5D7FD2295D6533B953F0BBE8F52EFB8A0 
{
	// T[] TMPro.TMP_TextProcessingStack`1::itemStack
	HorizontalAlignmentOptionsU5BU5D_t4D185662282BFB910D8B9A8199E91578E9422658* ___itemStack_0;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::index
	int32_t ___index_1;
	// T TMPro.TMP_TextProcessingStack`1::m_DefaultItem
	int32_t ___m_DefaultItem_2;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_Capacity
	int32_t ___m_Capacity_3;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_RolloverSize
	int32_t ___m_RolloverSize_4;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_Count
	int32_t ___m_Count_5;
};

// TMPro.TMP_TextProcessingStack`1<System.Int32>
struct TMP_TextProcessingStack_1_tFBA719426D68CE1F2B5849D97AF5E5D65846290C 
{
	// T[] TMPro.TMP_TextProcessingStack`1::itemStack
	Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___itemStack_0;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::index
	int32_t ___index_1;
	// T TMPro.TMP_TextProcessingStack`1::m_DefaultItem
	int32_t ___m_DefaultItem_2;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_Capacity
	int32_t ___m_Capacity_3;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_RolloverSize
	int32_t ___m_RolloverSize_4;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_Count
	int32_t ___m_Count_5;
};

// TMPro.TMP_TextProcessingStack`1<System.Single>
struct TMP_TextProcessingStack_1_t138EC06BE7F101AA0A3C8D2DC951E55AACE085E9 
{
	// T[] TMPro.TMP_TextProcessingStack`1::itemStack
	SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___itemStack_0;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::index
	int32_t ___index_1;
	// T TMPro.TMP_TextProcessingStack`1::m_DefaultItem
	float ___m_DefaultItem_2;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_Capacity
	int32_t ___m_Capacity_3;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_RolloverSize
	int32_t ___m_RolloverSize_4;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_Count
	int32_t ___m_Count_5;
};

// TMPro.TMP_TextProcessingStack`1<TMPro.TMP_ColorGradient>
struct TMP_TextProcessingStack_1_tC8FAEB17246D3B171EFD11165A5761AE39B40D0C 
{
	// T[] TMPro.TMP_TextProcessingStack`1::itemStack
	TMP_ColorGradientU5BU5D_t2F65E8C42F268DFF33BB1392D94BCF5B5087308A* ___itemStack_0;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::index
	int32_t ___index_1;
	// T TMPro.TMP_TextProcessingStack`1::m_DefaultItem
	TMP_ColorGradient_t17B51752B4E9499A1FF7D875DCEC1D15A0F4AEBB* ___m_DefaultItem_2;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_Capacity
	int32_t ___m_Capacity_3;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_RolloverSize
	int32_t ___m_RolloverSize_4;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_Count
	int32_t ___m_Count_5;
};

// UnityEngine.Events.UnityEvent`2<System.Char,System.Int32>
struct UnityEvent_2_tE1EF7CBD9965CD9466B63C1AD8FB3661A30C25B3  : public UnityEventBase_t4968A4C72559F35C0923E4BD9C042C3A842E1DB8
{
	// System.Object[] UnityEngine.Events.UnityEvent`2::m_InvokeArray
	ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* ___m_InvokeArray_3;
};

// UnityEngine.Events.UnityEvent`3<System.String,System.Int32,System.Int32>
struct UnityEvent_3_t5EE2DC870C12CB60384C5FCBB0DAD36392E701AD  : public UnityEventBase_t4968A4C72559F35C0923E4BD9C042C3A842E1DB8
{
	// System.Object[] UnityEngine.Events.UnityEvent`3::m_InvokeArray
	ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* ___m_InvokeArray_3;
};

// UnityEngine.Events.UnityEvent`3<System.String,System.String,System.Int32>
struct UnityEvent_3_t978FAA968D1FEECACADDD0969B822861FA0C6622  : public UnityEventBase_t4968A4C72559F35C0923E4BD9C042C3A842E1DB8
{
	// System.Object[] UnityEngine.Events.UnityEvent`3::m_InvokeArray
	ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* ___m_InvokeArray_3;
};

// UnityEngine.EventSystems.BaseEventData
struct BaseEventData_tE03A848325C0AE8E76C6CA15FD86395EBF83364F  : public AbstractEventData_tAE1A127ED657117548181D29FFE4B1B14D8E67F7
{
	// UnityEngine.EventSystems.EventSystem UnityEngine.EventSystems.BaseEventData::m_EventSystem
	EventSystem_t61C51380B105BE9D2C39C4F15B7E655659957707* ___m_EventSystem_1;
};

// System.Boolean
struct Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22 
{
	// System.Boolean System.Boolean::m_value
	bool ___m_value_0;
};

struct Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_StaticFields
{
	// System.String System.Boolean::TrueString
	String_t* ___TrueString_5;
	// System.String System.Boolean::FalseString
	String_t* ___FalseString_6;
};

// System.Byte
struct Byte_t94D9231AC217BE4D2E004C4CD32DF6D099EA41A3 
{
	// System.Byte System.Byte::m_value
	uint8_t ___m_value_0;
};

// System.Char
struct Char_t521A6F19B456D956AF452D926C32709DC03D6B17 
{
	// System.Char System.Char::m_value
	Il2CppChar ___m_value_0;
};

struct Char_t521A6F19B456D956AF452D926C32709DC03D6B17_StaticFields
{
	// System.Byte[] System.Char::s_categoryForLatin1
	ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___s_categoryForLatin1_3;
};

// UnityEngine.Color
struct Color_tD001788D726C3A7F1379BEED0260B9591F440C1F 
{
	// System.Single UnityEngine.Color::r
	float ___r_0;
	// System.Single UnityEngine.Color::g
	float ___g_1;
	// System.Single UnityEngine.Color::b
	float ___b_2;
	// System.Single UnityEngine.Color::a
	float ___a_3;
};

// UnityEngine.Color32
struct Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B 
{
	union
	{
		#pragma pack(push, tp, 1)
		struct
		{
			// System.Int32 UnityEngine.Color32::rgba
			int32_t ___rgba_0;
		};
		#pragma pack(pop, tp)
		struct
		{
			int32_t ___rgba_0_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// System.Byte UnityEngine.Color32::r
			uint8_t ___r_1;
		};
		#pragma pack(pop, tp)
		struct
		{
			uint8_t ___r_1_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			char ___g_2_OffsetPadding[1];
			// System.Byte UnityEngine.Color32::g
			uint8_t ___g_2;
		};
		#pragma pack(pop, tp)
		struct
		{
			char ___g_2_OffsetPadding_forAlignmentOnly[1];
			uint8_t ___g_2_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			char ___b_3_OffsetPadding[2];
			// System.Byte UnityEngine.Color32::b
			uint8_t ___b_3;
		};
		#pragma pack(pop, tp)
		struct
		{
			char ___b_3_OffsetPadding_forAlignmentOnly[2];
			uint8_t ___b_3_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			char ___a_4_OffsetPadding[3];
			// System.Byte UnityEngine.Color32::a
			uint8_t ___a_4;
		};
		#pragma pack(pop, tp)
		struct
		{
			char ___a_4_OffsetPadding_forAlignmentOnly[3];
			uint8_t ___a_4_forAlignmentOnly;
		};
	};
};

// OpenCvSharp.DMatch
struct DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A 
{
	// System.Int32 OpenCvSharp.DMatch::QueryIdx
	int32_t ___QueryIdx_0;
	// System.Int32 OpenCvSharp.DMatch::TrainIdx
	int32_t ___TrainIdx_1;
	// System.Int32 OpenCvSharp.DMatch::ImgIdx
	int32_t ___ImgIdx_2;
	// System.Single OpenCvSharp.DMatch::Distance
	float ___Distance_3;
};

// System.Double
struct Double_tE150EF3D1D43DEE85D533810AB4C742307EEDE5F 
{
	// System.Double System.Double::m_value
	double ___m_value_0;
};

// UnityEngine.TextCore.FaceInfo
struct FaceInfo_t12F0319E555A62CBA1D9E51A16C7963393932756 
{
	// System.Int32 UnityEngine.TextCore.FaceInfo::m_FaceIndex
	int32_t ___m_FaceIndex_0;
	// System.String UnityEngine.TextCore.FaceInfo::m_FamilyName
	String_t* ___m_FamilyName_1;
	// System.String UnityEngine.TextCore.FaceInfo::m_StyleName
	String_t* ___m_StyleName_2;
	// System.Int32 UnityEngine.TextCore.FaceInfo::m_PointSize
	int32_t ___m_PointSize_3;
	// System.Single UnityEngine.TextCore.FaceInfo::m_Scale
	float ___m_Scale_4;
	// System.Single UnityEngine.TextCore.FaceInfo::m_LineHeight
	float ___m_LineHeight_5;
	// System.Single UnityEngine.TextCore.FaceInfo::m_AscentLine
	float ___m_AscentLine_6;
	// System.Single UnityEngine.TextCore.FaceInfo::m_CapLine
	float ___m_CapLine_7;
	// System.Single UnityEngine.TextCore.FaceInfo::m_MeanLine
	float ___m_MeanLine_8;
	// System.Single UnityEngine.TextCore.FaceInfo::m_Baseline
	float ___m_Baseline_9;
	// System.Single UnityEngine.TextCore.FaceInfo::m_DescentLine
	float ___m_DescentLine_10;
	// System.Single UnityEngine.TextCore.FaceInfo::m_SuperscriptOffset
	float ___m_SuperscriptOffset_11;
	// System.Single UnityEngine.TextCore.FaceInfo::m_SuperscriptSize
	float ___m_SuperscriptSize_12;
	// System.Single UnityEngine.TextCore.FaceInfo::m_SubscriptOffset
	float ___m_SubscriptOffset_13;
	// System.Single UnityEngine.TextCore.FaceInfo::m_SubscriptSize
	float ___m_SubscriptSize_14;
	// System.Single UnityEngine.TextCore.FaceInfo::m_UnderlineOffset
	float ___m_UnderlineOffset_15;
	// System.Single UnityEngine.TextCore.FaceInfo::m_UnderlineThickness
	float ___m_UnderlineThickness_16;
	// System.Single UnityEngine.TextCore.FaceInfo::m_StrikethroughOffset
	float ___m_StrikethroughOffset_17;
	// System.Single UnityEngine.TextCore.FaceInfo::m_StrikethroughThickness
	float ___m_StrikethroughThickness_18;
	// System.Single UnityEngine.TextCore.FaceInfo::m_TabWidth
	float ___m_TabWidth_19;
};
// Native definition for P/Invoke marshalling of UnityEngine.TextCore.FaceInfo
struct FaceInfo_t12F0319E555A62CBA1D9E51A16C7963393932756_marshaled_pinvoke
{
	int32_t ___m_FaceIndex_0;
	char* ___m_FamilyName_1;
	char* ___m_StyleName_2;
	int32_t ___m_PointSize_3;
	float ___m_Scale_4;
	float ___m_LineHeight_5;
	float ___m_AscentLine_6;
	float ___m_CapLine_7;
	float ___m_MeanLine_8;
	float ___m_Baseline_9;
	float ___m_DescentLine_10;
	float ___m_SuperscriptOffset_11;
	float ___m_SuperscriptSize_12;
	float ___m_SubscriptOffset_13;
	float ___m_SubscriptSize_14;
	float ___m_UnderlineOffset_15;
	float ___m_UnderlineThickness_16;
	float ___m_StrikethroughOffset_17;
	float ___m_StrikethroughThickness_18;
	float ___m_TabWidth_19;
};
// Native definition for COM marshalling of UnityEngine.TextCore.FaceInfo
struct FaceInfo_t12F0319E555A62CBA1D9E51A16C7963393932756_marshaled_com
{
	int32_t ___m_FaceIndex_0;
	Il2CppChar* ___m_FamilyName_1;
	Il2CppChar* ___m_StyleName_2;
	int32_t ___m_PointSize_3;
	float ___m_Scale_4;
	float ___m_LineHeight_5;
	float ___m_AscentLine_6;
	float ___m_CapLine_7;
	float ___m_MeanLine_8;
	float ___m_Baseline_9;
	float ___m_DescentLine_10;
	float ___m_SuperscriptOffset_11;
	float ___m_SuperscriptSize_12;
	float ___m_SubscriptOffset_13;
	float ___m_SubscriptSize_14;
	float ___m_UnderlineOffset_15;
	float ___m_UnderlineThickness_16;
	float ___m_StrikethroughOffset_17;
	float ___m_StrikethroughThickness_18;
	float ___m_TabWidth_19;
};

// TMPro.FontAssetCreationSettings
struct FontAssetCreationSettings_t2B94078737A72F814E8BC2126F967B94231190DF 
{
	// System.String TMPro.FontAssetCreationSettings::sourceFontFileName
	String_t* ___sourceFontFileName_0;
	// System.String TMPro.FontAssetCreationSettings::sourceFontFileGUID
	String_t* ___sourceFontFileGUID_1;
	// System.Int32 TMPro.FontAssetCreationSettings::pointSizeSamplingMode
	int32_t ___pointSizeSamplingMode_2;
	// System.Int32 TMPro.FontAssetCreationSettings::pointSize
	int32_t ___pointSize_3;
	// System.Int32 TMPro.FontAssetCreationSettings::padding
	int32_t ___padding_4;
	// System.Int32 TMPro.FontAssetCreationSettings::packingMode
	int32_t ___packingMode_5;
	// System.Int32 TMPro.FontAssetCreationSettings::atlasWidth
	int32_t ___atlasWidth_6;
	// System.Int32 TMPro.FontAssetCreationSettings::atlasHeight
	int32_t ___atlasHeight_7;
	// System.Int32 TMPro.FontAssetCreationSettings::characterSetSelectionMode
	int32_t ___characterSetSelectionMode_8;
	// System.String TMPro.FontAssetCreationSettings::characterSequence
	String_t* ___characterSequence_9;
	// System.String TMPro.FontAssetCreationSettings::referencedFontAssetGUID
	String_t* ___referencedFontAssetGUID_10;
	// System.String TMPro.FontAssetCreationSettings::referencedTextAssetGUID
	String_t* ___referencedTextAssetGUID_11;
	// System.Int32 TMPro.FontAssetCreationSettings::fontStyle
	int32_t ___fontStyle_12;
	// System.Single TMPro.FontAssetCreationSettings::fontStyleModifier
	float ___fontStyleModifier_13;
	// System.Int32 TMPro.FontAssetCreationSettings::renderMode
	int32_t ___renderMode_14;
	// System.Boolean TMPro.FontAssetCreationSettings::includeFontFeatures
	bool ___includeFontFeatures_15;
};
// Native definition for P/Invoke marshalling of TMPro.FontAssetCreationSettings
struct FontAssetCreationSettings_t2B94078737A72F814E8BC2126F967B94231190DF_marshaled_pinvoke
{
	char* ___sourceFontFileName_0;
	char* ___sourceFontFileGUID_1;
	int32_t ___pointSizeSamplingMode_2;
	int32_t ___pointSize_3;
	int32_t ___padding_4;
	int32_t ___packingMode_5;
	int32_t ___atlasWidth_6;
	int32_t ___atlasHeight_7;
	int32_t ___characterSetSelectionMode_8;
	char* ___characterSequence_9;
	char* ___referencedFontAssetGUID_10;
	char* ___referencedTextAssetGUID_11;
	int32_t ___fontStyle_12;
	float ___fontStyleModifier_13;
	int32_t ___renderMode_14;
	int32_t ___includeFontFeatures_15;
};
// Native definition for COM marshalling of TMPro.FontAssetCreationSettings
struct FontAssetCreationSettings_t2B94078737A72F814E8BC2126F967B94231190DF_marshaled_com
{
	Il2CppChar* ___sourceFontFileName_0;
	Il2CppChar* ___sourceFontFileGUID_1;
	int32_t ___pointSizeSamplingMode_2;
	int32_t ___pointSize_3;
	int32_t ___padding_4;
	int32_t ___packingMode_5;
	int32_t ___atlasWidth_6;
	int32_t ___atlasHeight_7;
	int32_t ___characterSetSelectionMode_8;
	Il2CppChar* ___characterSequence_9;
	Il2CppChar* ___referencedFontAssetGUID_10;
	Il2CppChar* ___referencedTextAssetGUID_11;
	int32_t ___fontStyle_12;
	float ___fontStyleModifier_13;
	int32_t ___renderMode_14;
	int32_t ___includeFontFeatures_15;
};

// System.Int16
struct Int16_tB8EF286A9C33492FA6E6D6E67320BE93E794A175 
{
	// System.Int16 System.Int16::m_value
	int16_t ___m_value_0;
};

// System.Int32
struct Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C 
{
	// System.Int32 System.Int32::m_value
	int32_t ___m_value_0;
};

// System.Int64
struct Int64_t092CFB123BE63C28ACDAF65C68F21A526050DBA3 
{
	// System.Int64 System.Int64::m_value
	int64_t ___m_value_0;
};

// System.IntPtr
struct IntPtr_t 
{
	// System.Void* System.IntPtr::m_value
	void* ___m_value_0;
};

struct IntPtr_t_StaticFields
{
	// System.IntPtr System.IntPtr::Zero
	intptr_t ___Zero_1;
};

// UnityEngine.Keyframe
struct Keyframe_tB9C67DCBFE10C0AE9C52CB5C66E944255C9254F0 
{
	// System.Single UnityEngine.Keyframe::m_Time
	float ___m_Time_0;
	// System.Single UnityEngine.Keyframe::m_Value
	float ___m_Value_1;
	// System.Single UnityEngine.Keyframe::m_InTangent
	float ___m_InTangent_2;
	// System.Single UnityEngine.Keyframe::m_OutTangent
	float ___m_OutTangent_3;
	// System.Int32 UnityEngine.Keyframe::m_WeightedMode
	int32_t ___m_WeightedMode_4;
	// System.Single UnityEngine.Keyframe::m_InWeight
	float ___m_InWeight_5;
	// System.Single UnityEngine.Keyframe::m_OutWeight
	float ___m_OutWeight_6;
};

// TMPro.MaterialReference
struct MaterialReference_tFD98FFFBBDF168028E637446C6676507186F4D0B 
{
	// System.Int32 TMPro.MaterialReference::index
	int32_t ___index_0;
	// TMPro.TMP_FontAsset TMPro.MaterialReference::fontAsset
	TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160* ___fontAsset_1;
	// TMPro.TMP_SpriteAsset TMPro.MaterialReference::spriteAsset
	TMP_SpriteAsset_t81F779E6F705CE190DC0D1F93A954CB8B1774B39* ___spriteAsset_2;
	// UnityEngine.Material TMPro.MaterialReference::material
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___material_3;
	// System.Boolean TMPro.MaterialReference::isDefaultMaterial
	bool ___isDefaultMaterial_4;
	// System.Boolean TMPro.MaterialReference::isFallbackMaterial
	bool ___isFallbackMaterial_5;
	// UnityEngine.Material TMPro.MaterialReference::fallbackMaterial
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___fallbackMaterial_6;
	// System.Single TMPro.MaterialReference::padding
	float ___padding_7;
	// System.Int32 TMPro.MaterialReference::referenceCount
	int32_t ___referenceCount_8;
};
// Native definition for P/Invoke marshalling of TMPro.MaterialReference
struct MaterialReference_tFD98FFFBBDF168028E637446C6676507186F4D0B_marshaled_pinvoke
{
	int32_t ___index_0;
	TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160* ___fontAsset_1;
	TMP_SpriteAsset_t81F779E6F705CE190DC0D1F93A954CB8B1774B39* ___spriteAsset_2;
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___material_3;
	int32_t ___isDefaultMaterial_4;
	int32_t ___isFallbackMaterial_5;
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___fallbackMaterial_6;
	float ___padding_7;
	int32_t ___referenceCount_8;
};
// Native definition for COM marshalling of TMPro.MaterialReference
struct MaterialReference_tFD98FFFBBDF168028E637446C6676507186F4D0B_marshaled_com
{
	int32_t ___index_0;
	TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160* ___fontAsset_1;
	TMP_SpriteAsset_t81F779E6F705CE190DC0D1F93A954CB8B1774B39* ___spriteAsset_2;
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___material_3;
	int32_t ___isDefaultMaterial_4;
	int32_t ___isFallbackMaterial_5;
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___fallbackMaterial_6;
	float ___padding_7;
	int32_t ___referenceCount_8;
};

// UnityEngine.Matrix4x4
struct Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 
{
	// System.Single UnityEngine.Matrix4x4::m00
	float ___m00_0;
	// System.Single UnityEngine.Matrix4x4::m10
	float ___m10_1;
	// System.Single UnityEngine.Matrix4x4::m20
	float ___m20_2;
	// System.Single UnityEngine.Matrix4x4::m30
	float ___m30_3;
	// System.Single UnityEngine.Matrix4x4::m01
	float ___m01_4;
	// System.Single UnityEngine.Matrix4x4::m11
	float ___m11_5;
	// System.Single UnityEngine.Matrix4x4::m21
	float ___m21_6;
	// System.Single UnityEngine.Matrix4x4::m31
	float ___m31_7;
	// System.Single UnityEngine.Matrix4x4::m02
	float ___m02_8;
	// System.Single UnityEngine.Matrix4x4::m12
	float ___m12_9;
	// System.Single UnityEngine.Matrix4x4::m22
	float ___m22_10;
	// System.Single UnityEngine.Matrix4x4::m32
	float ___m32_11;
	// System.Single UnityEngine.Matrix4x4::m03
	float ___m03_12;
	// System.Single UnityEngine.Matrix4x4::m13
	float ___m13_13;
	// System.Single UnityEngine.Matrix4x4::m23
	float ___m23_14;
	// System.Single UnityEngine.Matrix4x4::m33
	float ___m33_15;
};

struct Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6_StaticFields
{
	// UnityEngine.Matrix4x4 UnityEngine.Matrix4x4::zeroMatrix
	Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 ___zeroMatrix_16;
	// UnityEngine.Matrix4x4 UnityEngine.Matrix4x4::identityMatrix
	Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 ___identityMatrix_17;
};

// OpenCvSharp.ML.ParamGrid
struct ParamGrid_t0F18158C237FDE12E81979168156D10ABD2E0A6D 
{
	// System.Double OpenCvSharp.ML.ParamGrid::MinVal
	double ___MinVal_0;
	// System.Double OpenCvSharp.ML.ParamGrid::MaxVal
	double ___MaxVal_1;
	// System.Double OpenCvSharp.ML.ParamGrid::LogStep
	double ___LogStep_2;
};

// OpenCvSharp.Point
struct Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC 
{
	// System.Int32 OpenCvSharp.Point::X
	int32_t ___X_0;
	// System.Int32 OpenCvSharp.Point::Y
	int32_t ___Y_1;
};

// OpenCvSharp.Point2d
struct Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C 
{
	// System.Double OpenCvSharp.Point2d::X
	double ___X_0;
	// System.Double OpenCvSharp.Point2d::Y
	double ___Y_1;
};

// OpenCvSharp.Point2f
struct Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 
{
	// System.Single OpenCvSharp.Point2f::X
	float ___X_0;
	// System.Single OpenCvSharp.Point2f::Y
	float ___Y_1;
};

// OpenCvSharp.Point3d
struct Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC 
{
	// System.Double OpenCvSharp.Point3d::X
	double ___X_0;
	// System.Double OpenCvSharp.Point3d::Y
	double ___Y_1;
	// System.Double OpenCvSharp.Point3d::Z
	double ___Z_2;
};

// OpenCvSharp.Point3f
struct Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 
{
	// System.Single OpenCvSharp.Point3f::X
	float ___X_0;
	// System.Single OpenCvSharp.Point3f::Y
	float ___Y_1;
	// System.Single OpenCvSharp.Point3f::Z
	float ___Z_2;
};

// OpenCvSharp.Point3i
struct Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B 
{
	// System.Int32 OpenCvSharp.Point3i::X
	int32_t ___X_0;
	// System.Int32 OpenCvSharp.Point3i::Y
	int32_t ___Y_1;
	// System.Int32 OpenCvSharp.Point3i::Z
	int32_t ___Z_2;
};

// UnityEngine.Quaternion
struct Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 
{
	// System.Single UnityEngine.Quaternion::x
	float ___x_0;
	// System.Single UnityEngine.Quaternion::y
	float ___y_1;
	// System.Single UnityEngine.Quaternion::z
	float ___z_2;
	// System.Single UnityEngine.Quaternion::w
	float ___w_3;
};

struct Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974_StaticFields
{
	// UnityEngine.Quaternion UnityEngine.Quaternion::identityQuaternion
	Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 ___identityQuaternion_4;
};

// OpenCvSharp.Range
struct Range_t981FA0C4141FE7585A1C292A250B431019099C09 
{
	// System.Int32 OpenCvSharp.Range::Start
	int32_t ___Start_0;
	// System.Int32 OpenCvSharp.Range::End
	int32_t ___End_1;
};

// OpenCvSharp.Rect
struct Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A 
{
	// System.Int32 OpenCvSharp.Rect::X
	int32_t ___X_0;
	// System.Int32 OpenCvSharp.Rect::Y
	int32_t ___Y_1;
	// System.Int32 OpenCvSharp.Rect::Width
	int32_t ___Width_2;
	// System.Int32 OpenCvSharp.Rect::Height
	int32_t ___Height_3;
};

struct Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A_StaticFields
{
	// OpenCvSharp.Rect OpenCvSharp.Rect::Empty
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___Empty_5;
};

// UnityEngine.Rect
struct Rect_tA04E0F8A1830E767F40FB27ECD8D309303571F0D 
{
	// System.Single UnityEngine.Rect::m_XMin
	float ___m_XMin_0;
	// System.Single UnityEngine.Rect::m_YMin
	float ___m_YMin_1;
	// System.Single UnityEngine.Rect::m_Width
	float ___m_Width_2;
	// System.Single UnityEngine.Rect::m_Height
	float ___m_Height_3;
};

// OpenCvSharp.Rect2d
struct Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133 
{
	// System.Double OpenCvSharp.Rect2d::X
	double ___X_0;
	// System.Double OpenCvSharp.Rect2d::Y
	double ___Y_1;
	// System.Double OpenCvSharp.Rect2d::Width
	double ___Width_2;
	// System.Double OpenCvSharp.Rect2d::Height
	double ___Height_3;
};

struct Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133_StaticFields
{
	// OpenCvSharp.Rect2d OpenCvSharp.Rect2d::Empty
	Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133 ___Empty_5;
};

// System.SByte
struct SByte_tFEFFEF5D2FEBF5207950AE6FAC150FC53B668DB5 
{
	// System.SByte System.SByte::m_value
	int8_t ___m_value_0;
};

// OpenCvSharp.Scalar
struct Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 
{
	// System.Double OpenCvSharp.Scalar::Val0
	double ___Val0_0;
	// System.Double OpenCvSharp.Scalar::Val1
	double ___Val1_1;
	// System.Double OpenCvSharp.Scalar::Val2
	double ___Val2_2;
	// System.Double OpenCvSharp.Scalar::Val3
	double ___Val3_3;
};

struct Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3_StaticFields
{
	// System.Random OpenCvSharp.Scalar::random
	Random_t79716069EDE67D1D7734F60AE402D0CA3FB6B4C8* ___random_4;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::AliceBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___AliceBlue_5;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::AntiqueWhite
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___AntiqueWhite_6;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Aqua
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Aqua_7;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Aquamarine
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Aquamarine_8;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Azure
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Azure_9;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Beige
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Beige_10;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Bisque
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Bisque_11;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Black
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Black_12;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::BlanchedAlmond
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___BlanchedAlmond_13;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Blue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Blue_14;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::BlueViolet
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___BlueViolet_15;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Brown
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Brown_16;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::BurlyWood
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___BurlyWood_17;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::CadetBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___CadetBlue_18;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Chartreuse
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Chartreuse_19;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Chocolate
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Chocolate_20;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Coral
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Coral_21;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::CornflowerBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___CornflowerBlue_22;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Cornsilk
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Cornsilk_23;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Crimson
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Crimson_24;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Cyan
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Cyan_25;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkBlue_26;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkCyan
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkCyan_27;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkGoldenrod
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkGoldenrod_28;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkGray
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkGray_29;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkGreen_30;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkKhaki
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkKhaki_31;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkMagenta
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkMagenta_32;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkOliveGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkOliveGreen_33;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkOrange
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkOrange_34;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkOrchid
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkOrchid_35;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkRed
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkRed_36;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkSalmon
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkSalmon_37;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkSeaGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkSeaGreen_38;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkSlateBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkSlateBlue_39;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkSlateGray
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkSlateGray_40;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkTurquoise
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkTurquoise_41;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkViolet
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkViolet_42;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DeepPink
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DeepPink_43;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DeepSkyBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DeepSkyBlue_44;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DimGray
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DimGray_45;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DodgerBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DodgerBlue_46;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Firebrick
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Firebrick_47;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::FloralWhite
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___FloralWhite_48;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::ForestGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___ForestGreen_49;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Fuchsia
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Fuchsia_50;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Gainsboro
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Gainsboro_51;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::GhostWhite
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___GhostWhite_52;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Gold
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Gold_53;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Goldenrod
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Goldenrod_54;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Gray
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Gray_55;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Green
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Green_56;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::GreenYellow
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___GreenYellow_57;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Honeydew
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Honeydew_58;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::HotPink
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___HotPink_59;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::IndianRed
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___IndianRed_60;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Indigo
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Indigo_61;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Ivory
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Ivory_62;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Khaki
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Khaki_63;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Lavender
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Lavender_64;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LavenderBlush
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LavenderBlush_65;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LawnGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LawnGreen_66;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LemonChiffon
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LemonChiffon_67;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightBlue_68;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightCoral
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightCoral_69;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightCyan
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightCyan_70;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightGoldenrodYellow
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightGoldenrodYellow_71;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightGray
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightGray_72;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightGreen_73;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightPink
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightPink_74;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightSalmon
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightSalmon_75;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightSeaGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightSeaGreen_76;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightSkyBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightSkyBlue_77;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightSlateGray
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightSlateGray_78;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightSteelBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightSteelBlue_79;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightYellow
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightYellow_80;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Lime
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Lime_81;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LimeGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LimeGreen_82;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Linen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Linen_83;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Magenta
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Magenta_84;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Maroon
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Maroon_85;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MediumAquamarine
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MediumAquamarine_86;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MediumBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MediumBlue_87;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MediumOrchid
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MediumOrchid_88;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MediumPurple
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MediumPurple_89;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MediumSeaGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MediumSeaGreen_90;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MediumSlateBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MediumSlateBlue_91;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MediumSpringGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MediumSpringGreen_92;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MediumTurquoise
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MediumTurquoise_93;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MediumVioletRed
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MediumVioletRed_94;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MidnightBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MidnightBlue_95;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MintCream
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MintCream_96;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MistyRose
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MistyRose_97;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Moccasin
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Moccasin_98;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::NavajoWhite
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___NavajoWhite_99;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Navy
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Navy_100;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::OldLace
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___OldLace_101;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Olive
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Olive_102;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::OliveDrab
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___OliveDrab_103;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Orange
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Orange_104;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::OrangeRed
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___OrangeRed_105;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Orchid
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Orchid_106;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::PaleGoldenrod
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___PaleGoldenrod_107;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::PaleGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___PaleGreen_108;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::PaleTurquoise
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___PaleTurquoise_109;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::PaleVioletRed
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___PaleVioletRed_110;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::PapayaWhip
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___PapayaWhip_111;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::PeachPuff
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___PeachPuff_112;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Peru
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Peru_113;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Pink
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Pink_114;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Plum
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Plum_115;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::PowderBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___PowderBlue_116;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Purple
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Purple_117;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Red
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Red_118;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::RosyBrown
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___RosyBrown_119;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::RoyalBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___RoyalBlue_120;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::SaddleBrown
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___SaddleBrown_121;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Salmon
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Salmon_122;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::SandyBrown
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___SandyBrown_123;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::SeaGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___SeaGreen_124;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::SeaShell
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___SeaShell_125;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Sienna
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Sienna_126;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Silver
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Silver_127;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::SkyBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___SkyBlue_128;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::SlateBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___SlateBlue_129;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::SlateGray
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___SlateGray_130;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Snow
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Snow_131;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::SpringGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___SpringGreen_132;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::SteelBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___SteelBlue_133;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Tan
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Tan_134;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Teal
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Teal_135;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Thistle
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Thistle_136;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Tomato
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Tomato_137;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Turquoise
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Turquoise_138;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Violet
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Violet_139;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Wheat
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Wheat_140;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::White
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___White_141;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::WhiteSmoke
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___WhiteSmoke_142;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Yellow
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Yellow_143;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::YellowGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___YellowGreen_144;
};

// System.Single
struct Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C 
{
	// System.Single System.Single::m_value
	float ___m_value_0;
};

// OpenCvSharp.Size
struct Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 
{
	// System.Int32 OpenCvSharp.Size::Width
	int32_t ___Width_0;
	// System.Int32 OpenCvSharp.Size::Height
	int32_t ___Height_1;
};

// OpenCvSharp.Size2f
struct Size2f_tDE98F6BC79C37B2862E0197FB9FB5B739FA3EFF7 
{
	// System.Single OpenCvSharp.Size2f::Width
	float ___Width_0;
	// System.Single OpenCvSharp.Size2f::Height
	float ___Height_1;
};

// TMPro.TMP_FontStyleStack
struct TMP_FontStyleStack_t52885F172FADBC21346C835B5302167BDA8020DC 
{
	// System.Byte TMPro.TMP_FontStyleStack::bold
	uint8_t ___bold_0;
	// System.Byte TMPro.TMP_FontStyleStack::italic
	uint8_t ___italic_1;
	// System.Byte TMPro.TMP_FontStyleStack::underline
	uint8_t ___underline_2;
	// System.Byte TMPro.TMP_FontStyleStack::strikethrough
	uint8_t ___strikethrough_3;
	// System.Byte TMPro.TMP_FontStyleStack::highlight
	uint8_t ___highlight_4;
	// System.Byte TMPro.TMP_FontStyleStack::superscript
	uint8_t ___superscript_5;
	// System.Byte TMPro.TMP_FontStyleStack::subscript
	uint8_t ___subscript_6;
	// System.Byte TMPro.TMP_FontStyleStack::uppercase
	uint8_t ___uppercase_7;
	// System.Byte TMPro.TMP_FontStyleStack::lowercase
	uint8_t ___lowercase_8;
	// System.Byte TMPro.TMP_FontStyleStack::smallcaps
	uint8_t ___smallcaps_9;
};

// TMPro.TMP_LinkInfo
struct TMP_LinkInfo_t9DC08E8BF8C5E8094AFF8C9FB3C251AF88B92DA6 
{
	// TMPro.TMP_Text TMPro.TMP_LinkInfo::textComponent
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___textComponent_0;
	// System.Int32 TMPro.TMP_LinkInfo::hashCode
	int32_t ___hashCode_1;
	// System.Int32 TMPro.TMP_LinkInfo::linkIdFirstCharacterIndex
	int32_t ___linkIdFirstCharacterIndex_2;
	// System.Int32 TMPro.TMP_LinkInfo::linkIdLength
	int32_t ___linkIdLength_3;
	// System.Int32 TMPro.TMP_LinkInfo::linkTextfirstCharacterIndex
	int32_t ___linkTextfirstCharacterIndex_4;
	// System.Int32 TMPro.TMP_LinkInfo::linkTextLength
	int32_t ___linkTextLength_5;
	// System.Char[] TMPro.TMP_LinkInfo::linkID
	CharU5BU5D_t799905CF001DD5F13F7DBB310181FC4D8B7D0AAB* ___linkID_6;
};
// Native definition for P/Invoke marshalling of TMPro.TMP_LinkInfo
struct TMP_LinkInfo_t9DC08E8BF8C5E8094AFF8C9FB3C251AF88B92DA6_marshaled_pinvoke
{
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___textComponent_0;
	int32_t ___hashCode_1;
	int32_t ___linkIdFirstCharacterIndex_2;
	int32_t ___linkIdLength_3;
	int32_t ___linkTextfirstCharacterIndex_4;
	int32_t ___linkTextLength_5;
	uint8_t* ___linkID_6;
};
// Native definition for COM marshalling of TMPro.TMP_LinkInfo
struct TMP_LinkInfo_t9DC08E8BF8C5E8094AFF8C9FB3C251AF88B92DA6_marshaled_com
{
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___textComponent_0;
	int32_t ___hashCode_1;
	int32_t ___linkIdFirstCharacterIndex_2;
	int32_t ___linkIdLength_3;
	int32_t ___linkTextfirstCharacterIndex_4;
	int32_t ___linkTextLength_5;
	uint8_t* ___linkID_6;
};

// TMPro.TMP_Offset
struct TMP_Offset_t2262BE4E87D9662487777FF8FFE1B17B0E4438C6 
{
	// System.Single TMPro.TMP_Offset::m_Left
	float ___m_Left_0;
	// System.Single TMPro.TMP_Offset::m_Right
	float ___m_Right_1;
	// System.Single TMPro.TMP_Offset::m_Top
	float ___m_Top_2;
	// System.Single TMPro.TMP_Offset::m_Bottom
	float ___m_Bottom_3;
};

struct TMP_Offset_t2262BE4E87D9662487777FF8FFE1B17B0E4438C6_StaticFields
{
	// TMPro.TMP_Offset TMPro.TMP_Offset::k_ZeroOffset
	TMP_Offset_t2262BE4E87D9662487777FF8FFE1B17B0E4438C6 ___k_ZeroOffset_4;
};

// TMPro.TMP_WordInfo
struct TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983 
{
	// TMPro.TMP_Text TMPro.TMP_WordInfo::textComponent
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___textComponent_0;
	// System.Int32 TMPro.TMP_WordInfo::firstCharacterIndex
	int32_t ___firstCharacterIndex_1;
	// System.Int32 TMPro.TMP_WordInfo::lastCharacterIndex
	int32_t ___lastCharacterIndex_2;
	// System.Int32 TMPro.TMP_WordInfo::characterCount
	int32_t ___characterCount_3;
};
// Native definition for P/Invoke marshalling of TMPro.TMP_WordInfo
struct TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983_marshaled_pinvoke
{
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___textComponent_0;
	int32_t ___firstCharacterIndex_1;
	int32_t ___lastCharacterIndex_2;
	int32_t ___characterCount_3;
};
// Native definition for COM marshalling of TMPro.TMP_WordInfo
struct TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983_marshaled_com
{
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___textComponent_0;
	int32_t ___firstCharacterIndex_1;
	int32_t ___lastCharacterIndex_2;
	int32_t ___characterCount_3;
};

// OpenCvSharp.TermCriteria
struct TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 
{
	// OpenCvSharp.CriteriaType OpenCvSharp.TermCriteria::Type
	int32_t ___Type_0;
	// System.Int32 OpenCvSharp.TermCriteria::MaxCount
	int32_t ___MaxCount_1;
	// System.Double OpenCvSharp.TermCriteria::Epsilon
	double ___Epsilon_2;
};

// System.UInt16
struct UInt16_tF4C148C876015C212FD72652D0B6ED8CC247A455 
{
	// System.UInt16 System.UInt16::m_value
	uint16_t ___m_value_0;
};

// System.UInt32
struct UInt32_t1833D51FFA667B18A5AA4B8D34DE284F8495D29B 
{
	// System.UInt32 System.UInt32::m_value
	uint32_t ___m_value_0;
};

// System.UInt64
struct UInt64_t8F12534CC8FC4B5860F2A2CD1EE79D322E7A41AF 
{
	// System.UInt64 System.UInt64::m_value
	uint64_t ___m_value_0;
};

// OpenCvSharp.Vec2b
struct Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C 
{
	// System.Byte OpenCvSharp.Vec2b::Item0
	uint8_t ___Item0_0;
	// System.Byte OpenCvSharp.Vec2b::Item1
	uint8_t ___Item1_1;
};

// OpenCvSharp.Vec2d
struct Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23 
{
	// System.Double OpenCvSharp.Vec2d::Item0
	double ___Item0_0;
	// System.Double OpenCvSharp.Vec2d::Item1
	double ___Item1_1;
};

// OpenCvSharp.Vec2f
struct Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E 
{
	// System.Single OpenCvSharp.Vec2f::Item0
	float ___Item0_0;
	// System.Single OpenCvSharp.Vec2f::Item1
	float ___Item1_1;
};

// OpenCvSharp.Vec2i
struct Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37 
{
	// System.Int32 OpenCvSharp.Vec2i::Item0
	int32_t ___Item0_0;
	// System.Int32 OpenCvSharp.Vec2i::Item1
	int32_t ___Item1_1;
};

// OpenCvSharp.Vec2s
struct Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68 
{
	// System.Int16 OpenCvSharp.Vec2s::Item0
	int16_t ___Item0_0;
	// System.Int16 OpenCvSharp.Vec2s::Item1
	int16_t ___Item1_1;
};

// OpenCvSharp.Vec2w
struct Vec2w_tC86992B28B612E016C5DFE0C6AEFB352CA530B97 
{
	// System.UInt16 OpenCvSharp.Vec2w::Item0
	uint16_t ___Item0_0;
	// System.UInt16 OpenCvSharp.Vec2w::Item1
	uint16_t ___Item1_1;
};

// OpenCvSharp.Vec3b
struct Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 
{
	// System.Byte OpenCvSharp.Vec3b::Item0
	uint8_t ___Item0_0;
	// System.Byte OpenCvSharp.Vec3b::Item1
	uint8_t ___Item1_1;
	// System.Byte OpenCvSharp.Vec3b::Item2
	uint8_t ___Item2_2;
};

// OpenCvSharp.Vec3d
struct Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD 
{
	// System.Double OpenCvSharp.Vec3d::Item0
	double ___Item0_0;
	// System.Double OpenCvSharp.Vec3d::Item1
	double ___Item1_1;
	// System.Double OpenCvSharp.Vec3d::Item2
	double ___Item2_2;
};

// OpenCvSharp.Vec3f
struct Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4 
{
	// System.Single OpenCvSharp.Vec3f::Item0
	float ___Item0_0;
	// System.Single OpenCvSharp.Vec3f::Item1
	float ___Item1_1;
	// System.Single OpenCvSharp.Vec3f::Item2
	float ___Item2_2;
};

// OpenCvSharp.Vec3i
struct Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5 
{
	// System.Int32 OpenCvSharp.Vec3i::Item0
	int32_t ___Item0_0;
	// System.Int32 OpenCvSharp.Vec3i::Item1
	int32_t ___Item1_1;
	// System.Int32 OpenCvSharp.Vec3i::Item2
	int32_t ___Item2_2;
};

// OpenCvSharp.Vec3s
struct Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA 
{
	// System.Int16 OpenCvSharp.Vec3s::Item0
	int16_t ___Item0_0;
	// System.Int16 OpenCvSharp.Vec3s::Item1
	int16_t ___Item1_1;
	// System.Int16 OpenCvSharp.Vec3s::Item2
	int16_t ___Item2_2;
};

// OpenCvSharp.Vec3w
struct Vec3w_t639AB866E901F11C8B2102D9AABF3D326C187343 
{
	// System.UInt16 OpenCvSharp.Vec3w::Item0
	uint16_t ___Item0_0;
	// System.UInt16 OpenCvSharp.Vec3w::Item1
	uint16_t ___Item1_1;
	// System.UInt16 OpenCvSharp.Vec3w::Item2
	uint16_t ___Item2_2;
};

// OpenCvSharp.Vec4b
struct Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68 
{
	// System.Byte OpenCvSharp.Vec4b::Item0
	uint8_t ___Item0_0;
	// System.Byte OpenCvSharp.Vec4b::Item1
	uint8_t ___Item1_1;
	// System.Byte OpenCvSharp.Vec4b::Item2
	uint8_t ___Item2_2;
	// System.Byte OpenCvSharp.Vec4b::Item3
	uint8_t ___Item3_3;
};

// OpenCvSharp.Vec4d
struct Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D 
{
	// System.Double OpenCvSharp.Vec4d::Item0
	double ___Item0_0;
	// System.Double OpenCvSharp.Vec4d::Item1
	double ___Item1_1;
	// System.Double OpenCvSharp.Vec4d::Item2
	double ___Item2_2;
	// System.Double OpenCvSharp.Vec4d::Item3
	double ___Item3_3;
};

// OpenCvSharp.Vec4f
struct Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 
{
	// System.Single OpenCvSharp.Vec4f::Item0
	float ___Item0_0;
	// System.Single OpenCvSharp.Vec4f::Item1
	float ___Item1_1;
	// System.Single OpenCvSharp.Vec4f::Item2
	float ___Item2_2;
	// System.Single OpenCvSharp.Vec4f::Item3
	float ___Item3_3;
};

// OpenCvSharp.Vec4i
struct Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB 
{
	// System.Int32 OpenCvSharp.Vec4i::Item0
	int32_t ___Item0_0;
	// System.Int32 OpenCvSharp.Vec4i::Item1
	int32_t ___Item1_1;
	// System.Int32 OpenCvSharp.Vec4i::Item2
	int32_t ___Item2_2;
	// System.Int32 OpenCvSharp.Vec4i::Item3
	int32_t ___Item3_3;
};

// OpenCvSharp.Vec4s
struct Vec4s_t36070B932676A14293929ED30FF39D45635126B5 
{
	// System.Int16 OpenCvSharp.Vec4s::Item0
	int16_t ___Item0_0;
	// System.Int16 OpenCvSharp.Vec4s::Item1
	int16_t ___Item1_1;
	// System.Int16 OpenCvSharp.Vec4s::Item2
	int16_t ___Item2_2;
	// System.Int16 OpenCvSharp.Vec4s::Item3
	int16_t ___Item3_3;
};

// OpenCvSharp.Vec4w
struct Vec4w_tA5261E05040FD831243C9A62E36D8644449ECA63 
{
	// System.UInt16 OpenCvSharp.Vec4w::Item0
	uint16_t ___Item0_0;
	// System.UInt16 OpenCvSharp.Vec4w::Item1
	uint16_t ___Item1_1;
	// System.UInt16 OpenCvSharp.Vec4w::Item2
	uint16_t ___Item2_2;
	// System.UInt16 OpenCvSharp.Vec4w::Item3
	uint16_t ___Item3_3;
};

// OpenCvSharp.Vec6b
struct Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C 
{
	// System.Byte OpenCvSharp.Vec6b::Item0
	uint8_t ___Item0_0;
	// System.Byte OpenCvSharp.Vec6b::Item1
	uint8_t ___Item1_1;
	// System.Byte OpenCvSharp.Vec6b::Item2
	uint8_t ___Item2_2;
	// System.Byte OpenCvSharp.Vec6b::Item3
	uint8_t ___Item3_3;
	// System.Byte OpenCvSharp.Vec6b::Item4
	uint8_t ___Item4_4;
	// System.Byte OpenCvSharp.Vec6b::Item5
	uint8_t ___Item5_5;
};

// OpenCvSharp.Vec6d
struct Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6 
{
	// System.Double OpenCvSharp.Vec6d::Item0
	double ___Item0_0;
	// System.Double OpenCvSharp.Vec6d::Item1
	double ___Item1_1;
	// System.Double OpenCvSharp.Vec6d::Item2
	double ___Item2_2;
	// System.Double OpenCvSharp.Vec6d::Item3
	double ___Item3_3;
	// System.Double OpenCvSharp.Vec6d::Item4
	double ___Item4_4;
	// System.Double OpenCvSharp.Vec6d::Item5
	double ___Item5_5;
};

// OpenCvSharp.Vec6f
struct Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E 
{
	// System.Single OpenCvSharp.Vec6f::Item0
	float ___Item0_0;
	// System.Single OpenCvSharp.Vec6f::Item1
	float ___Item1_1;
	// System.Single OpenCvSharp.Vec6f::Item2
	float ___Item2_2;
	// System.Single OpenCvSharp.Vec6f::Item3
	float ___Item3_3;
	// System.Single OpenCvSharp.Vec6f::Item4
	float ___Item4_4;
	// System.Single OpenCvSharp.Vec6f::Item5
	float ___Item5_5;
};

// OpenCvSharp.Vec6i
struct Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4 
{
	// System.Int32 OpenCvSharp.Vec6i::Item0
	int32_t ___Item0_0;
	// System.Int32 OpenCvSharp.Vec6i::Item1
	int32_t ___Item1_1;
	// System.Int32 OpenCvSharp.Vec6i::Item2
	int32_t ___Item2_2;
	// System.Int32 OpenCvSharp.Vec6i::Item3
	int32_t ___Item3_3;
	// System.Int32 OpenCvSharp.Vec6i::Item4
	int32_t ___Item4_4;
	// System.Int32 OpenCvSharp.Vec6i::Item5
	int32_t ___Item5_5;
};

// OpenCvSharp.Vec6s
struct Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB 
{
	// System.Int16 OpenCvSharp.Vec6s::Item0
	int16_t ___Item0_0;
	// System.Int16 OpenCvSharp.Vec6s::Item1
	int16_t ___Item1_1;
	// System.Int16 OpenCvSharp.Vec6s::Item2
	int16_t ___Item2_2;
	// System.Int16 OpenCvSharp.Vec6s::Item3
	int16_t ___Item3_3;
	// System.Int16 OpenCvSharp.Vec6s::Item4
	int16_t ___Item4_4;
	// System.Int16 OpenCvSharp.Vec6s::Item5
	int16_t ___Item5_5;
};

// OpenCvSharp.Vec6w
struct Vec6w_tAB37C7CF73E1BD9071AF39DA9F4F30A4A0D667D9 
{
	// System.UInt16 OpenCvSharp.Vec6w::Item0
	uint16_t ___Item0_0;
	// System.UInt16 OpenCvSharp.Vec6w::Item1
	uint16_t ___Item1_1;
	// System.UInt16 OpenCvSharp.Vec6w::Item2
	uint16_t ___Item2_2;
	// System.UInt16 OpenCvSharp.Vec6w::Item3
	uint16_t ___Item3_3;
	// System.UInt16 OpenCvSharp.Vec6w::Item4
	uint16_t ___Item4_4;
	// System.UInt16 OpenCvSharp.Vec6w::Item5
	uint16_t ___Item5_5;
};

// UnityEngine.Vector2
struct Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 
{
	// System.Single UnityEngine.Vector2::x
	float ___x_0;
	// System.Single UnityEngine.Vector2::y
	float ___y_1;
};

struct Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7_StaticFields
{
	// UnityEngine.Vector2 UnityEngine.Vector2::zeroVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___zeroVector_2;
	// UnityEngine.Vector2 UnityEngine.Vector2::oneVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___oneVector_3;
	// UnityEngine.Vector2 UnityEngine.Vector2::upVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___upVector_4;
	// UnityEngine.Vector2 UnityEngine.Vector2::downVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___downVector_5;
	// UnityEngine.Vector2 UnityEngine.Vector2::leftVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___leftVector_6;
	// UnityEngine.Vector2 UnityEngine.Vector2::rightVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___rightVector_7;
	// UnityEngine.Vector2 UnityEngine.Vector2::positiveInfinityVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___positiveInfinityVector_8;
	// UnityEngine.Vector2 UnityEngine.Vector2::negativeInfinityVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___negativeInfinityVector_9;
};

// UnityEngine.Vector3
struct Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 
{
	// System.Single UnityEngine.Vector3::x
	float ___x_2;
	// System.Single UnityEngine.Vector3::y
	float ___y_3;
	// System.Single UnityEngine.Vector3::z
	float ___z_4;
};

struct Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_StaticFields
{
	// UnityEngine.Vector3 UnityEngine.Vector3::zeroVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___zeroVector_5;
	// UnityEngine.Vector3 UnityEngine.Vector3::oneVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___oneVector_6;
	// UnityEngine.Vector3 UnityEngine.Vector3::upVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___upVector_7;
	// UnityEngine.Vector3 UnityEngine.Vector3::downVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___downVector_8;
	// UnityEngine.Vector3 UnityEngine.Vector3::leftVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___leftVector_9;
	// UnityEngine.Vector3 UnityEngine.Vector3::rightVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___rightVector_10;
	// UnityEngine.Vector3 UnityEngine.Vector3::forwardVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___forwardVector_11;
	// UnityEngine.Vector3 UnityEngine.Vector3::backVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___backVector_12;
	// UnityEngine.Vector3 UnityEngine.Vector3::positiveInfinityVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___positiveInfinityVector_13;
	// UnityEngine.Vector3 UnityEngine.Vector3::negativeInfinityVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___negativeInfinityVector_14;
};

// UnityEngine.Vector4
struct Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 
{
	// System.Single UnityEngine.Vector4::x
	float ___x_1;
	// System.Single UnityEngine.Vector4::y
	float ___y_2;
	// System.Single UnityEngine.Vector4::z
	float ___z_3;
	// System.Single UnityEngine.Vector4::w
	float ___w_4;
};

struct Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3_StaticFields
{
	// UnityEngine.Vector4 UnityEngine.Vector4::zeroVector
	Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 ___zeroVector_5;
	// UnityEngine.Vector4 UnityEngine.Vector4::oneVector
	Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 ___oneVector_6;
	// UnityEngine.Vector4 UnityEngine.Vector4::positiveInfinityVector
	Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 ___positiveInfinityVector_7;
	// UnityEngine.Vector4 UnityEngine.Vector4::negativeInfinityVector
	Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 ___negativeInfinityVector_8;
};

// System.Void
struct Void_t4861ACF8F4594C3437BB48B6E56783494B843915 
{
	union
	{
		struct
		{
		};
		uint8_t Void_t4861ACF8F4594C3437BB48B6E56783494B843915__padding[1];
	};
};

// UnityEngine.WaitForEndOfFrame
struct WaitForEndOfFrame_tE38D80923E3F8380069B423968C25ABE50A46663  : public YieldInstruction_tFCE35FD0907950EFEE9BC2890AC664E41C53728D
{
};

// UnityEngine.WaitForSeconds
struct WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3  : public YieldInstruction_tFCE35FD0907950EFEE9BC2890AC664E41C53728D
{
	// System.Single UnityEngine.WaitForSeconds::m_Seconds
	float ___m_Seconds_0;
};
// Native definition for P/Invoke marshalling of UnityEngine.WaitForSeconds
struct WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_marshaled_pinvoke : public YieldInstruction_tFCE35FD0907950EFEE9BC2890AC664E41C53728D_marshaled_pinvoke
{
	float ___m_Seconds_0;
};
// Native definition for COM marshalling of UnityEngine.WaitForSeconds
struct WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_marshaled_com : public YieldInstruction_tFCE35FD0907950EFEE9BC2890AC664E41C53728D_marshaled_com
{
	float ___m_Seconds_0;
};

// OpenCvSharp.Moments/NativeStruct
struct NativeStruct_tB25EB88E7E834223F80F1F898DE4BE9853B6D3C8 
{
	// System.Double OpenCvSharp.Moments/NativeStruct::m00
	double ___m00_0;
	// System.Double OpenCvSharp.Moments/NativeStruct::m10
	double ___m10_1;
	// System.Double OpenCvSharp.Moments/NativeStruct::m01
	double ___m01_2;
	// System.Double OpenCvSharp.Moments/NativeStruct::m20
	double ___m20_3;
	// System.Double OpenCvSharp.Moments/NativeStruct::m11
	double ___m11_4;
	// System.Double OpenCvSharp.Moments/NativeStruct::m02
	double ___m02_5;
	// System.Double OpenCvSharp.Moments/NativeStruct::m30
	double ___m30_6;
	// System.Double OpenCvSharp.Moments/NativeStruct::m21
	double ___m21_7;
	// System.Double OpenCvSharp.Moments/NativeStruct::m12
	double ___m12_8;
	// System.Double OpenCvSharp.Moments/NativeStruct::m03
	double ___m03_9;
	// System.Double OpenCvSharp.Moments/NativeStruct::mu20
	double ___mu20_10;
	// System.Double OpenCvSharp.Moments/NativeStruct::mu11
	double ___mu11_11;
	// System.Double OpenCvSharp.Moments/NativeStruct::mu02
	double ___mu02_12;
	// System.Double OpenCvSharp.Moments/NativeStruct::mu30
	double ___mu30_13;
	// System.Double OpenCvSharp.Moments/NativeStruct::mu21
	double ___mu21_14;
	// System.Double OpenCvSharp.Moments/NativeStruct::mu12
	double ___mu12_15;
	// System.Double OpenCvSharp.Moments/NativeStruct::mu03
	double ___mu03_16;
	// System.Double OpenCvSharp.Moments/NativeStruct::inv_sqrt_m00
	double ___inv_sqrt_m00_17;
};

// OpenCvSharp.SimpleBlobDetector/WParams
struct WParams_tF352D7BCB627DF6ABFC3538BAE8B601298495A54 
{
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::thresholdStep
	float ___thresholdStep_0;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::minThreshold
	float ___minThreshold_1;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::maxThreshold
	float ___maxThreshold_2;
	// System.UInt32 OpenCvSharp.SimpleBlobDetector/WParams::minRepeatability
	uint32_t ___minRepeatability_3;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::minDistBetweenBlobs
	float ___minDistBetweenBlobs_4;
	// System.Int32 OpenCvSharp.SimpleBlobDetector/WParams::filterByColor
	int32_t ___filterByColor_5;
	// System.Byte OpenCvSharp.SimpleBlobDetector/WParams::blobColor
	uint8_t ___blobColor_6;
	// System.Int32 OpenCvSharp.SimpleBlobDetector/WParams::filterByArea
	int32_t ___filterByArea_7;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::minArea
	float ___minArea_8;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::maxArea
	float ___maxArea_9;
	// System.Int32 OpenCvSharp.SimpleBlobDetector/WParams::filterByCircularity
	int32_t ___filterByCircularity_10;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::minCircularity
	float ___minCircularity_11;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::maxCircularity
	float ___maxCircularity_12;
	// System.Int32 OpenCvSharp.SimpleBlobDetector/WParams::filterByInertia
	int32_t ___filterByInertia_13;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::minInertiaRatio
	float ___minInertiaRatio_14;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::maxInertiaRatio
	float ___maxInertiaRatio_15;
	// System.Int32 OpenCvSharp.SimpleBlobDetector/WParams::filterByConvexity
	int32_t ___filterByConvexity_16;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::minConvexity
	float ___minConvexity_17;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::maxConvexity
	float ___maxConvexity_18;
};

// TMPro.TMP_Text/SpecialCharacter
struct SpecialCharacter_t6C1DBE8C490706D1620899BAB7F0B8091AD26777 
{
	// TMPro.TMP_Character TMPro.TMP_Text/SpecialCharacter::character
	TMP_Character_t7D37A55EF1A9FF6D0BFE6D50E86A00F80E7FAF35* ___character_0;
	// TMPro.TMP_FontAsset TMPro.TMP_Text/SpecialCharacter::fontAsset
	TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160* ___fontAsset_1;
	// UnityEngine.Material TMPro.TMP_Text/SpecialCharacter::material
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___material_2;
	// System.Int32 TMPro.TMP_Text/SpecialCharacter::materialIndex
	int32_t ___materialIndex_3;
};
// Native definition for P/Invoke marshalling of TMPro.TMP_Text/SpecialCharacter
struct SpecialCharacter_t6C1DBE8C490706D1620899BAB7F0B8091AD26777_marshaled_pinvoke
{
	TMP_Character_t7D37A55EF1A9FF6D0BFE6D50E86A00F80E7FAF35* ___character_0;
	TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160* ___fontAsset_1;
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___material_2;
	int32_t ___materialIndex_3;
};
// Native definition for COM marshalling of TMPro.TMP_Text/SpecialCharacter
struct SpecialCharacter_t6C1DBE8C490706D1620899BAB7F0B8091AD26777_marshaled_com
{
	TMP_Character_t7D37A55EF1A9FF6D0BFE6D50E86A00F80E7FAF35* ___character_0;
	TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160* ___fontAsset_1;
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___material_2;
	int32_t ___materialIndex_3;
};

// TMPro.TMP_Text/TextBackingContainer
struct TextBackingContainer_t33D1CE628E7B26C45EDAC1D87BEF2DD22A5C6361 
{
	// System.UInt32[] TMPro.TMP_Text/TextBackingContainer::m_Array
	UInt32U5BU5D_t02FBD658AD156A17574ECE6106CF1FBFCC9807FA* ___m_Array_0;
	// System.Int32 TMPro.TMP_Text/TextBackingContainer::m_Count
	int32_t ___m_Count_1;
};
// Native definition for P/Invoke marshalling of TMPro.TMP_Text/TextBackingContainer
struct TextBackingContainer_t33D1CE628E7B26C45EDAC1D87BEF2DD22A5C6361_marshaled_pinvoke
{
	Il2CppSafeArray/*NONE*/* ___m_Array_0;
	int32_t ___m_Count_1;
};
// Native definition for COM marshalling of TMPro.TMP_Text/TextBackingContainer
struct TextBackingContainer_t33D1CE628E7B26C45EDAC1D87BEF2DD22A5C6361_marshaled_com
{
	Il2CppSafeArray/*NONE*/* ___m_Array_0;
	int32_t ___m_Count_1;
};

// TMPro.Examples.VertexJitter/VertexAnim
struct VertexAnim_tFF5399F548EE5426E46DEB662F561DDE129E20D7 
{
	// System.Single TMPro.Examples.VertexJitter/VertexAnim::angleRange
	float ___angleRange_0;
	// System.Single TMPro.Examples.VertexJitter/VertexAnim::angle
	float ___angle_1;
	// System.Single TMPro.Examples.VertexJitter/VertexAnim::speed
	float ___speed_2;
};

// TMPro.TMP_TextProcessingStack`1<UnityEngine.Color32>
struct TMP_TextProcessingStack_1_tF2CD5BE59E5EB22EA9E3EE3043A004EA918C4BB3 
{
	// T[] TMPro.TMP_TextProcessingStack`1::itemStack
	Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* ___itemStack_0;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::index
	int32_t ___index_1;
	// T TMPro.TMP_TextProcessingStack`1::m_DefaultItem
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___m_DefaultItem_2;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_Capacity
	int32_t ___m_Capacity_3;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_RolloverSize
	int32_t ___m_RolloverSize_4;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_Count
	int32_t ___m_Count_5;
};

// TMPro.TMP_TextProcessingStack`1<TMPro.MaterialReference>
struct TMP_TextProcessingStack_1_tB03E08F69415B281A5A81138F09E49EE58402DF9 
{
	// T[] TMPro.TMP_TextProcessingStack`1::itemStack
	MaterialReferenceU5BU5D_t7491D335AB3E3E13CE9C0F5E931F396F6A02E1F2* ___itemStack_0;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::index
	int32_t ___index_1;
	// T TMPro.TMP_TextProcessingStack`1::m_DefaultItem
	MaterialReference_tFD98FFFBBDF168028E637446C6676507186F4D0B ___m_DefaultItem_2;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_Capacity
	int32_t ___m_Capacity_3;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_RolloverSize
	int32_t ___m_RolloverSize_4;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_Count
	int32_t ___m_Count_5;
};

// UnityEngine.AnimationCurve
struct AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354  : public RuntimeObject
{
	// System.IntPtr UnityEngine.AnimationCurve::m_Ptr
	intptr_t ___m_Ptr_0;
};
// Native definition for P/Invoke marshalling of UnityEngine.AnimationCurve
struct AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354_marshaled_pinvoke
{
	intptr_t ___m_Ptr_0;
};
// Native definition for COM marshalling of UnityEngine.AnimationCurve
struct AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354_marshaled_com
{
	intptr_t ___m_Ptr_0;
};

// UnityEngine.Bounds
struct Bounds_t367E830C64BBF235ED8C3B2F8CF6254FDCAD39C3 
{
	// UnityEngine.Vector3 UnityEngine.Bounds::m_Center
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___m_Center_0;
	// UnityEngine.Vector3 UnityEngine.Bounds::m_Extents
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___m_Extents_1;
};

// UnityEngine.Coroutine
struct Coroutine_t85EA685566A254C23F3FD77AB5BDFFFF8799596B  : public YieldInstruction_tFCE35FD0907950EFEE9BC2890AC664E41C53728D
{
	// System.IntPtr UnityEngine.Coroutine::m_Ptr
	intptr_t ___m_Ptr_0;
};
// Native definition for P/Invoke marshalling of UnityEngine.Coroutine
struct Coroutine_t85EA685566A254C23F3FD77AB5BDFFFF8799596B_marshaled_pinvoke : public YieldInstruction_tFCE35FD0907950EFEE9BC2890AC664E41C53728D_marshaled_pinvoke
{
	intptr_t ___m_Ptr_0;
};
// Native definition for COM marshalling of UnityEngine.Coroutine
struct Coroutine_t85EA685566A254C23F3FD77AB5BDFFFF8799596B_marshaled_com : public YieldInstruction_tFCE35FD0907950EFEE9BC2890AC664E41C53728D_marshaled_com
{
	intptr_t ___m_Ptr_0;
};

// System.Delegate
struct Delegate_t  : public RuntimeObject
{
	// System.IntPtr System.Delegate::method_ptr
	Il2CppMethodPointer ___method_ptr_0;
	// System.IntPtr System.Delegate::invoke_impl
	intptr_t ___invoke_impl_1;
	// System.Object System.Delegate::m_target
	RuntimeObject* ___m_target_2;
	// System.IntPtr System.Delegate::method
	intptr_t ___method_3;
	// System.IntPtr System.Delegate::delegate_trampoline
	intptr_t ___delegate_trampoline_4;
	// System.IntPtr System.Delegate::extra_arg
	intptr_t ___extra_arg_5;
	// System.IntPtr System.Delegate::method_code
	intptr_t ___method_code_6;
	// System.IntPtr System.Delegate::interp_method
	intptr_t ___interp_method_7;
	// System.IntPtr System.Delegate::interp_invoke_impl
	intptr_t ___interp_invoke_impl_8;
	// System.Reflection.MethodInfo System.Delegate::method_info
	MethodInfo_t* ___method_info_9;
	// System.Reflection.MethodInfo System.Delegate::original_method_info
	MethodInfo_t* ___original_method_info_10;
	// System.DelegateData System.Delegate::data
	DelegateData_t9B286B493293CD2D23A5B2B5EF0E5B1324C2B77E* ___data_11;
	// System.Boolean System.Delegate::method_is_virtual
	bool ___method_is_virtual_12;
};
// Native definition for P/Invoke marshalling of System.Delegate
struct Delegate_t_marshaled_pinvoke
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	intptr_t ___interp_method_7;
	intptr_t ___interp_invoke_impl_8;
	MethodInfo_t* ___method_info_9;
	MethodInfo_t* ___original_method_info_10;
	DelegateData_t9B286B493293CD2D23A5B2B5EF0E5B1324C2B77E* ___data_11;
	int32_t ___method_is_virtual_12;
};
// Native definition for COM marshalling of System.Delegate
struct Delegate_t_marshaled_com
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	intptr_t ___interp_method_7;
	intptr_t ___interp_invoke_impl_8;
	MethodInfo_t* ___method_info_9;
	MethodInfo_t* ___original_method_info_10;
	DelegateData_t9B286B493293CD2D23A5B2B5EF0E5B1324C2B77E* ___data_11;
	int32_t ___method_is_virtual_12;
};

// System.Exception
struct Exception_t  : public RuntimeObject
{
	// System.String System.Exception::_className
	String_t* ____className_1;
	// System.String System.Exception::_message
	String_t* ____message_2;
	// System.Collections.IDictionary System.Exception::_data
	RuntimeObject* ____data_3;
	// System.Exception System.Exception::_innerException
	Exception_t* ____innerException_4;
	// System.String System.Exception::_helpURL
	String_t* ____helpURL_5;
	// System.Object System.Exception::_stackTrace
	RuntimeObject* ____stackTrace_6;
	// System.String System.Exception::_stackTraceString
	String_t* ____stackTraceString_7;
	// System.String System.Exception::_remoteStackTraceString
	String_t* ____remoteStackTraceString_8;
	// System.Int32 System.Exception::_remoteStackIndex
	int32_t ____remoteStackIndex_9;
	// System.Object System.Exception::_dynamicMethods
	RuntimeObject* ____dynamicMethods_10;
	// System.Int32 System.Exception::_HResult
	int32_t ____HResult_11;
	// System.String System.Exception::_source
	String_t* ____source_12;
	// System.Runtime.Serialization.SafeSerializationManager System.Exception::_safeSerializationManager
	SafeSerializationManager_tCBB85B95DFD1634237140CD892E82D06ECB3F5E6* ____safeSerializationManager_13;
	// System.Diagnostics.StackTrace[] System.Exception::captured_traces
	StackTraceU5BU5D_t32FBCB20930EAF5BAE3F450FF75228E5450DA0DF* ___captured_traces_14;
	// System.IntPtr[] System.Exception::native_trace_ips
	IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___native_trace_ips_15;
	// System.Int32 System.Exception::caught_in_unmanaged
	int32_t ___caught_in_unmanaged_16;
};

struct Exception_t_StaticFields
{
	// System.Object System.Exception::s_EDILock
	RuntimeObject* ___s_EDILock_0;
};
// Native definition for P/Invoke marshalling of System.Exception
struct Exception_t_marshaled_pinvoke
{
	char* ____className_1;
	char* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_pinvoke* ____innerException_4;
	char* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	char* ____stackTraceString_7;
	char* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	char* ____source_12;
	SafeSerializationManager_tCBB85B95DFD1634237140CD892E82D06ECB3F5E6* ____safeSerializationManager_13;
	StackTraceU5BU5D_t32FBCB20930EAF5BAE3F450FF75228E5450DA0DF* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
	int32_t ___caught_in_unmanaged_16;
};
// Native definition for COM marshalling of System.Exception
struct Exception_t_marshaled_com
{
	Il2CppChar* ____className_1;
	Il2CppChar* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_com* ____innerException_4;
	Il2CppChar* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	Il2CppChar* ____stackTraceString_7;
	Il2CppChar* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	Il2CppChar* ____source_12;
	SafeSerializationManager_tCBB85B95DFD1634237140CD892E82D06ECB3F5E6* ____safeSerializationManager_13;
	StackTraceU5BU5D_t32FBCB20930EAF5BAE3F450FF75228E5450DA0DF* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
	int32_t ___caught_in_unmanaged_16;
};

// TMPro.Extents
struct Extents_tA2D2F95811D0A18CB7AC3570D2D8F8CD3AF4C4A8 
{
	// UnityEngine.Vector2 TMPro.Extents::min
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___min_2;
	// UnityEngine.Vector2 TMPro.Extents::max
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___max_3;
};

struct Extents_tA2D2F95811D0A18CB7AC3570D2D8F8CD3AF4C4A8_StaticFields
{
	// TMPro.Extents TMPro.Extents::zero
	Extents_tA2D2F95811D0A18CB7AC3570D2D8F8CD3AF4C4A8 ___zero_0;
	// TMPro.Extents TMPro.Extents::uninitialized
	Extents_tA2D2F95811D0A18CB7AC3570D2D8F8CD3AF4C4A8 ___uninitialized_1;
};

// TMPro.HighlightState
struct HighlightState_tE4F50287E5E2E91D42AB77DEA281D88D3AD6A28B 
{
	// UnityEngine.Color32 TMPro.HighlightState::color
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___color_0;
	// TMPro.TMP_Offset TMPro.HighlightState::padding
	TMP_Offset_t2262BE4E87D9662487777FF8FFE1B17B0E4438C6 ___padding_1;
};

// OpenCvSharp.KeyPoint
struct KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA 
{
	// OpenCvSharp.Point2f OpenCvSharp.KeyPoint::Pt
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___Pt_0;
	// System.Single OpenCvSharp.KeyPoint::Size
	float ___Size_1;
	// System.Single OpenCvSharp.KeyPoint::Angle
	float ___Angle_2;
	// System.Single OpenCvSharp.KeyPoint::Response
	float ___Response_3;
	// System.Int32 OpenCvSharp.KeyPoint::Octave
	int32_t ___Octave_4;
	// System.Int32 OpenCvSharp.KeyPoint::ClassId
	int32_t ___ClassId_5;
};

// UnityEngine.Object
struct Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C  : public RuntimeObject
{
	// System.IntPtr UnityEngine.Object::m_CachedPtr
	intptr_t ___m_CachedPtr_0;
};

struct Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_StaticFields
{
	// System.Int32 UnityEngine.Object::OffsetOfInstanceIDInCPlusPlusObject
	int32_t ___OffsetOfInstanceIDInCPlusPlusObject_1;
};
// Native definition for P/Invoke marshalling of UnityEngine.Object
struct Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_marshaled_pinvoke
{
	intptr_t ___m_CachedPtr_0;
};
// Native definition for COM marshalling of UnityEngine.Object
struct Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_marshaled_com
{
	intptr_t ___m_CachedPtr_0;
};

// Unity.Profiling.ProfilerMarker
struct ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD 
{
	// System.IntPtr Unity.Profiling.ProfilerMarker::m_Ptr
	intptr_t ___m_Ptr_0;
};

// UnityEngine.EventSystems.RaycastResult
struct RaycastResult_tEC6A7B7CABA99C386F054F01E498AEC426CF8023 
{
	// UnityEngine.GameObject UnityEngine.EventSystems.RaycastResult::m_GameObject
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___m_GameObject_0;
	// UnityEngine.EventSystems.BaseRaycaster UnityEngine.EventSystems.RaycastResult::module
	BaseRaycaster_t7DC8158FD3CA0193455344379DD5FF7CD5F1F832* ___module_1;
	// System.Single UnityEngine.EventSystems.RaycastResult::distance
	float ___distance_2;
	// System.Single UnityEngine.EventSystems.RaycastResult::index
	float ___index_3;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::depth
	int32_t ___depth_4;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::sortingLayer
	int32_t ___sortingLayer_5;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::sortingOrder
	int32_t ___sortingOrder_6;
	// UnityEngine.Vector3 UnityEngine.EventSystems.RaycastResult::worldPosition
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___worldPosition_7;
	// UnityEngine.Vector3 UnityEngine.EventSystems.RaycastResult::worldNormal
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___worldNormal_8;
	// UnityEngine.Vector2 UnityEngine.EventSystems.RaycastResult::screenPosition
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___screenPosition_9;
	// System.Int32 UnityEngine.EventSystems.RaycastResult::displayIndex
	int32_t ___displayIndex_10;
};
// Native definition for P/Invoke marshalling of UnityEngine.EventSystems.RaycastResult
struct RaycastResult_tEC6A7B7CABA99C386F054F01E498AEC426CF8023_marshaled_pinvoke
{
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___m_GameObject_0;
	BaseRaycaster_t7DC8158FD3CA0193455344379DD5FF7CD5F1F832* ___module_1;
	float ___distance_2;
	float ___index_3;
	int32_t ___depth_4;
	int32_t ___sortingLayer_5;
	int32_t ___sortingOrder_6;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___worldPosition_7;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___worldNormal_8;
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___screenPosition_9;
	int32_t ___displayIndex_10;
};
// Native definition for COM marshalling of UnityEngine.EventSystems.RaycastResult
struct RaycastResult_tEC6A7B7CABA99C386F054F01E498AEC426CF8023_marshaled_com
{
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___m_GameObject_0;
	BaseRaycaster_t7DC8158FD3CA0193455344379DD5FF7CD5F1F832* ___module_1;
	float ___distance_2;
	float ___index_3;
	int32_t ___depth_4;
	int32_t ___sortingLayer_5;
	int32_t ___sortingOrder_6;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___worldPosition_7;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___worldNormal_8;
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___screenPosition_9;
	int32_t ___displayIndex_10;
};

// OpenCvSharp.RotatedRect
struct RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 
{
	// OpenCvSharp.Point2f OpenCvSharp.RotatedRect::Center
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___Center_0;
	// OpenCvSharp.Size2f OpenCvSharp.RotatedRect::Size
	Size2f_tDE98F6BC79C37B2862E0197FB9FB5B739FA3EFF7 ___Size_1;
	// System.Single OpenCvSharp.RotatedRect::Angle
	float ___Angle_2;
};

// System.RuntimeTypeHandle
struct RuntimeTypeHandle_t332A452B8B6179E4469B69525D0FE82A88030F7B 
{
	// System.IntPtr System.RuntimeTypeHandle::value
	intptr_t ___value_0;
};

// TMPro.TMP_TextInfo
struct TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D  : public RuntimeObject
{
	// TMPro.TMP_Text TMPro.TMP_TextInfo::textComponent
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___textComponent_2;
	// System.Int32 TMPro.TMP_TextInfo::characterCount
	int32_t ___characterCount_3;
	// System.Int32 TMPro.TMP_TextInfo::spriteCount
	int32_t ___spriteCount_4;
	// System.Int32 TMPro.TMP_TextInfo::spaceCount
	int32_t ___spaceCount_5;
	// System.Int32 TMPro.TMP_TextInfo::wordCount
	int32_t ___wordCount_6;
	// System.Int32 TMPro.TMP_TextInfo::linkCount
	int32_t ___linkCount_7;
	// System.Int32 TMPro.TMP_TextInfo::lineCount
	int32_t ___lineCount_8;
	// System.Int32 TMPro.TMP_TextInfo::pageCount
	int32_t ___pageCount_9;
	// System.Int32 TMPro.TMP_TextInfo::materialCount
	int32_t ___materialCount_10;
	// TMPro.TMP_CharacterInfo[] TMPro.TMP_TextInfo::characterInfo
	TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* ___characterInfo_11;
	// TMPro.TMP_WordInfo[] TMPro.TMP_TextInfo::wordInfo
	TMP_WordInfoU5BU5D_tD1759E5A84DCCCD42B718D79E953E72A432BB4DC* ___wordInfo_12;
	// TMPro.TMP_LinkInfo[] TMPro.TMP_TextInfo::linkInfo
	TMP_LinkInfoU5BU5D_tE11BE54A5923BD2148E716289F44EA465E06536E* ___linkInfo_13;
	// TMPro.TMP_LineInfo[] TMPro.TMP_TextInfo::lineInfo
	TMP_LineInfoU5BU5D_tE485ECF6A7A96441C72B53D75E7A5A5461A2CA0E* ___lineInfo_14;
	// TMPro.TMP_PageInfo[] TMPro.TMP_TextInfo::pageInfo
	TMP_PageInfoU5BU5D_tE3DAAA8E2E9147F97C424A9034F677A516E8DAF9* ___pageInfo_15;
	// TMPro.TMP_MeshInfo[] TMPro.TMP_TextInfo::meshInfo
	TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* ___meshInfo_16;
	// TMPro.TMP_MeshInfo[] TMPro.TMP_TextInfo::m_CachedMeshInfo
	TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* ___m_CachedMeshInfo_17;
};

struct TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D_StaticFields
{
	// UnityEngine.Vector2 TMPro.TMP_TextInfo::k_InfinityVectorPositive
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___k_InfinityVectorPositive_0;
	// UnityEngine.Vector2 TMPro.TMP_TextInfo::k_InfinityVectorNegative
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___k_InfinityVectorNegative_1;
};

// TMPro.TMP_Vertex
struct TMP_Vertex_t0FD80AE2515219689310A8F619A265667B530E1A 
{
	// UnityEngine.Vector3 TMPro.TMP_Vertex::position
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___position_0;
	// UnityEngine.Vector2 TMPro.TMP_Vertex::uv
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___uv_1;
	// UnityEngine.Vector2 TMPro.TMP_Vertex::uv2
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___uv2_2;
	// UnityEngine.Vector2 TMPro.TMP_Vertex::uv4
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___uv4_3;
	// UnityEngine.Color32 TMPro.TMP_Vertex::color
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___color_4;
};

struct TMP_Vertex_t0FD80AE2515219689310A8F619A265667B530E1A_StaticFields
{
	// TMPro.TMP_Vertex TMPro.TMP_Vertex::k_Zero
	TMP_Vertex_t0FD80AE2515219689310A8F619A265667B530E1A ___k_Zero_5;
};

// TMPro.VertexGradient
struct VertexGradient_t2C057B53C0EA6E987C2B7BAB0305E686DA1C9A8F 
{
	// UnityEngine.Color TMPro.VertexGradient::topLeft
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___topLeft_0;
	// UnityEngine.Color TMPro.VertexGradient::topRight
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___topRight_1;
	// UnityEngine.Color TMPro.VertexGradient::bottomLeft
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___bottomLeft_2;
	// UnityEngine.Color TMPro.VertexGradient::bottomRight
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___bottomRight_3;
};

// TMPro.TMP_TextEventHandler/CharacterSelectionEvent
struct CharacterSelectionEvent_t5D7AF67F47A37175CF8615AD66DEC4A0AA021392  : public UnityEvent_2_tE1EF7CBD9965CD9466B63C1AD8FB3661A30C25B3
{
};

// TMPro.TMP_TextEventHandler/LineSelectionEvent
struct LineSelectionEvent_t526120C6113E0638913B951E3D1D7B1CF94F0880  : public UnityEvent_3_t5EE2DC870C12CB60384C5FCBB0DAD36392E701AD
{
};

// TMPro.TMP_TextEventHandler/LinkSelectionEvent
struct LinkSelectionEvent_t5CE74F742D231580ED2C810ECE394E1A2BC81B3D  : public UnityEvent_3_t978FAA968D1FEECACADDD0969B822861FA0C6622
{
};

// TMPro.TMP_TextEventHandler/SpriteSelectionEvent
struct SpriteSelectionEvent_t770551D2973013622C464E817FA74D53BCD4FD95  : public UnityEvent_2_tE1EF7CBD9965CD9466B63C1AD8FB3661A30C25B3
{
};

// TMPro.TMP_TextEventHandler/WordSelectionEvent
struct WordSelectionEvent_t340E6006406B5E90F7190C56218E8F7E3712945E  : public UnityEvent_3_t5EE2DC870C12CB60384C5FCBB0DAD36392E701AD
{
};

// TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshFloatingText>d__13
struct U3CDisplayTextMeshFloatingTextU3Ed__13_tFC924C56A4F46E6D8D46B95035B8A6D215A180A1  : public RuntimeObject
{
	// System.Int32 TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshFloatingText>d__13::<>1__state
	int32_t ___U3CU3E1__state_0;
	// System.Object TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshFloatingText>d__13::<>2__current
	RuntimeObject* ___U3CU3E2__current_1;
	// TMPro.Examples.TextMeshProFloatingText TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshFloatingText>d__13::<>4__this
	TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* ___U3CU3E4__this_2;
	// System.Single TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshFloatingText>d__13::<CountDuration>5__2
	float ___U3CCountDurationU3E5__2_3;
	// System.Single TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshFloatingText>d__13::<starting_Count>5__3
	float ___U3Cstarting_CountU3E5__3_4;
	// System.Single TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshFloatingText>d__13::<current_Count>5__4
	float ___U3Ccurrent_CountU3E5__4_5;
	// UnityEngine.Vector3 TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshFloatingText>d__13::<start_pos>5__5
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___U3Cstart_posU3E5__5_6;
	// UnityEngine.Color32 TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshFloatingText>d__13::<start_color>5__6
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___U3Cstart_colorU3E5__6_7;
	// System.Single TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshFloatingText>d__13::<alpha>5__7
	float ___U3CalphaU3E5__7_8;
	// System.Single TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshFloatingText>d__13::<fadeDuration>5__8
	float ___U3CfadeDurationU3E5__8_9;
};

// TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshProFloatingText>d__12
struct U3CDisplayTextMeshProFloatingTextU3Ed__12_tF5C7EAAA1230794883FCB2D5C767C12F48C50C76  : public RuntimeObject
{
	// System.Int32 TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshProFloatingText>d__12::<>1__state
	int32_t ___U3CU3E1__state_0;
	// System.Object TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshProFloatingText>d__12::<>2__current
	RuntimeObject* ___U3CU3E2__current_1;
	// TMPro.Examples.TextMeshProFloatingText TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshProFloatingText>d__12::<>4__this
	TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* ___U3CU3E4__this_2;
	// System.Single TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshProFloatingText>d__12::<CountDuration>5__2
	float ___U3CCountDurationU3E5__2_3;
	// System.Single TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshProFloatingText>d__12::<starting_Count>5__3
	float ___U3Cstarting_CountU3E5__3_4;
	// System.Single TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshProFloatingText>d__12::<current_Count>5__4
	float ___U3Ccurrent_CountU3E5__4_5;
	// UnityEngine.Vector3 TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshProFloatingText>d__12::<start_pos>5__5
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___U3Cstart_posU3E5__5_6;
	// UnityEngine.Color32 TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshProFloatingText>d__12::<start_color>5__6
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___U3Cstart_colorU3E5__6_7;
	// System.Single TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshProFloatingText>d__12::<alpha>5__7
	float ___U3CalphaU3E5__7_8;
	// System.Single TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshProFloatingText>d__12::<fadeDuration>5__8
	float ___U3CfadeDurationU3E5__8_9;
};

// TMPro.TMP_TextProcessingStack`1<TMPro.HighlightState>
struct TMP_TextProcessingStack_1_t57AECDCC936A7FF1D6CF66CA11560B28A675648D 
{
	// T[] TMPro.TMP_TextProcessingStack`1::itemStack
	HighlightStateU5BU5D_tA878A0AF1F4F52882ACD29515AADC277EE135622* ___itemStack_0;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::index
	int32_t ___index_1;
	// T TMPro.TMP_TextProcessingStack`1::m_DefaultItem
	HighlightState_tE4F50287E5E2E91D42AB77DEA281D88D3AD6A28B ___m_DefaultItem_2;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_Capacity
	int32_t ___m_Capacity_3;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_RolloverSize
	int32_t ___m_RolloverSize_4;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_Count
	int32_t ___m_Count_5;
};

// System.ApplicationException
struct ApplicationException_tA744BED4E90266BD255285CD4CF909BAB3EE811A  : public Exception_t
{
};

// UnityEngine.Component
struct Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3  : public Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C
{
};

// UnityEngine.Font
struct Font_tC95270EA3198038970422D78B74A7F2E218A96B6  : public Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C
{
	// UnityEngine.Font/FontTextureRebuildCallback UnityEngine.Font::m_FontTextureRebuildCallback
	FontTextureRebuildCallback_t76D5E172DF8AA57E67763D453AAC40F0961D09B1* ___m_FontTextureRebuildCallback_5;
};

struct Font_tC95270EA3198038970422D78B74A7F2E218A96B6_StaticFields
{
	// System.Action`1<UnityEngine.Font> UnityEngine.Font::textureRebuilt
	Action_1_tD91E4D0ED3C2E385D3BDD4B3EA48B5F99D39F1DC* ___textureRebuilt_4;
};

// UnityEngine.GameObject
struct GameObject_t76FEDD663AB33C991A9C9A23129337651094216F  : public Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C
{
};

// UnityEngine.Material
struct Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3  : public Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C
{
};

// UnityEngine.Mesh
struct Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4  : public Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C
{
};

// System.MulticastDelegate
struct MulticastDelegate_t  : public Delegate_t
{
	// System.Delegate[] System.MulticastDelegate::delegates
	DelegateU5BU5D_tC5AB7E8F745616680F337909D3A8E6C722CDF771* ___delegates_13;
};
// Native definition for P/Invoke marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_pinvoke : public Delegate_t_marshaled_pinvoke
{
	Delegate_t_marshaled_pinvoke** ___delegates_13;
};
// Native definition for COM marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_com : public Delegate_t_marshaled_com
{
	Delegate_t_marshaled_com** ___delegates_13;
};

// UnityEngine.EventSystems.PointerEventData
struct PointerEventData_t9670F3C7D823CCB738A1604C72A1EB90292396FB  : public BaseEventData_tE03A848325C0AE8E76C6CA15FD86395EBF83364F
{
	// UnityEngine.GameObject UnityEngine.EventSystems.PointerEventData::<pointerEnter>k__BackingField
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___U3CpointerEnterU3Ek__BackingField_2;
	// UnityEngine.GameObject UnityEngine.EventSystems.PointerEventData::m_PointerPress
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___m_PointerPress_3;
	// UnityEngine.GameObject UnityEngine.EventSystems.PointerEventData::<lastPress>k__BackingField
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___U3ClastPressU3Ek__BackingField_4;
	// UnityEngine.GameObject UnityEngine.EventSystems.PointerEventData::<rawPointerPress>k__BackingField
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___U3CrawPointerPressU3Ek__BackingField_5;
	// UnityEngine.GameObject UnityEngine.EventSystems.PointerEventData::<pointerDrag>k__BackingField
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___U3CpointerDragU3Ek__BackingField_6;
	// UnityEngine.GameObject UnityEngine.EventSystems.PointerEventData::<pointerClick>k__BackingField
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___U3CpointerClickU3Ek__BackingField_7;
	// UnityEngine.EventSystems.RaycastResult UnityEngine.EventSystems.PointerEventData::<pointerCurrentRaycast>k__BackingField
	RaycastResult_tEC6A7B7CABA99C386F054F01E498AEC426CF8023 ___U3CpointerCurrentRaycastU3Ek__BackingField_8;
	// UnityEngine.EventSystems.RaycastResult UnityEngine.EventSystems.PointerEventData::<pointerPressRaycast>k__BackingField
	RaycastResult_tEC6A7B7CABA99C386F054F01E498AEC426CF8023 ___U3CpointerPressRaycastU3Ek__BackingField_9;
	// System.Collections.Generic.List`1<UnityEngine.GameObject> UnityEngine.EventSystems.PointerEventData::hovered
	List_1_tB951CE80B58D1BF9650862451D8DAD8C231F207B* ___hovered_10;
	// System.Boolean UnityEngine.EventSystems.PointerEventData::<eligibleForClick>k__BackingField
	bool ___U3CeligibleForClickU3Ek__BackingField_11;
	// System.Int32 UnityEngine.EventSystems.PointerEventData::<pointerId>k__BackingField
	int32_t ___U3CpointerIdU3Ek__BackingField_12;
	// UnityEngine.Vector2 UnityEngine.EventSystems.PointerEventData::<position>k__BackingField
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___U3CpositionU3Ek__BackingField_13;
	// UnityEngine.Vector2 UnityEngine.EventSystems.PointerEventData::<delta>k__BackingField
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___U3CdeltaU3Ek__BackingField_14;
	// UnityEngine.Vector2 UnityEngine.EventSystems.PointerEventData::<pressPosition>k__BackingField
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___U3CpressPositionU3Ek__BackingField_15;
	// UnityEngine.Vector3 UnityEngine.EventSystems.PointerEventData::<worldPosition>k__BackingField
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___U3CworldPositionU3Ek__BackingField_16;
	// UnityEngine.Vector3 UnityEngine.EventSystems.PointerEventData::<worldNormal>k__BackingField
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___U3CworldNormalU3Ek__BackingField_17;
	// System.Single UnityEngine.EventSystems.PointerEventData::<clickTime>k__BackingField
	float ___U3CclickTimeU3Ek__BackingField_18;
	// System.Int32 UnityEngine.EventSystems.PointerEventData::<clickCount>k__BackingField
	int32_t ___U3CclickCountU3Ek__BackingField_19;
	// UnityEngine.Vector2 UnityEngine.EventSystems.PointerEventData::<scrollDelta>k__BackingField
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___U3CscrollDeltaU3Ek__BackingField_20;
	// System.Boolean UnityEngine.EventSystems.PointerEventData::<useDragThreshold>k__BackingField
	bool ___U3CuseDragThresholdU3Ek__BackingField_21;
	// System.Boolean UnityEngine.EventSystems.PointerEventData::<dragging>k__BackingField
	bool ___U3CdraggingU3Ek__BackingField_22;
	// UnityEngine.EventSystems.PointerEventData/InputButton UnityEngine.EventSystems.PointerEventData::<button>k__BackingField
	int32_t ___U3CbuttonU3Ek__BackingField_23;
	// System.Single UnityEngine.EventSystems.PointerEventData::<pressure>k__BackingField
	float ___U3CpressureU3Ek__BackingField_24;
	// System.Single UnityEngine.EventSystems.PointerEventData::<tangentialPressure>k__BackingField
	float ___U3CtangentialPressureU3Ek__BackingField_25;
	// System.Single UnityEngine.EventSystems.PointerEventData::<altitudeAngle>k__BackingField
	float ___U3CaltitudeAngleU3Ek__BackingField_26;
	// System.Single UnityEngine.EventSystems.PointerEventData::<azimuthAngle>k__BackingField
	float ___U3CazimuthAngleU3Ek__BackingField_27;
	// System.Single UnityEngine.EventSystems.PointerEventData::<twist>k__BackingField
	float ___U3CtwistU3Ek__BackingField_28;
	// UnityEngine.Vector2 UnityEngine.EventSystems.PointerEventData::<radius>k__BackingField
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___U3CradiusU3Ek__BackingField_29;
	// UnityEngine.Vector2 UnityEngine.EventSystems.PointerEventData::<radiusVariance>k__BackingField
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___U3CradiusVarianceU3Ek__BackingField_30;
};

// UnityEngine.ScriptableObject
struct ScriptableObject_tB3BFDB921A1B1795B38A5417D3B97A89A140436A  : public Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C
{
};
// Native definition for P/Invoke marshalling of UnityEngine.ScriptableObject
struct ScriptableObject_tB3BFDB921A1B1795B38A5417D3B97A89A140436A_marshaled_pinvoke : public Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_marshaled_pinvoke
{
};
// Native definition for COM marshalling of UnityEngine.ScriptableObject
struct ScriptableObject_tB3BFDB921A1B1795B38A5417D3B97A89A140436A_marshaled_com : public Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_marshaled_com
{
};

// System.SystemException
struct SystemException_tCC48D868298F4C0705279823E34B00F4FBDB7295  : public Exception_t
{
};

// TMPro.TMP_CharacterInfo
struct TMP_CharacterInfo_t8B8FF32D6AACE251F2E7835AA5BC6608D535D9F8 
{
	// System.Char TMPro.TMP_CharacterInfo::character
	Il2CppChar ___character_0;
	// System.Int32 TMPro.TMP_CharacterInfo::index
	int32_t ___index_1;
	// System.Int32 TMPro.TMP_CharacterInfo::stringLength
	int32_t ___stringLength_2;
	// TMPro.TMP_TextElementType TMPro.TMP_CharacterInfo::elementType
	int32_t ___elementType_3;
	// TMPro.TMP_TextElement TMPro.TMP_CharacterInfo::textElement
	TMP_TextElement_t262A55214F712D4274485ABE5676E5254B84D0A5* ___textElement_4;
	// TMPro.TMP_FontAsset TMPro.TMP_CharacterInfo::fontAsset
	TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160* ___fontAsset_5;
	// TMPro.TMP_SpriteAsset TMPro.TMP_CharacterInfo::spriteAsset
	TMP_SpriteAsset_t81F779E6F705CE190DC0D1F93A954CB8B1774B39* ___spriteAsset_6;
	// System.Int32 TMPro.TMP_CharacterInfo::spriteIndex
	int32_t ___spriteIndex_7;
	// UnityEngine.Material TMPro.TMP_CharacterInfo::material
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___material_8;
	// System.Int32 TMPro.TMP_CharacterInfo::materialReferenceIndex
	int32_t ___materialReferenceIndex_9;
	// System.Boolean TMPro.TMP_CharacterInfo::isUsingAlternateTypeface
	bool ___isUsingAlternateTypeface_10;
	// System.Single TMPro.TMP_CharacterInfo::pointSize
	float ___pointSize_11;
	// System.Int32 TMPro.TMP_CharacterInfo::lineNumber
	int32_t ___lineNumber_12;
	// System.Int32 TMPro.TMP_CharacterInfo::pageNumber
	int32_t ___pageNumber_13;
	// System.Int32 TMPro.TMP_CharacterInfo::vertexIndex
	int32_t ___vertexIndex_14;
	// TMPro.TMP_Vertex TMPro.TMP_CharacterInfo::vertex_BL
	TMP_Vertex_t0FD80AE2515219689310A8F619A265667B530E1A ___vertex_BL_15;
	// TMPro.TMP_Vertex TMPro.TMP_CharacterInfo::vertex_TL
	TMP_Vertex_t0FD80AE2515219689310A8F619A265667B530E1A ___vertex_TL_16;
	// TMPro.TMP_Vertex TMPro.TMP_CharacterInfo::vertex_TR
	TMP_Vertex_t0FD80AE2515219689310A8F619A265667B530E1A ___vertex_TR_17;
	// TMPro.TMP_Vertex TMPro.TMP_CharacterInfo::vertex_BR
	TMP_Vertex_t0FD80AE2515219689310A8F619A265667B530E1A ___vertex_BR_18;
	// UnityEngine.Vector3 TMPro.TMP_CharacterInfo::topLeft
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___topLeft_19;
	// UnityEngine.Vector3 TMPro.TMP_CharacterInfo::bottomLeft
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___bottomLeft_20;
	// UnityEngine.Vector3 TMPro.TMP_CharacterInfo::topRight
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___topRight_21;
	// UnityEngine.Vector3 TMPro.TMP_CharacterInfo::bottomRight
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___bottomRight_22;
	// System.Single TMPro.TMP_CharacterInfo::origin
	float ___origin_23;
	// System.Single TMPro.TMP_CharacterInfo::xAdvance
	float ___xAdvance_24;
	// System.Single TMPro.TMP_CharacterInfo::ascender
	float ___ascender_25;
	// System.Single TMPro.TMP_CharacterInfo::baseLine
	float ___baseLine_26;
	// System.Single TMPro.TMP_CharacterInfo::descender
	float ___descender_27;
	// System.Single TMPro.TMP_CharacterInfo::adjustedAscender
	float ___adjustedAscender_28;
	// System.Single TMPro.TMP_CharacterInfo::adjustedDescender
	float ___adjustedDescender_29;
	// System.Single TMPro.TMP_CharacterInfo::aspectRatio
	float ___aspectRatio_30;
	// System.Single TMPro.TMP_CharacterInfo::scale
	float ___scale_31;
	// UnityEngine.Color32 TMPro.TMP_CharacterInfo::color
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___color_32;
	// UnityEngine.Color32 TMPro.TMP_CharacterInfo::underlineColor
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___underlineColor_33;
	// System.Int32 TMPro.TMP_CharacterInfo::underlineVertexIndex
	int32_t ___underlineVertexIndex_34;
	// UnityEngine.Color32 TMPro.TMP_CharacterInfo::strikethroughColor
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___strikethroughColor_35;
	// System.Int32 TMPro.TMP_CharacterInfo::strikethroughVertexIndex
	int32_t ___strikethroughVertexIndex_36;
	// UnityEngine.Color32 TMPro.TMP_CharacterInfo::highlightColor
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___highlightColor_37;
	// TMPro.HighlightState TMPro.TMP_CharacterInfo::highlightState
	HighlightState_tE4F50287E5E2E91D42AB77DEA281D88D3AD6A28B ___highlightState_38;
	// TMPro.FontStyles TMPro.TMP_CharacterInfo::style
	int32_t ___style_39;
	// System.Boolean TMPro.TMP_CharacterInfo::isVisible
	bool ___isVisible_40;
};
// Native definition for P/Invoke marshalling of TMPro.TMP_CharacterInfo
struct TMP_CharacterInfo_t8B8FF32D6AACE251F2E7835AA5BC6608D535D9F8_marshaled_pinvoke
{
	uint8_t ___character_0;
	int32_t ___index_1;
	int32_t ___stringLength_2;
	int32_t ___elementType_3;
	TMP_TextElement_t262A55214F712D4274485ABE5676E5254B84D0A5* ___textElement_4;
	TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160* ___fontAsset_5;
	TMP_SpriteAsset_t81F779E6F705CE190DC0D1F93A954CB8B1774B39* ___spriteAsset_6;
	int32_t ___spriteIndex_7;
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___material_8;
	int32_t ___materialReferenceIndex_9;
	int32_t ___isUsingAlternateTypeface_10;
	float ___pointSize_11;
	int32_t ___lineNumber_12;
	int32_t ___pageNumber_13;
	int32_t ___vertexIndex_14;
	TMP_Vertex_t0FD80AE2515219689310A8F619A265667B530E1A ___vertex_BL_15;
	TMP_Vertex_t0FD80AE2515219689310A8F619A265667B530E1A ___vertex_TL_16;
	TMP_Vertex_t0FD80AE2515219689310A8F619A265667B530E1A ___vertex_TR_17;
	TMP_Vertex_t0FD80AE2515219689310A8F619A265667B530E1A ___vertex_BR_18;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___topLeft_19;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___bottomLeft_20;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___topRight_21;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___bottomRight_22;
	float ___origin_23;
	float ___xAdvance_24;
	float ___ascender_25;
	float ___baseLine_26;
	float ___descender_27;
	float ___adjustedAscender_28;
	float ___adjustedDescender_29;
	float ___aspectRatio_30;
	float ___scale_31;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___color_32;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___underlineColor_33;
	int32_t ___underlineVertexIndex_34;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___strikethroughColor_35;
	int32_t ___strikethroughVertexIndex_36;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___highlightColor_37;
	HighlightState_tE4F50287E5E2E91D42AB77DEA281D88D3AD6A28B ___highlightState_38;
	int32_t ___style_39;
	int32_t ___isVisible_40;
};
// Native definition for COM marshalling of TMPro.TMP_CharacterInfo
struct TMP_CharacterInfo_t8B8FF32D6AACE251F2E7835AA5BC6608D535D9F8_marshaled_com
{
	uint8_t ___character_0;
	int32_t ___index_1;
	int32_t ___stringLength_2;
	int32_t ___elementType_3;
	TMP_TextElement_t262A55214F712D4274485ABE5676E5254B84D0A5* ___textElement_4;
	TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160* ___fontAsset_5;
	TMP_SpriteAsset_t81F779E6F705CE190DC0D1F93A954CB8B1774B39* ___spriteAsset_6;
	int32_t ___spriteIndex_7;
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___material_8;
	int32_t ___materialReferenceIndex_9;
	int32_t ___isUsingAlternateTypeface_10;
	float ___pointSize_11;
	int32_t ___lineNumber_12;
	int32_t ___pageNumber_13;
	int32_t ___vertexIndex_14;
	TMP_Vertex_t0FD80AE2515219689310A8F619A265667B530E1A ___vertex_BL_15;
	TMP_Vertex_t0FD80AE2515219689310A8F619A265667B530E1A ___vertex_TL_16;
	TMP_Vertex_t0FD80AE2515219689310A8F619A265667B530E1A ___vertex_TR_17;
	TMP_Vertex_t0FD80AE2515219689310A8F619A265667B530E1A ___vertex_BR_18;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___topLeft_19;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___bottomLeft_20;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___topRight_21;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___bottomRight_22;
	float ___origin_23;
	float ___xAdvance_24;
	float ___ascender_25;
	float ___baseLine_26;
	float ___descender_27;
	float ___adjustedAscender_28;
	float ___adjustedDescender_29;
	float ___aspectRatio_30;
	float ___scale_31;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___color_32;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___underlineColor_33;
	int32_t ___underlineVertexIndex_34;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___strikethroughColor_35;
	int32_t ___strikethroughVertexIndex_36;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___highlightColor_37;
	HighlightState_tE4F50287E5E2E91D42AB77DEA281D88D3AD6A28B ___highlightState_38;
	int32_t ___style_39;
	int32_t ___isVisible_40;
};

// TMPro.TMP_LineInfo
struct TMP_LineInfo_tB75C1965B58DB7B3A046C8CA55AD6AB92B6B17B3 
{
	// System.Int32 TMPro.TMP_LineInfo::controlCharacterCount
	int32_t ___controlCharacterCount_0;
	// System.Int32 TMPro.TMP_LineInfo::characterCount
	int32_t ___characterCount_1;
	// System.Int32 TMPro.TMP_LineInfo::visibleCharacterCount
	int32_t ___visibleCharacterCount_2;
	// System.Int32 TMPro.TMP_LineInfo::spaceCount
	int32_t ___spaceCount_3;
	// System.Int32 TMPro.TMP_LineInfo::wordCount
	int32_t ___wordCount_4;
	// System.Int32 TMPro.TMP_LineInfo::firstCharacterIndex
	int32_t ___firstCharacterIndex_5;
	// System.Int32 TMPro.TMP_LineInfo::firstVisibleCharacterIndex
	int32_t ___firstVisibleCharacterIndex_6;
	// System.Int32 TMPro.TMP_LineInfo::lastCharacterIndex
	int32_t ___lastCharacterIndex_7;
	// System.Int32 TMPro.TMP_LineInfo::lastVisibleCharacterIndex
	int32_t ___lastVisibleCharacterIndex_8;
	// System.Single TMPro.TMP_LineInfo::length
	float ___length_9;
	// System.Single TMPro.TMP_LineInfo::lineHeight
	float ___lineHeight_10;
	// System.Single TMPro.TMP_LineInfo::ascender
	float ___ascender_11;
	// System.Single TMPro.TMP_LineInfo::baseline
	float ___baseline_12;
	// System.Single TMPro.TMP_LineInfo::descender
	float ___descender_13;
	// System.Single TMPro.TMP_LineInfo::maxAdvance
	float ___maxAdvance_14;
	// System.Single TMPro.TMP_LineInfo::width
	float ___width_15;
	// System.Single TMPro.TMP_LineInfo::marginLeft
	float ___marginLeft_16;
	// System.Single TMPro.TMP_LineInfo::marginRight
	float ___marginRight_17;
	// TMPro.HorizontalAlignmentOptions TMPro.TMP_LineInfo::alignment
	int32_t ___alignment_18;
	// TMPro.Extents TMPro.TMP_LineInfo::lineExtents
	Extents_tA2D2F95811D0A18CB7AC3570D2D8F8CD3AF4C4A8 ___lineExtents_19;
};

// TMPro.TMP_MeshInfo
struct TMP_MeshInfo_t320C52212E9D672EBB5F5C18C3E0700AA33DD76B 
{
	// UnityEngine.Mesh TMPro.TMP_MeshInfo::mesh
	Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* ___mesh_4;
	// System.Int32 TMPro.TMP_MeshInfo::vertexCount
	int32_t ___vertexCount_5;
	// UnityEngine.Vector3[] TMPro.TMP_MeshInfo::vertices
	Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* ___vertices_6;
	// UnityEngine.Vector3[] TMPro.TMP_MeshInfo::normals
	Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* ___normals_7;
	// UnityEngine.Vector4[] TMPro.TMP_MeshInfo::tangents
	Vector4U5BU5D_tC0F3A7115F85007510F6D173968200CD31BCF7AD* ___tangents_8;
	// UnityEngine.Vector2[] TMPro.TMP_MeshInfo::uvs0
	Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* ___uvs0_9;
	// UnityEngine.Vector2[] TMPro.TMP_MeshInfo::uvs2
	Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* ___uvs2_10;
	// UnityEngine.Color32[] TMPro.TMP_MeshInfo::colors32
	Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* ___colors32_11;
	// System.Int32[] TMPro.TMP_MeshInfo::triangles
	Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___triangles_12;
	// UnityEngine.Material TMPro.TMP_MeshInfo::material
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___material_13;
};

struct TMP_MeshInfo_t320C52212E9D672EBB5F5C18C3E0700AA33DD76B_StaticFields
{
	// UnityEngine.Color32 TMPro.TMP_MeshInfo::s_DefaultColor
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___s_DefaultColor_0;
	// UnityEngine.Vector3 TMPro.TMP_MeshInfo::s_DefaultNormal
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___s_DefaultNormal_1;
	// UnityEngine.Vector4 TMPro.TMP_MeshInfo::s_DefaultTangent
	Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 ___s_DefaultTangent_2;
	// UnityEngine.Bounds TMPro.TMP_MeshInfo::s_DefaultBounds
	Bounds_t367E830C64BBF235ED8C3B2F8CF6254FDCAD39C3 ___s_DefaultBounds_3;
};
// Native definition for P/Invoke marshalling of TMPro.TMP_MeshInfo
struct TMP_MeshInfo_t320C52212E9D672EBB5F5C18C3E0700AA33DD76B_marshaled_pinvoke
{
	Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* ___mesh_4;
	int32_t ___vertexCount_5;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* ___vertices_6;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* ___normals_7;
	Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3* ___tangents_8;
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7* ___uvs0_9;
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7* ___uvs2_10;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B* ___colors32_11;
	Il2CppSafeArray/*NONE*/* ___triangles_12;
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___material_13;
};
// Native definition for COM marshalling of TMPro.TMP_MeshInfo
struct TMP_MeshInfo_t320C52212E9D672EBB5F5C18C3E0700AA33DD76B_marshaled_com
{
	Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* ___mesh_4;
	int32_t ___vertexCount_5;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* ___vertices_6;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* ___normals_7;
	Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3* ___tangents_8;
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7* ___uvs0_9;
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7* ___uvs2_10;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B* ___colors32_11;
	Il2CppSafeArray/*NONE*/* ___triangles_12;
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___material_13;
};

// System.Type
struct Type_t  : public MemberInfo_t
{
	// System.RuntimeTypeHandle System.Type::_impl
	RuntimeTypeHandle_t332A452B8B6179E4469B69525D0FE82A88030F7B ____impl_8;
};

struct Type_t_StaticFields
{
	// System.Reflection.Binder modreq(System.Runtime.CompilerServices.IsVolatile) System.Type::s_defaultBinder
	Binder_t91BFCE95A7057FADF4D8A1A342AFE52872246235* ___s_defaultBinder_0;
	// System.Char System.Type::Delimiter
	Il2CppChar ___Delimiter_1;
	// System.Type[] System.Type::EmptyTypes
	TypeU5BU5D_t97234E1129B564EB38B8D85CAC2AD8B5B9522FFB* ___EmptyTypes_2;
	// System.Object System.Type::Missing
	RuntimeObject* ___Missing_3;
	// System.Reflection.MemberFilter System.Type::FilterAttribute
	MemberFilter_tF644F1AE82F611B677CE1964D5A3277DDA21D553* ___FilterAttribute_4;
	// System.Reflection.MemberFilter System.Type::FilterName
	MemberFilter_tF644F1AE82F611B677CE1964D5A3277DDA21D553* ___FilterName_5;
	// System.Reflection.MemberFilter System.Type::FilterNameIgnoreCase
	MemberFilter_tF644F1AE82F611B677CE1964D5A3277DDA21D553* ___FilterNameIgnoreCase_6;
};

// System.Action`1<UnityEngine.Object>
struct Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A  : public MulticastDelegate_t
{
};

// System.Comparison`1<System.Int32>
struct Comparison_1_tB7DE1436CB53924C2FC41FF926D074C1ACC14D89  : public MulticastDelegate_t
{
};

// UnityEngine.Events.UnityAction`2<System.Char,System.Int32>
struct UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007  : public MulticastDelegate_t
{
};

// UnityEngine.Events.UnityAction`3<System.String,System.Int32,System.Int32>
struct UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6  : public MulticastDelegate_t
{
};

// UnityEngine.Events.UnityAction`3<System.String,System.String,System.Int32>
struct UnityAction_3_tA4BA03B0D2CAB7D20E7006E36EF6B1D662432039  : public MulticastDelegate_t
{
};

// System.BadImageFormatException
struct BadImageFormatException_t7EBAEDCD74D3274D00106EC0051755C18D20E552  : public SystemException_tCC48D868298F4C0705279823E34B00F4FBDB7295
{
	// System.String System.BadImageFormatException::_fileName
	String_t* ____fileName_18;
	// System.String System.BadImageFormatException::_fusionLog
	String_t* ____fusionLog_19;
};

// UnityEngine.Behaviour
struct Behaviour_t01970CFBBA658497AE30F311C447DB0440BAB7FA  : public Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3
{
};

// OpenCvSharp.CvErrorCallback
struct CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D  : public MulticastDelegate_t
{
};

// OpenCvSharp.CvMouseCallback
struct CvMouseCallback_t22DBBF4F8817261C6B75DDC580CF521ACF39D8FB  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionByte
struct MatForeachFunctionByte_t52C7B3A433F3DF065CEE966CFD028E1464F529E3  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionDouble
struct MatForeachFunctionDouble_tCB6307339EB3912EDCF067F2028EED37BA32CC8A  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionFloat
struct MatForeachFunctionFloat_t38C2418BF9FC6D10EC034037EEDAC2BBB0C4AF6A  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionInt16
struct MatForeachFunctionInt16_t0374522FDC4CD56E472D78560D8F1FD39A449FE1  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionInt32
struct MatForeachFunctionInt32_tA11F413E4816D4EFA4C297DD08A7F76F9D1707DA  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec2b
struct MatForeachFunctionVec2b_tCF74100FFE496D5E2545413E6CA03932B0269828  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec2d
struct MatForeachFunctionVec2d_t6D8706FAC992DA48312959CD2531779CC37A3F10  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec2f
struct MatForeachFunctionVec2f_tB9D8C2EFCC61319FFF721E85B231D2D4B55565E2  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec2i
struct MatForeachFunctionVec2i_t7565625E15043384966DC1F8D1FC9E30C517B131  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec2s
struct MatForeachFunctionVec2s_tBD0DE263650799DB4E89AE906793FA7095033392  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec3b
struct MatForeachFunctionVec3b_t2031975BC30858291EFC4F7F2C65874DB23FCFE6  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec3d
struct MatForeachFunctionVec3d_tFE706CFA749551FE931D7640ADA60D79651814D5  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec3f
struct MatForeachFunctionVec3f_t11B96B79774D7E26DE67C65013BDE101110233F2  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec3i
struct MatForeachFunctionVec3i_tB9D7085FC547C65EFCA6B1497E5BF9CA22C9A593  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec3s
struct MatForeachFunctionVec3s_t3DB326D6C50ACF576CE95D082A30B15FDE66F42A  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec4b
struct MatForeachFunctionVec4b_tC0FE30A53B19679D93C118745DE736E3EC44EC5A  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec4d
struct MatForeachFunctionVec4d_tD463FA199BE73911A54402FAC92ABD91E8CE2466  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec4f
struct MatForeachFunctionVec4f_t40CF1C2E1E36DFA715D1FC6AC1DF722C6DB3CD29  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec4i
struct MatForeachFunctionVec4i_t5C0E76789E10044BA3866336D8758D103889DBF3  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec4s
struct MatForeachFunctionVec4s_tD7215B7DB75D388FF85DE10F1C93A5E1312FA613  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec6b
struct MatForeachFunctionVec6b_t78482390F33F672897BB7CD1FD2DB5FAE11702F4  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec6d
struct MatForeachFunctionVec6d_tA03EFFDD425E1A67808E7DACBBD496DEB341BB46  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec6f
struct MatForeachFunctionVec6f_t2B2D96C4B8BDB138726237FF466911814ADE7E52  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec6i
struct MatForeachFunctionVec6i_t19BEECEE67385C47EB2A204AB29CE3182A496D6C  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec6s
struct MatForeachFunctionVec6s_tE4986F3BA0F08AF223FCBEE33726A82C739DCD89  : public MulticastDelegate_t
{
};

// System.NotSupportedException
struct NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A  : public SystemException_tCC48D868298F4C0705279823E34B00F4FBDB7295
{
};

// OpenCvSharp.OpenCvSharpException
struct OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A  : public ApplicationException_tA744BED4E90266BD255285CD4CF909BAB3EE811A
{
};

// UnityEngine.Renderer
struct Renderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF  : public Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3
{
};

// TMPro.TMP_Asset
struct TMP_Asset_t135A047D4F5CBBA9CD356B762B55AB164122B969  : public ScriptableObject_tB3BFDB921A1B1795B38A5417D3B97A89A140436A
{
	// System.Int32 TMPro.TMP_Asset::m_InstanceID
	int32_t ___m_InstanceID_4;
	// System.Int32 TMPro.TMP_Asset::hashCode
	int32_t ___hashCode_5;
	// UnityEngine.Material TMPro.TMP_Asset::material
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___material_6;
	// System.Int32 TMPro.TMP_Asset::materialHashCode
	int32_t ___materialHashCode_7;
};

// UnityEngine.TextMesh
struct TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8  : public Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3
{
};

// UnityEngine.Transform
struct Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1  : public Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3
{
};

// System.TypeLoadException
struct TypeLoadException_t6333E3083F7BFF1A582969E6F67ACBA8B0035C32  : public SystemException_tCC48D868298F4C0705279823E34B00F4FBDB7295
{
	// System.String System.TypeLoadException::ClassName
	String_t* ___ClassName_18;
	// System.String System.TypeLoadException::AssemblyName
	String_t* ___AssemblyName_19;
	// System.String System.TypeLoadException::MessageArg
	String_t* ___MessageArg_20;
	// System.Int32 System.TypeLoadException::ResourceId
	int32_t ___ResourceId_21;
};

// TMPro.WordWrapState
struct WordWrapState_t80F67D8CAA9B1A0A3D5266521E23A9F3100EDD0A 
{
	// System.Int32 TMPro.WordWrapState::previous_WordBreak
	int32_t ___previous_WordBreak_0;
	// System.Int32 TMPro.WordWrapState::total_CharacterCount
	int32_t ___total_CharacterCount_1;
	// System.Int32 TMPro.WordWrapState::visible_CharacterCount
	int32_t ___visible_CharacterCount_2;
	// System.Int32 TMPro.WordWrapState::visible_SpriteCount
	int32_t ___visible_SpriteCount_3;
	// System.Int32 TMPro.WordWrapState::visible_LinkCount
	int32_t ___visible_LinkCount_4;
	// System.Int32 TMPro.WordWrapState::firstCharacterIndex
	int32_t ___firstCharacterIndex_5;
	// System.Int32 TMPro.WordWrapState::firstVisibleCharacterIndex
	int32_t ___firstVisibleCharacterIndex_6;
	// System.Int32 TMPro.WordWrapState::lastCharacterIndex
	int32_t ___lastCharacterIndex_7;
	// System.Int32 TMPro.WordWrapState::lastVisibleCharIndex
	int32_t ___lastVisibleCharIndex_8;
	// System.Int32 TMPro.WordWrapState::lineNumber
	int32_t ___lineNumber_9;
	// System.Single TMPro.WordWrapState::maxCapHeight
	float ___maxCapHeight_10;
	// System.Single TMPro.WordWrapState::maxAscender
	float ___maxAscender_11;
	// System.Single TMPro.WordWrapState::maxDescender
	float ___maxDescender_12;
	// System.Single TMPro.WordWrapState::startOfLineAscender
	float ___startOfLineAscender_13;
	// System.Single TMPro.WordWrapState::maxLineAscender
	float ___maxLineAscender_14;
	// System.Single TMPro.WordWrapState::maxLineDescender
	float ___maxLineDescender_15;
	// System.Single TMPro.WordWrapState::pageAscender
	float ___pageAscender_16;
	// TMPro.HorizontalAlignmentOptions TMPro.WordWrapState::horizontalAlignment
	int32_t ___horizontalAlignment_17;
	// System.Single TMPro.WordWrapState::marginLeft
	float ___marginLeft_18;
	// System.Single TMPro.WordWrapState::marginRight
	float ___marginRight_19;
	// System.Single TMPro.WordWrapState::xAdvance
	float ___xAdvance_20;
	// System.Single TMPro.WordWrapState::preferredWidth
	float ___preferredWidth_21;
	// System.Single TMPro.WordWrapState::preferredHeight
	float ___preferredHeight_22;
	// System.Single TMPro.WordWrapState::previousLineScale
	float ___previousLineScale_23;
	// System.Int32 TMPro.WordWrapState::wordCount
	int32_t ___wordCount_24;
	// TMPro.FontStyles TMPro.WordWrapState::fontStyle
	int32_t ___fontStyle_25;
	// System.Int32 TMPro.WordWrapState::italicAngle
	int32_t ___italicAngle_26;
	// System.Single TMPro.WordWrapState::fontScaleMultiplier
	float ___fontScaleMultiplier_27;
	// System.Single TMPro.WordWrapState::currentFontSize
	float ___currentFontSize_28;
	// System.Single TMPro.WordWrapState::baselineOffset
	float ___baselineOffset_29;
	// System.Single TMPro.WordWrapState::lineOffset
	float ___lineOffset_30;
	// System.Boolean TMPro.WordWrapState::isDrivenLineSpacing
	bool ___isDrivenLineSpacing_31;
	// System.Single TMPro.WordWrapState::glyphHorizontalAdvanceAdjustment
	float ___glyphHorizontalAdvanceAdjustment_32;
	// System.Single TMPro.WordWrapState::cSpace
	float ___cSpace_33;
	// System.Single TMPro.WordWrapState::mSpace
	float ___mSpace_34;
	// TMPro.TMP_TextInfo TMPro.WordWrapState::textInfo
	TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* ___textInfo_35;
	// TMPro.TMP_LineInfo TMPro.WordWrapState::lineInfo
	TMP_LineInfo_tB75C1965B58DB7B3A046C8CA55AD6AB92B6B17B3 ___lineInfo_36;
	// UnityEngine.Color32 TMPro.WordWrapState::vertexColor
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___vertexColor_37;
	// UnityEngine.Color32 TMPro.WordWrapState::underlineColor
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___underlineColor_38;
	// UnityEngine.Color32 TMPro.WordWrapState::strikethroughColor
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___strikethroughColor_39;
	// UnityEngine.Color32 TMPro.WordWrapState::highlightColor
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___highlightColor_40;
	// TMPro.TMP_FontStyleStack TMPro.WordWrapState::basicStyleStack
	TMP_FontStyleStack_t52885F172FADBC21346C835B5302167BDA8020DC ___basicStyleStack_41;
	// TMPro.TMP_TextProcessingStack`1<System.Int32> TMPro.WordWrapState::italicAngleStack
	TMP_TextProcessingStack_1_tFBA719426D68CE1F2B5849D97AF5E5D65846290C ___italicAngleStack_42;
	// TMPro.TMP_TextProcessingStack`1<UnityEngine.Color32> TMPro.WordWrapState::colorStack
	TMP_TextProcessingStack_1_tF2CD5BE59E5EB22EA9E3EE3043A004EA918C4BB3 ___colorStack_43;
	// TMPro.TMP_TextProcessingStack`1<UnityEngine.Color32> TMPro.WordWrapState::underlineColorStack
	TMP_TextProcessingStack_1_tF2CD5BE59E5EB22EA9E3EE3043A004EA918C4BB3 ___underlineColorStack_44;
	// TMPro.TMP_TextProcessingStack`1<UnityEngine.Color32> TMPro.WordWrapState::strikethroughColorStack
	TMP_TextProcessingStack_1_tF2CD5BE59E5EB22EA9E3EE3043A004EA918C4BB3 ___strikethroughColorStack_45;
	// TMPro.TMP_TextProcessingStack`1<UnityEngine.Color32> TMPro.WordWrapState::highlightColorStack
	TMP_TextProcessingStack_1_tF2CD5BE59E5EB22EA9E3EE3043A004EA918C4BB3 ___highlightColorStack_46;
	// TMPro.TMP_TextProcessingStack`1<TMPro.HighlightState> TMPro.WordWrapState::highlightStateStack
	TMP_TextProcessingStack_1_t57AECDCC936A7FF1D6CF66CA11560B28A675648D ___highlightStateStack_47;
	// TMPro.TMP_TextProcessingStack`1<TMPro.TMP_ColorGradient> TMPro.WordWrapState::colorGradientStack
	TMP_TextProcessingStack_1_tC8FAEB17246D3B171EFD11165A5761AE39B40D0C ___colorGradientStack_48;
	// TMPro.TMP_TextProcessingStack`1<System.Single> TMPro.WordWrapState::sizeStack
	TMP_TextProcessingStack_1_t138EC06BE7F101AA0A3C8D2DC951E55AACE085E9 ___sizeStack_49;
	// TMPro.TMP_TextProcessingStack`1<System.Single> TMPro.WordWrapState::indentStack
	TMP_TextProcessingStack_1_t138EC06BE7F101AA0A3C8D2DC951E55AACE085E9 ___indentStack_50;
	// TMPro.TMP_TextProcessingStack`1<TMPro.FontWeight> TMPro.WordWrapState::fontWeightStack
	TMP_TextProcessingStack_1_tA5C8CED87DD9E73F6359E23B334FFB5B6F813FD4 ___fontWeightStack_51;
	// TMPro.TMP_TextProcessingStack`1<System.Int32> TMPro.WordWrapState::styleStack
	TMP_TextProcessingStack_1_tFBA719426D68CE1F2B5849D97AF5E5D65846290C ___styleStack_52;
	// TMPro.TMP_TextProcessingStack`1<System.Single> TMPro.WordWrapState::baselineStack
	TMP_TextProcessingStack_1_t138EC06BE7F101AA0A3C8D2DC951E55AACE085E9 ___baselineStack_53;
	// TMPro.TMP_TextProcessingStack`1<System.Int32> TMPro.WordWrapState::actionStack
	TMP_TextProcessingStack_1_tFBA719426D68CE1F2B5849D97AF5E5D65846290C ___actionStack_54;
	// TMPro.TMP_TextProcessingStack`1<TMPro.MaterialReference> TMPro.WordWrapState::materialReferenceStack
	TMP_TextProcessingStack_1_tB03E08F69415B281A5A81138F09E49EE58402DF9 ___materialReferenceStack_55;
	// TMPro.TMP_TextProcessingStack`1<TMPro.HorizontalAlignmentOptions> TMPro.WordWrapState::lineJustificationStack
	TMP_TextProcessingStack_1_t243EA1B5D7FD2295D6533B953F0BBE8F52EFB8A0 ___lineJustificationStack_56;
	// System.Int32 TMPro.WordWrapState::spriteAnimationID
	int32_t ___spriteAnimationID_57;
	// TMPro.TMP_FontAsset TMPro.WordWrapState::currentFontAsset
	TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160* ___currentFontAsset_58;
	// TMPro.TMP_SpriteAsset TMPro.WordWrapState::currentSpriteAsset
	TMP_SpriteAsset_t81F779E6F705CE190DC0D1F93A954CB8B1774B39* ___currentSpriteAsset_59;
	// UnityEngine.Material TMPro.WordWrapState::currentMaterial
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___currentMaterial_60;
	// System.Int32 TMPro.WordWrapState::currentMaterialIndex
	int32_t ___currentMaterialIndex_61;
	// TMPro.Extents TMPro.WordWrapState::meshExtents
	Extents_tA2D2F95811D0A18CB7AC3570D2D8F8CD3AF4C4A8 ___meshExtents_62;
	// System.Boolean TMPro.WordWrapState::tagNoParsing
	bool ___tagNoParsing_63;
	// System.Boolean TMPro.WordWrapState::isNonBreakingSpace
	bool ___isNonBreakingSpace_64;
};
// Native definition for P/Invoke marshalling of TMPro.WordWrapState
struct WordWrapState_t80F67D8CAA9B1A0A3D5266521E23A9F3100EDD0A_marshaled_pinvoke
{
	int32_t ___previous_WordBreak_0;
	int32_t ___total_CharacterCount_1;
	int32_t ___visible_CharacterCount_2;
	int32_t ___visible_SpriteCount_3;
	int32_t ___visible_LinkCount_4;
	int32_t ___firstCharacterIndex_5;
	int32_t ___firstVisibleCharacterIndex_6;
	int32_t ___lastCharacterIndex_7;
	int32_t ___lastVisibleCharIndex_8;
	int32_t ___lineNumber_9;
	float ___maxCapHeight_10;
	float ___maxAscender_11;
	float ___maxDescender_12;
	float ___startOfLineAscender_13;
	float ___maxLineAscender_14;
	float ___maxLineDescender_15;
	float ___pageAscender_16;
	int32_t ___horizontalAlignment_17;
	float ___marginLeft_18;
	float ___marginRight_19;
	float ___xAdvance_20;
	float ___preferredWidth_21;
	float ___preferredHeight_22;
	float ___previousLineScale_23;
	int32_t ___wordCount_24;
	int32_t ___fontStyle_25;
	int32_t ___italicAngle_26;
	float ___fontScaleMultiplier_27;
	float ___currentFontSize_28;
	float ___baselineOffset_29;
	float ___lineOffset_30;
	int32_t ___isDrivenLineSpacing_31;
	float ___glyphHorizontalAdvanceAdjustment_32;
	float ___cSpace_33;
	float ___mSpace_34;
	TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* ___textInfo_35;
	TMP_LineInfo_tB75C1965B58DB7B3A046C8CA55AD6AB92B6B17B3 ___lineInfo_36;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___vertexColor_37;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___underlineColor_38;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___strikethroughColor_39;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___highlightColor_40;
	TMP_FontStyleStack_t52885F172FADBC21346C835B5302167BDA8020DC ___basicStyleStack_41;
	TMP_TextProcessingStack_1_tFBA719426D68CE1F2B5849D97AF5E5D65846290C ___italicAngleStack_42;
	TMP_TextProcessingStack_1_tF2CD5BE59E5EB22EA9E3EE3043A004EA918C4BB3 ___colorStack_43;
	TMP_TextProcessingStack_1_tF2CD5BE59E5EB22EA9E3EE3043A004EA918C4BB3 ___underlineColorStack_44;
	TMP_TextProcessingStack_1_tF2CD5BE59E5EB22EA9E3EE3043A004EA918C4BB3 ___strikethroughColorStack_45;
	TMP_TextProcessingStack_1_tF2CD5BE59E5EB22EA9E3EE3043A004EA918C4BB3 ___highlightColorStack_46;
	TMP_TextProcessingStack_1_t57AECDCC936A7FF1D6CF66CA11560B28A675648D ___highlightStateStack_47;
	TMP_TextProcessingStack_1_tC8FAEB17246D3B171EFD11165A5761AE39B40D0C ___colorGradientStack_48;
	TMP_TextProcessingStack_1_t138EC06BE7F101AA0A3C8D2DC951E55AACE085E9 ___sizeStack_49;
	TMP_TextProcessingStack_1_t138EC06BE7F101AA0A3C8D2DC951E55AACE085E9 ___indentStack_50;
	TMP_TextProcessingStack_1_tA5C8CED87DD9E73F6359E23B334FFB5B6F813FD4 ___fontWeightStack_51;
	TMP_TextProcessingStack_1_tFBA719426D68CE1F2B5849D97AF5E5D65846290C ___styleStack_52;
	TMP_TextProcessingStack_1_t138EC06BE7F101AA0A3C8D2DC951E55AACE085E9 ___baselineStack_53;
	TMP_TextProcessingStack_1_tFBA719426D68CE1F2B5849D97AF5E5D65846290C ___actionStack_54;
	TMP_TextProcessingStack_1_tB03E08F69415B281A5A81138F09E49EE58402DF9 ___materialReferenceStack_55;
	TMP_TextProcessingStack_1_t243EA1B5D7FD2295D6533B953F0BBE8F52EFB8A0 ___lineJustificationStack_56;
	int32_t ___spriteAnimationID_57;
	TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160* ___currentFontAsset_58;
	TMP_SpriteAsset_t81F779E6F705CE190DC0D1F93A954CB8B1774B39* ___currentSpriteAsset_59;
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___currentMaterial_60;
	int32_t ___currentMaterialIndex_61;
	Extents_tA2D2F95811D0A18CB7AC3570D2D8F8CD3AF4C4A8 ___meshExtents_62;
	int32_t ___tagNoParsing_63;
	int32_t ___isNonBreakingSpace_64;
};
// Native definition for COM marshalling of TMPro.WordWrapState
struct WordWrapState_t80F67D8CAA9B1A0A3D5266521E23A9F3100EDD0A_marshaled_com
{
	int32_t ___previous_WordBreak_0;
	int32_t ___total_CharacterCount_1;
	int32_t ___visible_CharacterCount_2;
	int32_t ___visible_SpriteCount_3;
	int32_t ___visible_LinkCount_4;
	int32_t ___firstCharacterIndex_5;
	int32_t ___firstVisibleCharacterIndex_6;
	int32_t ___lastCharacterIndex_7;
	int32_t ___lastVisibleCharIndex_8;
	int32_t ___lineNumber_9;
	float ___maxCapHeight_10;
	float ___maxAscender_11;
	float ___maxDescender_12;
	float ___startOfLineAscender_13;
	float ___maxLineAscender_14;
	float ___maxLineDescender_15;
	float ___pageAscender_16;
	int32_t ___horizontalAlignment_17;
	float ___marginLeft_18;
	float ___marginRight_19;
	float ___xAdvance_20;
	float ___preferredWidth_21;
	float ___preferredHeight_22;
	float ___previousLineScale_23;
	int32_t ___wordCount_24;
	int32_t ___fontStyle_25;
	int32_t ___italicAngle_26;
	float ___fontScaleMultiplier_27;
	float ___currentFontSize_28;
	float ___baselineOffset_29;
	float ___lineOffset_30;
	int32_t ___isDrivenLineSpacing_31;
	float ___glyphHorizontalAdvanceAdjustment_32;
	float ___cSpace_33;
	float ___mSpace_34;
	TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* ___textInfo_35;
	TMP_LineInfo_tB75C1965B58DB7B3A046C8CA55AD6AB92B6B17B3 ___lineInfo_36;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___vertexColor_37;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___underlineColor_38;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___strikethroughColor_39;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___highlightColor_40;
	TMP_FontStyleStack_t52885F172FADBC21346C835B5302167BDA8020DC ___basicStyleStack_41;
	TMP_TextProcessingStack_1_tFBA719426D68CE1F2B5849D97AF5E5D65846290C ___italicAngleStack_42;
	TMP_TextProcessingStack_1_tF2CD5BE59E5EB22EA9E3EE3043A004EA918C4BB3 ___colorStack_43;
	TMP_TextProcessingStack_1_tF2CD5BE59E5EB22EA9E3EE3043A004EA918C4BB3 ___underlineColorStack_44;
	TMP_TextProcessingStack_1_tF2CD5BE59E5EB22EA9E3EE3043A004EA918C4BB3 ___strikethroughColorStack_45;
	TMP_TextProcessingStack_1_tF2CD5BE59E5EB22EA9E3EE3043A004EA918C4BB3 ___highlightColorStack_46;
	TMP_TextProcessingStack_1_t57AECDCC936A7FF1D6CF66CA11560B28A675648D ___highlightStateStack_47;
	TMP_TextProcessingStack_1_tC8FAEB17246D3B171EFD11165A5761AE39B40D0C ___colorGradientStack_48;
	TMP_TextProcessingStack_1_t138EC06BE7F101AA0A3C8D2DC951E55AACE085E9 ___sizeStack_49;
	TMP_TextProcessingStack_1_t138EC06BE7F101AA0A3C8D2DC951E55AACE085E9 ___indentStack_50;
	TMP_TextProcessingStack_1_tA5C8CED87DD9E73F6359E23B334FFB5B6F813FD4 ___fontWeightStack_51;
	TMP_TextProcessingStack_1_tFBA719426D68CE1F2B5849D97AF5E5D65846290C ___styleStack_52;
	TMP_TextProcessingStack_1_t138EC06BE7F101AA0A3C8D2DC951E55AACE085E9 ___baselineStack_53;
	TMP_TextProcessingStack_1_tFBA719426D68CE1F2B5849D97AF5E5D65846290C ___actionStack_54;
	TMP_TextProcessingStack_1_tB03E08F69415B281A5A81138F09E49EE58402DF9 ___materialReferenceStack_55;
	TMP_TextProcessingStack_1_t243EA1B5D7FD2295D6533B953F0BBE8F52EFB8A0 ___lineJustificationStack_56;
	int32_t ___spriteAnimationID_57;
	TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160* ___currentFontAsset_58;
	TMP_SpriteAsset_t81F779E6F705CE190DC0D1F93A954CB8B1774B39* ___currentSpriteAsset_59;
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___currentMaterial_60;
	int32_t ___currentMaterialIndex_61;
	Extents_tA2D2F95811D0A18CB7AC3570D2D8F8CD3AF4C4A8 ___meshExtents_62;
	int32_t ___tagNoParsing_63;
	int32_t ___isNonBreakingSpace_64;
};

// TMPro.TMP_TextProcessingStack`1<TMPro.WordWrapState>
struct TMP_TextProcessingStack_1_t2DDA00FFC64AF6E3AFD475AB2086D16C34787E0F 
{
	// T[] TMPro.TMP_TextProcessingStack`1::itemStack
	WordWrapStateU5BU5D_t473D59C9DBCC949CE72EF1EB471CBA152A6CEAC9* ___itemStack_0;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::index
	int32_t ___index_1;
	// T TMPro.TMP_TextProcessingStack`1::m_DefaultItem
	WordWrapState_t80F67D8CAA9B1A0A3D5266521E23A9F3100EDD0A ___m_DefaultItem_2;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_Capacity
	int32_t ___m_Capacity_3;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_RolloverSize
	int32_t ___m_RolloverSize_4;
	// System.Int32 TMPro.TMP_TextProcessingStack`1::m_Count
	int32_t ___m_Count_5;
};

// UnityEngine.Camera
struct Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184  : public Behaviour_t01970CFBBA658497AE30F311C447DB0440BAB7FA
{
};

struct Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184_StaticFields
{
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPreCull
	CameraCallback_t844E527BFE37BC0495E7F67993E43C07642DA9DD* ___onPreCull_4;
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPreRender
	CameraCallback_t844E527BFE37BC0495E7F67993E43C07642DA9DD* ___onPreRender_5;
	// UnityEngine.Camera/CameraCallback UnityEngine.Camera::onPostRender
	CameraCallback_t844E527BFE37BC0495E7F67993E43C07642DA9DD* ___onPostRender_6;
};

// UnityEngine.Canvas
struct Canvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26  : public Behaviour_t01970CFBBA658497AE30F311C447DB0440BAB7FA
{
};

struct Canvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26_StaticFields
{
	// UnityEngine.Canvas/WillRenderCanvases UnityEngine.Canvas::preWillRenderCanvases
	WillRenderCanvases_tA4A6E66DBA797DCB45B995DBA449A9D1D80D0FBC* ___preWillRenderCanvases_4;
	// UnityEngine.Canvas/WillRenderCanvases UnityEngine.Canvas::willRenderCanvases
	WillRenderCanvases_tA4A6E66DBA797DCB45B995DBA449A9D1D80D0FBC* ___willRenderCanvases_5;
	// System.Action`1<System.Int32> UnityEngine.Canvas::<externBeginRenderOverlays>k__BackingField
	Action_1_tD69A6DC9FBE94131E52F5A73B2A9D4AB51EEC404* ___U3CexternBeginRenderOverlaysU3Ek__BackingField_6;
	// System.Action`2<System.Int32,System.Int32> UnityEngine.Canvas::<externRenderOverlaysBefore>k__BackingField
	Action_2_tD7438462601D3939500ED67463331FE00CFFBDB8* ___U3CexternRenderOverlaysBeforeU3Ek__BackingField_7;
	// System.Action`1<System.Int32> UnityEngine.Canvas::<externEndRenderOverlays>k__BackingField
	Action_1_tD69A6DC9FBE94131E52F5A73B2A9D4AB51EEC404* ___U3CexternEndRenderOverlaysU3Ek__BackingField_8;
};

// System.DllNotFoundException
struct DllNotFoundException_t8CAE636A394C482C9FCF38FB7B7929506319D534  : public TypeLoadException_t6333E3083F7BFF1A582969E6F67ACBA8B0035C32
{
};

// UnityEngine.MonoBehaviour
struct MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71  : public Behaviour_t01970CFBBA658497AE30F311C447DB0440BAB7FA
{
};

// UnityEngine.RectTransform
struct RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5  : public Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1
{
};

struct RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5_StaticFields
{
	// UnityEngine.RectTransform/ReapplyDrivenProperties UnityEngine.RectTransform::reapplyDrivenProperties
	ReapplyDrivenProperties_t3482EA130A01FF7EE2EEFE37F66A5215D08CFE24* ___reapplyDrivenProperties_4;
};

// TMPro.TMP_FontAsset
struct TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160  : public TMP_Asset_t135A047D4F5CBBA9CD356B762B55AB164122B969
{
	// System.String TMPro.TMP_FontAsset::m_Version
	String_t* ___m_Version_8;
	// System.String TMPro.TMP_FontAsset::m_SourceFontFileGUID
	String_t* ___m_SourceFontFileGUID_9;
	// UnityEngine.Font TMPro.TMP_FontAsset::m_SourceFontFile
	Font_tC95270EA3198038970422D78B74A7F2E218A96B6* ___m_SourceFontFile_10;
	// TMPro.AtlasPopulationMode TMPro.TMP_FontAsset::m_AtlasPopulationMode
	int32_t ___m_AtlasPopulationMode_11;
	// UnityEngine.TextCore.FaceInfo TMPro.TMP_FontAsset::m_FaceInfo
	FaceInfo_t12F0319E555A62CBA1D9E51A16C7963393932756 ___m_FaceInfo_12;
	// System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> TMPro.TMP_FontAsset::m_GlyphTable
	List_1_t95DB74B8EE315F8F92B7B96D93C901C8C3F6FE2C* ___m_GlyphTable_13;
	// System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Glyph> TMPro.TMP_FontAsset::m_GlyphLookupDictionary
	Dictionary_2_tC61348D10610A6B3D7B65102D82AC3467D59EAA7* ___m_GlyphLookupDictionary_14;
	// System.Collections.Generic.List`1<TMPro.TMP_Character> TMPro.TMP_FontAsset::m_CharacterTable
	List_1_tCE1ACAA0C2736A7797B2C134895298CAB10BEB5E* ___m_CharacterTable_15;
	// System.Collections.Generic.Dictionary`2<System.UInt32,TMPro.TMP_Character> TMPro.TMP_FontAsset::m_CharacterLookupDictionary
	Dictionary_2_tCB5FEF8D6CEA1557D9B9BA25946AD6BF3E6C14D0* ___m_CharacterLookupDictionary_16;
	// UnityEngine.Texture2D TMPro.TMP_FontAsset::m_AtlasTexture
	Texture2D_tE6505BC111DD8A424A9DBE8E05D7D09E11FFFCF4* ___m_AtlasTexture_17;
	// UnityEngine.Texture2D[] TMPro.TMP_FontAsset::m_AtlasTextures
	Texture2DU5BU5D_t05332F1E3F7D4493E304C702201F9BE4F9236191* ___m_AtlasTextures_18;
	// System.Int32 TMPro.TMP_FontAsset::m_AtlasTextureIndex
	int32_t ___m_AtlasTextureIndex_19;
	// System.Boolean TMPro.TMP_FontAsset::m_IsMultiAtlasTexturesEnabled
	bool ___m_IsMultiAtlasTexturesEnabled_20;
	// System.Boolean TMPro.TMP_FontAsset::m_ClearDynamicDataOnBuild
	bool ___m_ClearDynamicDataOnBuild_21;
	// System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> TMPro.TMP_FontAsset::m_UsedGlyphRects
	List_1_t425D3A455811E316D2DF73E46CF9CD90A4341C1B* ___m_UsedGlyphRects_22;
	// System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> TMPro.TMP_FontAsset::m_FreeGlyphRects
	List_1_t425D3A455811E316D2DF73E46CF9CD90A4341C1B* ___m_FreeGlyphRects_23;
	// TMPro.FaceInfo_Legacy TMPro.TMP_FontAsset::m_fontInfo
	FaceInfo_Legacy_t23B118EFD5AB7162515ABF18C0212DF155CCF7B8* ___m_fontInfo_24;
	// UnityEngine.Texture2D TMPro.TMP_FontAsset::atlas
	Texture2D_tE6505BC111DD8A424A9DBE8E05D7D09E11FFFCF4* ___atlas_25;
	// System.Int32 TMPro.TMP_FontAsset::m_AtlasWidth
	int32_t ___m_AtlasWidth_26;
	// System.Int32 TMPro.TMP_FontAsset::m_AtlasHeight
	int32_t ___m_AtlasHeight_27;
	// System.Int32 TMPro.TMP_FontAsset::m_AtlasPadding
	int32_t ___m_AtlasPadding_28;
	// UnityEngine.TextCore.LowLevel.GlyphRenderMode TMPro.TMP_FontAsset::m_AtlasRenderMode
	int32_t ___m_AtlasRenderMode_29;
	// System.Collections.Generic.List`1<TMPro.TMP_Glyph> TMPro.TMP_FontAsset::m_glyphInfoList
	List_1_tAB7976FADCF872E418770E60783056C23394843D* ___m_glyphInfoList_30;
	// TMPro.KerningTable TMPro.TMP_FontAsset::m_KerningTable
	KerningTable_t040C3FE3B519B12AADE1C5B00628581551D5AB6B* ___m_KerningTable_31;
	// TMPro.TMP_FontFeatureTable TMPro.TMP_FontAsset::m_FontFeatureTable
	TMP_FontFeatureTable_t726A09E64FDF682A8FFE294BB6CFE7747F6C40EA* ___m_FontFeatureTable_32;
	// System.Collections.Generic.List`1<TMPro.TMP_FontAsset> TMPro.TMP_FontAsset::fallbackFontAssets
	List_1_t06C3ABB0C6F2347B32881E33D154431EADAE3ECF* ___fallbackFontAssets_33;
	// System.Collections.Generic.List`1<TMPro.TMP_FontAsset> TMPro.TMP_FontAsset::m_FallbackFontAssetTable
	List_1_t06C3ABB0C6F2347B32881E33D154431EADAE3ECF* ___m_FallbackFontAssetTable_34;
	// TMPro.FontAssetCreationSettings TMPro.TMP_FontAsset::m_CreationSettings
	FontAssetCreationSettings_t2B94078737A72F814E8BC2126F967B94231190DF ___m_CreationSettings_35;
	// TMPro.TMP_FontWeightPair[] TMPro.TMP_FontAsset::m_FontWeightTable
	TMP_FontWeightPairU5BU5D_t0A3A5955F13FEB2F7329D81BA157110DB99F9F37* ___m_FontWeightTable_36;
	// TMPro.TMP_FontWeightPair[] TMPro.TMP_FontAsset::fontWeights
	TMP_FontWeightPairU5BU5D_t0A3A5955F13FEB2F7329D81BA157110DB99F9F37* ___fontWeights_37;
	// System.Single TMPro.TMP_FontAsset::normalStyle
	float ___normalStyle_38;
	// System.Single TMPro.TMP_FontAsset::normalSpacingOffset
	float ___normalSpacingOffset_39;
	// System.Single TMPro.TMP_FontAsset::boldStyle
	float ___boldStyle_40;
	// System.Single TMPro.TMP_FontAsset::boldSpacing
	float ___boldSpacing_41;
	// System.Byte TMPro.TMP_FontAsset::italicStyle
	uint8_t ___italicStyle_42;
	// System.Byte TMPro.TMP_FontAsset::tabSize
	uint8_t ___tabSize_43;
	// System.Boolean TMPro.TMP_FontAsset::IsFontAssetLookupTablesDirty
	bool ___IsFontAssetLookupTablesDirty_44;
	// System.Collections.Generic.HashSet`1<System.Int32> TMPro.TMP_FontAsset::FallbackSearchQueryLookup
	HashSet_1_t4A2F2B74276D0AD3ED0F873045BD61E9504ECAE2* ___FallbackSearchQueryLookup_53;
	// System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> TMPro.TMP_FontAsset::m_GlyphsToRender
	List_1_t95DB74B8EE315F8F92B7B96D93C901C8C3F6FE2C* ___m_GlyphsToRender_59;
	// System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> TMPro.TMP_FontAsset::m_GlyphsRendered
	List_1_t95DB74B8EE315F8F92B7B96D93C901C8C3F6FE2C* ___m_GlyphsRendered_60;
	// System.Collections.Generic.List`1<System.UInt32> TMPro.TMP_FontAsset::m_GlyphIndexList
	List_1_t9B68833848E4C4D7F623C05F6B77F0449396354A* ___m_GlyphIndexList_61;
	// System.Collections.Generic.List`1<System.UInt32> TMPro.TMP_FontAsset::m_GlyphIndexListNewlyAdded
	List_1_t9B68833848E4C4D7F623C05F6B77F0449396354A* ___m_GlyphIndexListNewlyAdded_62;
	// System.Collections.Generic.List`1<System.UInt32> TMPro.TMP_FontAsset::m_GlyphsToAdd
	List_1_t9B68833848E4C4D7F623C05F6B77F0449396354A* ___m_GlyphsToAdd_63;
	// System.Collections.Generic.HashSet`1<System.UInt32> TMPro.TMP_FontAsset::m_GlyphsToAddLookup
	HashSet_1_t5DD20B42149A11AEBF12A75505306E6EFC34943A* ___m_GlyphsToAddLookup_64;
	// System.Collections.Generic.List`1<TMPro.TMP_Character> TMPro.TMP_FontAsset::m_CharactersToAdd
	List_1_tCE1ACAA0C2736A7797B2C134895298CAB10BEB5E* ___m_CharactersToAdd_65;
	// System.Collections.Generic.HashSet`1<System.UInt32> TMPro.TMP_FontAsset::m_CharactersToAddLookup
	HashSet_1_t5DD20B42149A11AEBF12A75505306E6EFC34943A* ___m_CharactersToAddLookup_66;
	// System.Collections.Generic.List`1<System.UInt32> TMPro.TMP_FontAsset::s_MissingCharacterList
	List_1_t9B68833848E4C4D7F623C05F6B77F0449396354A* ___s_MissingCharacterList_67;
	// System.Collections.Generic.HashSet`1<System.UInt32> TMPro.TMP_FontAsset::m_MissingUnicodesFromFontFile
	HashSet_1_t5DD20B42149A11AEBF12A75505306E6EFC34943A* ___m_MissingUnicodesFromFontFile_68;
};

struct TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160_StaticFields
{
	// Unity.Profiling.ProfilerMarker TMPro.TMP_FontAsset::k_ReadFontAssetDefinitionMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_ReadFontAssetDefinitionMarker_45;
	// Unity.Profiling.ProfilerMarker TMPro.TMP_FontAsset::k_AddSynthesizedCharactersMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_AddSynthesizedCharactersMarker_46;
	// Unity.Profiling.ProfilerMarker TMPro.TMP_FontAsset::k_TryAddCharacterMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_TryAddCharacterMarker_47;
	// Unity.Profiling.ProfilerMarker TMPro.TMP_FontAsset::k_TryAddCharactersMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_TryAddCharactersMarker_48;
	// Unity.Profiling.ProfilerMarker TMPro.TMP_FontAsset::k_UpdateGlyphAdjustmentRecordsMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_UpdateGlyphAdjustmentRecordsMarker_49;
	// Unity.Profiling.ProfilerMarker TMPro.TMP_FontAsset::k_ClearFontAssetDataMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_ClearFontAssetDataMarker_50;
	// Unity.Profiling.ProfilerMarker TMPro.TMP_FontAsset::k_UpdateFontAssetDataMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_UpdateFontAssetDataMarker_51;
	// System.String TMPro.TMP_FontAsset::s_DefaultMaterialSuffix
	String_t* ___s_DefaultMaterialSuffix_52;
	// System.Collections.Generic.HashSet`1<System.Int32> TMPro.TMP_FontAsset::k_SearchedFontAssetLookup
	HashSet_1_t4A2F2B74276D0AD3ED0F873045BD61E9504ECAE2* ___k_SearchedFontAssetLookup_54;
	// System.Collections.Generic.List`1<TMPro.TMP_FontAsset> TMPro.TMP_FontAsset::k_FontAssets_FontFeaturesUpdateQueue
	List_1_t06C3ABB0C6F2347B32881E33D154431EADAE3ECF* ___k_FontAssets_FontFeaturesUpdateQueue_55;
	// System.Collections.Generic.HashSet`1<System.Int32> TMPro.TMP_FontAsset::k_FontAssets_FontFeaturesUpdateQueueLookup
	HashSet_1_t4A2F2B74276D0AD3ED0F873045BD61E9504ECAE2* ___k_FontAssets_FontFeaturesUpdateQueueLookup_56;
	// System.Collections.Generic.List`1<TMPro.TMP_FontAsset> TMPro.TMP_FontAsset::k_FontAssets_AtlasTexturesUpdateQueue
	List_1_t06C3ABB0C6F2347B32881E33D154431EADAE3ECF* ___k_FontAssets_AtlasTexturesUpdateQueue_57;
	// System.Collections.Generic.HashSet`1<System.Int32> TMPro.TMP_FontAsset::k_FontAssets_AtlasTexturesUpdateQueueLookup
	HashSet_1_t4A2F2B74276D0AD3ED0F873045BD61E9504ECAE2* ___k_FontAssets_AtlasTexturesUpdateQueueLookup_58;
	// System.UInt32[] TMPro.TMP_FontAsset::k_GlyphIndexArray
	UInt32U5BU5D_t02FBD658AD156A17574ECE6106CF1FBFCC9807FA* ___k_GlyphIndexArray_69;
};

// DyiPinchGrab.DyiHandManipulation
struct DyiHandManipulation_t160359CE7BE193C1B024ED59838120193F7F1DE9  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// Microsoft.MixedReality.Toolkit.Utilities.TrackedHandJoint DyiPinchGrab.DyiHandManipulation::trackedHandJoint
	int32_t ___trackedHandJoint_4;
	// System.Single DyiPinchGrab.DyiHandManipulation::grabDistance
	float ___grabDistance_5;
	// Microsoft.MixedReality.Toolkit.Utilities.Handedness DyiPinchGrab.DyiHandManipulation::trackedHand
	uint8_t ___trackedHand_6;
	// System.Boolean DyiPinchGrab.DyiHandManipulation::trackPinch
	bool ___trackPinch_7;
	// System.Boolean DyiPinchGrab.DyiHandManipulation::trackGrab
	bool ___trackGrab_8;
};

// TMPro.Examples.TMP_ExampleScript_01
struct TMP_ExampleScript_01_t12A14830C25DE1BA02443B22907A196BE4B44305  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// TMPro.Examples.TMP_ExampleScript_01/objectType TMPro.Examples.TMP_ExampleScript_01::ObjectType
	int32_t ___ObjectType_4;
	// System.Boolean TMPro.Examples.TMP_ExampleScript_01::isStatic
	bool ___isStatic_5;
	// TMPro.TMP_Text TMPro.Examples.TMP_ExampleScript_01::m_text
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___m_text_6;
	// System.Int32 TMPro.Examples.TMP_ExampleScript_01::count
	int32_t ___count_8;
};

// TMPro.Examples.TMP_FrameRateCounter
struct TMP_FrameRateCounter_t65C436069EE403C827CBE41C38F5B5C9D2FC946B  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// System.Single TMPro.Examples.TMP_FrameRateCounter::UpdateInterval
	float ___UpdateInterval_4;
	// System.Single TMPro.Examples.TMP_FrameRateCounter::m_LastInterval
	float ___m_LastInterval_5;
	// System.Int32 TMPro.Examples.TMP_FrameRateCounter::m_Frames
	int32_t ___m_Frames_6;
	// TMPro.Examples.TMP_FrameRateCounter/FpsCounterAnchorPositions TMPro.Examples.TMP_FrameRateCounter::AnchorPosition
	int32_t ___AnchorPosition_7;
	// System.String TMPro.Examples.TMP_FrameRateCounter::htmlColorTag
	String_t* ___htmlColorTag_8;
	// TMPro.TextMeshPro TMPro.Examples.TMP_FrameRateCounter::m_TextMeshPro
	TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* ___m_TextMeshPro_10;
	// UnityEngine.Transform TMPro.Examples.TMP_FrameRateCounter::m_frameCounter_transform
	Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___m_frameCounter_transform_11;
	// UnityEngine.Camera TMPro.Examples.TMP_FrameRateCounter::m_camera
	Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* ___m_camera_12;
	// TMPro.Examples.TMP_FrameRateCounter/FpsCounterAnchorPositions TMPro.Examples.TMP_FrameRateCounter::last_AnchorPosition
	int32_t ___last_AnchorPosition_13;
};

// TMPro.Examples.TMP_TextEventCheck
struct TMP_TextEventCheck_tC19A6E94690E74ED73926E8EDC5F611501DC6233  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// TMPro.TMP_TextEventHandler TMPro.Examples.TMP_TextEventCheck::TextEventHandler
	TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* ___TextEventHandler_4;
	// TMPro.TMP_Text TMPro.Examples.TMP_TextEventCheck::m_TextComponent
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___m_TextComponent_5;
};

// TMPro.TMP_TextEventHandler
struct TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// TMPro.TMP_TextEventHandler/CharacterSelectionEvent TMPro.TMP_TextEventHandler::m_OnCharacterSelection
	CharacterSelectionEvent_t5D7AF67F47A37175CF8615AD66DEC4A0AA021392* ___m_OnCharacterSelection_4;
	// TMPro.TMP_TextEventHandler/SpriteSelectionEvent TMPro.TMP_TextEventHandler::m_OnSpriteSelection
	SpriteSelectionEvent_t770551D2973013622C464E817FA74D53BCD4FD95* ___m_OnSpriteSelection_5;
	// TMPro.TMP_TextEventHandler/WordSelectionEvent TMPro.TMP_TextEventHandler::m_OnWordSelection
	WordSelectionEvent_t340E6006406B5E90F7190C56218E8F7E3712945E* ___m_OnWordSelection_6;
	// TMPro.TMP_TextEventHandler/LineSelectionEvent TMPro.TMP_TextEventHandler::m_OnLineSelection
	LineSelectionEvent_t526120C6113E0638913B951E3D1D7B1CF94F0880* ___m_OnLineSelection_7;
	// TMPro.TMP_TextEventHandler/LinkSelectionEvent TMPro.TMP_TextEventHandler::m_OnLinkSelection
	LinkSelectionEvent_t5CE74F742D231580ED2C810ECE394E1A2BC81B3D* ___m_OnLinkSelection_8;
	// TMPro.TMP_Text TMPro.TMP_TextEventHandler::m_TextComponent
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___m_TextComponent_9;
	// UnityEngine.Camera TMPro.TMP_TextEventHandler::m_Camera
	Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* ___m_Camera_10;
	// UnityEngine.Canvas TMPro.TMP_TextEventHandler::m_Canvas
	Canvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26* ___m_Canvas_11;
	// System.Int32 TMPro.TMP_TextEventHandler::m_selectedLink
	int32_t ___m_selectedLink_12;
	// System.Int32 TMPro.TMP_TextEventHandler::m_lastCharIndex
	int32_t ___m_lastCharIndex_13;
	// System.Int32 TMPro.TMP_TextEventHandler::m_lastWordIndex
	int32_t ___m_lastWordIndex_14;
	// System.Int32 TMPro.TMP_TextEventHandler::m_lastLineIndex
	int32_t ___m_lastLineIndex_15;
};

// TMPro.Examples.TMP_TextInfoDebugTool
struct TMP_TextInfoDebugTool_tC8728D25321C0091ECD61B136B0E3A5B4AB4B76F  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
};

// TMPro.Examples.TMP_TextSelector_A
struct TMP_TextSelector_A_t088F530FC9DE9E7B6AC9720D50A05B757189B294  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// TMPro.TextMeshPro TMPro.Examples.TMP_TextSelector_A::m_TextMeshPro
	TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* ___m_TextMeshPro_4;
	// UnityEngine.Camera TMPro.Examples.TMP_TextSelector_A::m_Camera
	Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* ___m_Camera_5;
	// System.Boolean TMPro.Examples.TMP_TextSelector_A::m_isHoveringObject
	bool ___m_isHoveringObject_6;
	// System.Int32 TMPro.Examples.TMP_TextSelector_A::m_selectedLink
	int32_t ___m_selectedLink_7;
	// System.Int32 TMPro.Examples.TMP_TextSelector_A::m_lastCharIndex
	int32_t ___m_lastCharIndex_8;
	// System.Int32 TMPro.Examples.TMP_TextSelector_A::m_lastWordIndex
	int32_t ___m_lastWordIndex_9;
};

// TMPro.Examples.TMP_TextSelector_B
struct TMP_TextSelector_B_t57166268B8E5437286F55085EA19969D0A528CC2  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// UnityEngine.RectTransform TMPro.Examples.TMP_TextSelector_B::TextPopup_Prefab_01
	RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* ___TextPopup_Prefab_01_4;
	// UnityEngine.RectTransform TMPro.Examples.TMP_TextSelector_B::m_TextPopup_RectTransform
	RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* ___m_TextPopup_RectTransform_5;
	// TMPro.TextMeshProUGUI TMPro.Examples.TMP_TextSelector_B::m_TextPopup_TMPComponent
	TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* ___m_TextPopup_TMPComponent_6;
	// TMPro.TextMeshProUGUI TMPro.Examples.TMP_TextSelector_B::m_TextMeshPro
	TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* ___m_TextMeshPro_9;
	// UnityEngine.Canvas TMPro.Examples.TMP_TextSelector_B::m_Canvas
	Canvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26* ___m_Canvas_10;
	// UnityEngine.Camera TMPro.Examples.TMP_TextSelector_B::m_Camera
	Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* ___m_Camera_11;
	// System.Boolean TMPro.Examples.TMP_TextSelector_B::isHoveringObject
	bool ___isHoveringObject_12;
	// System.Int32 TMPro.Examples.TMP_TextSelector_B::m_selectedWord
	int32_t ___m_selectedWord_13;
	// System.Int32 TMPro.Examples.TMP_TextSelector_B::m_selectedLink
	int32_t ___m_selectedLink_14;
	// System.Int32 TMPro.Examples.TMP_TextSelector_B::m_lastIndex
	int32_t ___m_lastIndex_15;
	// UnityEngine.Matrix4x4 TMPro.Examples.TMP_TextSelector_B::m_matrix
	Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 ___m_matrix_16;
	// TMPro.TMP_MeshInfo[] TMPro.Examples.TMP_TextSelector_B::m_cachedMeshInfoVertexData
	TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* ___m_cachedMeshInfoVertexData_17;
};

// TMPro.Examples.TMP_UiFrameRateCounter
struct TMP_UiFrameRateCounter_t3CB67462256A3570DFD0BD10261E7CABB11AFC0E  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// System.Single TMPro.Examples.TMP_UiFrameRateCounter::UpdateInterval
	float ___UpdateInterval_4;
	// System.Single TMPro.Examples.TMP_UiFrameRateCounter::m_LastInterval
	float ___m_LastInterval_5;
	// System.Int32 TMPro.Examples.TMP_UiFrameRateCounter::m_Frames
	int32_t ___m_Frames_6;
	// TMPro.Examples.TMP_UiFrameRateCounter/FpsCounterAnchorPositions TMPro.Examples.TMP_UiFrameRateCounter::AnchorPosition
	int32_t ___AnchorPosition_7;
	// System.String TMPro.Examples.TMP_UiFrameRateCounter::htmlColorTag
	String_t* ___htmlColorTag_8;
	// TMPro.TextMeshProUGUI TMPro.Examples.TMP_UiFrameRateCounter::m_TextMeshPro
	TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* ___m_TextMeshPro_10;
	// UnityEngine.RectTransform TMPro.Examples.TMP_UiFrameRateCounter::m_frameCounter_transform
	RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* ___m_frameCounter_transform_11;
	// TMPro.Examples.TMP_UiFrameRateCounter/FpsCounterAnchorPositions TMPro.Examples.TMP_UiFrameRateCounter::last_AnchorPosition
	int32_t ___last_AnchorPosition_12;
};

// TMPro.Examples.TMPro_InstructionOverlay
struct TMPro_InstructionOverlay_t1CFD12C64F70D5D2FBE29466015C02776A406B62  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// TMPro.Examples.TMPro_InstructionOverlay/FpsCounterAnchorPositions TMPro.Examples.TMPro_InstructionOverlay::AnchorPosition
	int32_t ___AnchorPosition_4;
	// TMPro.TextMeshPro TMPro.Examples.TMPro_InstructionOverlay::m_TextMeshPro
	TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* ___m_TextMeshPro_6;
	// TMPro.TextContainer TMPro.Examples.TMPro_InstructionOverlay::m_textContainer
	TextContainer_t949A6EBEE5C8832723E73D8D3DCF4C8D0B3D7F3C* ___m_textContainer_7;
	// UnityEngine.Transform TMPro.Examples.TMPro_InstructionOverlay::m_frameCounter_transform
	Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___m_frameCounter_transform_8;
	// UnityEngine.Camera TMPro.Examples.TMPro_InstructionOverlay::m_camera
	Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* ___m_camera_9;
};

// TMPro.Examples.TeleType
struct TeleType_tA6F2E696EFE0B4124756D8810A7AAFB7829EE2F5  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// System.String TMPro.Examples.TeleType::label01
	String_t* ___label01_4;
	// System.String TMPro.Examples.TeleType::label02
	String_t* ___label02_5;
	// TMPro.TMP_Text TMPro.Examples.TeleType::m_textMeshPro
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___m_textMeshPro_6;
};

// TMPro.Examples.TextConsoleSimulator
struct TextConsoleSimulator_t986082F574CD2A38D6E40D856C6A9926D7EF49D2  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// TMPro.TMP_Text TMPro.Examples.TextConsoleSimulator::m_TextComponent
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___m_TextComponent_4;
	// System.Boolean TMPro.Examples.TextConsoleSimulator::hasTextChanged
	bool ___hasTextChanged_5;
};

// TMPro.Examples.TextMeshProFloatingText
struct TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// UnityEngine.Font TMPro.Examples.TextMeshProFloatingText::TheFont
	Font_tC95270EA3198038970422D78B74A7F2E218A96B6* ___TheFont_4;
	// UnityEngine.GameObject TMPro.Examples.TextMeshProFloatingText::m_floatingText
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___m_floatingText_5;
	// TMPro.TextMeshPro TMPro.Examples.TextMeshProFloatingText::m_textMeshPro
	TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* ___m_textMeshPro_6;
	// UnityEngine.TextMesh TMPro.Examples.TextMeshProFloatingText::m_textMesh
	TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* ___m_textMesh_7;
	// UnityEngine.Transform TMPro.Examples.TextMeshProFloatingText::m_transform
	Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___m_transform_8;
	// UnityEngine.Transform TMPro.Examples.TextMeshProFloatingText::m_floatingText_Transform
	Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___m_floatingText_Transform_9;
	// UnityEngine.Transform TMPro.Examples.TextMeshProFloatingText::m_cameraTransform
	Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___m_cameraTransform_10;
	// UnityEngine.Vector3 TMPro.Examples.TextMeshProFloatingText::lastPOS
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___lastPOS_11;
	// UnityEngine.Quaternion TMPro.Examples.TextMeshProFloatingText::lastRotation
	Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 ___lastRotation_12;
	// System.Int32 TMPro.Examples.TextMeshProFloatingText::SpawnType
	int32_t ___SpawnType_13;
};

// TMPro.Examples.TextMeshSpawner
struct TextMeshSpawner_tB6905931E9BE4D7A2A2E37A51E221A7B462D75BB  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// System.Int32 TMPro.Examples.TextMeshSpawner::SpawnType
	int32_t ___SpawnType_4;
	// System.Int32 TMPro.Examples.TextMeshSpawner::NumberOfNPC
	int32_t ___NumberOfNPC_5;
	// UnityEngine.Font TMPro.Examples.TextMeshSpawner::TheFont
	Font_tC95270EA3198038970422D78B74A7F2E218A96B6* ___TheFont_6;
	// TMPro.Examples.TextMeshProFloatingText TMPro.Examples.TextMeshSpawner::floatingText_Script
	TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* ___floatingText_Script_7;
};

// UnityEngine.EventSystems.UIBehaviour
struct UIBehaviour_tB9D4295827BD2EEDEF0749200C6CA7090C742A9D  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
};

// TMPro.Examples.VertexColorCycler
struct VertexColorCycler_t527535DC3F38CBB70E8A4B35907DA8EC4FC62C8D  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// TMPro.TMP_Text TMPro.Examples.VertexColorCycler::m_TextComponent
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___m_TextComponent_4;
};

// TMPro.Examples.VertexJitter
struct VertexJitter_t5D8689E23D1DD2CCF81ACE6FFC9E34797E8AE4C7  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// System.Single TMPro.Examples.VertexJitter::AngleMultiplier
	float ___AngleMultiplier_4;
	// System.Single TMPro.Examples.VertexJitter::SpeedMultiplier
	float ___SpeedMultiplier_5;
	// System.Single TMPro.Examples.VertexJitter::CurveScale
	float ___CurveScale_6;
	// TMPro.TMP_Text TMPro.Examples.VertexJitter::m_TextComponent
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___m_TextComponent_7;
	// System.Boolean TMPro.Examples.VertexJitter::hasTextChanged
	bool ___hasTextChanged_8;
};

// TMPro.Examples.VertexShakeA
struct VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// System.Single TMPro.Examples.VertexShakeA::AngleMultiplier
	float ___AngleMultiplier_4;
	// System.Single TMPro.Examples.VertexShakeA::SpeedMultiplier
	float ___SpeedMultiplier_5;
	// System.Single TMPro.Examples.VertexShakeA::ScaleMultiplier
	float ___ScaleMultiplier_6;
	// System.Single TMPro.Examples.VertexShakeA::RotationMultiplier
	float ___RotationMultiplier_7;
	// TMPro.TMP_Text TMPro.Examples.VertexShakeA::m_TextComponent
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___m_TextComponent_8;
	// System.Boolean TMPro.Examples.VertexShakeA::hasTextChanged
	bool ___hasTextChanged_9;
};

// TMPro.Examples.VertexShakeB
struct VertexShakeB_tA3849618A1BE8DCE150A615F38CE2E247FC6F6C8  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// System.Single TMPro.Examples.VertexShakeB::AngleMultiplier
	float ___AngleMultiplier_4;
	// System.Single TMPro.Examples.VertexShakeB::SpeedMultiplier
	float ___SpeedMultiplier_5;
	// System.Single TMPro.Examples.VertexShakeB::CurveScale
	float ___CurveScale_6;
	// TMPro.TMP_Text TMPro.Examples.VertexShakeB::m_TextComponent
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___m_TextComponent_7;
	// System.Boolean TMPro.Examples.VertexShakeB::hasTextChanged
	bool ___hasTextChanged_8;
};

// TMPro.Examples.VertexZoom
struct VertexZoom_t51F05EB153497034D27896F07590D790A73981A6  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// System.Single TMPro.Examples.VertexZoom::AngleMultiplier
	float ___AngleMultiplier_4;
	// System.Single TMPro.Examples.VertexZoom::SpeedMultiplier
	float ___SpeedMultiplier_5;
	// System.Single TMPro.Examples.VertexZoom::CurveScale
	float ___CurveScale_6;
	// TMPro.TMP_Text TMPro.Examples.VertexZoom::m_TextComponent
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___m_TextComponent_7;
	// System.Boolean TMPro.Examples.VertexZoom::hasTextChanged
	bool ___hasTextChanged_8;
};

// TMPro.Examples.WarpTextExample
struct WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// TMPro.TMP_Text TMPro.Examples.WarpTextExample::m_TextComponent
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___m_TextComponent_4;
	// UnityEngine.AnimationCurve TMPro.Examples.WarpTextExample::VertexCurve
	AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* ___VertexCurve_5;
	// System.Single TMPro.Examples.WarpTextExample::AngleMultiplier
	float ___AngleMultiplier_6;
	// System.Single TMPro.Examples.WarpTextExample::SpeedMultiplier
	float ___SpeedMultiplier_7;
	// System.Single TMPro.Examples.WarpTextExample::CurveScale
	float ___CurveScale_8;
};

// UnityEngine.UI.Graphic
struct Graphic_tCBFCA4585A19E2B75465AECFEAC43F4016BF7931  : public UIBehaviour_tB9D4295827BD2EEDEF0749200C6CA7090C742A9D
{
	// UnityEngine.Material UnityEngine.UI.Graphic::m_Material
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___m_Material_6;
	// UnityEngine.Color UnityEngine.UI.Graphic::m_Color
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___m_Color_7;
	// System.Boolean UnityEngine.UI.Graphic::m_SkipLayoutUpdate
	bool ___m_SkipLayoutUpdate_8;
	// System.Boolean UnityEngine.UI.Graphic::m_SkipMaterialUpdate
	bool ___m_SkipMaterialUpdate_9;
	// System.Boolean UnityEngine.UI.Graphic::m_RaycastTarget
	bool ___m_RaycastTarget_10;
	// UnityEngine.Vector4 UnityEngine.UI.Graphic::m_RaycastPadding
	Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 ___m_RaycastPadding_11;
	// UnityEngine.RectTransform UnityEngine.UI.Graphic::m_RectTransform
	RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* ___m_RectTransform_12;
	// UnityEngine.CanvasRenderer UnityEngine.UI.Graphic::m_CanvasRenderer
	CanvasRenderer_tAB9A55A976C4E3B2B37D0CE5616E5685A8B43860* ___m_CanvasRenderer_13;
	// UnityEngine.Canvas UnityEngine.UI.Graphic::m_Canvas
	Canvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26* ___m_Canvas_14;
	// System.Boolean UnityEngine.UI.Graphic::m_VertsDirty
	bool ___m_VertsDirty_15;
	// System.Boolean UnityEngine.UI.Graphic::m_MaterialDirty
	bool ___m_MaterialDirty_16;
	// UnityEngine.Events.UnityAction UnityEngine.UI.Graphic::m_OnDirtyLayoutCallback
	UnityAction_t11A1F3B953B365C072A5DCC32677EE1796A962A7* ___m_OnDirtyLayoutCallback_17;
	// UnityEngine.Events.UnityAction UnityEngine.UI.Graphic::m_OnDirtyVertsCallback
	UnityAction_t11A1F3B953B365C072A5DCC32677EE1796A962A7* ___m_OnDirtyVertsCallback_18;
	// UnityEngine.Events.UnityAction UnityEngine.UI.Graphic::m_OnDirtyMaterialCallback
	UnityAction_t11A1F3B953B365C072A5DCC32677EE1796A962A7* ___m_OnDirtyMaterialCallback_19;
	// UnityEngine.Mesh UnityEngine.UI.Graphic::m_CachedMesh
	Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* ___m_CachedMesh_22;
	// UnityEngine.Vector2[] UnityEngine.UI.Graphic::m_CachedUvs
	Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* ___m_CachedUvs_23;
	// UnityEngine.UI.CoroutineTween.TweenRunner`1<UnityEngine.UI.CoroutineTween.ColorTween> UnityEngine.UI.Graphic::m_ColorTweenRunner
	TweenRunner_1_t5BB0582F926E75E2FE795492679A6CF55A4B4BC4* ___m_ColorTweenRunner_24;
	// System.Boolean UnityEngine.UI.Graphic::<useLegacyMeshGeneration>k__BackingField
	bool ___U3CuseLegacyMeshGenerationU3Ek__BackingField_25;
};

struct Graphic_tCBFCA4585A19E2B75465AECFEAC43F4016BF7931_StaticFields
{
	// UnityEngine.Material UnityEngine.UI.Graphic::s_DefaultUI
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___s_DefaultUI_4;
	// UnityEngine.Texture2D UnityEngine.UI.Graphic::s_WhiteTexture
	Texture2D_tE6505BC111DD8A424A9DBE8E05D7D09E11FFFCF4* ___s_WhiteTexture_5;
	// UnityEngine.Mesh UnityEngine.UI.Graphic::s_Mesh
	Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* ___s_Mesh_20;
	// UnityEngine.UI.VertexHelper UnityEngine.UI.Graphic::s_VertexHelper
	VertexHelper_tB905FCB02AE67CBEE5F265FE37A5938FC5D136FE* ___s_VertexHelper_21;
};

// TMPro.TextContainer
struct TextContainer_t949A6EBEE5C8832723E73D8D3DCF4C8D0B3D7F3C  : public UIBehaviour_tB9D4295827BD2EEDEF0749200C6CA7090C742A9D
{
	// System.Boolean TMPro.TextContainer::m_hasChanged
	bool ___m_hasChanged_4;
	// UnityEngine.Vector2 TMPro.TextContainer::m_pivot
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___m_pivot_5;
	// TMPro.TextContainerAnchors TMPro.TextContainer::m_anchorPosition
	int32_t ___m_anchorPosition_6;
	// UnityEngine.Rect TMPro.TextContainer::m_rect
	Rect_tA04E0F8A1830E767F40FB27ECD8D309303571F0D ___m_rect_7;
	// System.Boolean TMPro.TextContainer::m_isDefaultWidth
	bool ___m_isDefaultWidth_8;
	// System.Boolean TMPro.TextContainer::m_isDefaultHeight
	bool ___m_isDefaultHeight_9;
	// System.Boolean TMPro.TextContainer::m_isAutoFitting
	bool ___m_isAutoFitting_10;
	// UnityEngine.Vector3[] TMPro.TextContainer::m_corners
	Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* ___m_corners_11;
	// UnityEngine.Vector3[] TMPro.TextContainer::m_worldCorners
	Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* ___m_worldCorners_12;
	// UnityEngine.Vector4 TMPro.TextContainer::m_margins
	Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 ___m_margins_13;
	// UnityEngine.RectTransform TMPro.TextContainer::m_rectTransform
	RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* ___m_rectTransform_14;
	// TMPro.TextMeshPro TMPro.TextContainer::m_textMeshPro
	TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* ___m_textMeshPro_16;
};

struct TextContainer_t949A6EBEE5C8832723E73D8D3DCF4C8D0B3D7F3C_StaticFields
{
	// UnityEngine.Vector2 TMPro.TextContainer::k_defaultSize
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___k_defaultSize_15;
};

// UnityEngine.UI.MaskableGraphic
struct MaskableGraphic_tFC5B6BE351C90DE53744DF2A70940242774B361E  : public Graphic_tCBFCA4585A19E2B75465AECFEAC43F4016BF7931
{
	// System.Boolean UnityEngine.UI.MaskableGraphic::m_ShouldRecalculateStencil
	bool ___m_ShouldRecalculateStencil_26;
	// UnityEngine.Material UnityEngine.UI.MaskableGraphic::m_MaskMaterial
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___m_MaskMaterial_27;
	// UnityEngine.UI.RectMask2D UnityEngine.UI.MaskableGraphic::m_ParentMask
	RectMask2D_tACF92BE999C791A665BD1ADEABF5BCEB82846670* ___m_ParentMask_28;
	// System.Boolean UnityEngine.UI.MaskableGraphic::m_Maskable
	bool ___m_Maskable_29;
	// System.Boolean UnityEngine.UI.MaskableGraphic::m_IsMaskingGraphic
	bool ___m_IsMaskingGraphic_30;
	// System.Boolean UnityEngine.UI.MaskableGraphic::m_IncludeForMasking
	bool ___m_IncludeForMasking_31;
	// UnityEngine.UI.MaskableGraphic/CullStateChangedEvent UnityEngine.UI.MaskableGraphic::m_OnCullStateChanged
	CullStateChangedEvent_t6073CD0D951EC1256BF74B8F9107D68FC89B99B8* ___m_OnCullStateChanged_32;
	// System.Boolean UnityEngine.UI.MaskableGraphic::m_ShouldRecalculate
	bool ___m_ShouldRecalculate_33;
	// System.Int32 UnityEngine.UI.MaskableGraphic::m_StencilValue
	int32_t ___m_StencilValue_34;
	// UnityEngine.Vector3[] UnityEngine.UI.MaskableGraphic::m_Corners
	Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* ___m_Corners_35;
};

// TMPro.TMP_Text
struct TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9  : public MaskableGraphic_tFC5B6BE351C90DE53744DF2A70940242774B361E
{
	// System.String TMPro.TMP_Text::m_text
	String_t* ___m_text_36;
	// System.Boolean TMPro.TMP_Text::m_IsTextBackingStringDirty
	bool ___m_IsTextBackingStringDirty_37;
	// TMPro.ITextPreprocessor TMPro.TMP_Text::m_TextPreprocessor
	RuntimeObject* ___m_TextPreprocessor_38;
	// System.Boolean TMPro.TMP_Text::m_isRightToLeft
	bool ___m_isRightToLeft_39;
	// TMPro.TMP_FontAsset TMPro.TMP_Text::m_fontAsset
	TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160* ___m_fontAsset_40;
	// TMPro.TMP_FontAsset TMPro.TMP_Text::m_currentFontAsset
	TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160* ___m_currentFontAsset_41;
	// System.Boolean TMPro.TMP_Text::m_isSDFShader
	bool ___m_isSDFShader_42;
	// UnityEngine.Material TMPro.TMP_Text::m_sharedMaterial
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___m_sharedMaterial_43;
	// UnityEngine.Material TMPro.TMP_Text::m_currentMaterial
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___m_currentMaterial_44;
	// System.Int32 TMPro.TMP_Text::m_currentMaterialIndex
	int32_t ___m_currentMaterialIndex_48;
	// UnityEngine.Material[] TMPro.TMP_Text::m_fontSharedMaterials
	MaterialU5BU5D_t2B1D11C42DB07A4400C0535F92DBB87A2E346D3D* ___m_fontSharedMaterials_49;
	// UnityEngine.Material TMPro.TMP_Text::m_fontMaterial
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___m_fontMaterial_50;
	// UnityEngine.Material[] TMPro.TMP_Text::m_fontMaterials
	MaterialU5BU5D_t2B1D11C42DB07A4400C0535F92DBB87A2E346D3D* ___m_fontMaterials_51;
	// System.Boolean TMPro.TMP_Text::m_isMaterialDirty
	bool ___m_isMaterialDirty_52;
	// UnityEngine.Color32 TMPro.TMP_Text::m_fontColor32
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___m_fontColor32_53;
	// UnityEngine.Color TMPro.TMP_Text::m_fontColor
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___m_fontColor_54;
	// UnityEngine.Color32 TMPro.TMP_Text::m_underlineColor
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___m_underlineColor_56;
	// UnityEngine.Color32 TMPro.TMP_Text::m_strikethroughColor
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___m_strikethroughColor_57;
	// System.Boolean TMPro.TMP_Text::m_enableVertexGradient
	bool ___m_enableVertexGradient_58;
	// TMPro.ColorMode TMPro.TMP_Text::m_colorMode
	int32_t ___m_colorMode_59;
	// TMPro.VertexGradient TMPro.TMP_Text::m_fontColorGradient
	VertexGradient_t2C057B53C0EA6E987C2B7BAB0305E686DA1C9A8F ___m_fontColorGradient_60;
	// TMPro.TMP_ColorGradient TMPro.TMP_Text::m_fontColorGradientPreset
	TMP_ColorGradient_t17B51752B4E9499A1FF7D875DCEC1D15A0F4AEBB* ___m_fontColorGradientPreset_61;
	// TMPro.TMP_SpriteAsset TMPro.TMP_Text::m_spriteAsset
	TMP_SpriteAsset_t81F779E6F705CE190DC0D1F93A954CB8B1774B39* ___m_spriteAsset_62;
	// System.Boolean TMPro.TMP_Text::m_tintAllSprites
	bool ___m_tintAllSprites_63;
	// System.Boolean TMPro.TMP_Text::m_tintSprite
	bool ___m_tintSprite_64;
	// UnityEngine.Color32 TMPro.TMP_Text::m_spriteColor
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___m_spriteColor_65;
	// TMPro.TMP_StyleSheet TMPro.TMP_Text::m_StyleSheet
	TMP_StyleSheet_t70C71699F5CB2D855C361DBB78A44C901236C859* ___m_StyleSheet_66;
	// TMPro.TMP_Style TMPro.TMP_Text::m_TextStyle
	TMP_Style_tA9E5B1B35EBFE24EF980CEA03251B638282E120C* ___m_TextStyle_67;
	// System.Int32 TMPro.TMP_Text::m_TextStyleHashCode
	int32_t ___m_TextStyleHashCode_68;
	// System.Boolean TMPro.TMP_Text::m_overrideHtmlColors
	bool ___m_overrideHtmlColors_69;
	// UnityEngine.Color32 TMPro.TMP_Text::m_faceColor
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___m_faceColor_70;
	// UnityEngine.Color32 TMPro.TMP_Text::m_outlineColor
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___m_outlineColor_71;
	// System.Single TMPro.TMP_Text::m_outlineWidth
	float ___m_outlineWidth_72;
	// System.Single TMPro.TMP_Text::m_fontSize
	float ___m_fontSize_73;
	// System.Single TMPro.TMP_Text::m_currentFontSize
	float ___m_currentFontSize_74;
	// System.Single TMPro.TMP_Text::m_fontSizeBase
	float ___m_fontSizeBase_75;
	// TMPro.TMP_TextProcessingStack`1<System.Single> TMPro.TMP_Text::m_sizeStack
	TMP_TextProcessingStack_1_t138EC06BE7F101AA0A3C8D2DC951E55AACE085E9 ___m_sizeStack_76;
	// TMPro.FontWeight TMPro.TMP_Text::m_fontWeight
	int32_t ___m_fontWeight_77;
	// TMPro.FontWeight TMPro.TMP_Text::m_FontWeightInternal
	int32_t ___m_FontWeightInternal_78;
	// TMPro.TMP_TextProcessingStack`1<TMPro.FontWeight> TMPro.TMP_Text::m_FontWeightStack
	TMP_TextProcessingStack_1_tA5C8CED87DD9E73F6359E23B334FFB5B6F813FD4 ___m_FontWeightStack_79;
	// System.Boolean TMPro.TMP_Text::m_enableAutoSizing
	bool ___m_enableAutoSizing_80;
	// System.Single TMPro.TMP_Text::m_maxFontSize
	float ___m_maxFontSize_81;
	// System.Single TMPro.TMP_Text::m_minFontSize
	float ___m_minFontSize_82;
	// System.Int32 TMPro.TMP_Text::m_AutoSizeIterationCount
	int32_t ___m_AutoSizeIterationCount_83;
	// System.Int32 TMPro.TMP_Text::m_AutoSizeMaxIterationCount
	int32_t ___m_AutoSizeMaxIterationCount_84;
	// System.Boolean TMPro.TMP_Text::m_IsAutoSizePointSizeSet
	bool ___m_IsAutoSizePointSizeSet_85;
	// System.Single TMPro.TMP_Text::m_fontSizeMin
	float ___m_fontSizeMin_86;
	// System.Single TMPro.TMP_Text::m_fontSizeMax
	float ___m_fontSizeMax_87;
	// TMPro.FontStyles TMPro.TMP_Text::m_fontStyle
	int32_t ___m_fontStyle_88;
	// TMPro.FontStyles TMPro.TMP_Text::m_FontStyleInternal
	int32_t ___m_FontStyleInternal_89;
	// TMPro.TMP_FontStyleStack TMPro.TMP_Text::m_fontStyleStack
	TMP_FontStyleStack_t52885F172FADBC21346C835B5302167BDA8020DC ___m_fontStyleStack_90;
	// System.Boolean TMPro.TMP_Text::m_isUsingBold
	bool ___m_isUsingBold_91;
	// TMPro.HorizontalAlignmentOptions TMPro.TMP_Text::m_HorizontalAlignment
	int32_t ___m_HorizontalAlignment_92;
	// TMPro.VerticalAlignmentOptions TMPro.TMP_Text::m_VerticalAlignment
	int32_t ___m_VerticalAlignment_93;
	// TMPro.TextAlignmentOptions TMPro.TMP_Text::m_textAlignment
	int32_t ___m_textAlignment_94;
	// TMPro.HorizontalAlignmentOptions TMPro.TMP_Text::m_lineJustification
	int32_t ___m_lineJustification_95;
	// TMPro.TMP_TextProcessingStack`1<TMPro.HorizontalAlignmentOptions> TMPro.TMP_Text::m_lineJustificationStack
	TMP_TextProcessingStack_1_t243EA1B5D7FD2295D6533B953F0BBE8F52EFB8A0 ___m_lineJustificationStack_96;
	// UnityEngine.Vector3[] TMPro.TMP_Text::m_textContainerLocalCorners
	Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* ___m_textContainerLocalCorners_97;
	// System.Single TMPro.TMP_Text::m_characterSpacing
	float ___m_characterSpacing_98;
	// System.Single TMPro.TMP_Text::m_cSpacing
	float ___m_cSpacing_99;
	// System.Single TMPro.TMP_Text::m_monoSpacing
	float ___m_monoSpacing_100;
	// System.Single TMPro.TMP_Text::m_wordSpacing
	float ___m_wordSpacing_101;
	// System.Single TMPro.TMP_Text::m_lineSpacing
	float ___m_lineSpacing_102;
	// System.Single TMPro.TMP_Text::m_lineSpacingDelta
	float ___m_lineSpacingDelta_103;
	// System.Single TMPro.TMP_Text::m_lineHeight
	float ___m_lineHeight_104;
	// System.Boolean TMPro.TMP_Text::m_IsDrivenLineSpacing
	bool ___m_IsDrivenLineSpacing_105;
	// System.Single TMPro.TMP_Text::m_lineSpacingMax
	float ___m_lineSpacingMax_106;
	// System.Single TMPro.TMP_Text::m_paragraphSpacing
	float ___m_paragraphSpacing_107;
	// System.Single TMPro.TMP_Text::m_charWidthMaxAdj
	float ___m_charWidthMaxAdj_108;
	// System.Single TMPro.TMP_Text::m_charWidthAdjDelta
	float ___m_charWidthAdjDelta_109;
	// System.Boolean TMPro.TMP_Text::m_enableWordWrapping
	bool ___m_enableWordWrapping_110;
	// System.Boolean TMPro.TMP_Text::m_isCharacterWrappingEnabled
	bool ___m_isCharacterWrappingEnabled_111;
	// System.Boolean TMPro.TMP_Text::m_isNonBreakingSpace
	bool ___m_isNonBreakingSpace_112;
	// System.Boolean TMPro.TMP_Text::m_isIgnoringAlignment
	bool ___m_isIgnoringAlignment_113;
	// System.Single TMPro.TMP_Text::m_wordWrappingRatios
	float ___m_wordWrappingRatios_114;
	// TMPro.TextOverflowModes TMPro.TMP_Text::m_overflowMode
	int32_t ___m_overflowMode_115;
	// System.Int32 TMPro.TMP_Text::m_firstOverflowCharacterIndex
	int32_t ___m_firstOverflowCharacterIndex_116;
	// TMPro.TMP_Text TMPro.TMP_Text::m_linkedTextComponent
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___m_linkedTextComponent_117;
	// TMPro.TMP_Text TMPro.TMP_Text::parentLinkedComponent
	TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___parentLinkedComponent_118;
	// System.Boolean TMPro.TMP_Text::m_isTextTruncated
	bool ___m_isTextTruncated_119;
	// System.Boolean TMPro.TMP_Text::m_enableKerning
	bool ___m_enableKerning_120;
	// System.Single TMPro.TMP_Text::m_GlyphHorizontalAdvanceAdjustment
	float ___m_GlyphHorizontalAdvanceAdjustment_121;
	// System.Boolean TMPro.TMP_Text::m_enableExtraPadding
	bool ___m_enableExtraPadding_122;
	// System.Boolean TMPro.TMP_Text::checkPaddingRequired
	bool ___checkPaddingRequired_123;
	// System.Boolean TMPro.TMP_Text::m_isRichText
	bool ___m_isRichText_124;
	// System.Boolean TMPro.TMP_Text::m_parseCtrlCharacters
	bool ___m_parseCtrlCharacters_125;
	// System.Boolean TMPro.TMP_Text::m_isOverlay
	bool ___m_isOverlay_126;
	// System.Boolean TMPro.TMP_Text::m_isOrthographic
	bool ___m_isOrthographic_127;
	// System.Boolean TMPro.TMP_Text::m_isCullingEnabled
	bool ___m_isCullingEnabled_128;
	// System.Boolean TMPro.TMP_Text::m_isMaskingEnabled
	bool ___m_isMaskingEnabled_129;
	// System.Boolean TMPro.TMP_Text::isMaskUpdateRequired
	bool ___isMaskUpdateRequired_130;
	// System.Boolean TMPro.TMP_Text::m_ignoreCulling
	bool ___m_ignoreCulling_131;
	// TMPro.TextureMappingOptions TMPro.TMP_Text::m_horizontalMapping
	int32_t ___m_horizontalMapping_132;
	// TMPro.TextureMappingOptions TMPro.TMP_Text::m_verticalMapping
	int32_t ___m_verticalMapping_133;
	// System.Single TMPro.TMP_Text::m_uvLineOffset
	float ___m_uvLineOffset_134;
	// TMPro.TextRenderFlags TMPro.TMP_Text::m_renderMode
	int32_t ___m_renderMode_135;
	// TMPro.VertexSortingOrder TMPro.TMP_Text::m_geometrySortingOrder
	int32_t ___m_geometrySortingOrder_136;
	// System.Boolean TMPro.TMP_Text::m_IsTextObjectScaleStatic
	bool ___m_IsTextObjectScaleStatic_137;
	// System.Boolean TMPro.TMP_Text::m_VertexBufferAutoSizeReduction
	bool ___m_VertexBufferAutoSizeReduction_138;
	// System.Int32 TMPro.TMP_Text::m_firstVisibleCharacter
	int32_t ___m_firstVisibleCharacter_139;
	// System.Int32 TMPro.TMP_Text::m_maxVisibleCharacters
	int32_t ___m_maxVisibleCharacters_140;
	// System.Int32 TMPro.TMP_Text::m_maxVisibleWords
	int32_t ___m_maxVisibleWords_141;
	// System.Int32 TMPro.TMP_Text::m_maxVisibleLines
	int32_t ___m_maxVisibleLines_142;
	// System.Boolean TMPro.TMP_Text::m_useMaxVisibleDescender
	bool ___m_useMaxVisibleDescender_143;
	// System.Int32 TMPro.TMP_Text::m_pageToDisplay
	int32_t ___m_pageToDisplay_144;
	// System.Boolean TMPro.TMP_Text::m_isNewPage
	bool ___m_isNewPage_145;
	// UnityEngine.Vector4 TMPro.TMP_Text::m_margin
	Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 ___m_margin_146;
	// System.Single TMPro.TMP_Text::m_marginLeft
	float ___m_marginLeft_147;
	// System.Single TMPro.TMP_Text::m_marginRight
	float ___m_marginRight_148;
	// System.Single TMPro.TMP_Text::m_marginWidth
	float ___m_marginWidth_149;
	// System.Single TMPro.TMP_Text::m_marginHeight
	float ___m_marginHeight_150;
	// System.Single TMPro.TMP_Text::m_width
	float ___m_width_151;
	// TMPro.TMP_TextInfo TMPro.TMP_Text::m_textInfo
	TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* ___m_textInfo_152;
	// System.Boolean TMPro.TMP_Text::m_havePropertiesChanged
	bool ___m_havePropertiesChanged_153;
	// System.Boolean TMPro.TMP_Text::m_isUsingLegacyAnimationComponent
	bool ___m_isUsingLegacyAnimationComponent_154;
	// UnityEngine.Transform TMPro.TMP_Text::m_transform
	Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___m_transform_155;
	// UnityEngine.RectTransform TMPro.TMP_Text::m_rectTransform
	RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* ___m_rectTransform_156;
	// UnityEngine.Vector2 TMPro.TMP_Text::m_PreviousRectTransformSize
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___m_PreviousRectTransformSize_157;
	// UnityEngine.Vector2 TMPro.TMP_Text::m_PreviousPivotPosition
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___m_PreviousPivotPosition_158;
	// System.Boolean TMPro.TMP_Text::<autoSizeTextContainer>k__BackingField
	bool ___U3CautoSizeTextContainerU3Ek__BackingField_159;
	// System.Boolean TMPro.TMP_Text::m_autoSizeTextContainer
	bool ___m_autoSizeTextContainer_160;
	// UnityEngine.Mesh TMPro.TMP_Text::m_mesh
	Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* ___m_mesh_161;
	// System.Boolean TMPro.TMP_Text::m_isVolumetricText
	bool ___m_isVolumetricText_162;
	// System.Action`1<TMPro.TMP_TextInfo> TMPro.TMP_Text::OnPreRenderText
	Action_1_tB93AB717F9D419A1BEC832FF76E74EAA32184CC1* ___OnPreRenderText_165;
	// TMPro.TMP_SpriteAnimator TMPro.TMP_Text::m_spriteAnimator
	TMP_SpriteAnimator_t2E0F016A61CA343E3222FF51E7CF0E53F9F256E4* ___m_spriteAnimator_166;
	// System.Single TMPro.TMP_Text::m_flexibleHeight
	float ___m_flexibleHeight_167;
	// System.Single TMPro.TMP_Text::m_flexibleWidth
	float ___m_flexibleWidth_168;
	// System.Single TMPro.TMP_Text::m_minWidth
	float ___m_minWidth_169;
	// System.Single TMPro.TMP_Text::m_minHeight
	float ___m_minHeight_170;
	// System.Single TMPro.TMP_Text::m_maxWidth
	float ___m_maxWidth_171;
	// System.Single TMPro.TMP_Text::m_maxHeight
	float ___m_maxHeight_172;
	// UnityEngine.UI.LayoutElement TMPro.TMP_Text::m_LayoutElement
	LayoutElement_tB1F24CC11AF4AA87015C8D8EE06D22349C5BF40A* ___m_LayoutElement_173;
	// System.Single TMPro.TMP_Text::m_preferredWidth
	float ___m_preferredWidth_174;
	// System.Single TMPro.TMP_Text::m_renderedWidth
	float ___m_renderedWidth_175;
	// System.Boolean TMPro.TMP_Text::m_isPreferredWidthDirty
	bool ___m_isPreferredWidthDirty_176;
	// System.Single TMPro.TMP_Text::m_preferredHeight
	float ___m_preferredHeight_177;
	// System.Single TMPro.TMP_Text::m_renderedHeight
	float ___m_renderedHeight_178;
	// System.Boolean TMPro.TMP_Text::m_isPreferredHeightDirty
	bool ___m_isPreferredHeightDirty_179;
	// System.Boolean TMPro.TMP_Text::m_isCalculatingPreferredValues
	bool ___m_isCalculatingPreferredValues_180;
	// System.Int32 TMPro.TMP_Text::m_layoutPriority
	int32_t ___m_layoutPriority_181;
	// System.Boolean TMPro.TMP_Text::m_isLayoutDirty
	bool ___m_isLayoutDirty_182;
	// System.Boolean TMPro.TMP_Text::m_isAwake
	bool ___m_isAwake_183;
	// System.Boolean TMPro.TMP_Text::m_isWaitingOnResourceLoad
	bool ___m_isWaitingOnResourceLoad_184;
	// TMPro.TMP_Text/TextInputSources TMPro.TMP_Text::m_inputSource
	int32_t ___m_inputSource_185;
	// System.Single TMPro.TMP_Text::m_fontScaleMultiplier
	float ___m_fontScaleMultiplier_186;
	// System.Single TMPro.TMP_Text::tag_LineIndent
	float ___tag_LineIndent_190;
	// System.Single TMPro.TMP_Text::tag_Indent
	float ___tag_Indent_191;
	// TMPro.TMP_TextProcessingStack`1<System.Single> TMPro.TMP_Text::m_indentStack
	TMP_TextProcessingStack_1_t138EC06BE7F101AA0A3C8D2DC951E55AACE085E9 ___m_indentStack_192;
	// System.Boolean TMPro.TMP_Text::tag_NoParsing
	bool ___tag_NoParsing_193;
	// System.Boolean TMPro.TMP_Text::m_isParsingText
	bool ___m_isParsingText_194;
	// UnityEngine.Matrix4x4 TMPro.TMP_Text::m_FXMatrix
	Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 ___m_FXMatrix_195;
	// System.Boolean TMPro.TMP_Text::m_isFXMatrixSet
	bool ___m_isFXMatrixSet_196;
	// TMPro.TMP_Text/UnicodeChar[] TMPro.TMP_Text::m_TextProcessingArray
	UnicodeCharU5BU5D_t67F27D09F8EB28D2C42DFF16FE60054F157012F5* ___m_TextProcessingArray_197;
	// System.Int32 TMPro.TMP_Text::m_InternalTextProcessingArraySize
	int32_t ___m_InternalTextProcessingArraySize_198;
	// TMPro.TMP_CharacterInfo[] TMPro.TMP_Text::m_internalCharacterInfo
	TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* ___m_internalCharacterInfo_199;
	// System.Int32 TMPro.TMP_Text::m_totalCharacterCount
	int32_t ___m_totalCharacterCount_200;
	// System.Int32 TMPro.TMP_Text::m_characterCount
	int32_t ___m_characterCount_207;
	// System.Int32 TMPro.TMP_Text::m_firstCharacterOfLine
	int32_t ___m_firstCharacterOfLine_208;
	// System.Int32 TMPro.TMP_Text::m_firstVisibleCharacterOfLine
	int32_t ___m_firstVisibleCharacterOfLine_209;
	// System.Int32 TMPro.TMP_Text::m_lastCharacterOfLine
	int32_t ___m_lastCharacterOfLine_210;
	// System.Int32 TMPro.TMP_Text::m_lastVisibleCharacterOfLine
	int32_t ___m_lastVisibleCharacterOfLine_211;
	// System.Int32 TMPro.TMP_Text::m_lineNumber
	int32_t ___m_lineNumber_212;
	// System.Int32 TMPro.TMP_Text::m_lineVisibleCharacterCount
	int32_t ___m_lineVisibleCharacterCount_213;
	// System.Int32 TMPro.TMP_Text::m_pageNumber
	int32_t ___m_pageNumber_214;
	// System.Single TMPro.TMP_Text::m_PageAscender
	float ___m_PageAscender_215;
	// System.Single TMPro.TMP_Text::m_maxTextAscender
	float ___m_maxTextAscender_216;
	// System.Single TMPro.TMP_Text::m_maxCapHeight
	float ___m_maxCapHeight_217;
	// System.Single TMPro.TMP_Text::m_ElementAscender
	float ___m_ElementAscender_218;
	// System.Single TMPro.TMP_Text::m_ElementDescender
	float ___m_ElementDescender_219;
	// System.Single TMPro.TMP_Text::m_maxLineAscender
	float ___m_maxLineAscender_220;
	// System.Single TMPro.TMP_Text::m_maxLineDescender
	float ___m_maxLineDescender_221;
	// System.Single TMPro.TMP_Text::m_startOfLineAscender
	float ___m_startOfLineAscender_222;
	// System.Single TMPro.TMP_Text::m_startOfLineDescender
	float ___m_startOfLineDescender_223;
	// System.Single TMPro.TMP_Text::m_lineOffset
	float ___m_lineOffset_224;
	// TMPro.Extents TMPro.TMP_Text::m_meshExtents
	Extents_tA2D2F95811D0A18CB7AC3570D2D8F8CD3AF4C4A8 ___m_meshExtents_225;
	// UnityEngine.Color32 TMPro.TMP_Text::m_htmlColor
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___m_htmlColor_226;
	// TMPro.TMP_TextProcessingStack`1<UnityEngine.Color32> TMPro.TMP_Text::m_colorStack
	TMP_TextProcessingStack_1_tF2CD5BE59E5EB22EA9E3EE3043A004EA918C4BB3 ___m_colorStack_227;
	// TMPro.TMP_TextProcessingStack`1<UnityEngine.Color32> TMPro.TMP_Text::m_underlineColorStack
	TMP_TextProcessingStack_1_tF2CD5BE59E5EB22EA9E3EE3043A004EA918C4BB3 ___m_underlineColorStack_228;
	// TMPro.TMP_TextProcessingStack`1<UnityEngine.Color32> TMPro.TMP_Text::m_strikethroughColorStack
	TMP_TextProcessingStack_1_tF2CD5BE59E5EB22EA9E3EE3043A004EA918C4BB3 ___m_strikethroughColorStack_229;
	// TMPro.TMP_TextProcessingStack`1<TMPro.HighlightState> TMPro.TMP_Text::m_HighlightStateStack
	TMP_TextProcessingStack_1_t57AECDCC936A7FF1D6CF66CA11560B28A675648D ___m_HighlightStateStack_230;
	// TMPro.TMP_ColorGradient TMPro.TMP_Text::m_colorGradientPreset
	TMP_ColorGradient_t17B51752B4E9499A1FF7D875DCEC1D15A0F4AEBB* ___m_colorGradientPreset_231;
	// TMPro.TMP_TextProcessingStack`1<TMPro.TMP_ColorGradient> TMPro.TMP_Text::m_colorGradientStack
	TMP_TextProcessingStack_1_tC8FAEB17246D3B171EFD11165A5761AE39B40D0C ___m_colorGradientStack_232;
	// System.Boolean TMPro.TMP_Text::m_colorGradientPresetIsTinted
	bool ___m_colorGradientPresetIsTinted_233;
	// System.Single TMPro.TMP_Text::m_tabSpacing
	float ___m_tabSpacing_234;
	// System.Single TMPro.TMP_Text::m_spacing
	float ___m_spacing_235;
	// TMPro.TMP_TextProcessingStack`1<System.Int32>[] TMPro.TMP_Text::m_TextStyleStacks
	TMP_TextProcessingStack_1U5BU5D_t08293E0BB072311BB96170F351D1083BCA97B9B2* ___m_TextStyleStacks_236;
	// System.Int32 TMPro.TMP_Text::m_TextStyleStackDepth
	int32_t ___m_TextStyleStackDepth_237;
	// TMPro.TMP_TextProcessingStack`1<System.Int32> TMPro.TMP_Text::m_ItalicAngleStack
	TMP_TextProcessingStack_1_tFBA719426D68CE1F2B5849D97AF5E5D65846290C ___m_ItalicAngleStack_238;
	// System.Int32 TMPro.TMP_Text::m_ItalicAngle
	int32_t ___m_ItalicAngle_239;
	// TMPro.TMP_TextProcessingStack`1<System.Int32> TMPro.TMP_Text::m_actionStack
	TMP_TextProcessingStack_1_tFBA719426D68CE1F2B5849D97AF5E5D65846290C ___m_actionStack_240;
	// System.Single TMPro.TMP_Text::m_padding
	float ___m_padding_241;
	// System.Single TMPro.TMP_Text::m_baselineOffset
	float ___m_baselineOffset_242;
	// TMPro.TMP_TextProcessingStack`1<System.Single> TMPro.TMP_Text::m_baselineOffsetStack
	TMP_TextProcessingStack_1_t138EC06BE7F101AA0A3C8D2DC951E55AACE085E9 ___m_baselineOffsetStack_243;
	// System.Single TMPro.TMP_Text::m_xAdvance
	float ___m_xAdvance_244;
	// TMPro.TMP_TextElementType TMPro.TMP_Text::m_textElementType
	int32_t ___m_textElementType_245;
	// TMPro.TMP_TextElement TMPro.TMP_Text::m_cached_TextElement
	TMP_TextElement_t262A55214F712D4274485ABE5676E5254B84D0A5* ___m_cached_TextElement_246;
	// TMPro.TMP_Text/SpecialCharacter TMPro.TMP_Text::m_Ellipsis
	SpecialCharacter_t6C1DBE8C490706D1620899BAB7F0B8091AD26777 ___m_Ellipsis_247;
	// TMPro.TMP_Text/SpecialCharacter TMPro.TMP_Text::m_Underline
	SpecialCharacter_t6C1DBE8C490706D1620899BAB7F0B8091AD26777 ___m_Underline_248;
	// TMPro.TMP_SpriteAsset TMPro.TMP_Text::m_defaultSpriteAsset
	TMP_SpriteAsset_t81F779E6F705CE190DC0D1F93A954CB8B1774B39* ___m_defaultSpriteAsset_249;
	// TMPro.TMP_SpriteAsset TMPro.TMP_Text::m_currentSpriteAsset
	TMP_SpriteAsset_t81F779E6F705CE190DC0D1F93A954CB8B1774B39* ___m_currentSpriteAsset_250;
	// System.Int32 TMPro.TMP_Text::m_spriteCount
	int32_t ___m_spriteCount_251;
	// System.Int32 TMPro.TMP_Text::m_spriteIndex
	int32_t ___m_spriteIndex_252;
	// System.Int32 TMPro.TMP_Text::m_spriteAnimationID
	int32_t ___m_spriteAnimationID_253;
	// System.Boolean TMPro.TMP_Text::m_ignoreActiveState
	bool ___m_ignoreActiveState_256;
	// TMPro.TMP_Text/TextBackingContainer TMPro.TMP_Text::m_TextBackingArray
	TextBackingContainer_t33D1CE628E7B26C45EDAC1D87BEF2DD22A5C6361 ___m_TextBackingArray_257;
	// System.Decimal[] TMPro.TMP_Text::k_Power
	DecimalU5BU5D_t93BA0C88FA80728F73B792EE1A5199D0C060B615* ___k_Power_258;
};

struct TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_StaticFields
{
	// TMPro.MaterialReference[] TMPro.TMP_Text::m_materialReferences
	MaterialReferenceU5BU5D_t7491D335AB3E3E13CE9C0F5E931F396F6A02E1F2* ___m_materialReferences_45;
	// System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> TMPro.TMP_Text::m_materialReferenceIndexLookup
	Dictionary_2_tABE19B9C5C52F1DE14F0D3287B2696E7D7419180* ___m_materialReferenceIndexLookup_46;
	// TMPro.TMP_TextProcessingStack`1<TMPro.MaterialReference> TMPro.TMP_Text::m_materialReferenceStack
	TMP_TextProcessingStack_1_tB03E08F69415B281A5A81138F09E49EE58402DF9 ___m_materialReferenceStack_47;
	// UnityEngine.Color32 TMPro.TMP_Text::s_colorWhite
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___s_colorWhite_55;
	// System.Func`3<System.Int32,System.String,TMPro.TMP_FontAsset> TMPro.TMP_Text::OnFontAssetRequest
	Func_3_tC721DF8CDD07ED66A4833A19A2ED2302608C906C* ___OnFontAssetRequest_163;
	// System.Func`3<System.Int32,System.String,TMPro.TMP_SpriteAsset> TMPro.TMP_Text::OnSpriteAssetRequest
	Func_3_t6F6D9932638EA1A5A45303C6626C818C25D164E5* ___OnSpriteAssetRequest_164;
	// System.Char[] TMPro.TMP_Text::m_htmlTag
	CharU5BU5D_t799905CF001DD5F13F7DBB310181FC4D8B7D0AAB* ___m_htmlTag_187;
	// TMPro.RichTextTagAttribute[] TMPro.TMP_Text::m_xmlAttribute
	RichTextTagAttributeU5BU5D_t5816316EFD8F59DBC30B9F88E15828C564E47B6D* ___m_xmlAttribute_188;
	// System.Single[] TMPro.TMP_Text::m_attributeParameterValues
	SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___m_attributeParameterValues_189;
	// TMPro.WordWrapState TMPro.TMP_Text::m_SavedWordWrapState
	WordWrapState_t80F67D8CAA9B1A0A3D5266521E23A9F3100EDD0A ___m_SavedWordWrapState_201;
	// TMPro.WordWrapState TMPro.TMP_Text::m_SavedLineState
	WordWrapState_t80F67D8CAA9B1A0A3D5266521E23A9F3100EDD0A ___m_SavedLineState_202;
	// TMPro.WordWrapState TMPro.TMP_Text::m_SavedEllipsisState
	WordWrapState_t80F67D8CAA9B1A0A3D5266521E23A9F3100EDD0A ___m_SavedEllipsisState_203;
	// TMPro.WordWrapState TMPro.TMP_Text::m_SavedLastValidState
	WordWrapState_t80F67D8CAA9B1A0A3D5266521E23A9F3100EDD0A ___m_SavedLastValidState_204;
	// TMPro.WordWrapState TMPro.TMP_Text::m_SavedSoftLineBreakState
	WordWrapState_t80F67D8CAA9B1A0A3D5266521E23A9F3100EDD0A ___m_SavedSoftLineBreakState_205;
	// TMPro.TMP_TextProcessingStack`1<TMPro.WordWrapState> TMPro.TMP_Text::m_EllipsisInsertionCandidateStack
	TMP_TextProcessingStack_1_t2DDA00FFC64AF6E3AFD475AB2086D16C34787E0F ___m_EllipsisInsertionCandidateStack_206;
	// Unity.Profiling.ProfilerMarker TMPro.TMP_Text::k_ParseTextMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_ParseTextMarker_254;
	// Unity.Profiling.ProfilerMarker TMPro.TMP_Text::k_InsertNewLineMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_InsertNewLineMarker_255;
	// UnityEngine.Vector2 TMPro.TMP_Text::k_LargePositiveVector2
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___k_LargePositiveVector2_259;
	// UnityEngine.Vector2 TMPro.TMP_Text::k_LargeNegativeVector2
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___k_LargeNegativeVector2_260;
	// System.Single TMPro.TMP_Text::k_LargePositiveFloat
	float ___k_LargePositiveFloat_261;
	// System.Single TMPro.TMP_Text::k_LargeNegativeFloat
	float ___k_LargeNegativeFloat_262;
	// System.Int32 TMPro.TMP_Text::k_LargePositiveInt
	int32_t ___k_LargePositiveInt_263;
	// System.Int32 TMPro.TMP_Text::k_LargeNegativeInt
	int32_t ___k_LargeNegativeInt_264;
};

// TMPro.TextMeshPro
struct TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E  : public TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9
{
	// System.Int32 TMPro.TextMeshPro::_SortingLayer
	int32_t ____SortingLayer_265;
	// System.Int32 TMPro.TextMeshPro::_SortingLayerID
	int32_t ____SortingLayerID_266;
	// System.Int32 TMPro.TextMeshPro::_SortingOrder
	int32_t ____SortingOrder_267;
	// System.Action`1<TMPro.TMP_TextInfo> TMPro.TextMeshPro::OnPreRenderText
	Action_1_tB93AB717F9D419A1BEC832FF76E74EAA32184CC1* ___OnPreRenderText_268;
	// System.Boolean TMPro.TextMeshPro::m_currentAutoSizeMode
	bool ___m_currentAutoSizeMode_269;
	// System.Boolean TMPro.TextMeshPro::m_hasFontAssetChanged
	bool ___m_hasFontAssetChanged_270;
	// System.Single TMPro.TextMeshPro::m_previousLossyScaleY
	float ___m_previousLossyScaleY_271;
	// UnityEngine.Renderer TMPro.TextMeshPro::m_renderer
	Renderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF* ___m_renderer_272;
	// UnityEngine.MeshFilter TMPro.TextMeshPro::m_meshFilter
	MeshFilter_t6D1CE2473A1E45AC73013400585A1163BF66B2F5* ___m_meshFilter_273;
	// System.Boolean TMPro.TextMeshPro::m_isFirstAllocation
	bool ___m_isFirstAllocation_274;
	// System.Int32 TMPro.TextMeshPro::m_max_characters
	int32_t ___m_max_characters_275;
	// System.Int32 TMPro.TextMeshPro::m_max_numberOfLines
	int32_t ___m_max_numberOfLines_276;
	// TMPro.TMP_SubMesh[] TMPro.TextMeshPro::m_subTextObjects
	TMP_SubMeshU5BU5D_t48FE70F8537594C6446E85588EB5D69635194CB9* ___m_subTextObjects_277;
	// TMPro.MaskingTypes TMPro.TextMeshPro::m_maskType
	int32_t ___m_maskType_278;
	// UnityEngine.Matrix4x4 TMPro.TextMeshPro::m_EnvMapMatrix
	Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 ___m_EnvMapMatrix_279;
	// UnityEngine.Vector3[] TMPro.TextMeshPro::m_RectTransformCorners
	Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* ___m_RectTransformCorners_280;
	// System.Boolean TMPro.TextMeshPro::m_isRegisteredForEvents
	bool ___m_isRegisteredForEvents_281;
};

struct TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_StaticFields
{
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshPro::k_GenerateTextMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_GenerateTextMarker_282;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshPro::k_SetArraySizesMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_SetArraySizesMarker_283;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshPro::k_GenerateTextPhaseIMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_GenerateTextPhaseIMarker_284;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshPro::k_ParseMarkupTextMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_ParseMarkupTextMarker_285;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshPro::k_CharacterLookupMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_CharacterLookupMarker_286;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshPro::k_HandleGPOSFeaturesMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_HandleGPOSFeaturesMarker_287;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshPro::k_CalculateVerticesPositionMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_CalculateVerticesPositionMarker_288;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshPro::k_ComputeTextMetricsMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_ComputeTextMetricsMarker_289;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshPro::k_HandleVisibleCharacterMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_HandleVisibleCharacterMarker_290;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshPro::k_HandleWhiteSpacesMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_HandleWhiteSpacesMarker_291;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshPro::k_HandleHorizontalLineBreakingMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_HandleHorizontalLineBreakingMarker_292;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshPro::k_HandleVerticalLineBreakingMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_HandleVerticalLineBreakingMarker_293;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshPro::k_SaveGlyphVertexDataMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_SaveGlyphVertexDataMarker_294;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshPro::k_ComputeCharacterAdvanceMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_ComputeCharacterAdvanceMarker_295;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshPro::k_HandleCarriageReturnMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_HandleCarriageReturnMarker_296;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshPro::k_HandleLineTerminationMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_HandleLineTerminationMarker_297;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshPro::k_SavePageInfoMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_SavePageInfoMarker_298;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshPro::k_SaveProcessingStatesMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_SaveProcessingStatesMarker_299;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshPro::k_GenerateTextPhaseIIMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_GenerateTextPhaseIIMarker_300;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshPro::k_GenerateTextPhaseIIIMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_GenerateTextPhaseIIIMarker_301;
};

// TMPro.TextMeshProUGUI
struct TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957  : public TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9
{
	// System.Boolean TMPro.TextMeshProUGUI::m_isRebuildingLayout
	bool ___m_isRebuildingLayout_265;
	// UnityEngine.Coroutine TMPro.TextMeshProUGUI::m_DelayedGraphicRebuild
	Coroutine_t85EA685566A254C23F3FD77AB5BDFFFF8799596B* ___m_DelayedGraphicRebuild_266;
	// UnityEngine.Coroutine TMPro.TextMeshProUGUI::m_DelayedMaterialRebuild
	Coroutine_t85EA685566A254C23F3FD77AB5BDFFFF8799596B* ___m_DelayedMaterialRebuild_267;
	// UnityEngine.Rect TMPro.TextMeshProUGUI::m_ClipRect
	Rect_tA04E0F8A1830E767F40FB27ECD8D309303571F0D ___m_ClipRect_268;
	// System.Boolean TMPro.TextMeshProUGUI::m_ValidRect
	bool ___m_ValidRect_269;
	// System.Action`1<TMPro.TMP_TextInfo> TMPro.TextMeshProUGUI::OnPreRenderText
	Action_1_tB93AB717F9D419A1BEC832FF76E74EAA32184CC1* ___OnPreRenderText_270;
	// System.Boolean TMPro.TextMeshProUGUI::m_hasFontAssetChanged
	bool ___m_hasFontAssetChanged_271;
	// TMPro.TMP_SubMeshUI[] TMPro.TextMeshProUGUI::m_subTextObjects
	TMP_SubMeshUIU5BU5D_tC77B263183A59A75345C26152457207EAC3BBF29* ___m_subTextObjects_272;
	// System.Single TMPro.TextMeshProUGUI::m_previousLossyScaleY
	float ___m_previousLossyScaleY_273;
	// UnityEngine.Vector3[] TMPro.TextMeshProUGUI::m_RectTransformCorners
	Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* ___m_RectTransformCorners_274;
	// UnityEngine.CanvasRenderer TMPro.TextMeshProUGUI::m_canvasRenderer
	CanvasRenderer_tAB9A55A976C4E3B2B37D0CE5616E5685A8B43860* ___m_canvasRenderer_275;
	// UnityEngine.Canvas TMPro.TextMeshProUGUI::m_canvas
	Canvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26* ___m_canvas_276;
	// System.Single TMPro.TextMeshProUGUI::m_CanvasScaleFactor
	float ___m_CanvasScaleFactor_277;
	// System.Boolean TMPro.TextMeshProUGUI::m_isFirstAllocation
	bool ___m_isFirstAllocation_278;
	// System.Int32 TMPro.TextMeshProUGUI::m_max_characters
	int32_t ___m_max_characters_279;
	// UnityEngine.Material TMPro.TextMeshProUGUI::m_baseMaterial
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___m_baseMaterial_280;
	// System.Boolean TMPro.TextMeshProUGUI::m_isScrollRegionSet
	bool ___m_isScrollRegionSet_281;
	// UnityEngine.Vector4 TMPro.TextMeshProUGUI::m_maskOffset
	Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 ___m_maskOffset_282;
	// UnityEngine.Matrix4x4 TMPro.TextMeshProUGUI::m_EnvMapMatrix
	Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 ___m_EnvMapMatrix_283;
	// System.Boolean TMPro.TextMeshProUGUI::m_isRegisteredForEvents
	bool ___m_isRegisteredForEvents_284;
};

struct TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_StaticFields
{
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshProUGUI::k_GenerateTextMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_GenerateTextMarker_285;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshProUGUI::k_SetArraySizesMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_SetArraySizesMarker_286;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshProUGUI::k_GenerateTextPhaseIMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_GenerateTextPhaseIMarker_287;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshProUGUI::k_ParseMarkupTextMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_ParseMarkupTextMarker_288;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshProUGUI::k_CharacterLookupMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_CharacterLookupMarker_289;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshProUGUI::k_HandleGPOSFeaturesMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_HandleGPOSFeaturesMarker_290;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshProUGUI::k_CalculateVerticesPositionMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_CalculateVerticesPositionMarker_291;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshProUGUI::k_ComputeTextMetricsMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_ComputeTextMetricsMarker_292;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshProUGUI::k_HandleVisibleCharacterMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_HandleVisibleCharacterMarker_293;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshProUGUI::k_HandleWhiteSpacesMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_HandleWhiteSpacesMarker_294;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshProUGUI::k_HandleHorizontalLineBreakingMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_HandleHorizontalLineBreakingMarker_295;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshProUGUI::k_HandleVerticalLineBreakingMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_HandleVerticalLineBreakingMarker_296;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshProUGUI::k_SaveGlyphVertexDataMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_SaveGlyphVertexDataMarker_297;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshProUGUI::k_ComputeCharacterAdvanceMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_ComputeCharacterAdvanceMarker_298;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshProUGUI::k_HandleCarriageReturnMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_HandleCarriageReturnMarker_299;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshProUGUI::k_HandleLineTerminationMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_HandleLineTerminationMarker_300;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshProUGUI::k_SavePageInfoMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_SavePageInfoMarker_301;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshProUGUI::k_SaveProcessingStatesMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_SaveProcessingStatesMarker_302;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshProUGUI::k_GenerateTextPhaseIIMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_GenerateTextPhaseIIMarker_303;
	// Unity.Profiling.ProfilerMarker TMPro.TextMeshProUGUI::k_GenerateTextPhaseIIIMarker
	ProfilerMarker_tA256E18DA86EDBC5528CE066FC91C96EE86501AD ___k_GenerateTextPhaseIIIMarker_304;
};
#ifdef __clang__
#pragma clang diagnostic pop
#endif
// TMPro.TMP_WordInfo[]
struct TMP_WordInfoU5BU5D_tD1759E5A84DCCCD42B718D79E953E72A432BB4DC  : public RuntimeArray
{
	ALIGN_FIELD (8) TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983 m_Items[1];

	inline TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___textComponent_0), (void*)NULL);
	}
	inline TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983 value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___textComponent_0), (void*)NULL);
	}
};
// System.String[]
struct StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248  : public RuntimeArray
{
	ALIGN_FIELD (8) String_t* m_Items[1];

	inline String_t* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline String_t** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, String_t* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline String_t* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline String_t** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, String_t* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// TMPro.TMP_LinkInfo[]
struct TMP_LinkInfoU5BU5D_tE11BE54A5923BD2148E716289F44EA465E06536E  : public RuntimeArray
{
	ALIGN_FIELD (8) TMP_LinkInfo_t9DC08E8BF8C5E8094AFF8C9FB3C251AF88B92DA6 m_Items[1];

	inline TMP_LinkInfo_t9DC08E8BF8C5E8094AFF8C9FB3C251AF88B92DA6 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline TMP_LinkInfo_t9DC08E8BF8C5E8094AFF8C9FB3C251AF88B92DA6* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, TMP_LinkInfo_t9DC08E8BF8C5E8094AFF8C9FB3C251AF88B92DA6 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___textComponent_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___linkID_6), (void*)NULL);
		#endif
	}
	inline TMP_LinkInfo_t9DC08E8BF8C5E8094AFF8C9FB3C251AF88B92DA6 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline TMP_LinkInfo_t9DC08E8BF8C5E8094AFF8C9FB3C251AF88B92DA6* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, TMP_LinkInfo_t9DC08E8BF8C5E8094AFF8C9FB3C251AF88B92DA6 value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___textComponent_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___linkID_6), (void*)NULL);
		#endif
	}
};
// UnityEngine.Color32[]
struct Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259  : public RuntimeArray
{
	ALIGN_FIELD (8) Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B m_Items[1];

	inline Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B value)
	{
		m_Items[index] = value;
	}
};
// TMPro.TMP_CharacterInfo[]
struct TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99  : public RuntimeArray
{
	ALIGN_FIELD (8) TMP_CharacterInfo_t8B8FF32D6AACE251F2E7835AA5BC6608D535D9F8 m_Items[1];

	inline TMP_CharacterInfo_t8B8FF32D6AACE251F2E7835AA5BC6608D535D9F8 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline TMP_CharacterInfo_t8B8FF32D6AACE251F2E7835AA5BC6608D535D9F8* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, TMP_CharacterInfo_t8B8FF32D6AACE251F2E7835AA5BC6608D535D9F8 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___textElement_4), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___fontAsset_5), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___spriteAsset_6), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___material_8), (void*)NULL);
		#endif
	}
	inline TMP_CharacterInfo_t8B8FF32D6AACE251F2E7835AA5BC6608D535D9F8 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline TMP_CharacterInfo_t8B8FF32D6AACE251F2E7835AA5BC6608D535D9F8* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, TMP_CharacterInfo_t8B8FF32D6AACE251F2E7835AA5BC6608D535D9F8 value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___textElement_4), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___fontAsset_5), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___spriteAsset_6), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___material_8), (void*)NULL);
		#endif
	}
};
// TMPro.TMP_MeshInfo[]
struct TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7  : public RuntimeArray
{
	ALIGN_FIELD (8) TMP_MeshInfo_t320C52212E9D672EBB5F5C18C3E0700AA33DD76B m_Items[1];

	inline TMP_MeshInfo_t320C52212E9D672EBB5F5C18C3E0700AA33DD76B GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline TMP_MeshInfo_t320C52212E9D672EBB5F5C18C3E0700AA33DD76B* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, TMP_MeshInfo_t320C52212E9D672EBB5F5C18C3E0700AA33DD76B value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___mesh_4), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___vertices_6), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___normals_7), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___tangents_8), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___uvs0_9), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___uvs2_10), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___colors32_11), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___triangles_12), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___material_13), (void*)NULL);
		#endif
	}
	inline TMP_MeshInfo_t320C52212E9D672EBB5F5C18C3E0700AA33DD76B GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline TMP_MeshInfo_t320C52212E9D672EBB5F5C18C3E0700AA33DD76B* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, TMP_MeshInfo_t320C52212E9D672EBB5F5C18C3E0700AA33DD76B value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___mesh_4), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___vertices_6), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___normals_7), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___tangents_8), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___uvs0_9), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___uvs2_10), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___colors32_11), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___triangles_12), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&((m_Items + index)->___material_13), (void*)NULL);
		#endif
	}
};
// UnityEngine.Vector3[]
struct Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C  : public RuntimeArray
{
	ALIGN_FIELD (8) Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 m_Items[1];

	inline Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 value)
	{
		m_Items[index] = value;
	}
};
// UnityEngine.Vector2[]
struct Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA  : public RuntimeArray
{
	ALIGN_FIELD (8) Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 m_Items[1];

	inline Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 value)
	{
		m_Items[index] = value;
	}
};
// TMPro.Examples.VertexJitter/VertexAnim[]
struct VertexAnimU5BU5D_tC74236D4EB454A8EF2CE1E6145CE5F78E1D5CF38  : public RuntimeArray
{
	ALIGN_FIELD (8) VertexAnim_tFF5399F548EE5426E46DEB662F561DDE129E20D7 m_Items[1];

	inline VertexAnim_tFF5399F548EE5426E46DEB662F561DDE129E20D7 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline VertexAnim_tFF5399F548EE5426E46DEB662F561DDE129E20D7* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, VertexAnim_tFF5399F548EE5426E46DEB662F561DDE129E20D7 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline VertexAnim_tFF5399F548EE5426E46DEB662F561DDE129E20D7 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline VertexAnim_tFF5399F548EE5426E46DEB662F561DDE129E20D7* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, VertexAnim_tFF5399F548EE5426E46DEB662F561DDE129E20D7 value)
	{
		m_Items[index] = value;
	}
};
// UnityEngine.Vector3[][]
struct Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D  : public RuntimeArray
{
	ALIGN_FIELD (8) Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* m_Items[1];

	inline Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// TMPro.TMP_LineInfo[]
struct TMP_LineInfoU5BU5D_tE485ECF6A7A96441C72B53D75E7A5A5461A2CA0E  : public RuntimeArray
{
	ALIGN_FIELD (8) TMP_LineInfo_tB75C1965B58DB7B3A046C8CA55AD6AB92B6B17B3 m_Items[1];

	inline TMP_LineInfo_tB75C1965B58DB7B3A046C8CA55AD6AB92B6B17B3 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline TMP_LineInfo_tB75C1965B58DB7B3A046C8CA55AD6AB92B6B17B3* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, TMP_LineInfo_tB75C1965B58DB7B3A046C8CA55AD6AB92B6B17B3 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline TMP_LineInfo_tB75C1965B58DB7B3A046C8CA55AD6AB92B6B17B3 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline TMP_LineInfo_tB75C1965B58DB7B3A046C8CA55AD6AB92B6B17B3* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, TMP_LineInfo_tB75C1965B58DB7B3A046C8CA55AD6AB92B6B17B3 value)
	{
		m_Items[index] = value;
	}
};
// UnityEngine.Keyframe[]
struct KeyframeU5BU5D_t63250A46914A6A07B2A6689850D47D7D19D80BA3  : public RuntimeArray
{
	ALIGN_FIELD (8) Keyframe_tB9C67DCBFE10C0AE9C52CB5C66E944255C9254F0 m_Items[1];

	inline Keyframe_tB9C67DCBFE10C0AE9C52CB5C66E944255C9254F0 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Keyframe_tB9C67DCBFE10C0AE9C52CB5C66E944255C9254F0* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Keyframe_tB9C67DCBFE10C0AE9C52CB5C66E944255C9254F0 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Keyframe_tB9C67DCBFE10C0AE9C52CB5C66E944255C9254F0 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Keyframe_tB9C67DCBFE10C0AE9C52CB5C66E944255C9254F0* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Keyframe_tB9C67DCBFE10C0AE9C52CB5C66E944255C9254F0 value)
	{
		m_Items[index] = value;
	}
};
// System.Byte[]
struct ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031  : public RuntimeArray
{
	ALIGN_FIELD (8) uint8_t m_Items[1];

	inline uint8_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline uint8_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, uint8_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline uint8_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline uint8_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, uint8_t value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point2d[]
struct Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485  : public RuntimeArray
{
	ALIGN_FIELD (8) Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C m_Items[1];

	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point3f[]
struct Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2  : public RuntimeArray
{
	ALIGN_FIELD (8) Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 m_Items[1];

	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point2f[]
struct Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953  : public RuntimeArray
{
	ALIGN_FIELD (8) Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 m_Items[1];

	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 value)
	{
		m_Items[index] = value;
	}
};
// System.Double[]
struct DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE  : public RuntimeArray
{
	ALIGN_FIELD (8) double m_Items[1];

	inline double GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline double* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, double value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline double GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline double* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, double value)
	{
		m_Items[index] = value;
	}
};
// System.IntPtr[]
struct IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832  : public RuntimeArray
{
	ALIGN_FIELD (8) intptr_t m_Items[1];

	inline intptr_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline intptr_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, intptr_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline intptr_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline intptr_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, intptr_t value)
	{
		m_Items[index] = value;
	}
};
// System.Int32[]
struct Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C  : public RuntimeArray
{
	ALIGN_FIELD (8) int32_t m_Items[1];

	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// System.Double[,]
struct DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE  : public RuntimeArray
{
	ALIGN_FIELD (8) double m_Items[1];

	inline double GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline double* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, double value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline double GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline double* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, double value)
	{
		m_Items[index] = value;
	}
	inline double GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline double* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, double value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline double GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline double* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, double value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec2f[]
struct Vec2fU5BU5D_t605FE443F498ED80B628FC0E98240C847D9C22FF  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E m_Items[1];

	inline Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec3f[]
struct Vec3fU5BU5D_tED5C8EB686AD5A75ACA66EC986897DE59ABF6C4D  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4 m_Items[1];

	inline Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4 value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec4f[]
struct Vec4fU5BU5D_t3B2FBCD7291E3C966FB625B86393DC5CDB180A64  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 m_Items[1];

	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point3d[]
struct Point3dU5BU5D_tCFCFAEE9362D1E9BA210F2CBFABAEC68D052F43D  : public RuntimeArray
{
	ALIGN_FIELD (8) Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC m_Items[1];

	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec4d[]
struct Vec4dU5BU5D_t4CD1D642D7FE8D7D780F5089E9047773F65F29E7  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D m_Items[1];

	inline Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Range[]
struct RangeU5BU5D_t7A815EED0DB267C51F9F6C0507B9579B68391756  : public RuntimeArray
{
	ALIGN_FIELD (8) Range_t981FA0C4141FE7585A1C292A250B431019099C09 m_Items[1];

	inline Range_t981FA0C4141FE7585A1C292A250B431019099C09 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Range_t981FA0C4141FE7585A1C292A250B431019099C09* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Range_t981FA0C4141FE7585A1C292A250B431019099C09 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Range_t981FA0C4141FE7585A1C292A250B431019099C09 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Range_t981FA0C4141FE7585A1C292A250B431019099C09* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Range_t981FA0C4141FE7585A1C292A250B431019099C09 value)
	{
		m_Items[index] = value;
	}
};
// System.Byte[,]
struct ByteU5BU2CU5D_tFF0F8305C018904B90DCD1740962BABBC458B638  : public RuntimeArray
{
	ALIGN_FIELD (8) uint8_t m_Items[1];

	inline uint8_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline uint8_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, uint8_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline uint8_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline uint8_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, uint8_t value)
	{
		m_Items[index] = value;
	}
	inline uint8_t GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline uint8_t* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, uint8_t value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline uint8_t GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline uint8_t* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, uint8_t value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// System.Int16[]
struct Int16U5BU5D_t8175CE8DD9C9F9FB0CF4F58E45BC570575B43CFB  : public RuntimeArray
{
	ALIGN_FIELD (8) int16_t m_Items[1];

	inline int16_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int16_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int16_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int16_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int16_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int16_t value)
	{
		m_Items[index] = value;
	}
};
// System.Int16[,]
struct Int16U5BU2CU5D_tA1085F28F76441E5B3C4F55200C853889884825E  : public RuntimeArray
{
	ALIGN_FIELD (8) int16_t m_Items[1];

	inline int16_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int16_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int16_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int16_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int16_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int16_t value)
	{
		m_Items[index] = value;
	}
	inline int16_t GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline int16_t* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, int16_t value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline int16_t GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline int16_t* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, int16_t value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// System.UInt16[]
struct UInt16U5BU5D_tEB7C42D811D999D2AA815BADC3FCCDD9C67B3F83  : public RuntimeArray
{
	ALIGN_FIELD (8) uint16_t m_Items[1];

	inline uint16_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline uint16_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, uint16_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline uint16_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline uint16_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, uint16_t value)
	{
		m_Items[index] = value;
	}
};
// System.UInt16[,]
struct UInt16U5BU2CU5D_t2C918D9FF94D8CF06CE395FB8C6B931FA8B8AE1B  : public RuntimeArray
{
	ALIGN_FIELD (8) uint16_t m_Items[1];

	inline uint16_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline uint16_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, uint16_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline uint16_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline uint16_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, uint16_t value)
	{
		m_Items[index] = value;
	}
	inline uint16_t GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline uint16_t* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, uint16_t value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline uint16_t GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline uint16_t* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, uint16_t value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// System.Int32[,]
struct Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F  : public RuntimeArray
{
	ALIGN_FIELD (8) int32_t m_Items[1];

	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
	inline int32_t GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, int32_t value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, int32_t value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// System.Single[]
struct SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C  : public RuntimeArray
{
	ALIGN_FIELD (8) float m_Items[1];

	inline float GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline float* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, float value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline float GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline float* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, float value)
	{
		m_Items[index] = value;
	}
};
// System.Single[,]
struct SingleU5BU2CU5D_t8C95DA2D5056EB0490FC7DCB1ED30E33DE1D53F4  : public RuntimeArray
{
	ALIGN_FIELD (8) float m_Items[1];

	inline float GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline float* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, float value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline float GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline float* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, float value)
	{
		m_Items[index] = value;
	}
	inline float GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline float* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, float value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline float GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline float* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, float value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec3b[]
struct Vec3bU5BU5D_t65AD1F336D24EA9AD600B4A6CB27B3B517C138EE  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 m_Items[1];

	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec3b[,]
struct Vec3bU5BU2CU5D_tE90BFA4A10C08A985D030E3187325900CBF521B5  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 m_Items[1];

	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 value)
	{
		m_Items[index] = value;
	}
	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec3d[]
struct Vec3dU5BU5D_t7F6500BD6738D9EF9379BBF49E20270DD8FE005E  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD m_Items[1];

	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec3d[,]
struct Vec3dU5BU2CU5D_t29CB373947AD17A0ECF7B4EEB20936B21D140804  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD m_Items[1];

	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD value)
	{
		m_Items[index] = value;
	}
	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec4f[,]
struct Vec4fU5BU2CU5D_t54D8EA2F459F41BD179635792BF550EB3E317FDF  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 m_Items[1];

	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 value)
	{
		m_Items[index] = value;
	}
	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec6f[]
struct Vec6fU5BU5D_t592D4E62D13229DBA0A9CD133ADE98A5E27449C3  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E m_Items[1];

	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec6f[,]
struct Vec6fU5BU2CU5D_t7C67D2C5EDBC06D656BC54F1A2409DE9F3334AAE  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E m_Items[1];

	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E value)
	{
		m_Items[index] = value;
	}
	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec4i[]
struct Vec4iU5BU5D_tA592A0B55AB1329BD078300CADFC474499AA7157  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB m_Items[1];

	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec4i[,]
struct Vec4iU5BU2CU5D_t438C08E75365B75E4142B910325D19F21F4C6CD9  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB m_Items[1];

	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB value)
	{
		m_Items[index] = value;
	}
	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point[]
struct PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B  : public RuntimeArray
{
	ALIGN_FIELD (8) Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC m_Items[1];

	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point[,]
struct PointU5BU2CU5D_t75336C640C8EF9A5D74131EF2FF56ADE1E04A0A3  : public RuntimeArray
{
	ALIGN_FIELD (8) Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC m_Items[1];

	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC value)
	{
		m_Items[index] = value;
	}
	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point2f[,]
struct Point2fU5BU2CU5D_t534637B478C32FFC446C173967390F3A2A61FBEF  : public RuntimeArray
{
	ALIGN_FIELD (8) Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 m_Items[1];

	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 value)
	{
		m_Items[index] = value;
	}
	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point2d[,]
struct Point2dU5BU2CU5D_t7484AAFF04C19494AB4D23D45BE7FB1371C8B4DE  : public RuntimeArray
{
	ALIGN_FIELD (8) Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C m_Items[1];

	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C value)
	{
		m_Items[index] = value;
	}
	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point3i[]
struct Point3iU5BU5D_t4ADE5D61157E49120DBB2AC37D0C253B312688EC  : public RuntimeArray
{
	ALIGN_FIELD (8) Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B m_Items[1];

	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point3i[,]
struct Point3iU5BU2CU5D_t9D63D6246F01F8C00A5D07420A3EC8F43E7EB075  : public RuntimeArray
{
	ALIGN_FIELD (8) Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B m_Items[1];

	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B value)
	{
		m_Items[index] = value;
	}
	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point3f[,]
struct Point3fU5BU2CU5D_t956F68C0D8D3E941181E3BDAA0CDF49861545B6C  : public RuntimeArray
{
	ALIGN_FIELD (8) Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 m_Items[1];

	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 value)
	{
		m_Items[index] = value;
	}
	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point3d[,]
struct Point3dU5BU2CU5D_tF448DE8BEF99C9C7200AC09879C34D2B9BB16E43  : public RuntimeArray
{
	ALIGN_FIELD (8) Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC m_Items[1];

	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC value)
	{
		m_Items[index] = value;
	}
	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Rect[]
struct RectU5BU5D_t8D707798510E7E6C5EDA64E457B86964B724B96A  : public RuntimeArray
{
	ALIGN_FIELD (8) Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A m_Items[1];

	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Rect[,]
struct RectU5BU2CU5D_t466728D2C4C1410891B29B2693FA0796C414CC2D  : public RuntimeArray
{
	ALIGN_FIELD (8) Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A m_Items[1];

	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A value)
	{
		m_Items[index] = value;
	}
	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.KeyPoint[]
struct KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17  : public RuntimeArray
{
	ALIGN_FIELD (8) KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA m_Items[1];

	inline KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.DMatch[]
struct DMatchU5BU5D_t5146FE58B7CF480941ED1CBE7375F150A69CBD34  : public RuntimeArray
{
	ALIGN_FIELD (8) DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A m_Items[1];

	inline DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec6d[]
struct Vec6dU5BU5D_tD00B137B3DBEF1DB6F17CA62572E730E9D27FE42  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6 m_Items[1];

	inline Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6 value)
	{
		m_Items[index] = value;
	}
};
// System.Object[]
struct ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918  : public RuntimeArray
{
	ALIGN_FIELD (8) RuntimeObject* m_Items[1];

	inline RuntimeObject* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RuntimeObject* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline RuntimeObject* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RuntimeObject* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};


// T UnityEngine.Component::GetComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* Component_GetComponent_TisRuntimeObject_m7181F81CAEC2CF53F5D2BC79B7425C16E1F80D33_gshared (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method) ;
// T UnityEngine.GameObject::GetComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* GameObject_GetComponent_TisRuntimeObject_m6EAED4AA356F0F48288F67899E5958792395563B_gshared (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method) ;
// System.Void System.Action`1<System.Object>::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Action_1__ctor_m2E1DFA67718FC1A0B6E5DFEB78831FFE9C059EB4_gshared (Action_1_t6F9EB113EB3F16226AEF811A2744F4111C116C87* __this, RuntimeObject* ___object0, intptr_t ___method1, const RuntimeMethod* method) ;
// System.Void TMPro.FastAction`1<System.Object>::Add(System.Action`1<A>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FastAction_1_Add_mAFBAB8BEFC425D727FF303611342E6D1E6E82D86_gshared (FastAction_1_t30779A2821DCE05CA702D5800B30CABF67687135* __this, Action_1_t6F9EB113EB3F16226AEF811A2744F4111C116C87* ___rhs0, const RuntimeMethod* method) ;
// System.Void TMPro.FastAction`1<System.Object>::Remove(System.Action`1<A>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FastAction_1_Remove_m0C649E2173AA0370C08417DCFD89B7304F28BC0C_gshared (FastAction_1_t30779A2821DCE05CA702D5800B30CABF67687135* __this, Action_1_t6F9EB113EB3F16226AEF811A2744F4111C116C87* ___rhs0, const RuntimeMethod* method) ;
// T UnityEngine.GameObject::AddComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* GameObject_AddComponent_TisRuntimeObject_m69B93700FACCF372F5753371C6E8FB780800B824_gshared (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method) ;
// T UnityEngine.Resources::Load<System.Object>(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* Resources_Load_TisRuntimeObject_m8B40A11CE62A4E445DADC28C81BD73922A4D4B65_gshared (String_t* ___path0, const RuntimeMethod* method) ;
// System.Void UnityEngine.Events.UnityAction`2<System.Char,System.Int32>::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityAction_2__ctor_m9F49CFF4FADF7EF080CEA8DCAD9FA2EB8D63F35D_gshared (UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007* __this, RuntimeObject* ___object0, intptr_t ___method1, const RuntimeMethod* method) ;
// System.Void UnityEngine.Events.UnityEvent`2<System.Char,System.Int32>::AddListener(UnityEngine.Events.UnityAction`2<T0,T1>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_2_AddListener_mE2FC084F4ADB9D24D904D6A39A83763969F91E27_gshared (UnityEvent_2_tE1EF7CBD9965CD9466B63C1AD8FB3661A30C25B3* __this, UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007* ___call0, const RuntimeMethod* method) ;
// System.Void UnityEngine.Events.UnityAction`3<System.Object,System.Int32,System.Int32>::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityAction_3__ctor_mD44DC0C0DB38805A3DB6A9B9F6052F2332DEEE79_gshared (UnityAction_3_t2F4C93AEE3F6452801100D902D54CF21027541D8* __this, RuntimeObject* ___object0, intptr_t ___method1, const RuntimeMethod* method) ;
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Int32,System.Int32>::AddListener(UnityEngine.Events.UnityAction`3<T0,T1,T2>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3_AddListener_mB461B21F098D8AA18E33A0FF2AC6B5F357AF0299_gshared (UnityEvent_3_tD7E14BDD38F12B63EFECBD1604C666F9AF100EAA* __this, UnityAction_3_t2F4C93AEE3F6452801100D902D54CF21027541D8* ___call0, const RuntimeMethod* method) ;
// System.Void UnityEngine.Events.UnityAction`3<System.Object,System.Object,System.Int32>::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityAction_3__ctor_m2F6C2E527FCBE0253599EB3B4066B3F3E0FD5A6D_gshared (UnityAction_3_tFD664A83B91518A4F822E02F501557F29ECCF487* __this, RuntimeObject* ___object0, intptr_t ___method1, const RuntimeMethod* method) ;
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Object,System.Int32>::AddListener(UnityEngine.Events.UnityAction`3<T0,T1,T2>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3_AddListener_m3AA2B007902D3FE6138FE14E8BB7BB720471EBED_gshared (UnityEvent_3_tCE934710A8225E2574DC47F0C89DD63B7324C18F* __this, UnityAction_3_tFD664A83B91518A4F822E02F501557F29ECCF487* ___call0, const RuntimeMethod* method) ;
// System.Void UnityEngine.Events.UnityEvent`2<System.Char,System.Int32>::RemoveListener(UnityEngine.Events.UnityAction`2<T0,T1>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_2_RemoveListener_m57B7F9B719A15831F63EA67147A848E324F3760B_gshared (UnityEvent_2_tE1EF7CBD9965CD9466B63C1AD8FB3661A30C25B3* __this, UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007* ___call0, const RuntimeMethod* method) ;
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Int32,System.Int32>::RemoveListener(UnityEngine.Events.UnityAction`3<T0,T1,T2>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3_RemoveListener_m9F3B34881BBD41EB01560C7BF8EB8B108D4A5DD8_gshared (UnityEvent_3_tD7E14BDD38F12B63EFECBD1604C666F9AF100EAA* __this, UnityAction_3_t2F4C93AEE3F6452801100D902D54CF21027541D8* ___call0, const RuntimeMethod* method) ;
// System.Void UnityEngine.Events.UnityEvent`3<System.Object,System.Object,System.Int32>::RemoveListener(UnityEngine.Events.UnityAction`3<T0,T1,T2>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UnityEvent_3_RemoveListener_mB363F4B5EEE001BB8EB1B788D1CC30A1FB5CD41F_gshared (UnityEvent_3_tCE934710A8225E2574DC47F0C89DD63B7324C18F* __this, UnityAction_3_tFD664A83B91518A4F822E02F501557F29ECCF487* ___call0, const RuntimeMethod* method) ;
// T UnityEngine.GameObject::GetComponentInParent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* GameObject_GetComponentInParent_TisRuntimeObject_mDD9FD68B12361AC472D4A83310CAD793C02C6654_gshared (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method) ;
// T UnityEngine.Object::Instantiate<System.Object>(T)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* Object_Instantiate_TisRuntimeObject_mCD6FC6BB14BA9EF1A4B314841EB4D40675E3C1DB_gshared (RuntimeObject* ___original0, const RuntimeMethod* method) ;
// T UnityEngine.Component::GetComponentInChildren<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* Component_GetComponentInChildren_TisRuntimeObject_mE483A27E876DE8E4E6901D6814837F81D7C42F65_gshared (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method) ;
// T System.Collections.Generic.List`1<System.Single>::get_Item(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float List_1_get_Item_mFE556F47C4CD09EAC6C898EF39D4A8EC112CFC50_gshared (List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918* __this, int32_t ___index0, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.Single>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1__ctor_mC29D3D824786832A31096310B3B3016B8B42B802_gshared (List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918* __this, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.Int32>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1__ctor_m17F501B5A5C289ECE1B4F3D6EBF05DFA421433F8_gshared (List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73* __this, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.Single>::Clear()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Clear_m6CD2E5AAE6552A27AECCC57936767B4DCFC902B1_gshared_inline (List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918* __this, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.Int32>::Clear()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Clear_mF6795DE5F49C1D0B91D6A0955F448B22970D67A9_gshared_inline (List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73* __this, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.Single>::Add(T)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Add_m2F86E252D086E288E02FA1C830B7E86C0A431E51_gshared_inline (List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918* __this, float ___item0, const RuntimeMethod* method) ;
// System.Int32 System.Collections.Generic.List`1<System.Single>::get_Count()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m545762F67009314D9C63DD209B42FFF950569B05_gshared_inline (List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918* __this, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.Int32>::Add(T)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Add_m0248A96C5334E9A93E6994B7780478BCD994EA3D_gshared_inline (List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73* __this, int32_t ___item0, const RuntimeMethod* method) ;
// System.Void System.Comparison`1<System.Int32>::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Comparison_1__ctor_m7E05FE21370A028EA8A2792D028FFDAD83F24F6C_gshared (Comparison_1_tB7DE1436CB53924C2FC41FF926D074C1ACC14D89* __this, RuntimeObject* ___object0, intptr_t ___method1, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.Int32>::Sort(System.Comparison`1<T>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_Sort_m90CDC07AEBE737318A490F4C2BC6F2955443EDA4_gshared (List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73* __this, Comparison_1_tB7DE1436CB53924C2FC41FF926D074C1ACC14D89* ___comparison0, const RuntimeMethod* method) ;
// TSource[] OpenCvSharp.Util.EnumerableEx::ToArray<System.Object>(System.Collections.Generic.IEnumerable`1<TSource>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* EnumerableEx_ToArray_TisRuntimeObject_mE4FDA57A22312395160E1119D9836F7657A3782C_gshared (RuntimeObject* ___enumerable0, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.Object>::.ctor(System.Collections.Generic.IEnumerable`1<T>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1__ctor_mE097DBD72433D1AFC11733F5678602603A756424_gshared (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, RuntimeObject* ___collection0, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.Object>::Add(T)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Add_mEBCF994CC3814631017F46A387B1A192ED6C85C7_gshared_inline (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, RuntimeObject* ___item0, const RuntimeMethod* method) ;

// T UnityEngine.Component::GetComponent<TMPro.TMP_Text>()
inline TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5 (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method)
{
	return ((  TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* (*) (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3*, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m7181F81CAEC2CF53F5D2BC79B7425C16E1F80D33_gshared)(__this, method);
}
// System.Void TMPro.TMP_Text::set_enableWordWrapping(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_Text_set_enableWordWrapping_mFAEE849315B4723F9C86C127B1A59EF50BE1C12F (TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* __this, bool ___value0, const RuntimeMethod* method) ;
// System.Void TMPro.TMP_Text::set_alignment(TMPro.TextAlignmentOptions)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_Text_set_alignment_mE5216A28797987CC19927ED3CB8DFAC438C6B95A (TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* __this, int32_t ___value0, const RuntimeMethod* method) ;
// System.Void TMPro.Examples.TeleType/<Start>d__4::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CStartU3Ed__4__ctor_m7CB9C7DF4657B7B70F6ED6EEB00C0F422D8B0CAA (U3CStartU3Ed__4_t34C4F7117E4A5E63F9D03A9DD3C2493CEB376E75* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) ;
// System.Void UnityEngine.MonoBehaviour::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E (MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71* __this, const RuntimeMethod* method) ;
// System.Void System.Object::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2 (RuntimeObject* __this, const RuntimeMethod* method) ;
// TMPro.TMP_TextInfo TMPro.TMP_Text::get_textInfo()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline (TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* __this, const RuntimeMethod* method) ;
// System.Void TMPro.TMP_Text::set_maxVisibleCharacters(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_Text_set_maxVisibleCharacters_mEDD8DCB11D204F3FC10BFAC49BF6E8E09548358A (TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* __this, int32_t ___value0, const RuntimeMethod* method) ;
// System.Void UnityEngine.WaitForSeconds::.ctor(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void WaitForSeconds__ctor_m579F95BADEDBAB4B3A7E302C6EE3995926EF2EFC (WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3* __this, float ___seconds0, const RuntimeMethod* method) ;
// System.Void System.NotSupportedException::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NotSupportedException__ctor_m1398D0CDE19B36AA3DE9392879738C1EA2439CDF (NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A* __this, const RuntimeMethod* method) ;
// UnityEngine.GameObject UnityEngine.Component::get_gameObject()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* Component_get_gameObject_m57AEFBB14DB39EC476F740BA000E170355DE691B (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method) ;
// T UnityEngine.GameObject::GetComponent<TMPro.TMP_Text>()
inline TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* GameObject_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_mA59A63181077B821132B53D44724D7F86C6FECB3 (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method)
{
	return ((  TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* (*) (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_m6EAED4AA356F0F48288F67899E5958792395563B_gshared)(__this, method);
}
// System.Collections.IEnumerator TMPro.Examples.TextConsoleSimulator::RevealCharacters(TMPro.TMP_Text)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* TextConsoleSimulator_RevealCharacters_mAA4D3653F05692839313CE180250A44378024E52 (TextConsoleSimulator_t986082F574CD2A38D6E40D856C6A9926D7EF49D2* __this, TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___textComponent0, const RuntimeMethod* method) ;
// UnityEngine.Coroutine UnityEngine.MonoBehaviour::StartCoroutine(System.Collections.IEnumerator)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Coroutine_t85EA685566A254C23F3FD77AB5BDFFFF8799596B* MonoBehaviour_StartCoroutine_m4CAFF732AA28CD3BDC5363B44A863575530EC812 (MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71* __this, RuntimeObject* ___routine0, const RuntimeMethod* method) ;
// System.Void System.Action`1<UnityEngine.Object>::.ctor(System.Object,System.IntPtr)
inline void Action_1__ctor_m95478636F075134CA2998E22B214611472600983 (Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A* __this, RuntimeObject* ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	((  void (*) (Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A*, RuntimeObject*, intptr_t, const RuntimeMethod*))Action_1__ctor_m2E1DFA67718FC1A0B6E5DFEB78831FFE9C059EB4_gshared)(__this, ___object0, ___method1, method);
}
// System.Void TMPro.FastAction`1<UnityEngine.Object>::Add(System.Action`1<A>)
inline void FastAction_1_Add_m368726E3508DB2176C4F87A79C0C0CC4816176D6 (FastAction_1_tE50C6A692DF85AB55BE3160B659FA7DF19DFA005* __this, Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A* ___rhs0, const RuntimeMethod* method)
{
	((  void (*) (FastAction_1_tE50C6A692DF85AB55BE3160B659FA7DF19DFA005*, Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A*, const RuntimeMethod*))FastAction_1_Add_mAFBAB8BEFC425D727FF303611342E6D1E6E82D86_gshared)(__this, ___rhs0, method);
}
// System.Void TMPro.FastAction`1<UnityEngine.Object>::Remove(System.Action`1<A>)
inline void FastAction_1_Remove_mB29130AC90F5F8967CD89587717469E44E4D186F (FastAction_1_tE50C6A692DF85AB55BE3160B659FA7DF19DFA005* __this, Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A* ___rhs0, const RuntimeMethod* method)
{
	((  void (*) (FastAction_1_tE50C6A692DF85AB55BE3160B659FA7DF19DFA005*, Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A*, const RuntimeMethod*))FastAction_1_Remove_m0C649E2173AA0370C08417DCFD89B7304F28BC0C_gshared)(__this, ___rhs0, method);
}
// System.Void TMPro.Examples.TextConsoleSimulator/<RevealCharacters>d__7::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CRevealCharactersU3Ed__7__ctor_m40A144070AB46560F2B3919EA5CB8BD51F8DDF45 (U3CRevealCharactersU3Ed__7_tB14F85C7FC57BEFD555A1A9CD8D3FF41E0F676F9* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) ;
// System.Void TMPro.Examples.TextConsoleSimulator/<RevealWords>d__8::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CRevealWordsU3Ed__8__ctor_mDF8D4C69F022D088AFC0E109FC0DBE0C9B938CAC (U3CRevealWordsU3Ed__8_t912CFD430C602C79AE6BC1BC6C4AEBF101B4D7C8* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) ;
// UnityEngine.Transform UnityEngine.Component::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371 (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method) ;
// System.String UnityEngine.Object::get_name()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* Object_get_name_mAC2F6B897CF1303BA4249B4CB55271AFACBB6392 (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* __this, const RuntimeMethod* method) ;
// System.String System.String::Concat(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mAF2CE02CC0CB7460753D0A1A91CCF2B1E9804C5D (String_t* ___str00, String_t* ___str11, const RuntimeMethod* method) ;
// System.Void UnityEngine.GameObject::.ctor(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GameObject__ctor_m37D512B05D292F954792225E6C6EEE95293A9B88 (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, String_t* ___name0, const RuntimeMethod* method) ;
// UnityEngine.Camera UnityEngine.Camera::get_main()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* Camera_get_main_mF222B707D3BF8CC9C7544609EFC71CFB62E81D43 (const RuntimeMethod* method) ;
// T UnityEngine.GameObject::AddComponent<TMPro.TextMeshPro>()
inline TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* GameObject_AddComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_mD3BE0A75BBE971456A1D7C8C6F6688A094A81C9C (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method)
{
	return ((  TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* (*) (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*, const RuntimeMethod*))GameObject_AddComponent_TisRuntimeObject_m69B93700FACCF372F5753371C6E8FB780800B824_gshared)(__this, method);
}
// UnityEngine.RectTransform TMPro.TMP_Text::get_rectTransform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* TMP_Text_get_rectTransform_m22DC10116809BEB2C66047A55337A588ED023EBF (TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* __this, const RuntimeMethod* method) ;
// System.Void UnityEngine.Vector2::.ctor(System.Single,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7* __this, float ___x0, float ___y1, const RuntimeMethod* method) ;
// System.Void UnityEngine.RectTransform::set_sizeDelta(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RectTransform_set_sizeDelta_mC9A980EA6036E6725EF24CEDF3EE80A9B2B50EE5 (RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* __this, Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___value0, const RuntimeMethod* method) ;
// UnityEngine.Transform UnityEngine.GameObject::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56 (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Transform::get_position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1 (Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* __this, const RuntimeMethod* method) ;
// System.Void UnityEngine.Vector3::.ctor(System.Single,System.Single,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* __this, float ___x0, float ___y1, float ___z2, const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Vector3::op_Addition(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___a0, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___b1, const RuntimeMethod* method) ;
// System.Void UnityEngine.Transform::set_position(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156 (Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* __this, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___value0, const RuntimeMethod* method) ;
// System.Int32 UnityEngine.Random::Range(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Random_Range_mD4D2DEE3D2E75D07740C9A6F93B3088B03BBB8F8 (int32_t ___minInclusive0, int32_t ___maxExclusive1, const RuntimeMethod* method) ;
// System.Void UnityEngine.Color32::.ctor(System.Byte,System.Byte,System.Byte,System.Byte)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Color32__ctor_mC9C6B443F0C7CA3F8B174158B2AF6F05E18EAC4E_inline (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B* __this, uint8_t ___r0, uint8_t ___g1, uint8_t ___b2, uint8_t ___a3, const RuntimeMethod* method) ;
// UnityEngine.Color UnityEngine.Color32::op_Implicit(UnityEngine.Color32)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Color_tD001788D726C3A7F1379BEED0260B9591F440C1F Color32_op_Implicit_m203A634DBB77053C9400C68065CA29529103D172_inline (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___c0, const RuntimeMethod* method) ;
// System.Void TMPro.TMP_Text::set_fontSize(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_Text_set_fontSize_m1C3A3BA2BC88E5E1D89375FD35A0AA91E75D3AAD (TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* __this, float ___value0, const RuntimeMethod* method) ;
// System.Void TMPro.TMP_Text::set_enableKerning(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_Text_set_enableKerning_m681685E06B8789F5F2B7043EBEA561AAE48E82BD (TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* __this, bool ___value0, const RuntimeMethod* method) ;
// System.Void TMPro.TMP_Text::set_isTextObjectScaleStatic(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_Text_set_isTextObjectScaleStatic_m8436FC38400ABE08F513770AF9C8CC6743DBE092 (TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* __this, bool ___value0, const RuntimeMethod* method) ;
// System.Collections.IEnumerator TMPro.Examples.TextMeshProFloatingText::DisplayTextMeshProFloatingText()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* TextMeshProFloatingText_DisplayTextMeshProFloatingText_mA1E370089458CD380E9BA7740C2BC2032F084148 (TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* __this, const RuntimeMethod* method) ;
// T UnityEngine.GameObject::AddComponent<UnityEngine.TextMesh>()
inline TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* GameObject_AddComponent_TisTextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8_mFAD74D91BCACF9C3FAE6960EB58D5C346DDBD9C2 (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method)
{
	return ((  TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* (*) (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*, const RuntimeMethod*))GameObject_AddComponent_TisRuntimeObject_m69B93700FACCF372F5753371C6E8FB780800B824_gshared)(__this, method);
}
// T UnityEngine.Resources::Load<UnityEngine.Font>(System.String)
inline Font_tC95270EA3198038970422D78B74A7F2E218A96B6* Resources_Load_TisFont_tC95270EA3198038970422D78B74A7F2E218A96B6_mF1595237572FCE3E2EE060D2038BE3F341DB7901 (String_t* ___path0, const RuntimeMethod* method)
{
	return ((  Font_tC95270EA3198038970422D78B74A7F2E218A96B6* (*) (String_t*, const RuntimeMethod*))Resources_Load_TisRuntimeObject_m8B40A11CE62A4E445DADC28C81BD73922A4D4B65_gshared)(___path0, method);
}
// System.Void UnityEngine.TextMesh::set_font(UnityEngine.Font)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TextMesh_set_font_m7E407CAEDBB382B95B70069D8FAB8A9E74EAAA74 (TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* __this, Font_tC95270EA3198038970422D78B74A7F2E218A96B6* ___value0, const RuntimeMethod* method) ;
// T UnityEngine.Component::GetComponent<UnityEngine.Renderer>()
inline Renderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF* Component_GetComponent_TisRenderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF_mC91ACC92AD57CA6CA00991DAF1DB3830BCE07AF8 (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method)
{
	return ((  Renderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF* (*) (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3*, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m7181F81CAEC2CF53F5D2BC79B7425C16E1F80D33_gshared)(__this, method);
}
// UnityEngine.Font UnityEngine.TextMesh::get_font()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Font_tC95270EA3198038970422D78B74A7F2E218A96B6* TextMesh_get_font_m94D3A4C8E4DB171B74E4FF00AC7EC27F3D495664 (TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* __this, const RuntimeMethod* method) ;
// UnityEngine.Material UnityEngine.Font::get_material()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* Font_get_material_m61ABDEC14C6D659DDC5A4F080023699116C17364 (Font_tC95270EA3198038970422D78B74A7F2E218A96B6* __this, const RuntimeMethod* method) ;
// System.Void UnityEngine.Renderer::set_sharedMaterial(UnityEngine.Material)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Renderer_set_sharedMaterial_m5E842F9A06CFB7B77656EB319881CB4B3E8E4288 (Renderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF* __this, Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___value0, const RuntimeMethod* method) ;
// System.Void UnityEngine.TextMesh::set_color(UnityEngine.Color)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TextMesh_set_color_mF08F30C3CD797C16289225B567724B9F07DC641E (TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* __this, Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___value0, const RuntimeMethod* method) ;
// System.Void UnityEngine.TextMesh::set_anchor(UnityEngine.TextAnchor)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TextMesh_set_anchor_m3FCB7C4B1FF66CE189B56076C0306AFE984FCD32 (TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* __this, int32_t ___value0, const RuntimeMethod* method) ;
// System.Void UnityEngine.TextMesh::set_fontSize(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TextMesh_set_fontSize_mAB9F7FFC0E4DB759B786F6A9357B18C86015498B (TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* __this, int32_t ___value0, const RuntimeMethod* method) ;
// System.Collections.IEnumerator TMPro.Examples.TextMeshProFloatingText::DisplayTextMeshFloatingText()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* TextMeshProFloatingText_DisplayTextMeshFloatingText_mA02B20CF33E43FE99FD5F1B90F7F350262F0BEBE (TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* __this, const RuntimeMethod* method) ;
// System.Void TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshProFloatingText>d__12::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDisplayTextMeshProFloatingTextU3Ed__12__ctor_m5783C7EE3A7D230F5D8FE65111F7F0B3AACF4A5D (U3CDisplayTextMeshProFloatingTextU3Ed__12_tF5C7EAAA1230794883FCB2D5C767C12F48C50C76* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) ;
// System.Void TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshFloatingText>d__13::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDisplayTextMeshFloatingTextU3Ed__13__ctor_m093946C77D9946811A7799D06F8D7170FB42A8EB (U3CDisplayTextMeshFloatingTextU3Ed__13_tFC924C56A4F46E6D8D46B95035B8A6D215A180A1* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Vector3::get_zero()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_get_zero_m9D7F7B580B5A276411267E96AA3425736D9BDC83_inline (const RuntimeMethod* method) ;
// UnityEngine.Quaternion UnityEngine.Quaternion::get_identity()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 Quaternion_get_identity_mB9CAEEB21BC81352CBF32DB9664BFC06FA7EA27B_inline (const RuntimeMethod* method) ;
// System.Single UnityEngine.Random::Range(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Random_Range_mF26F26EB446B76823B4815C91FA0907B484DF02B (float ___minInclusive0, float ___maxInclusive1, const RuntimeMethod* method) ;
// UnityEngine.Color32 UnityEngine.Color32::op_Implicit(UnityEngine.Color)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B Color32_op_Implicit_m7EFA0B83AD1AE15567E9BC2FA2B8E66D3BFE1395_inline (Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___c0, const RuntimeMethod* method) ;
// System.Single UnityEngine.Time::get_deltaTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_deltaTime_m7AB6BFA101D83E1D8F2EF3D5A128AEE9DDBF1A6D (const RuntimeMethod* method) ;
// System.Single UnityEngine.Mathf::Clamp(System.Single,System.Single,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Mathf_Clamp_m154E404AF275A3B2EC99ECAA3879B4CB9F0606DC_inline (float ___value0, float ___min1, float ___max2, const RuntimeMethod* method) ;
// System.String System.Int32::ToString()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* Int32_ToString_m030E01C24E294D6762FB0B6F37CB541581F55CA5 (int32_t* __this, const RuntimeMethod* method) ;
// System.Boolean TMPro.TMPro_ExtensionMethods::Compare(UnityEngine.Vector3,UnityEngine.Vector3,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool TMPro_ExtensionMethods_Compare_mA7AB3A35D921F8014C17306CC64D6CFD8F215CA6 (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___v10, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___v21, int32_t ___accuracy2, const RuntimeMethod* method) ;
// UnityEngine.Quaternion UnityEngine.Transform::get_rotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 Transform_get_rotation_m32AF40CA0D50C797DA639A696F8EAEC7524C179C (Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* __this, const RuntimeMethod* method) ;
// System.Boolean TMPro.TMPro_ExtensionMethods::Compare(UnityEngine.Quaternion,UnityEngine.Quaternion,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool TMPro_ExtensionMethods_Compare_mFC4E4CDEBF258A3DC7411E7E2395FE58739BF3F7 (Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 ___q10, Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 ___q21, int32_t ___accuracy2, const RuntimeMethod* method) ;
// System.Void UnityEngine.Transform::set_rotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_rotation_m61340DE74726CF0F9946743A727C4D444397331D (Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* __this, Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 ___value0, const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Vector3::op_Subtraction(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___a0, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___b1, const RuntimeMethod* method) ;
// System.Void UnityEngine.Transform::set_forward(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_forward_mA178B5CF4F0F6133F9AF8ED3A4ECD2C604C60C26 (Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* __this, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___value0, const RuntimeMethod* method) ;
// System.Void UnityEngine.WaitForEndOfFrame::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void WaitForEndOfFrame__ctor_m4AF7E576C01E6B04443BB898B1AE5D645F7D45AB (WaitForEndOfFrame_tE38D80923E3F8380069B423968C25ABE50A46663* __this, const RuntimeMethod* method) ;
// UnityEngine.Color UnityEngine.TextMesh::get_color()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Color_tD001788D726C3A7F1379BEED0260B9591F440C1F TextMesh_get_color_m128E5D16AA72D5284C70957253DEAEE4FBEB023E (TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* __this, const RuntimeMethod* method) ;
// System.Void UnityEngine.TextMesh::set_text(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TextMesh_set_text_mDF79D39638ED82797D0B0B3BB9E6B10712F8EA9E (TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* __this, String_t* ___value0, const RuntimeMethod* method) ;
// System.Void UnityEngine.GameObject::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GameObject__ctor_m7D0340DE160786E6EFA8DABD39EC3B694DA30AAD (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method) ;
// T UnityEngine.GameObject::AddComponent<TMPro.Examples.TextMeshProFloatingText>()
inline TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* GameObject_AddComponent_TisTextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31_m3DBA7F56D8D880227B1D70FAA3DF6988A4EE69F1 (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method)
{
	return ((  TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* (*) (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*, const RuntimeMethod*))GameObject_AddComponent_TisRuntimeObject_m69B93700FACCF372F5753371C6E8FB780800B824_gshared)(__this, method);
}
// System.Boolean UnityEngine.Behaviour::get_enabled()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Behaviour_get_enabled_mAAC9F15E9EBF552217A5AE2681589CC0BFA300C1 (Behaviour_t01970CFBBA658497AE30F311C447DB0440BAB7FA* __this, const RuntimeMethod* method) ;
// System.Void UnityEngine.Transform::set_parent(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_parent_m9BD5E563B539DD5BEC342736B03F97B38A243234 (Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* __this, Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___value0, const RuntimeMethod* method) ;
// System.Void UnityEngine.Transform::set_localRotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localRotation_mAB4A011D134BA58AB780BECC0025CA65F16185FA (Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* __this, Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 ___value0, const RuntimeMethod* method) ;
// T UnityEngine.Resources::Load<TMPro.TMP_FontAsset>(System.String)
inline TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160* Resources_Load_TisTMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160_m4C7F47B73C641ED180784E089759867A85127C13 (String_t* ___path0, const RuntimeMethod* method)
{
	return ((  TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160* (*) (String_t*, const RuntimeMethod*))Resources_Load_TisRuntimeObject_m8B40A11CE62A4E445DADC28C81BD73922A4D4B65_gshared)(___path0, method);
}
// System.Void TMPro.TMP_Text::set_font(TMPro.TMP_FontAsset)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_Text_set_font_mC55E4A8C1C09595031384B35F2C2FB2FC3479E83 (TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* __this, TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160* ___value0, const RuntimeMethod* method) ;
// T UnityEngine.Resources::Load<UnityEngine.Material>(System.String)
inline Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* Resources_Load_TisMaterial_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3_m28782CC70624922DAF3B0FB13930E4EB59848128 (String_t* ___path0, const RuntimeMethod* method)
{
	return ((  Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* (*) (String_t*, const RuntimeMethod*))Resources_Load_TisRuntimeObject_m8B40A11CE62A4E445DADC28C81BD73922A4D4B65_gshared)(___path0, method);
}
// System.Void TMPro.TMP_Text::set_isOverlay(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_Text_set_isOverlay_m0DA2AC113AE402CA25097641AD38D0822C6D5561 (TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* __this, bool ___value0, const RuntimeMethod* method) ;
// T UnityEngine.GameObject::GetComponent<TMPro.TextContainer>()
inline TextContainer_t949A6EBEE5C8832723E73D8D3DCF4C8D0B3D7F3C* GameObject_GetComponent_TisTextContainer_t949A6EBEE5C8832723E73D8D3DCF4C8D0B3D7F3C_mA04134D48462B7543775CE11D71859B1D2A99872 (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method)
{
	return ((  TextContainer_t949A6EBEE5C8832723E73D8D3DCF4C8D0B3D7F3C* (*) (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_m6EAED4AA356F0F48288F67899E5958792395563B_gshared)(__this, method);
}
// System.Void TMPro.Examples.TMPro_InstructionOverlay::Set_FrameCounter_Position(TMPro.Examples.TMPro_InstructionOverlay/FpsCounterAnchorPositions)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMPro_InstructionOverlay_Set_FrameCounter_Position_m3CC1B812C740BAE87C6B5CA94DC64E6131F42A7C (TMPro_InstructionOverlay_t1CFD12C64F70D5D2FBE29466015C02776A406B62* __this, int32_t ___anchor_position0, const RuntimeMethod* method) ;
// System.Void TMPro.TextContainer::set_anchorPosition(TMPro.TextContainerAnchors)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TextContainer_set_anchorPosition_mA915529616A0B4679FAAA6183FC194597E03EA50 (TextContainer_t949A6EBEE5C8832723E73D8D3DCF4C8D0B3D7F3C* __this, int32_t ___value0, const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Camera::ViewportToWorldPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Camera_ViewportToWorldPoint_m9D76494E8B695ADF7690BAF7953B89B152D96E71 (Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* __this, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___position0, const RuntimeMethod* method) ;
// T UnityEngine.Component::GetComponent<TMPro.TextMeshPro>()
inline TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* Component_GetComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_m991A1A2A2EFE70B64BBECFF1B44EE5C04FF8994E (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method)
{
	return ((  TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* (*) (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3*, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m7181F81CAEC2CF53F5D2BC79B7425C16E1F80D33_gshared)(__this, method);
}
// T UnityEngine.Component::GetComponent<TMPro.TextMeshProUGUI>()
inline TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* Component_GetComponent_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_m23F8F2F9DD5A54329CEB47D53B4CAA8BC4A562AA (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method)
{
	return ((  TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* (*) (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3*, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m7181F81CAEC2CF53F5D2BC79B7425C16E1F80D33_gshared)(__this, method);
}
// T UnityEngine.GameObject::AddComponent<TMPro.TextMeshProUGUI>()
inline TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* GameObject_AddComponent_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_m15E50057DA76710B136ADF4E7CA55A463D9DA3EB (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method)
{
	return ((  TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* (*) (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*, const RuntimeMethod*))GameObject_AddComponent_TisRuntimeObject_m69B93700FACCF372F5753371C6E8FB780800B824_gshared)(__this, method);
}
// UnityEngine.Vector2 TMPro.TMP_Text::GetPreferredValues(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 TMP_Text_GetPreferredValues_m1F06F3D203FD8F13D0335F697E839E5DAA61DD14 (TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* __this, float ___width0, float ___height1, const RuntimeMethod* method) ;
// System.Void TMPro.TMP_Text::SetText(System.String,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_Text_SetText_mC6973FFC60DB6A96B0C4253CD2FD9D0789ECC533 (TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* __this, String_t* ___sourceText0, float ___arg01, const RuntimeMethod* method) ;
// System.Void UnityEngine.Application::set_targetFrameRate(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Application_set_targetFrameRate_m794A13DC5116C506B042663606691257CF3A7325 (int32_t ___value0, const RuntimeMethod* method) ;
// System.Void UnityEngine.Transform::SetParent(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_SetParent_m6677538B60246D958DD91F931C50F969CCBB5250 (Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* __this, Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___p0, const RuntimeMethod* method) ;
// System.Void TMPro.Examples.TMP_FrameRateCounter::Set_FrameCounter_Position(TMPro.Examples.TMP_FrameRateCounter/FpsCounterAnchorPositions)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_FrameRateCounter_Set_FrameCounter_Position_m1CC40A8236B2161050D19C4B2EBFF34B96645723 (TMP_FrameRateCounter_t65C436069EE403C827CBE41C38F5B5C9D2FC946B* __this, int32_t ___anchor_position0, const RuntimeMethod* method) ;
// System.Single UnityEngine.Time::get_realtimeSinceStartup()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_realtimeSinceStartup_mB49A5622E38FFE9589EB9B3E75573E443B8D63EC (const RuntimeMethod* method) ;
// System.Single UnityEngine.Mathf::Max(System.Single,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Mathf_Max_mA9DCA91E87D6D27034F56ABA52606A9090406016_inline (float ___a0, float ___b1, const RuntimeMethod* method) ;
// System.Void TMPro.TMP_Text::SetText(System.String,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_Text_SetText_m033947AEEEBDA12707E4B0535B4CCD7EB28B5F31 (TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* __this, String_t* ___sourceText0, float ___arg01, float ___arg12, const RuntimeMethod* method) ;
// System.Void UnityEngine.Vector4::.ctor(System.Single,System.Single,System.Single,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Vector4__ctor_m96B2CD8B862B271F513AF0BDC2EABD58E4DBC813_inline (Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3* __this, float ___x0, float ___y1, float ___z2, float ___w3, const RuntimeMethod* method) ;
// System.Void UnityEngine.RectTransform::set_pivot(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RectTransform_set_pivot_m79D0177D383D432A93C2615F1932B739B1C6E146 (RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* __this, Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___value0, const RuntimeMethod* method) ;
// System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Inequality_m4D656395C27694A7F33F5AA8DE80A7AAF9E20BA7 (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___x0, Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___y1, const RuntimeMethod* method) ;
// TMPro.TMP_TextEventHandler/CharacterSelectionEvent TMPro.TMP_TextEventHandler::get_onCharacterSelection()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR CharacterSelectionEvent_t5D7AF67F47A37175CF8615AD66DEC4A0AA021392* TMP_TextEventHandler_get_onCharacterSelection_mA62049738125E3C48405E6DFF09E2D42300BE8C3_inline (TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* __this, const RuntimeMethod* method) ;
// System.Void UnityEngine.Events.UnityAction`2<System.Char,System.Int32>::.ctor(System.Object,System.IntPtr)
inline void UnityAction_2__ctor_m9F49CFF4FADF7EF080CEA8DCAD9FA2EB8D63F35D (UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007* __this, RuntimeObject* ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	((  void (*) (UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007*, RuntimeObject*, intptr_t, const RuntimeMethod*))UnityAction_2__ctor_m9F49CFF4FADF7EF080CEA8DCAD9FA2EB8D63F35D_gshared)(__this, ___object0, ___method1, method);
}
// System.Void UnityEngine.Events.UnityEvent`2<System.Char,System.Int32>::AddListener(UnityEngine.Events.UnityAction`2<T0,T1>)
inline void UnityEvent_2_AddListener_mE2FC084F4ADB9D24D904D6A39A83763969F91E27 (UnityEvent_2_tE1EF7CBD9965CD9466B63C1AD8FB3661A30C25B3* __this, UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007* ___call0, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_2_tE1EF7CBD9965CD9466B63C1AD8FB3661A30C25B3*, UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007*, const RuntimeMethod*))UnityEvent_2_AddListener_mE2FC084F4ADB9D24D904D6A39A83763969F91E27_gshared)(__this, ___call0, method);
}
// TMPro.TMP_TextEventHandler/SpriteSelectionEvent TMPro.TMP_TextEventHandler::get_onSpriteSelection()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR SpriteSelectionEvent_t770551D2973013622C464E817FA74D53BCD4FD95* TMP_TextEventHandler_get_onSpriteSelection_m95CDEB7394FFF38F310717EEEFDCD481D96A5E82_inline (TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* __this, const RuntimeMethod* method) ;
// TMPro.TMP_TextEventHandler/WordSelectionEvent TMPro.TMP_TextEventHandler::get_onWordSelection()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR WordSelectionEvent_t340E6006406B5E90F7190C56218E8F7E3712945E* TMP_TextEventHandler_get_onWordSelection_mF22771B4213EEB3AEFCDA390A4FF28FED5D9184C_inline (TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* __this, const RuntimeMethod* method) ;
// System.Void UnityEngine.Events.UnityAction`3<System.String,System.Int32,System.Int32>::.ctor(System.Object,System.IntPtr)
inline void UnityAction_3__ctor_m16AB9F4E444421420CA4A34EA0A6F60B15E20B9D (UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6* __this, RuntimeObject* ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	((  void (*) (UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6*, RuntimeObject*, intptr_t, const RuntimeMethod*))UnityAction_3__ctor_mD44DC0C0DB38805A3DB6A9B9F6052F2332DEEE79_gshared)(__this, ___object0, ___method1, method);
}
// System.Void UnityEngine.Events.UnityEvent`3<System.String,System.Int32,System.Int32>::AddListener(UnityEngine.Events.UnityAction`3<T0,T1,T2>)
inline void UnityEvent_3_AddListener_mE456028DE63E2FF37E53F2618AA321B5551B881A (UnityEvent_3_t5EE2DC870C12CB60384C5FCBB0DAD36392E701AD* __this, UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6* ___call0, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t5EE2DC870C12CB60384C5FCBB0DAD36392E701AD*, UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6*, const RuntimeMethod*))UnityEvent_3_AddListener_mB461B21F098D8AA18E33A0FF2AC6B5F357AF0299_gshared)(__this, ___call0, method);
}
// TMPro.TMP_TextEventHandler/LineSelectionEvent TMPro.TMP_TextEventHandler::get_onLineSelection()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR LineSelectionEvent_t526120C6113E0638913B951E3D1D7B1CF94F0880* TMP_TextEventHandler_get_onLineSelection_mDDF07E7000993FCD6EAF2FBD2D2226EB66273908_inline (TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* __this, const RuntimeMethod* method) ;
// TMPro.TMP_TextEventHandler/LinkSelectionEvent TMPro.TMP_TextEventHandler::get_onLinkSelection()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR LinkSelectionEvent_t5CE74F742D231580ED2C810ECE394E1A2BC81B3D* TMP_TextEventHandler_get_onLinkSelection_m87FB9EABE7F917B2F910A18A3B5F1AE3020D976D_inline (TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* __this, const RuntimeMethod* method) ;
// System.Void UnityEngine.Events.UnityAction`3<System.String,System.String,System.Int32>::.ctor(System.Object,System.IntPtr)
inline void UnityAction_3__ctor_m7F8FD30A8410091074136C8426E3B7338FD2D7FB (UnityAction_3_tA4BA03B0D2CAB7D20E7006E36EF6B1D662432039* __this, RuntimeObject* ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	((  void (*) (UnityAction_3_tA4BA03B0D2CAB7D20E7006E36EF6B1D662432039*, RuntimeObject*, intptr_t, const RuntimeMethod*))UnityAction_3__ctor_m2F6C2E527FCBE0253599EB3B4066B3F3E0FD5A6D_gshared)(__this, ___object0, ___method1, method);
}
// System.Void UnityEngine.Events.UnityEvent`3<System.String,System.String,System.Int32>::AddListener(UnityEngine.Events.UnityAction`3<T0,T1,T2>)
inline void UnityEvent_3_AddListener_mB8CBD686B0A41D0A0F0D809824E8904A827C3188 (UnityEvent_3_t978FAA968D1FEECACADDD0969B822861FA0C6622* __this, UnityAction_3_tA4BA03B0D2CAB7D20E7006E36EF6B1D662432039* ___call0, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t978FAA968D1FEECACADDD0969B822861FA0C6622*, UnityAction_3_tA4BA03B0D2CAB7D20E7006E36EF6B1D662432039*, const RuntimeMethod*))UnityEvent_3_AddListener_m3AA2B007902D3FE6138FE14E8BB7BB720471EBED_gshared)(__this, ___call0, method);
}
// System.Void UnityEngine.Events.UnityEvent`2<System.Char,System.Int32>::RemoveListener(UnityEngine.Events.UnityAction`2<T0,T1>)
inline void UnityEvent_2_RemoveListener_m57B7F9B719A15831F63EA67147A848E324F3760B (UnityEvent_2_tE1EF7CBD9965CD9466B63C1AD8FB3661A30C25B3* __this, UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007* ___call0, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_2_tE1EF7CBD9965CD9466B63C1AD8FB3661A30C25B3*, UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007*, const RuntimeMethod*))UnityEvent_2_RemoveListener_m57B7F9B719A15831F63EA67147A848E324F3760B_gshared)(__this, ___call0, method);
}
// System.Void UnityEngine.Events.UnityEvent`3<System.String,System.Int32,System.Int32>::RemoveListener(UnityEngine.Events.UnityAction`3<T0,T1,T2>)
inline void UnityEvent_3_RemoveListener_m9741C57D75E2CE8CCD912E252CBACCE5FC950523 (UnityEvent_3_t5EE2DC870C12CB60384C5FCBB0DAD36392E701AD* __this, UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6* ___call0, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t5EE2DC870C12CB60384C5FCBB0DAD36392E701AD*, UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6*, const RuntimeMethod*))UnityEvent_3_RemoveListener_m9F3B34881BBD41EB01560C7BF8EB8B108D4A5DD8_gshared)(__this, ___call0, method);
}
// System.Void UnityEngine.Events.UnityEvent`3<System.String,System.String,System.Int32>::RemoveListener(UnityEngine.Events.UnityAction`3<T0,T1,T2>)
inline void UnityEvent_3_RemoveListener_mA451198DCB5DD86D0B87D256F26293566D209026 (UnityEvent_3_t978FAA968D1FEECACADDD0969B822861FA0C6622* __this, UnityAction_3_tA4BA03B0D2CAB7D20E7006E36EF6B1D662432039* ___call0, const RuntimeMethod* method)
{
	((  void (*) (UnityEvent_3_t978FAA968D1FEECACADDD0969B822861FA0C6622*, UnityAction_3_tA4BA03B0D2CAB7D20E7006E36EF6B1D662432039*, const RuntimeMethod*))UnityEvent_3_RemoveListener_mB363F4B5EEE001BB8EB1B788D1CC30A1FB5CD41F_gshared)(__this, ___call0, method);
}
// System.String System.Char::ToString()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* Char_ToString_m2A308731F9577C06AF3C0901234E2EAC8327410C (Il2CppChar* __this, const RuntimeMethod* method) ;
// System.String System.String::Concat(System.String[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_m6B0734B65813C8EA093D78E5C2D16534EB6FE8C0 (StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* ___values0, const RuntimeMethod* method) ;
// System.Void UnityEngine.Debug::Log(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_Log_m86567BCF22BBE7809747817453CACA0E41E68219 (RuntimeObject* ___message0, const RuntimeMethod* method) ;
// T UnityEngine.GameObject::GetComponent<TMPro.TextMeshPro>()
inline TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* GameObject_GetComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_m788ADD6C98FD3A1039F72A865AB7D335AEA6116F (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method)
{
	return ((  TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* (*) (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_m6EAED4AA356F0F48288F67899E5958792395563B_gshared)(__this, method);
}
// UnityEngine.Vector3 UnityEngine.Input::get_mousePosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Input_get_mousePosition_m2414B43222ED0C5FAB960D393964189AFD21EEAD (const RuntimeMethod* method) ;
// System.Boolean TMPro.TMP_TextUtilities::IsIntersectingRectTransform(UnityEngine.RectTransform,UnityEngine.Vector3,UnityEngine.Camera)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool TMP_TextUtilities_IsIntersectingRectTransform_mD130C941AB32BCEA5B2B293E979A7AC7F1160FFF (RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* ___rectTransform0, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___position1, Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* ___camera2, const RuntimeMethod* method) ;
// System.Int32 TMPro.TMP_TextUtilities::FindIntersectingCharacter(TMPro.TMP_Text,UnityEngine.Vector3,UnityEngine.Camera,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t TMP_TextUtilities_FindIntersectingCharacter_m6C03B17BB15028215958B0DAB969BB5199990DF2 (TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___text0, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___position1, Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* ___camera2, bool ___visibleOnly3, const RuntimeMethod* method) ;
// System.Boolean UnityEngine.Input::GetKey(UnityEngine.KeyCode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Input_GetKey_m0BF0499CADC378F02B6BEE2399FB945AB929B81A (int32_t ___key0, const RuntimeMethod* method) ;
// System.Void UnityEngine.Mesh::set_colors32(UnityEngine.Color32[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Mesh_set_colors32_m0E4462B7A1D613E6FB15DD7584BCE5491C17820F (Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* __this, Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* ___value0, const RuntimeMethod* method) ;
// System.Int32 TMPro.TMP_TextUtilities::FindIntersectingLink(TMPro.TMP_Text,UnityEngine.Vector3,UnityEngine.Camera)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t TMP_TextUtilities_FindIntersectingLink_m2B5823274A30BBB3A54592E8DB44F119140C3778 (TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___text0, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___position1, Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* ___camera2, const RuntimeMethod* method) ;
// UnityEngine.Vector2 UnityEngine.Vector2::op_Implicit(UnityEngine.Vector3)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 Vector2_op_Implicit_m8F73B300CB4E6F9B4EB5FB6130363D76CEAA230B_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___v0, const RuntimeMethod* method) ;
// System.Boolean UnityEngine.RectTransformUtility::ScreenPointToWorldPointInRectangle(UnityEngine.RectTransform,UnityEngine.Vector2,UnityEngine.Camera,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool RectTransformUtility_ScreenPointToWorldPointInRectangle_mA37289182AEA7D89BA927C325F82980085D6A882 (RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* ___rect0, Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___screenPoint1, Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* ___cam2, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* ___worldPoint3, const RuntimeMethod* method) ;
// System.String TMPro.TMP_LinkInfo::GetLinkID()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* TMP_LinkInfo_GetLinkID_mCC9D9E783D606660A4D15E0E746E1E27AD9C2425 (TMP_LinkInfo_t9DC08E8BF8C5E8094AFF8C9FB3C251AF88B92DA6* __this, const RuntimeMethod* method) ;
// System.Boolean System.String::op_Equality(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool String_op_Equality_m0D685A924E5CD78078F248ED1726DA5A9D7D6AC0 (String_t* ___a0, String_t* ___b1, const RuntimeMethod* method) ;
// System.Int32 TMPro.TMP_TextUtilities::FindIntersectingWord(TMPro.TMP_Text,UnityEngine.Vector3,UnityEngine.Camera)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t TMP_TextUtilities_FindIntersectingWord_m1442DFD5AAE1FF0EE5054262A34E4D31B1E56879 (TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___text0, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___position1, Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* ___camera2, const RuntimeMethod* method) ;
// UnityEngine.Transform TMPro.TextMeshPro::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* TextMeshPro_get_transform_m750148EC362B176A0E80D6F4ABAC1062E5281E11 (TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* __this, const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Transform::TransformPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Transform_TransformPoint_m05BFF013DB830D7BFE44A007703694AE1062EE44 (Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* __this, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___position0, const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Camera::WorldToScreenPoint(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Camera_WorldToScreenPoint_m26B4C8945C3B5731F1CC5944CFD96BF17126BAA3 (Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* __this, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___position0, const RuntimeMethod* method) ;
// T UnityEngine.GameObject::GetComponent<TMPro.TextMeshProUGUI>()
inline TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* GameObject_GetComponent_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_mBDBF977A8C7734F6EDD83FC65C6FDDE74427611E (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method)
{
	return ((  TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* (*) (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_m6EAED4AA356F0F48288F67899E5958792395563B_gshared)(__this, method);
}
// T UnityEngine.GameObject::GetComponentInParent<UnityEngine.Canvas>()
inline Canvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26* GameObject_GetComponentInParent_TisCanvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26_m0A41CB7A7F9A10FCC98D1C7B5799D57C2724D991 (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method)
{
	return ((  Canvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26* (*) (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*, const RuntimeMethod*))GameObject_GetComponentInParent_TisRuntimeObject_mDD9FD68B12361AC472D4A83310CAD793C02C6654_gshared)(__this, method);
}
// UnityEngine.RenderMode UnityEngine.Canvas::get_renderMode()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Canvas_get_renderMode_m1BEF259548C6CAD27E4466F31D20752D246688CC (Canvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26* __this, const RuntimeMethod* method) ;
// UnityEngine.Camera UnityEngine.Canvas::get_worldCamera()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* Canvas_get_worldCamera_mD2FDE13B61A5213F4E64B40008EB0A8D2D07B853 (Canvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26* __this, const RuntimeMethod* method) ;
// T UnityEngine.Object::Instantiate<UnityEngine.RectTransform>(T)
inline RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* Object_Instantiate_TisRectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5_m432798BF76671A2FB88A9BF403D2F706ADA37236 (RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* ___original0, const RuntimeMethod* method)
{
	return ((  RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* (*) (RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5*, const RuntimeMethod*))Object_Instantiate_TisRuntimeObject_mCD6FC6BB14BA9EF1A4B314841EB4D40675E3C1DB_gshared)(___original0, method);
}
// System.Void UnityEngine.Transform::SetParent(UnityEngine.Transform,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_SetParent_m9BDD7B7476714B2D7919B10BDC22CE75C0A0A195 (Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* __this, Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___parent0, bool ___worldPositionStays1, const RuntimeMethod* method) ;
// T UnityEngine.Component::GetComponentInChildren<TMPro.TextMeshProUGUI>()
inline TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* Component_GetComponentInChildren_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_m60A1B193FDBBFB3719065622DB5E0BB21CA4ABDC (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method)
{
	return ((  TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* (*) (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3*, const RuntimeMethod*))Component_GetComponentInChildren_TisRuntimeObject_mE483A27E876DE8E4E6901D6814837F81D7C42F65_gshared)(__this, method);
}
// System.Void UnityEngine.GameObject::SetActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GameObject_SetActive_m638E92E1E75E519E5B24CF150B08CA8E0CDFAB92 (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, bool ___value0, const RuntimeMethod* method) ;
// System.Boolean UnityEngine.Object::op_Equality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Equality_mD3DB0D72CE0250C84033DC2A90AEF9D59896E536 (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___x0, Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___y1, const RuntimeMethod* method) ;
// TMPro.TMP_MeshInfo[] TMPro.TMP_TextInfo::CopyMeshInfoVertexData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* TMP_TextInfo_CopyMeshInfoVertexData_mF66E2F8821470E68D95FEB53D456CFA86241C0CA (TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* __this, const RuntimeMethod* method) ;
// System.Void TMPro.Examples.TMP_TextSelector_B::RestoreCachedVertexAttributes(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextSelector_B_RestoreCachedVertexAttributes_m1FD258EC7A53C8E1ECB18EB6FFEFC6239780C398 (TMP_TextSelector_B_t57166268B8E5437286F55085EA19969D0A528CC2* __this, int32_t ___index0, const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Vector3::op_Division(UnityEngine.Vector3,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_op_Division_mD7200D6D432BAFC4135C5B17A0B0A812203B0270_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___a0, float ___d1, const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Vector2::op_Implicit(UnityEngine.Vector2)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector2_op_Implicit_mCD214B04BC52AED3C89C3BEF664B6247E5F8954A_inline (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___v0, const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Vector3::get_one()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_get_one_mE6A2D5C6578E94268024613B596BF09F990B1260_inline (const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Vector3::op_Multiply(UnityEngine.Vector3,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_op_Multiply_m516FE285F5342F922C6EB3FCB33197E9017FF484_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___a0, float ___d1, const RuntimeMethod* method) ;
// UnityEngine.Matrix4x4 UnityEngine.Matrix4x4::TRS(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 Matrix4x4_TRS_mFEBA6926DB0044B96EF0CE98F30FEE7596820680 (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___pos0, Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 ___q1, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___s2, const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Matrix4x4::MultiplyPoint3x4(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814 (Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6* __this, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___point0, const RuntimeMethod* method) ;
// System.Void TMPro.TMP_MeshInfo::SwapVertexData(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_MeshInfo_SwapVertexData_mBB35F36F8E7E6CF1429B26417140570EE94FE718 (TMP_MeshInfo_t320C52212E9D672EBB5F5C18C3E0700AA33DD76B* __this, int32_t ___src0, int32_t ___dst1, const RuntimeMethod* method) ;
// UnityEngine.Color32 TMPro.TMPro_ExtensionMethods::Tint(UnityEngine.Color32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B TMPro_ExtensionMethods_Tint_m5DA2EA8D3C7DFF5FC493CE93D07C3FC039A07133 (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___c10, float ___tint1, const RuntimeMethod* method) ;
// T UnityEngine.GameObject::AddComponent<UnityEngine.RectTransform>()
inline RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* GameObject_AddComponent_TisRectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5_m771EB78FF8813B5AFF21AC0D252E5461943E6388 (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method)
{
	return ((  RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* (*) (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*, const RuntimeMethod*))GameObject_AddComponent_TisRuntimeObject_m69B93700FACCF372F5753371C6E8FB780800B824_gshared)(__this, method);
}
// System.Void TMPro.Examples.TMP_UiFrameRateCounter::Set_FrameCounter_Position(TMPro.Examples.TMP_UiFrameRateCounter/FpsCounterAnchorPositions)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_UiFrameRateCounter_Set_FrameCounter_Position_mAF25D6E90A6CB17EE041885B32579A2AEDBFCC36 (TMP_UiFrameRateCounter_t3CB67462256A3570DFD0BD10261E7CABB11AFC0E* __this, int32_t ___anchor_position0, const RuntimeMethod* method) ;
// System.Void UnityEngine.RectTransform::set_anchorMin(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RectTransform_set_anchorMin_m931442ABE3368D6D4309F43DF1D64AB64B0F52E3 (RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* __this, Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___value0, const RuntimeMethod* method) ;
// System.Void UnityEngine.RectTransform::set_anchorMax(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RectTransform_set_anchorMax_m52829ABEDD229ABD3DA20BCA676FA1DCA4A39B7D (RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* __this, Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___value0, const RuntimeMethod* method) ;
// System.Void UnityEngine.RectTransform::set_anchoredPosition(UnityEngine.Vector2)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RectTransform_set_anchoredPosition_mF903ACE04F6959B1CD67E2B94FABC0263068F965 (RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* __this, Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___value0, const RuntimeMethod* method) ;
// System.Collections.IEnumerator TMPro.Examples.VertexColorCycler::AnimateVertexColors()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* VertexColorCycler_AnimateVertexColors_m16733B3DFF4C0F625AA66B5DF9D3B04D723E49CC (VertexColorCycler_t527535DC3F38CBB70E8A4B35907DA8EC4FC62C8D* __this, const RuntimeMethod* method) ;
// System.Void TMPro.Examples.VertexColorCycler/<AnimateVertexColors>d__3::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CAnimateVertexColorsU3Ed__3__ctor_m0245999D5FAAF8855583609DB16CAF48E9450262 (U3CAnimateVertexColorsU3Ed__3_t88CF335125784EBBA1DA65AF7B815F1814D31264* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) ;
// System.Collections.IEnumerator TMPro.Examples.VertexJitter::AnimateVertexColors()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* VertexJitter_AnimateVertexColors_m2A69F06CF58FA46B689BD4166DEF5AD15FA2FA88 (VertexJitter_t5D8689E23D1DD2CCF81ACE6FFC9E34797E8AE4C7* __this, const RuntimeMethod* method) ;
// System.Void TMPro.Examples.VertexJitter/<AnimateVertexColors>d__11::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CAnimateVertexColorsU3Ed__11__ctor_m10C4D98A634474BAA883419ED308835B7D91C01A (U3CAnimateVertexColorsU3Ed__11_t2EF4BA1F3569F2C4ECDD4AD4980AAC251CD1D956* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) ;
// System.Single UnityEngine.Mathf::PingPong(System.Single,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Mathf_PingPong_m157C55BCFEA2BB96680B7B29D714C3F9390551C9_inline (float ___t0, float ___length1, const RuntimeMethod* method) ;
// System.Single UnityEngine.Mathf::SmoothStep(System.Single,System.Single,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Mathf_SmoothStep_mF724C7893D0F0C02FB14D573DDB7F92935451B81_inline (float ___from0, float ___to1, float ___t2, const RuntimeMethod* method) ;
// UnityEngine.Quaternion UnityEngine.Quaternion::Euler(System.Single,System.Single,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 Quaternion_Euler_mD4601D966F1F58F3FCA01B3FC19A12D0AD0396DD_inline (float ___x0, float ___y1, float ___z2, const RuntimeMethod* method) ;
// System.Void UnityEngine.Mesh::set_vertices(UnityEngine.Vector3[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Mesh_set_vertices_m5BB814D89E9ACA00DBF19F7D8E22CB73AC73FE5C (Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* __this, Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* ___value0, const RuntimeMethod* method) ;
// System.Collections.IEnumerator TMPro.Examples.VertexShakeA::AnimateVertexColors()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* VertexShakeA_AnimateVertexColors_m5FD933D6BF976B64FC0B80614DE5112377D1DC38 (VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F* __this, const RuntimeMethod* method) ;
// System.Boolean UnityEngine.Object::op_Implicit(UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Implicit_m18E1885C296CC868AC918101523697CFE6413C79 (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___exists0, const RuntimeMethod* method) ;
// System.Void TMPro.Examples.VertexShakeA/<AnimateVertexColors>d__11::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CAnimateVertexColorsU3Ed__11__ctor_m440985E6DF2F1B461E2964101EA242FFD472A25A (U3CAnimateVertexColorsU3Ed__11_t2E62EF65D8AE7185E18D8711E582A76E45AC843E* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) ;
// System.Collections.IEnumerator TMPro.Examples.VertexShakeB::AnimateVertexColors()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* VertexShakeB_AnimateVertexColors_m06D25FE7F9F3EFF693DDC889BF725F01D0CF2A6F (VertexShakeB_tA3849618A1BE8DCE150A615F38CE2E247FC6F6C8* __this, const RuntimeMethod* method) ;
// System.Void TMPro.Examples.VertexShakeB/<AnimateVertexColors>d__10::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CAnimateVertexColorsU3Ed__10__ctor_mBE5C0E4A0F65F07A7510D171683AD319F76E6C6D (U3CAnimateVertexColorsU3Ed__10_tD6C6C3147726423C8C82952A638432E12AA2C91E* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) ;
// System.Collections.IEnumerator TMPro.Examples.VertexZoom::AnimateVertexColors()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* VertexZoom_AnimateVertexColors_m632BD9DC8FB193AF2D5B540524B11AF139FDF5F0 (VertexZoom_t51F05EB153497034D27896F07590D790A73981A6* __this, const RuntimeMethod* method) ;
// System.Void TMPro.Examples.VertexZoom/<AnimateVertexColors>d__10::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CAnimateVertexColorsU3Ed__10__ctor_m7A5B8E07B89E628DB7119F7F61311165A2DBC4D6 (U3CAnimateVertexColorsU3Ed__10_t2EB585545BBB614E711BE1D5C7BF139053486123* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) ;
// T System.Collections.Generic.List`1<System.Single>::get_Item(System.Int32)
inline float List_1_get_Item_mFE556F47C4CD09EAC6C898EF39D4A8EC112CFC50 (List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918* __this, int32_t ___index0, const RuntimeMethod* method)
{
	return ((  float (*) (List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918*, int32_t, const RuntimeMethod*))List_1_get_Item_mFE556F47C4CD09EAC6C898EF39D4A8EC112CFC50_gshared)(__this, ___index0, method);
}
// System.Int32 System.Single::CompareTo(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Single_CompareTo_m06F7868162EB392D3E99103D1A0BD27463C9E66F (float* __this, float ___value0, const RuntimeMethod* method) ;
// System.Void TMPro.Examples.VertexZoom/<>c__DisplayClass10_0::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CU3Ec__DisplayClass10_0__ctor_m8C69A89B34AA3D16243E69F1E0015856C791CC8A (U3CU3Ec__DisplayClass10_0_t62C0E1CEED92DDFC3DD4C58EC8806FC7D82A7FB7* __this, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.Single>::.ctor()
inline void List_1__ctor_mC29D3D824786832A31096310B3B3016B8B42B802 (List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918* __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918*, const RuntimeMethod*))List_1__ctor_mC29D3D824786832A31096310B3B3016B8B42B802_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1<System.Int32>::.ctor()
inline void List_1__ctor_m17F501B5A5C289ECE1B4F3D6EBF05DFA421433F8 (List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73* __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73*, const RuntimeMethod*))List_1__ctor_m17F501B5A5C289ECE1B4F3D6EBF05DFA421433F8_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1<System.Single>::Clear()
inline void List_1_Clear_m6CD2E5AAE6552A27AECCC57936767B4DCFC902B1_inline (List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918* __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918*, const RuntimeMethod*))List_1_Clear_m6CD2E5AAE6552A27AECCC57936767B4DCFC902B1_gshared_inline)(__this, method);
}
// System.Void System.Collections.Generic.List`1<System.Int32>::Clear()
inline void List_1_Clear_mF6795DE5F49C1D0B91D6A0955F448B22970D67A9_inline (List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73* __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73*, const RuntimeMethod*))List_1_Clear_mF6795DE5F49C1D0B91D6A0955F448B22970D67A9_gshared_inline)(__this, method);
}
// System.Void System.Collections.Generic.List`1<System.Single>::Add(T)
inline void List_1_Add_m2F86E252D086E288E02FA1C830B7E86C0A431E51_inline (List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918* __this, float ___item0, const RuntimeMethod* method)
{
	((  void (*) (List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918*, float, const RuntimeMethod*))List_1_Add_m2F86E252D086E288E02FA1C830B7E86C0A431E51_gshared_inline)(__this, ___item0, method);
}
// System.Int32 System.Collections.Generic.List`1<System.Single>::get_Count()
inline int32_t List_1_get_Count_m545762F67009314D9C63DD209B42FFF950569B05_inline (List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918* __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918*, const RuntimeMethod*))List_1_get_Count_m545762F67009314D9C63DD209B42FFF950569B05_gshared_inline)(__this, method);
}
// System.Void System.Collections.Generic.List`1<System.Int32>::Add(T)
inline void List_1_Add_m0248A96C5334E9A93E6994B7780478BCD994EA3D_inline (List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73* __this, int32_t ___item0, const RuntimeMethod* method)
{
	((  void (*) (List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73*, int32_t, const RuntimeMethod*))List_1_Add_m0248A96C5334E9A93E6994B7780478BCD994EA3D_gshared_inline)(__this, ___item0, method);
}
// System.Void System.Comparison`1<System.Int32>::.ctor(System.Object,System.IntPtr)
inline void Comparison_1__ctor_m7E05FE21370A028EA8A2792D028FFDAD83F24F6C (Comparison_1_tB7DE1436CB53924C2FC41FF926D074C1ACC14D89* __this, RuntimeObject* ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	((  void (*) (Comparison_1_tB7DE1436CB53924C2FC41FF926D074C1ACC14D89*, RuntimeObject*, intptr_t, const RuntimeMethod*))Comparison_1__ctor_m7E05FE21370A028EA8A2792D028FFDAD83F24F6C_gshared)(__this, ___object0, ___method1, method);
}
// System.Void System.Collections.Generic.List`1<System.Int32>::Sort(System.Comparison`1<T>)
inline void List_1_Sort_m90CDC07AEBE737318A490F4C2BC6F2955443EDA4 (List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73* __this, Comparison_1_tB7DE1436CB53924C2FC41FF926D074C1ACC14D89* ___comparison0, const RuntimeMethod* method)
{
	((  void (*) (List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73*, Comparison_1_tB7DE1436CB53924C2FC41FF926D074C1ACC14D89*, const RuntimeMethod*))List_1_Sort_m90CDC07AEBE737318A490F4C2BC6F2955443EDA4_gshared)(__this, ___comparison0, method);
}
// System.Void TMPro.TMP_MeshInfo::SortGeometry(System.Collections.Generic.IList`1<System.Int32>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_MeshInfo_SortGeometry_m74ED0FE2065414A659EE9A9C809E1B0B4A8A7734 (TMP_MeshInfo_t320C52212E9D672EBB5F5C18C3E0700AA33DD76B* __this, RuntimeObject* ___sortingOrder0, const RuntimeMethod* method) ;
// System.Void UnityEngine.Mesh::set_uv(UnityEngine.Vector2[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Mesh_set_uv_m6ED9C50E0DA8166DD48AC40FD6C828B9AD2E9617 (Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* __this, Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* ___value0, const RuntimeMethod* method) ;
// System.Collections.IEnumerator TMPro.Examples.WarpTextExample::WarpText()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* WarpTextExample_WarpText_mBE4B6E5B6D8AAE9340CD59B1FA9DFE9A34665E98 (WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* __this, const RuntimeMethod* method) ;
// System.Void UnityEngine.AnimationCurve::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AnimationCurve__ctor_m0D976567166F92383307DC8EB8D7082CD34E226F (AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* __this, const RuntimeMethod* method) ;
// UnityEngine.Keyframe[] UnityEngine.AnimationCurve::get_keys()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR KeyframeU5BU5D_t63250A46914A6A07B2A6689850D47D7D19D80BA3* AnimationCurve_get_keys_m34452C69464AB459C04BFFEA4F541F06B419AC4E (AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* __this, const RuntimeMethod* method) ;
// System.Void UnityEngine.AnimationCurve::set_keys(UnityEngine.Keyframe[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AnimationCurve_set_keys_mBE1284B44CDBB1D8381177A3D581A6E71467F95C (AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* __this, KeyframeU5BU5D_t63250A46914A6A07B2A6689850D47D7D19D80BA3* ___value0, const RuntimeMethod* method) ;
// System.Void TMPro.Examples.WarpTextExample/<WarpText>d__8::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CWarpTextU3Ed__8__ctor_m1943C34BBEAF121203BA8C5D725E991283A4A3BB (U3CWarpTextU3Ed__8_tF1A14DF86D48AE9144155D4BF8E31E63471F358E* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) ;
// System.Void UnityEngine.Keyframe::.ctor(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Keyframe__ctor_mECF144086B28785BE911A22C06194A9E0FBF3C34 (Keyframe_tB9C67DCBFE10C0AE9C52CB5C66E944255C9254F0* __this, float ___time0, float ___value1, const RuntimeMethod* method) ;
// System.Void UnityEngine.AnimationCurve::.ctor(UnityEngine.Keyframe[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AnimationCurve__ctor_mEABC98C03805713354D61E50D9340766BD5B717E (AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* __this, KeyframeU5BU5D_t63250A46914A6A07B2A6689850D47D7D19D80BA3* ___keys0, const RuntimeMethod* method) ;
// System.Void UnityEngine.AnimationCurve::set_preWrapMode(UnityEngine.WrapMode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AnimationCurve_set_preWrapMode_mA618E67F536483FA5F3507A2D97C045E089D1B2D (AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* __this, int32_t ___value0, const RuntimeMethod* method) ;
// System.Void UnityEngine.AnimationCurve::set_postWrapMode(UnityEngine.WrapMode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AnimationCurve_set_postWrapMode_m39A4758ABD5D2AEE475940829352792FE7E9CBA9 (AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* __this, int32_t ___value0, const RuntimeMethod* method) ;
// System.Void TMPro.TMP_Text::set_havePropertiesChanged(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_Text_set_havePropertiesChanged_mA38D7BC9E260BF29450738B827F2220A05662B31 (TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* __this, bool ___value0, const RuntimeMethod* method) ;
// UnityEngine.AnimationCurve TMPro.Examples.WarpTextExample::CopyAnimationCurve(UnityEngine.AnimationCurve)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* WarpTextExample_CopyAnimationCurve_m65A93388CC2CF58CD2E08CC8EF682A2C97C558FF (WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* __this, AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* ___curve0, const RuntimeMethod* method) ;
// System.Boolean TMPro.TMP_Text::get_havePropertiesChanged()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR bool TMP_Text_get_havePropertiesChanged_m42ECC7D1CA0DF6E59ACF761EB20635E81FCB8EFF_inline (TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* __this, const RuntimeMethod* method) ;
// System.Single UnityEngine.Keyframe::get_value()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Keyframe_get_value_m53E6B7609086AAAA46E24BAF734EF08E16A3FD6C (Keyframe_tB9C67DCBFE10C0AE9C52CB5C66E944255C9254F0* __this, const RuntimeMethod* method) ;
// UnityEngine.Bounds TMPro.TMP_Text::get_bounds()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Bounds_t367E830C64BBF235ED8C3B2F8CF6254FDCAD39C3 TMP_Text_get_bounds_mAEE407DE6CA2E1D1180868C03A3F0A3B6E455189 (TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* __this, const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Bounds::get_min()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Bounds_get_min_m465AC9BBE1DE5D8E8AD95AC19B9899068FEEBB13 (Bounds_t367E830C64BBF235ED8C3B2F8CF6254FDCAD39C3* __this, const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Bounds::get_max()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Bounds_get_max_m6446F2AB97C1E57CA89467B9DE52D4EB61F1CB09 (Bounds_t367E830C64BBF235ED8C3B2F8CF6254FDCAD39C3* __this, const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Vector3::op_UnaryNegation(UnityEngine.Vector3)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_op_UnaryNegation_m3AC523A7BED6E843165BDF598690F0560D8CAA63_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___a0, const RuntimeMethod* method) ;
// System.Single UnityEngine.AnimationCurve::Evaluate(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float AnimationCurve_Evaluate_m50B857043DE251A186032ADBCBB4CEF817F4EE3C (AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* __this, float ___time0, const RuntimeMethod* method) ;
// System.Void UnityEngine.Vector3::.ctor(System.Single,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Vector3__ctor_m5F87930F9B0828E5652E2D9D01ED907C01122C86_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* __this, float ___x0, float ___y1, const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Vector3::get_normalized()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_get_normalized_m736BBF65D5CDA7A18414370D15B4DFCC1E466F07_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* __this, const RuntimeMethod* method) ;
// System.Single UnityEngine.Vector3::Dot(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Vector3_Dot_m4688A1A524306675DBDB1E6D483F35E85E3CE6D8_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___lhs0, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___rhs1, const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Vector3::Cross(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_Cross_m77F64620D73934C56BEE37A64016DBDCB9D21DB8_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___lhs0, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___rhs1, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.CvErrorCallback::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CvErrorCallback__ctor_mFAA228DCA256624CAC949BDCEBE1027F94C57D44 (CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* __this, RuntimeObject* ___object0, intptr_t ___method1, const RuntimeMethod* method) ;
// OpenCvSharp.Util.WindowsLibraryLoader OpenCvSharp.Util.WindowsLibraryLoader::get_Instance()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* WindowsLibraryLoader_get_Instance_m019E55E3951CDB6FDDAA19F411741DAC90A6AFD3_inline (const RuntimeMethod* method) ;
// System.Collections.Generic.List`1<System.String> OpenCvSharp.Util.WindowsLibraryLoader::get_AdditionalPaths()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* WindowsLibraryLoader_get_AdditionalPaths_m3305759C5A1160F085A7B8E8842870B8D1E36E19_inline (WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* __this, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::LoadLibraries(System.Collections.Generic.IEnumerable`1<System.String>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_LoadLibraries_m27E4BE377F22C9046760EF872C8CE5D50E98E347 (RuntimeObject* ___additionalPaths0, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::TryPInvoke()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_TryPInvoke_m107EA381079C0171D039D89C9527B5C720F5E704 (const RuntimeMethod* method) ;
// System.Boolean OpenCvSharp.NativeMethods::IsUnix()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_IsUnix_mB280264B594473B5CDE78862CC0481E59AFBBB6E (const RuntimeMethod* method) ;
// TSource[] OpenCvSharp.Util.EnumerableEx::ToArray<System.String>(System.Collections.Generic.IEnumerable`1<TSource>)
inline StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* EnumerableEx_ToArray_TisString_t_mEFCCD6680E378258F94F29E25E24E2A0BA967DE8 (RuntimeObject* ___enumerable0, const RuntimeMethod* method)
{
	return ((  StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* (*) (RuntimeObject*, const RuntimeMethod*))EnumerableEx_ToArray_TisRuntimeObject_mE4FDA57A22312395160E1119D9836F7657A3782C_gshared)(___enumerable0, method);
}
// System.Void System.Collections.Generic.List`1<System.String>::.ctor(System.Collections.Generic.IEnumerable`1<T>)
inline void List_1__ctor_m0BAB01B25B1D62E100CC97401B1A9972D6DEB6EC (List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* __this, RuntimeObject* ___collection0, const RuntimeMethod* method)
{
	((  void (*) (List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD*, RuntimeObject*, const RuntimeMethod*))List_1__ctor_mE097DBD72433D1AFC11733F5678602603A756424_gshared)(__this, ___collection0, method);
}
// System.String System.Environment::GetFolderPath(System.Environment/SpecialFolder)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* Environment_GetFolderPath_m6294B29BDF0AC7CBB12EE2BB109D6DAA3FE9AF4B (int32_t ___folder0, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.String>::Add(T)
inline void List_1_Add_mF10DB1D3CBB0B14215F0E4F8AB4934A1955E5351_inline (List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* __this, String_t* ___item0, const RuntimeMethod* method)
{
	((  void (*) (List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD*, String_t*, const RuntimeMethod*))List_1_Add_mEBCF994CC3814631017F46A387B1A192ED6C85C7_gshared_inline)(__this, ___item0, method);
}
// System.Void OpenCvSharp.Util.WindowsLibraryLoader::LoadLibrary(System.String,System.Collections.Generic.IEnumerable`1<System.String>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void WindowsLibraryLoader_LoadLibrary_m05228C618D3CD3D6EB2D1763FFB1426103464FDA (WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* __this, String_t* ___dllName0, RuntimeObject* ___additionalPaths1, const RuntimeMethod* method) ;
// System.IntPtr OpenCvSharp.NativeMethods::redirectError(OpenCvSharp.CvErrorCallback,System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_redirectError_m06C82E765CF74E3834D98EF8F7CAB1CCA6440233 (CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* ___errCallback0, intptr_t ___userdata1, intptr_t* ___prevUserdata2, const RuntimeMethod* method) ;
// System.Boolean System.IntPtr::op_Inequality(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool IntPtr_op_Inequality_m2F715312CBFCE7E1A81D0689F68B97218E37E5D1 (intptr_t ___value10, intptr_t ___value21, const RuntimeMethod* method) ;
// System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Type_t* Type_GetTypeFromHandle_m2570A2A5B32A5E9D9F0F38B37459DA18736C823E (RuntimeTypeHandle_t332A452B8B6179E4469B69525D0FE82A88030F7B ___handle0, const RuntimeMethod* method) ;
// System.Delegate System.Runtime.InteropServices.Marshal::GetDelegateForFunctionPointer(System.IntPtr,System.Type)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Delegate_t* Marshal_GetDelegateForFunctionPointer_mCD20B7B64621599ED3A9F339F94B6D73FACCE592 (intptr_t ___ptr0, Type_t* ___t1, const RuntimeMethod* method) ;
// System.UInt64 OpenCvSharp.NativeMethods::core_Mat_sizeof()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t NativeMethods_core_Mat_sizeof_m206DA3A87E0AF7DD8E5AD578B7996420F48D1082 (const RuntimeMethod* method) ;
// OpenCvSharp.OpenCvSharpException OpenCvSharp.Util.PInvokeHelper::CreateException(System.Exception)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A* PInvokeHelper_CreateException_m05E240B26DF5AC599731315F1FB55DD4B91867FE (Exception_t* ___ex0, const RuntimeMethod* method) ;
// System.Void System.Console::WriteLine(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Console_WriteLine_mB3B6E89C2D3CCB7C284B46F30233782BFF942709 (String_t* ___value0, const RuntimeMethod* method) ;
// System.Exception System.Exception::get_InnerException()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Exception_t* Exception_get_InnerException_m0C1BDB339C786BA4DA7D2C1AD214571CFBBB1410_inline (Exception_t* __this, const RuntimeMethod* method) ;
// System.OperatingSystem System.Environment::get_OSVersion()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR OperatingSystem_t08A94435A5C7D999B5553B6C58763A6F2E3C8557* Environment_get_OSVersion_mE57572A131F223315BB4EFDE0CE136DC2FDDCEE2 (const RuntimeMethod* method) ;
// System.PlatformID System.OperatingSystem::get_Platform()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t OperatingSystem_get_Platform_m01AF3D6217E4031C3AA824481BBE9E2933347E26_inline (OperatingSystem_t08A94435A5C7D999B5553B6C58763A6F2E3C8557* __this, const RuntimeMethod* method) ;
// System.Boolean System.Type::op_Inequality(System.Type,System.Type)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Type_op_Inequality_m71AAC993EBBDBA44EE73847D68F71C70AF7AD1D5 (Type_t* ___left0, Type_t* ___right1, const RuntimeMethod* method) ;
// System.Void UnityEngine.Color::.ctor(System.Single,System.Single,System.Single,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Color__ctor_m3786F0D6E510D9CFA544523A955870BD2A514C8C_inline (Color_tD001788D726C3A7F1379BEED0260B9591F440C1F* __this, float ___r0, float ___g1, float ___b2, float ___a3, const RuntimeMethod* method) ;
// System.Single UnityEngine.Mathf::Clamp01(System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Mathf_Clamp01_mD921B23F47F5347996C56DC789D1DE16EE27D9B1_inline (float ___value0, const RuntimeMethod* method) ;
// System.Single UnityEngine.Mathf::Repeat(System.Single,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Mathf_Repeat_m1ACDE7EF466FB6CCAD29B3866E4A239A8530E9D5_inline (float ___t0, float ___length1, const RuntimeMethod* method) ;
// UnityEngine.Quaternion UnityEngine.Quaternion::Internal_FromEulerRad(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 Quaternion_Internal_FromEulerRad_m2842B9FFB31CDC0F80B7C2172E22831D11D91E93 (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___euler0, const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Vector3::Normalize(UnityEngine.Vector3)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_Normalize_m6120F119433C5B60BBB28731D3D4A0DA50A84DDD_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___value0, const RuntimeMethod* method) ;
// System.Void System.Array::Clear(System.Array,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Array_Clear_m48B57EC27CADC3463CA98A33373D557DA587FF1B (RuntimeArray* ___array0, int32_t ___index1, int32_t ___length2, const RuntimeMethod* method) ;
// System.Single UnityEngine.Vector3::Magnitude(UnityEngine.Vector3)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Vector3_Magnitude_m6AD0BEBF88AAF98188A851E62D7A32CB5B7830EF_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___vector0, const RuntimeMethod* method) ;
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL dlib_shapePredictor_new();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL dlib_shapePredictor_loadData(intptr_t, uint8_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int8_t CDECL dlib_shapePredictor_detectLandmarks(intptr_t, intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL dlib_shapePredictor_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_Rodrigues(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_Rodrigues_VecToMat(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_Rodrigues_MatToVec(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL calib3d_findHomography_InputArray(intptr_t, intptr_t, int32_t, double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL calib3d_findHomography_vector(Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, int32_t, double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_RQDecomp3x3_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_RQDecomp3x3_Mat(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_decomposeProjectionMatrix_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_decomposeProjectionMatrix_Mat(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_matMulDeriv(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_composeRT_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_composeRT_Mat(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_projectPoints_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_projectPoints_Mat(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_solvePnP_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_solvePnP_vector(Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t, double*, int32_t, double*, double*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_solvePnPRansac_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, int32_t, float, double, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_solvePnPRansac_vector(Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t, double*, int32_t, double*, double*, int32_t, int32_t, float, double, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL calib3d_initCameraMatrix2D_Mat(intptr_t*, int32_t, intptr_t*, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL calib3d_initCameraMatrix2D_array(intptr_t*, int32_t, int32_t*, intptr_t*, int32_t, int32_t*, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_findChessboardCorners_InputArray(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_findChessboardCorners_vector(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_find4QuadCornerSubpix_InputArray(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_find4QuadCornerSubpix_vector(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_drawChessboardCorners_InputArray(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_drawChessboardCorners_array(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_findCirclesGrid_InputArray(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_findCirclesGrid_vector(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL calib3d_calibrateCamera_InputArray(intptr_t*, int32_t, intptr_t*, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL calib3d_calibrateCamera_vector(intptr_t*, int32_t, int32_t*, intptr_t*, int32_t, int32_t*, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, double*, int32_t, intptr_t, intptr_t, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_calibrationMatrixValues_InputArray(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, double*, double*, double*, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, double*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_calibrationMatrixValues_array(DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, double*, double*, double*, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, double*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL calib3d_stereoCalibrate_InputArray(intptr_t*, int32_t, intptr_t*, int32_t, intptr_t*, int32_t, intptr_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL calib3d_stereoCalibrate_array(intptr_t*, int32_t, int32_t*, intptr_t*, int32_t, int32_t*, intptr_t*, int32_t, int32_t*, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, double*, int32_t, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, double*, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_stereoRectify_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_stereoRectify_array(DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, double*, int32_t, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, double*, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, double*, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, int32_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_stereoRectifyUncalibrated_InputArray(intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_stereoRectifyUncalibrated_array(Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL calib3d_rectify3Collinear_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t*, int32_t, intptr_t*, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL calib3d_getOptimalNewCameraMatrix_InputArray(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_getOptimalNewCameraMatrix_array(DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, double*, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, int32_t, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_convertPointsToHomogeneous_InputArray(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_convertPointsToHomogeneous_array1(Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_convertPointsToHomogeneous_array2(Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_convertPointsFromHomogeneous_InputArray(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_convertPointsFromHomogeneous_array1(Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_convertPointsFromHomogeneous_array2(Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_convertPointsHomogeneous(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL calib3d_findFundamentalMat_InputArray(intptr_t, intptr_t, int32_t, double, double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL calib3d_findFundamentalMat_array(Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, int32_t, double, double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_computeCorrespondEpilines_InputArray(intptr_t, int32_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_computeCorrespondEpilines_array2d(Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, int32_t, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_computeCorrespondEpilines_array3d(Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC*, int32_t, int32_t, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_triangulatePoints_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_triangulatePoints_array(DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_correctMatches_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_correctMatches_array(DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_filterSpeckles(intptr_t, double, int32_t, double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A CDECL calib3d_getValidDisparityROI(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_validateDisparity(intptr_t, intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_reprojectImageTo3D(intptr_t, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_estimateAffine3D(intptr_t, intptr_t, intptr_t, intptr_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoMatcher_compute(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoMatcher_getMinDisparity(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoMatcher_setMinDisparity(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoMatcher_getNumDisparities(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoMatcher_setNumDisparities(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoMatcher_getBlockSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoMatcher_setBlockSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoMatcher_getSpeckleWindowSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoMatcher_setSpeckleWindowSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoMatcher_getSpeckleRange(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoMatcher_setSpeckleRange(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoMatcher_getDisp12MaxDiff(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoMatcher_setDisp12MaxDiff(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_Ptr_StereoBM_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL calib3d_StereoBM_create(int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoBM_getPreFilterType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoBM_setPreFilterType(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoBM_getPreFilterSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoBM_setPreFilterSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoBM_getPreFilterCap(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoBM_setPreFilterCap(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoBM_getTextureThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoBM_setTextureThreshold(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoBM_getUniquenessRatio(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoBM_setUniquenessRatio(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoBM_getSmallerBlockSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoBM_setSmallerBlockSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A CDECL calib3d_StereoBM_getROI1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoBM_setROI1(intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A CDECL calib3d_StereoBM_getROI2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoBM_setROI2(intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_Ptr_StereoSGBM_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL calib3d_StereoSGBM_create(int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoSGBM_getPreFilterCap(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoSGBM_setPreFilterCap(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoSGBM_getUniquenessRatio(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoSGBM_setUniquenessRatio(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoSGBM_getP1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoSGBM_setP1(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoSGBM_getP2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoSGBM_setP2(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoSGBM_getMode(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoSGBM_setMode(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_setNumThreads(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_getNumThreads();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_getThreadNum();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_getBuildInformation(char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_getBuildInformation_length();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int64_t CDECL core_getTickCount();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_getTickFrequency();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int64_t CDECL core_getCPUTickCount();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_checkHardwareSupport(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_getNumberOfCPUs();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_fastMalloc(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_fastFree(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_setUseOptimized(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_useOptimized();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL redirectError(Il2CppMethodPointer, intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_cvarrToMat(intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_extractImageCOI(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_insertImageCOI(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_add(intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_subtract(intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_multiply(intptr_t, intptr_t, intptr_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_divide1(double, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_divide2(intptr_t, intptr_t, intptr_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_scaleAdd(intptr_t, double, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_addWeighted(intptr_t, double, intptr_t, double, double, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_convertScaleAbs(intptr_t, intptr_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_LUT(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 CDECL core_sum(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_countNonZero(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_findNonZero(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 CDECL core_mean(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_meanStdDev_OutputArray(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_meanStdDev_Scalar(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3*, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_norm1(intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_norm2(intptr_t, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_batchDistance(intptr_t, intptr_t, intptr_t, int32_t, intptr_t, int32_t, int32_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_normalize(intptr_t, intptr_t, double, double, int32_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_minMaxLoc1(intptr_t, double*, double*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_minMaxLoc2(intptr_t, double*, double*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_minMaxIdx1(intptr_t, double*, double*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_minMaxIdx2(intptr_t, double*, double*, int32_t*, int32_t*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_reduce(intptr_t, intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_merge(intptr_t*, uint32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_split(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_mixChannels(intptr_t*, uint32_t, intptr_t*, uint32_t, int32_t*, uint32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_extractChannel(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_insertChannel(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_flip(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_rotate(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_repeat1(intptr_t, int32_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_repeat2(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_hconcat1(intptr_t*, uint32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_hconcat2(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_vconcat1(intptr_t*, uint32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_vconcat2(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_bitwise_and(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_bitwise_or(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_bitwise_xor(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_bitwise_not(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_absdiff(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_inRange_InputArray(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_inRange_Scalar(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_compare(intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_min1(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_max1(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_min_MatMat(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_min_MatDouble(intptr_t, double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_max_MatMat(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_max_MatDouble(intptr_t, double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_sqrt(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_pow_Mat(intptr_t, double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_exp_Mat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_log_Mat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL core_cubeRoot(float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL core_fastAtan2(float, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_polarToCart(intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_cartToPolar(intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_phase(intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_magnitude_Mat(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_checkRange(intptr_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_patchNaNs(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_gemm(intptr_t, intptr_t, double, intptr_t, double, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_mulTransposed(intptr_t, intptr_t, int32_t, intptr_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_transpose(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_transform(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_perspectiveTransform(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_perspectiveTransform_Mat(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_perspectiveTransform_Point2f(intptr_t, int32_t, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_perspectiveTransform_Point2d(intptr_t, int32_t, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_perspectiveTransform_Point3f(intptr_t, int32_t, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_perspectiveTransform_Point3d(intptr_t, int32_t, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_completeSymm(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_setIdentity(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_determinant(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 CDECL core_trace(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_invert(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_solve(intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_sort(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_sortIdx(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_solveCubic(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_solvePoly(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_eigen(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_calcCovarMatrix_Mat(intptr_t*, int32_t, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_calcCovarMatrix_InputArray(intptr_t, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_PCACompute(intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_PCAComputeVar(intptr_t, intptr_t, intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_PCAProject(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_PCABackProject(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SVDecomp(intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SVBackSubst(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_Mahalanobis(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_dft(intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_idft(intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_dct(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_idct(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_mulSpectrums(intptr_t, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_getOptimalDFTSize(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_kmeans(intptr_t, int32_t, intptr_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4, int32_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C uint64_t CDECL core_theRNG();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_randu_InputArray(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_randu_Scalar(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_randn_InputArray(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_randn_Scalar(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_randShuffle(intptr_t, double, uint64_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Algorithm_write(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Algorithm_read(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Algorithm_empty(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Algorithm_save(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Algorithm_getDefaultName(intptr_t, char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_InputArray_new_byMat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_InputArray_new_byMatExpr(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_InputArray_new_byScalar(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_InputArray_new_byDouble(double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_InputArray_new_byGpuMat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_InputArray_new_byVectorOfMat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_InputArray_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_OutputArray_new_byMat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_OutputArray_new_byGpuMat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_OutputArray_new_byScalar(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_OutputArray_new_byVectorOfMat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_OutputArray_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_InputArray_kind(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_OutputArray_getMat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 CDECL core_OutputArray_getScalar(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_OutputArray_getVectorOfMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileStorage_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileStorage_new2(char*, int32_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileStorage_newFromLegacy(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileStorage_open(intptr_t, char*, int32_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileStorage_isOpened(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_release(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_releaseAndGetString(intptr_t, char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileStorage_getFirstTopLevelNode(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileStorage_root(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileStorage_indexer(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileStorage_toLegacy(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_writeRaw(intptr_t, char*, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_writeObj(intptr_t, char*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_getDefaultObjectName(char*, char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int8_t* CDECL core_FileStorage_elname(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileStorage_structs(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileStorage_state(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_write_int(intptr_t, char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_write_float(intptr_t, char*, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_write_double(intptr_t, char*, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_write_String(intptr_t, char*, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_write_Mat(intptr_t, char*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_write_SparseMat(intptr_t, char*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_write_vectorOfKeyPoint(intptr_t, char*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_write_vectorOfDMatch(intptr_t, char*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_writeScalar_int(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_writeScalar_float(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_writeScalar_double(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_writeScalar_String(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileNode_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileNode_new2(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileNode_new3(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileNode_operatorThis_byString(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileNode_operatorThis_byInt(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileNode_type(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileNode_empty(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileNode_isNone(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileNode_isSeq(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileNode_isMap(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileNode_isInt(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileNode_isReal(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileNode_isString(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileNode_isNamed(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_name(intptr_t, char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileNode_size(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileNode_toInt(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL core_FileNode_toFloat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_FileNode_toDouble(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_toString(intptr_t, char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_toMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_readRaw(intptr_t, char*, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileNode_readObj(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_read_int(intptr_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_read_float(intptr_t, float*, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_read_double(intptr_t, double*, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_read_String(intptr_t, char*, int32_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_read_Mat(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_read_SparseMat(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_read_vectorOfKeyPoint(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_read_vectorOfDMatch(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_PCA_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_PCA_new2(intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_PCA_new3(intptr_t, intptr_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_PCA_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_PCA_operatorThis(intptr_t, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_PCA_computeVar(intptr_t, intptr_t, intptr_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_PCA_project1(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_PCA_project2(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_PCA_backProject1(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_PCA_backProject2(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_PCA_eigenvectors(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_PCA_eigenvalues(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_PCA_mean(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_RNG_fill(uint64_t*, intptr_t, int32_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_RNG_gaussian(uint64_t*, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SVD_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SVD_new2(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SVD_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SVD_operatorThis(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SVD_backSubst(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SVD_static_compute1(intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SVD_static_compute2(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SVD_static_backSubst(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SVD_static_solveZ(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SVD_u(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SVD_w(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SVD_vt(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C uint64_t CDECL core_Mat_sizeof();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new2(int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new3(int32_t, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new4(intptr_t, Range_t981FA0C4141FE7585A1C292A250B431019099C09, Range_t981FA0C4141FE7585A1C292A250B431019099C09);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new5(intptr_t, Range_t981FA0C4141FE7585A1C292A250B431019099C09);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new6(intptr_t, Range_t981FA0C4141FE7585A1C292A250B431019099C09*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new7(intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new8(int32_t, int32_t, int32_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new9(int32_t, int32_t*, int32_t, intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new10(int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new11(int32_t, int32_t*, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new_FromIplImage(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new_FromCvMat(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_release(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_adjustROI(intptr_t, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_assignTo1(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_assignTo2(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_channels(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_checkVector1(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_checkVector2(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_checkVector3(intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_clone(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_col_toMat(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_col_toMatExpr(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_cols(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_colRange_toMat(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_colRange_toMatExpr(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_dims(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_convertTo(intptr_t, intptr_t, int32_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_copyTo(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_create1(intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_create2(intptr_t, int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_cross(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C uint8_t* CDECL core_Mat_data(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_datastart(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_dataend(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_datalimit(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_depth(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_diag1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_diag2(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_Mat_dot(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C uint64_t CDECL core_Mat_elemSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C uint64_t CDECL core_Mat_elemSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_empty(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_eye(int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_inv1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_inv2(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_isContinuous(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_isSubmatrix(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_locateROI(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_mul1(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_mul2(intptr_t, intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_ones1(int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_ones2(int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_reshape1(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_reshape2(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_reshape3(intptr_t, int32_t, int32_t, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_rows(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_row_toMat(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_row_toMatExpr(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_rowRange_toMat(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_rowRange_toMatExpr(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_setTo_Scalar(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_setTo_InputArray(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 CDECL core_Mat_size(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_sizeAt(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C uint64_t CDECL core_Mat_step11(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C uint64_t CDECL core_Mat_step12(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int64_t CDECL core_Mat_step(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C uint64_t CDECL core_Mat_stepAt(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_subMat1(intptr_t, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_subMat2(intptr_t, int32_t, Range_t981FA0C4141FE7585A1C292A250B431019099C09*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_t(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C uint64_t CDECL core_Mat_total(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_type(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_zeros1(int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_zeros2(int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int8_t* CDECL core_Mat_dump(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_dump_delete(int8_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_ptr1d(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_ptr2d(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_ptr3d(intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_ptrnd(intptr_t, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_assignment_FromMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_assignment_FromMatExpr(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_assignment_FromScalar(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_IplImage(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_IplImage_alignment(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_CvMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorUnaryMinus(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorAdd_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorAdd_MatScalar(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorAdd_ScalarMat(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorMinus_Mat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorSubtract_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorSubtract_MatScalar(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorSubtract_ScalarMat(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorMultiply_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorMultiply_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorMultiply_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorDivide_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorDivide_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorDivide_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorAnd_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorAnd_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorAnd_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorOr_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorOr_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorOr_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorXor_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorXor_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorXor_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorNot(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorLT_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorLT_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorLT_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorLE_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorLE_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorLE_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorGT_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorGT_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorGT_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorGE_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorGE_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorGE_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorEQ_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorEQ_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorEQ_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorNE_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorNE_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorNE_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_abs_Mat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetB(intptr_t, int32_t, int32_t, uint8_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetS(intptr_t, int32_t, int32_t, int16_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetI(intptr_t, int32_t, int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetF(intptr_t, int32_t, int32_t, float*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetD(intptr_t, int32_t, int32_t, double*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetVec3b(intptr_t, int32_t, int32_t, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetVec3d(intptr_t, int32_t, int32_t, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetVec4f(intptr_t, int32_t, int32_t, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetVec6f(intptr_t, int32_t, int32_t, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetVec4i(intptr_t, int32_t, int32_t, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetPoint(intptr_t, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetPoint2f(intptr_t, int32_t, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetPoint2d(intptr_t, int32_t, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetPoint3i(intptr_t, int32_t, int32_t, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetPoint3f(intptr_t, int32_t, int32_t, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetPoint3d(intptr_t, int32_t, int32_t, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetRect(intptr_t, int32_t, int32_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetB(intptr_t, int32_t, int32_t, uint8_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetS(intptr_t, int32_t, int32_t, int16_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetI(intptr_t, int32_t, int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetF(intptr_t, int32_t, int32_t, float*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetD(intptr_t, int32_t, int32_t, double*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetVec3b(intptr_t, int32_t, int32_t, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetVec3d(intptr_t, int32_t, int32_t, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetVec4f(intptr_t, int32_t, int32_t, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetVec6f(intptr_t, int32_t, int32_t, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetVec4i(intptr_t, int32_t, int32_t, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetPoint(intptr_t, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetPoint2f(intptr_t, int32_t, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetPoint2d(intptr_t, int32_t, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetPoint3i(intptr_t, int32_t, int32_t, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetPoint3f(intptr_t, int32_t, int32_t, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetPoint3d(intptr_t, int32_t, int32_t, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetRect(intptr_t, int32_t, int32_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Mat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_char(intptr_t, int8_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_uchar(intptr_t, uint8_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_short(intptr_t, int16_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_ushort(intptr_t, uint16_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_int(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_float(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_double(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec2b(intptr_t, Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec3b(intptr_t, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec4b(intptr_t, Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec6b(intptr_t, Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec2s(intptr_t, Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec3s(intptr_t, Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec4s(intptr_t, Vec4s_t36070B932676A14293929ED30FF39D45635126B5);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec6s(intptr_t, Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec2w(intptr_t, Vec2w_tC86992B28B612E016C5DFE0C6AEFB352CA530B97);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec3w(intptr_t, Vec3w_t639AB866E901F11C8B2102D9AABF3D326C187343);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec4w(intptr_t, Vec4w_tA5261E05040FD831243C9A62E36D8644449ECA63);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec6w(intptr_t, Vec6w_tAB37C7CF73E1BD9071AF39DA9F4F30A4A0D667D9);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec2i(intptr_t, Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec3i(intptr_t, Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec4i(intptr_t, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec6i(intptr_t, Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec2f(intptr_t, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec3f(intptr_t, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec4f(intptr_t, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec6f(intptr_t, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec2d(intptr_t, Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec3d(intptr_t, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec6d(intptr_t, Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Point(intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Point2f(intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Point2d(intptr_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Point3i(intptr_t, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Point3f(intptr_t, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Point3d(intptr_t, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Size(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Size2f(intptr_t, Size2f_tDE98F6BC79C37B2862E0197FB9FB5B739FA3EFF7);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Rect(intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_reserve(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_resize1(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_resize2(intptr_t, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_pop_back(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_uchar(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec2b(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec3b(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec4b(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec6b(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_short(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec2s(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec3s(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec4s(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec6s(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_int(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec2i(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec3i(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec4i(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec6i(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_float(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec2f(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec3f(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec4f(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec6f(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_double(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec2d(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec3d(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec4d(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec6d(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_MatExpr_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_toMat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorUnaryMinus_MatExpr(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorUnaryNot_MatExpr(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorAdd_MatExprMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorAdd_MatMatExpr(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorAdd_MatExprScalar(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorAdd_ScalarMatExpr(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorAdd_MatExprMatExpr(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorSubtract_MatExprMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorSubtract_MatMatExpr(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorSubtract_MatExprScalar(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorSubtract_ScalarMatExpr(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorSubtract_MatExprMatExpr(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorMultiply_MatExprMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorMultiply_MatMatExpr(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorMultiply_MatExprDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorMultiply_DoubleMatExpr(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorMultiply_MatExprMatExpr(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorDivide_MatExprMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorDivide_MatMatExpr(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorDivide_MatExprDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorDivide_DoubleMatExpr(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorDivide_MatExprMatExpr(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_row(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_col(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_diag1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_diag2(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_submat(intptr_t, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_cross(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_MatExpr_dot(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_t(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_inv1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_inv2(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_mul_toMatExpr(intptr_t, intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_mul_toMat(intptr_t, intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 CDECL core_MatExpr_size(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_MatExpr_type(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_abs_MatExpr(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C uint64_t CDECL core_SparseMat_sizeof();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_new2(int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_new3(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_operatorAssign_SparseMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_operatorAssign_Mat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_clone(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_copyTo_SparseMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_copyTo_Mat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_convertTo_SparseMat(intptr_t, intptr_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_convertTo_Mat(intptr_t, intptr_t, int32_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_assignTo(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_create(intptr_t, int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_clear(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_addref(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_release(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_SparseMat_elemSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_SparseMat_elemSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_SparseMat_type(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_SparseMat_depth(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_SparseMat_channels(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_size1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_SparseMat_size2(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_SparseMat_dims(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_nzcount(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_hash_1d(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_hash_2d(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_hash_3d(intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_hash_nd(intptr_t, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_ptr_1d(intptr_t, int32_t, int32_t, uint64_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_ptr_2d(intptr_t, int32_t, int32_t, int32_t, uint64_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_ptr_3d(intptr_t, int32_t, int32_t, int32_t, int32_t, uint64_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_ptr_nd(intptr_t, int32_t*, int32_t, uint64_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL face_createEigenFaceRecognizer(int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL face_createFisherFaceRecognizer(int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL face_createLBPHFaceRecognizer(int32_t, int32_t, int32_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL face_BasicFaceRecognizer_getNumComponents(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_BasicFaceRecognizer_setNumComponents(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL face_BasicFaceRecognizer_getThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_BasicFaceRecognizer_setThreshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_BasicFaceRecognizer_getProjections(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_BasicFaceRecognizer_getLabels(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_BasicFaceRecognizer_getEigenValues(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_BasicFaceRecognizer_getEigenVectors(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_BasicFaceRecognizer_getMean(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL face_Ptr_BasicFaceRecognizer_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_Ptr_BasicFaceRecognizer_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_train(intptr_t, intptr_t*, int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_update(intptr_t, intptr_t*, int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL face_FaceRecognizer_predict1(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_predict2(intptr_t, intptr_t, int32_t*, double*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_save1(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_load1(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_save2(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_load2(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_setLabelInfo(intptr_t, int32_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_getLabelInfo(intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_getLabelsByString(intptr_t, char*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL face_FaceRecognizer_getThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_setThreshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL face_LBPHFaceRecognizer_getGridX(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_LBPHFaceRecognizer_setGridX(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL face_LBPHFaceRecognizer_getGridY(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_LBPHFaceRecognizer_setGridY(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL face_LBPHFaceRecognizer_getRadius(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_LBPHFaceRecognizer_setRadius(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL face_LBPHFaceRecognizer_getNeighbors(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_LBPHFaceRecognizer_setNeighbors(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL face_LBPHFaceRecognizer_getThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_LBPHFaceRecognizer_setThreshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_LBPHFaceRecognizer_getHistograms(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_LBPHFaceRecognizer_getLabels(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL face_Ptr_LBPHFaceRecognizer_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_Ptr_LBPHFaceRecognizer_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_drawKeypoints(intptr_t, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, int32_t, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_drawMatches1(intptr_t, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, int32_t, intptr_t, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, int32_t, DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A*, int32_t, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, uint8_t*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_drawMatches2(intptr_t, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, int32_t, intptr_t, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, int32_t, intptr_t*, int32_t, int32_t*, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t*, int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_evaluateFeatureDetector(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, float*, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_computeRecallPrecisionCurve(intptr_t*, int32_t, int32_t*, intptr_t*, int32_t, int32_t*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL features2d_getRecall(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_getNearestPoint(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AGAST(intptr_t, intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_AgastFeatureDetector_create(int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_AgastFeatureDetector_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_AgastFeatureDetector_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AgastFeatureDetector_setThreshold(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_AgastFeatureDetector_getThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AgastFeatureDetector_setNonmaxSuppression(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_AgastFeatureDetector_getNonmaxSuppression(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AgastFeatureDetector_setType(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_AgastFeatureDetector_getType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_AKAZE_create(int32_t, int32_t, int32_t, float, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_AKAZE_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_AKAZE_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AKAZE_setDescriptorType(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_AKAZE_getDescriptorType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AKAZE_setDescriptorSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_AKAZE_getDescriptorSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AKAZE_setDescriptorChannels(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_AKAZE_getDescriptorChannels(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AKAZE_setThreshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL features2d_AKAZE_getThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AKAZE_setNOctaves(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_AKAZE_getNOctaves(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AKAZE_setNOctaveLayers(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_AKAZE_getNOctaveLayers(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AKAZE_setDiffusivity(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_AKAZE_getDiffusivity(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_BRISK_create1(int32_t, int32_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_BRISK_create2(float*, int32_t, int32_t*, int32_t, float, float, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_BRISK_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_BRISK_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_DescriptorMatcher_add(intptr_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_DescriptorMatcher_getTrainDescriptors(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_DescriptorMatcher_clear(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_DescriptorMatcher_empty(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_DescriptorMatcher_isMaskSupported(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_DescriptorMatcher_train(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_DescriptorMatcher_match1(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_DescriptorMatcher_knnMatch1(intptr_t, intptr_t, intptr_t, intptr_t, int32_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_DescriptorMatcher_radiusMatch1(intptr_t, intptr_t, intptr_t, intptr_t, float, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_DescriptorMatcher_match2(intptr_t, intptr_t, intptr_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_DescriptorMatcher_knnMatch2(intptr_t, intptr_t, intptr_t, int32_t, intptr_t*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_DescriptorMatcher_radiusMatch2(intptr_t, intptr_t, intptr_t, float, intptr_t*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_DescriptorMatcher_create(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_DescriptorMatcher_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_DescriptorMatcher_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_BFMatcher_new(int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_BFMatcher_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_BFMatcher_isMaskSupported(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_BFMatcher_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_BFMatcher_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_FlannBasedMatcher_new(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_FlannBasedMatcher_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_FlannBasedMatcher_add(intptr_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_FlannBasedMatcher_clear(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_FlannBasedMatcher_train(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_FlannBasedMatcher_isMaskSupported(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_FlannBasedMatcher_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_FlannBasedMatcher_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_FAST1(intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_FAST2(intptr_t, intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_FastFeatureDetector_create(int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_FastFeatureDetector_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_FastFeatureDetector_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_FastFeatureDetector_setThreshold(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_FastFeatureDetector_getThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_FastFeatureDetector_setNonmaxSuppression(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_FastFeatureDetector_getNonmaxSuppression(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_FastFeatureDetector_setType(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_FastFeatureDetector_getType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_Feature2D_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_Feature2D_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Feature2D_detect_Mat1(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Feature2D_detect_Mat2(intptr_t, intptr_t*, int32_t, intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Feature2D_detect_InputArray(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Feature2D_compute1(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Feature2D_compute2(intptr_t, intptr_t*, int32_t, intptr_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Feature2D_detectAndCompute(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_Feature2D_descriptorSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_Feature2D_descriptorType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_Feature2D_defaultNorm(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_Feature2D_empty(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_GFTTDetector_create(int32_t, double, double, int32_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_GFTTDetector_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_GFTTDetector_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_GFTTDetector_setMaxFeatures(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_GFTTDetector_getMaxFeatures(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_GFTTDetector_setQualityLevel(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL features2d_GFTTDetector_getQualityLevel(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_GFTTDetector_setMinDistance(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL features2d_GFTTDetector_getMinDistance(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_GFTTDetector_setBlockSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_GFTTDetector_getBlockSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_GFTTDetector_setHarrisDetector(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_GFTTDetector_getHarrisDetector(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_GFTTDetector_setK(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL features2d_GFTTDetector_getK(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_KAZE_create(int32_t, int32_t, float, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_KAZE_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_KAZE_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KAZE_setDiffusivity(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_KAZE_getDiffusivity(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KAZE_setExtended(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_KAZE_getExtended(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KAZE_setNOctaveLayers(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_KAZE_getNOctaveLayers(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KAZE_setNOctaves(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_KAZE_getNOctaves(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KAZE_setThreshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL features2d_KAZE_getThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KAZE_setUpright(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_KAZE_getUpright(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KeyPointsFilter_runByImageBorder(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KeyPointsFilter_runByKeypointSize(intptr_t, float, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KeyPointsFilter_runByPixelsMask(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KeyPointsFilter_removeDuplicated(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KeyPointsFilter_retainBest(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_MSER_create(int32_t, int32_t, int32_t, double, double, int32_t, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_MSER_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_MSER_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_MSER_detectRegions(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_MSER_setDelta(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_MSER_getDelta(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_MSER_setMinArea(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_MSER_getMinArea(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_MSER_setMaxArea(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_MSER_getMaxArea(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_MSER_setPass2Only(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_MSER_getPass2Only(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_ORB_create(int32_t, float, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_ORB_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_ORB_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_ORB_setMaxFeatures(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_ORB_getMaxFeatures(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_ORB_setScaleFactor(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL features2d_ORB_getScaleFactor(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_ORB_setNLevels(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_ORB_getNLevels(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_ORB_setEdgeThreshold(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_ORB_getEdgeThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_ORB_setFirstLevel(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_ORB_getFirstLevel(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_ORB_setWTA_K(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_ORB_getWTA_K(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_ORB_setScoreType(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_ORB_getScoreType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_ORB_setPatchSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_ORB_getPatchSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_ORB_setFastThreshold(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_ORB_getFastThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_SimpleBlobDetector_create(WParams_tF352D7BCB627DF6ABFC3538BAE8B601298495A54*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_SimpleBlobDetector_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_SimpleBlobDetector_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_getGaussianKernel(int32_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_getDerivKernels(intptr_t, intptr_t, int32_t, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_getGaborKernel(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, double, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_getStructuringElement(int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_copyMakeBorder(intptr_t, intptr_t, int32_t, int32_t, int32_t, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_medianBlur(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GaussianBlur(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_bilateralFilter(intptr_t, intptr_t, int32_t, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_boxFilter(intptr_t, intptr_t, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_blur(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_filter2D(intptr_t, intptr_t, int32_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_sepFilter2D(intptr_t, intptr_t, int32_t, intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Sobel(intptr_t, intptr_t, int32_t, int32_t, int32_t, int32_t, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Scharr(intptr_t, intptr_t, int32_t, int32_t, int32_t, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Laplacian(intptr_t, intptr_t, int32_t, int32_t, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Canny(intptr_t, intptr_t, double, double, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_cornerEigenValsAndVecs(intptr_t, intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_preCornerDetect(intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_cornerSubPix(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_goodFeaturesToTrack(intptr_t, intptr_t, int32_t, double, double, intptr_t, int32_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_HoughLines(intptr_t, intptr_t, double, double, int32_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_HoughLinesP(intptr_t, intptr_t, double, double, int32_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_HoughCircles(intptr_t, intptr_t, int32_t, double, double, double, double, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_erode(intptr_t, intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_dilate(intptr_t, intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_morphologyEx(intptr_t, intptr_t, int32_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_resize(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_warpAffine(intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_warpPerspective_MisInputArray(intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_warpPerspective_MisArray(intptr_t, intptr_t, SingleU5BU2CU5D_t8C95DA2D5056EB0490FC7DCB1ED30E33DE1D53F4*, int32_t, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_remap(intptr_t, intptr_t, intptr_t, intptr_t, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_convertMaps(intptr_t, intptr_t, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_getRotationMatrix2D(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_invertAffineTransform(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_getPerspectiveTransform1(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_getPerspectiveTransform2(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_getAffineTransform1(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_getAffineTransform2(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_getRectSubPix(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_logPolar(intptr_t, intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_linearPolar(intptr_t, intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_integral1(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_integral2(intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_integral3(intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_accumulate(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_accumulateSquare(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_accumulateProduct(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_accumulateWeighted(intptr_t, intptr_t, double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_PSNR(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C CDECL imgproc_phaseCorrelate(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C CDECL imgproc_phaseCorrelateRes(intptr_t, intptr_t, intptr_t, double*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_createHanningWindow(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_threshold(intptr_t, intptr_t, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_adaptiveThreshold(intptr_t, intptr_t, double, int32_t, int32_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_pyrDown(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_pyrUp(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_undistort(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_initUndistortRectifyMap(intptr_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL imgproc_initWideAngleProjMap(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, intptr_t, intptr_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_getDefaultNewCameraMatrix(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_undistortPoints(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_calcHist1(intptr_t*, int32_t, int32_t*, intptr_t, intptr_t, int32_t, int32_t*, intptr_t*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_calcBackProject(intptr_t*, int32_t, int32_t*, intptr_t, intptr_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_compareHist1(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_equalizeHist(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL imgproc_EMD(intptr_t, intptr_t, int32_t, intptr_t, float*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_watershed(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_pyrMeanShiftFiltering(intptr_t, intptr_t, double, double, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_grabCut(intptr_t, intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_distanceTransformWithLabels(intptr_t, intptr_t, intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_distanceTransform(intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_floodFill1(intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_floodFill2(intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_cvtColor(intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C NativeStruct_tB25EB88E7E834223F80F1F898DE4BE9853B6D3C8 CDECL imgproc_moments(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_matchTemplate(intptr_t, intptr_t, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_connectedComponents(intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_connectedComponentsWithStats(intptr_t, intptr_t, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_findContours1_vector(intptr_t, intptr_t*, intptr_t*, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_findContours1_OutputArray(intptr_t, intptr_t*, intptr_t, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_findContours2_vector(intptr_t, intptr_t*, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_findContours2_OutputArray(intptr_t, intptr_t*, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_drawContours_vector_fix(intptr_t, intptr_t*, int32_t, int32_t*, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_drawContours_InputArray(intptr_t, intptr_t*, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, intptr_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_approxPolyDP_InputArray(intptr_t, intptr_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_approxPolyDP_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, intptr_t*, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_approxPolyDP_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t*, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_arcLength_InputArray(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_arcLength_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_arcLength_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A CDECL imgproc_boundingRect_InputArray(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A CDECL imgproc_boundingRect_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A CDECL imgproc_boundingRect_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_contourArea_InputArray(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_contourArea_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_contourArea_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 CDECL imgproc_minAreaRect_InputArray(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 CDECL imgproc_minAreaRect_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 CDECL imgproc_minAreaRect_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_minEnclosingCircle_InputArray(intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, float*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_minEnclosingCircle_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, float*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_minEnclosingCircle_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, float*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_matchShapes_InputArray(intptr_t, intptr_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_matchShapes_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_convexHull_InputArray(intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_convexHull_Point_ReturnsPoints(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_convexHull_Point2f_ReturnsPoints(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_convexHull_Point_ReturnsIndices(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_convexHull_Point2f_ReturnsIndices(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_convexityDefects_InputArray(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_convexityDefects_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, int32_t*, int32_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_convexityDefects_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, int32_t*, int32_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_isContourConvex_InputArray(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_isContourConvex_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_isContourConvex_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL imgproc_intersectConvexConvex_InputArray(intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL imgproc_intersectConvexConvex_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL imgproc_intersectConvexConvex_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 CDECL imgproc_fitEllipse_InputArray(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 CDECL imgproc_fitEllipse_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 CDECL imgproc_fitEllipse_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_fitLine_InputArray(intptr_t, intptr_t, int32_t, double, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_fitLine_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, float*, int32_t, double, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_fitLine_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, float*, int32_t, double, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_fitLine_Point3i(Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B*, int32_t, float*, int32_t, double, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_fitLine_Point3f(Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, int32_t, float*, int32_t, double, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_pointPolygonTest_InputArray(intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_pointPolygonTest_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_pointPolygonTest_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_rotatedRectangleIntersection_OutputArray(RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967, RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_rotatedRectangleIntersection_vector(RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967, RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_applyColorMap(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_line(intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_arrowedLine(intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_rectangle_InputOutputArray(intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_rectangle_Mat(intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_circle(intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_ellipse1(intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, double, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_ellipse2(intptr_t, RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_fillConvexPoly_Mat(intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_fillConvexPoly_InputOutputArray(intptr_t, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_fillPoly_Mat(intptr_t, intptr_t*, int32_t*, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_fillPoly_InputOutputArray(intptr_t, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_polylines_Mat(intptr_t, intptr_t*, int32_t*, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_polylines_InputOutputArray(intptr_t, intptr_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_clipLine1(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_clipLine2(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_ellipse2Poly(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, int32_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_putText(intptr_t, char*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, double, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 CDECL core_getTextSize(char*, int32_t, double, int32_t, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_createCLAHE(double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Ptr_CLAHE_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_Ptr_CLAHE_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_CLAHE_apply(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_CLAHE_setClipLimit(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_CLAHE_getClipLimit(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_CLAHE_setTilesGridSize(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 CDECL imgproc_CLAHE_getTilesGridSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_CLAHE_collectGarbage(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHough_setTemplate1(intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHough_setTemplate2(intptr_t, intptr_t, intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHough_detect1(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHough_detect2(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHough_setCannyLowThresh(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_GeneralizedHough_getCannyLowThresh(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHough_setCannyHighThresh(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_GeneralizedHough_getCannyHighThresh(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHough_setMinDist(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_GeneralizedHough_getMinDist(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHough_setDp(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_GeneralizedHough_getDp(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHough_setMaxBufferSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_GeneralizedHough_getMaxBufferSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_createGeneralizedHoughBallard();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_Ptr_GeneralizedHoughBallard_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Ptr_GeneralizedHoughBallard_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughBallard_setLevels(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_GeneralizedHoughBallard_getLevels(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughBallard_setVotesThreshold(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_GeneralizedHoughBallard_getVotesThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_createGeneralizedHoughGuil();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_Ptr_GeneralizedHoughGuil_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Ptr_GeneralizedHoughGuil_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setXi(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_GeneralizedHoughGuil_getXi(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setLevels(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_GeneralizedHoughGuil_getLevels(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setAngleEpsilon(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_GeneralizedHoughGuil_getAngleEpsilon(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setMinAngle(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_GeneralizedHoughGuil_getMinAngle(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setMaxAngle(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_GeneralizedHoughGuil_getMaxAngle(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setAngleStep(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_GeneralizedHoughGuil_getAngleStep(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setAngleThresh(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_GeneralizedHoughGuil_getAngleThresh(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setMinScale(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_GeneralizedHoughGuil_getMinScale(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setMaxScale(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_GeneralizedHoughGuil_getMaxScale(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setScaleStep(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_GeneralizedHoughGuil_getScaleStep(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setScaleThresh(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_GeneralizedHoughGuil_getScaleThresh(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setPosThresh(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_GeneralizedHoughGuil_getPosThresh(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_LineIterator_new(intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_LineIterator_operatorEntity(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_operatorPP(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC CDECL imgproc_LineIterator_pos(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_LineIterator_ptr_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_ptr_set(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_LineIterator_ptr0_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_LineIterator_step_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_step_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_LineIterator_elemSize_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_elemSize_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_LineIterator_err_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_err_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_LineIterator_count_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_count_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_LineIterator_minusDelta_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_minusDelta_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_LineIterator_plusDelta_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_plusDelta_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_LineIterator_minusStep_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_minusStep_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_LineIterator_plusStep_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_plusStep_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineSegmentDetector_detect_OutputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineSegmentDetector_detect_vector(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineSegmentDetector_drawSegments(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_LineSegmentDetector_compareSegments(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_createLineSegmentDetector(int32_t, double, double, double, double, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Ptr_LineSegmentDetector_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_Ptr_LineSegmentDetector_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_Subdiv2D_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_Subdiv2D_new2(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Subdiv2D_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Subdiv2D_initDelaunay(intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_Subdiv2D_insert1(intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Subdiv2D_insert2(intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_Subdiv2D_locate(intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, int32_t*, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_Subdiv2D_findNearest(intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Subdiv2D_getEdgeList(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Subdiv2D_getTriangleList(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Subdiv2D_getVoronoiFacetList(intptr_t, int32_t*, int32_t, intptr_t*, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 CDECL imgproc_Subdiv2D_getVertex(intptr_t, int32_t, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_Subdiv2D_getEdge(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_Subdiv2D_nextEdge(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_Subdiv2D_rotateEdge(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_Subdiv2D_symEdge(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_Subdiv2D_edgeOrg(intptr_t, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_Subdiv2D_edgeDst(intptr_t, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setTrainMethod(intptr_t, int32_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_ANN_MLP_getTrainMethod(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setActivationFunction(intptr_t, int32_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setLayerSizes(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_ANN_MLP_getLayerSizes(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 CDECL ml_ANN_MLP_getTermCriteria(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setTermCriteria(intptr_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_ANN_MLP_getBackpropWeightScale(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setBackpropWeightScale(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_ANN_MLP_getBackpropMomentumScale(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setBackpropMomentumScale(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_ANN_MLP_getRpropDW0(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setRpropDW0(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_ANN_MLP_getRpropDWPlus(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setRpropDWPlus(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_ANN_MLP_getRpropDWMinus(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setRpropDWMinus(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_ANN_MLP_getRpropDWMin(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setRpropDWMin(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_ANN_MLP_getRpropDWMax(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setRpropDWMax(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_ANN_MLP_getWeights(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_ANN_MLP_create();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_Ptr_ANN_MLP_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_Ptr_ANN_MLP_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_Boost_getBoostType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_Boost_setBoostType(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_Boost_getWeakCount(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_Boost_setWeakCount(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_Boost_getWeightTrimRate(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_Boost_setWeightTrimRate(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_Boost_create();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_Ptr_Boost_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_Ptr_Boost_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_EM_getClustersNumber(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_EM_setClustersNumber(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_EM_getCovarianceMatrixType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_EM_setCovarianceMatrixType(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 CDECL ml_EM_getTermCriteria(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_EM_setTermCriteria(intptr_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_EM_getWeights(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_EM_getMeans(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_EM_getCovs(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23 CDECL ml_EM_predict2(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_EM_trainEM(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_EM_trainE(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_EM_trainM(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_EM_create();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_Ptr_EM_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_Ptr_EM_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_KNearest_getDefaultK(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_KNearest_setDefaultK(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_KNearest_getIsClassifier(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_KNearest_setIsClassifier(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_KNearest_getEmax(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_KNearest_setEmax(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_KNearest_getAlgorithmType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_KNearest_setAlgorithmType(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL ml_KNearest_findNearest(intptr_t, intptr_t, int32_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_KNearest_create();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_Ptr_KNearest_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_Ptr_KNearest_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_LogisticRegression_getLearningRate(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_LogisticRegression_setLearningRate(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_LogisticRegression_getIterations(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_LogisticRegression_setIterations(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_LogisticRegression_getRegularization(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_LogisticRegression_setRegularization(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_LogisticRegression_getTrainMethod(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_LogisticRegression_setTrainMethod(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_LogisticRegression_getMiniBatchSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_LogisticRegression_setMiniBatchSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 CDECL ml_LogisticRegression_getTermCriteria(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_LogisticRegression_setTermCriteria(intptr_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL ml_LogisticRegression_predict(intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_LogisticRegression_get_learnt_thetas(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_LogisticRegression_create();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_Ptr_LogisticRegression_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_Ptr_LogisticRegression_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL ml_NormalBayesClassifier_predictProb(intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_NormalBayesClassifier_create();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_Ptr_NormalBayesClassifier_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_Ptr_NormalBayesClassifier_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_StatModel_clear(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_StatModel_getVarCount(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_StatModel_empty(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_StatModel_isTrained(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_StatModel_isClassifier(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_StatModel_train1(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_StatModel_train2(intptr_t, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL ml_StatModel_calcError(intptr_t, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL ml_StatModel_predict(intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_StatModel_save(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_SVM_getType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_SVM_setType(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_SVM_getGamma(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_SVM_setGamma(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_SVM_getCoef0(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_SVM_setCoef0(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_SVM_getDegree(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_SVM_setDegree(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_SVM_getC(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_SVM_setC(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_SVM_getP(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_SVM_setP(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_SVM_getNu(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_SVM_setNu(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_SVM_getClassWeights(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_SVM_setClassWeights(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 CDECL ml_SVM_getTermCriteria(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_SVM_setTermCriteria(intptr_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_SVM_getKernelType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_SVM_setKernel(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_SVM_getSupportVectors(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_SVM_getDecisionFunction(intptr_t, int32_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C ParamGrid_t0F18158C237FDE12E81979168156D10ABD2E0A6D CDECL ml_SVM_getDefaultGrid(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_SVM_create();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_Ptr_SVM_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_Ptr_SVM_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL aruco_getPredefinedDictionary(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_detectMarkers(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_drawDetectedMarkers(intptr_t, intptr_t*, int32_t, int32_t*, int32_t*, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_drawMarker(intptr_t, int32_t, int32_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_drawAxis(intptr_t, intptr_t, double*, int32_t, double*, double*, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL aruco_DetectorParameters_create();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_Ptr_DetectorParameters_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL aruco_Ptr_DetectorParameters_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setDoCornerRefinement(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setAdaptiveThreshConstant(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setCornerRefinementMinAccuracy(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setErrorCorrectionRate(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setMaxErroneousBitsInBorderRate(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setMaxMarkerPerimeterRate(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setMinCornerDistanceRate(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setMinMarkerDistanceRate(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setMinMarkerPerimeterRate(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setMinOtsuStdDev(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setPerspectiveRemoveIgnoredMarginPerCell(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setPolygonalApproxAccuracyRate(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setAdaptiveThreshWinSizeMax(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setAdaptiveThreshWinSizeMin(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setAdaptiveThreshWinSizeStep(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setCornerRefinementMaxIterations(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setCornerRefinementWinSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setMarkerBorderBits(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setMinDistanceToBorder(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setPerspectiveRemovePixelPerCell(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_DetectorParameters_getDoCornerRefinement(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getAdaptiveThreshConstant(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getCornerRefinementMinAccuracy(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getErrorCorrectionRate(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getMaxErroneousBitsInBorderRate(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getMaxMarkerPerimeterRate(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getMinCornerDistanceRate(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getMinMarkerDistanceRate(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getMinMarkerPerimeterRate(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getMinOtsuStdDev(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getPerspectiveRemoveIgnoredMarginPerCell(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getPolygonalApproxAccuracyRate(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_DetectorParameters_getAdaptiveThreshWinSizeMax(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_DetectorParameters_getAdaptiveThreshWinSizeMin(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_DetectorParameters_getAdaptiveThreshWinSizeStep(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_DetectorParameters_getCornerRefinementMaxIterations(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_DetectorParameters_getCornerRefinementWinSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_DetectorParameters_getMarkerBorderBits(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_DetectorParameters_getMinDistanceToBorder(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_DetectorParameters_getPerspectiveRemovePixelPerCell(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_Ptr_Dictionary_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL aruco_Ptr_Dictionary_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_Dictionary_setMarkerSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_Dictionary_setMaxCorrectionBits(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL aruco_Dictionary_getBytesList(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_Dictionary_getMarkerSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_Dictionary_getMaxCorrectionBits(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL bgsegm_createBackgroundSubtractorMOG(int32_t, int32_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_Ptr_BackgroundSubtractorMOG_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL bgsegm_Ptr_BackgroundSubtractorMOG_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL bgsegm_BackgroundSubtractorMOG_getHistory(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorMOG_setHistory(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL bgsegm_BackgroundSubtractorMOG_getNMixtures(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorMOG_setNMixtures(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL bgsegm_BackgroundSubtractorMOG_getBackgroundRatio(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorMOG_setBackgroundRatio(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL bgsegm_BackgroundSubtractorMOG_getNoiseSigma(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorMOG_setNoiseSigma(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL bgsegm_createBackgroundSubtractorGMG(int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_Ptr_BackgroundSubtractorGMG_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL bgsegm_Ptr_BackgroundSubtractorGMG_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL bgsegm_BackgroundSubtractorGMG_getMaxFeatures(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorGMG_setMaxFeatures(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL bgsegm_BackgroundSubtractorGMG_getDefaultLearningRate(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorGMG_setDefaultLearningRate(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL bgsegm_BackgroundSubtractorGMG_getNumFrames(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorGMG_setNumFrames(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL bgsegm_BackgroundSubtractorGMG_getQuantizationLevels(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorGMG_setQuantizationLevels(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL bgsegm_BackgroundSubtractorGMG_getBackgroundPrior(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorGMG_setBackgroundPrior(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL bgsegm_BackgroundSubtractorGMG_getSmoothingRadius(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorGMG_setSmoothingRadius(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL bgsegm_BackgroundSubtractorGMG_getDecisionThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorGMG_setDecisionThreshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL bgsegm_BackgroundSubtractorGMG_getUpdateBackgroundModel(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorGMG_setUpdateBackgroundModel(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL bgsegm_BackgroundSubtractorGMG_getMinVal(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorGMG_setMinVal(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL bgsegm_BackgroundSubtractorGMG_getMaxVal(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorGMG_setMaxVal(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL flann_Index_new(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_Index_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_Index_knnSearch1(intptr_t, float*, int32_t, int32_t*, float*, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_Index_knnSearch2(intptr_t, intptr_t, intptr_t, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_Index_knnSearch3(intptr_t, intptr_t, int32_t*, float*, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_Index_radiusSearch1(intptr_t, float*, int32_t, int32_t*, int32_t, float*, int32_t, float, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_Index_radiusSearch2(intptr_t, intptr_t, intptr_t, intptr_t, float, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_Index_radiusSearch3(intptr_t, intptr_t, int32_t*, int32_t, float*, int32_t, float, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_Index_save(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL flann_IndexParams_new();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_IndexParams_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_IndexParams_getString(intptr_t, char*, char*, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL flann_IndexParams_getInt(intptr_t, char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL flann_IndexParams_getDouble(intptr_t, char*, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_IndexParams_setString(intptr_t, char*, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_IndexParams_setInt(intptr_t, char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_IndexParams_setDouble(intptr_t, char*, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_IndexParams_setFloat(intptr_t, char*, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_IndexParams_setBool(intptr_t, char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_IndexParams_setAlgorithm(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL flann_LinearIndexParams_new();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_LinearIndexParams_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL flann_KDTreeIndexParams_new(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_KDTreeIndexParams_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL flann_KMeansIndexParams_new(int32_t, int32_t, int32_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_KMeansIndexParams_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL flann_CompositeIndexParams_new(int32_t, int32_t, int32_t, int32_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_CompositeIndexParams_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL flann_AutotunedIndexParams_new(float, float, float, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_AutotunedIndexParams_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL flann_SavedIndexParams_new(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_SavedIndexParams_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL flann_SearchParams_new(int32_t, float, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_SearchParams_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL highgui_namedWindow(char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL highgui_destroyWindow(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL highgui_destroyAllWindows();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL highgui_imshow(char*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL highgui_startWindowThread();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL highgui_waitKey(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL highgui_resizeWindow(char*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL highgui_moveWindow(char*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL highgui_setWindowProperty(char*, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL highgui_setWindowTitle(char*, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL highgui_getWindowProperty(char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL highgui_setMouseCallback(char*, Il2CppMethodPointer, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL highgui_createTrackbar(char*, char*, int32_t*, int32_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL highgui_getTrackbarPos(char*, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL highgui_setTrackbarPos(char*, char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL highgui_createButton(char*, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgcodecs_imread(char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgcodecs_imreadmulti(char*, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgcodecs_imwrite(char*, intptr_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgcodecs_imdecode_Mat(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgcodecs_imdecode_vector(uint8_t*, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgcodecs_imdecode_InputArray(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgcodecs_imencode_vector(char*, intptr_t, intptr_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgcodecs_cvConvertImage_CvArr(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgcodecs_cvConvertImage_Mat(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgcodecs_cvHaveImageReader(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgcodecs_cvHaveImageWriter(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL objdetect_CascadeClassifier_new();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL objdetect_CascadeClassifier_newFromFile(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_CascadeClassifier_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_CascadeClassifier_empty(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_CascadeClassifier_load(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_CascadeClassifier_read(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_CascadeClassifier_detectMultiScale1(intptr_t, intptr_t, intptr_t, double, int32_t, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_CascadeClassifier_detectMultiScale2(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, double, int32_t, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_CascadeClassifier_isOldFormatCascade(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 CDECL objdetect_CascadeClassifier_getOriginalWindowSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_CascadeClassifier_getFeatureType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_HOGDescriptor_sizeof();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL objdetect_HOGDescriptor_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL objdetect_HOGDescriptor_new2(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, double, int32_t, double, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL objdetect_HOGDescriptor_new3(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL objdetect_HOGDescriptor_getDescriptorSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_HOGDescriptor_checkDetectorSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL objdetect_HOGDescriptor_getWinSigma(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_setSVMDetector(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_HOGDescriptor_load(intptr_t, char*, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_save(intptr_t, char*, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_compute(intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_detect1(intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_detect2(intptr_t, intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_detectMultiScale1(intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_detectMultiScale2(intptr_t, intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_computeGradient(intptr_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_detectROI(intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_detectMultiScaleROI(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_readALTModel(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_groupRectangles(intptr_t, intptr_t, intptr_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 CDECL objdetect_HOGDescriptor_winSize_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 CDECL objdetect_HOGDescriptor_blockSize_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 CDECL objdetect_HOGDescriptor_blockStride_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 CDECL objdetect_HOGDescriptor_cellSize_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_HOGDescriptor_nbins_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_HOGDescriptor_derivAperture_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL objdetect_HOGDescriptor_winSigma_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_HOGDescriptor_histogramNormType_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL objdetect_HOGDescriptor_L2HysThreshold_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_HOGDescriptor_gammaCorrection_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_HOGDescriptor_nlevels_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_winSize_set(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_blockSize_set(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_blockStride_set(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_cellSize_set(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_nbins_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_derivAperture_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_winSigma_set(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_histogramNormType_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_L2HysThreshold_set(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_gammaCorrection_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_nlevels_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_groupRectangles1(intptr_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_groupRectangles2(intptr_t, intptr_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_groupRectangles3(intptr_t, int32_t, double, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_groupRectangles4(intptr_t, intptr_t, intptr_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_groupRectangles_meanshift(intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL optflow_motempl_updateMotionHistory(intptr_t, intptr_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL optflow_motempl_calcMotionGradient(intptr_t, intptr_t, intptr_t, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL optflow_motempl_calcGlobalOrientation(intptr_t, intptr_t, intptr_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL optflow_motempl_segmentMotion(intptr_t, intptr_t, intptr_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL optflow_calcOpticalFlowSF1(intptr_t, intptr_t, intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL optflow_calcOpticalFlowSF2(intptr_t, intptr_t, intptr_t, int32_t, int32_t, int32_t, double, double, int32_t, double, double, double, int32_t, double, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_uchar_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_uchar_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_uchar_new3(uint8_t*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_uchar_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_uchar_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_uchar_copy(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_uchar_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_int32_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_int32_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_int32_new3(int32_t*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_int32_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_int32_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_int32_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_float_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_float_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_float_new3(float*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_float_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_float_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_float_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_double_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_double_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_double_new3(double*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_double_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_double_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_double_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec2f_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec2f_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec2f_new3(Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec2f_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec2f_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Vec2f_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec3f_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec3f_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec3f_new3(Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec3f_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec3f_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Vec3f_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec4f_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec4f_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec4f_new3(Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec4f_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec4f_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Vec4f_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec4i_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec4i_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec4i_new3(Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec4i_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec4i_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Vec4i_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec6f_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec6f_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec6f_new3(Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec6f_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec6f_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Vec6f_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec6d_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec6d_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec6d_new3(Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec6d_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec6d_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Vec6d_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point2i_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point2i_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point2i_new3(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point2i_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point2i_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Point2i_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point2f_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point2f_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point2f_new3(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point2f_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point2f_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Point2f_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point3f_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point3f_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point3f_new3(Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point3f_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point3f_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Point3f_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Rect_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Rect_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Rect_new3(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Rect_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Rect_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Rect_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_ERStat_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_ERStat_new2(intptr_t*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_ERStat_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_ERStat_getElement(intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_ERStat_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_KeyPoint_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_KeyPoint_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_KeyPoint_new3(KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_KeyPoint_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_KeyPoint_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_KeyPoint_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_DMatch_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_DMatch_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_DMatch_new3(DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_DMatch_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_DMatch_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_DMatch_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_int_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_int_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_int_getSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_int_getSize2(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_int_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_int_copy(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_int_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_float_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_float_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_float_getSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_float_getSize2(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_float_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_float_copy(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_float_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_double_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_double_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_double_getSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_double_getSize2(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_double_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_double_copy(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_double_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_KeyPoint_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_KeyPoint_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_KeyPoint_new3(intptr_t*, int32_t, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_KeyPoint_getSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_KeyPoint_getSize2(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_KeyPoint_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_KeyPoint_copy(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_KeyPoint_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_DMatch_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_DMatch_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_DMatch_getSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_DMatch_getSize2(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_DMatch_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_DMatch_copy(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_DMatch_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Point_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Point_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Point_new3(intptr_t, intptr_t*, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Point_getSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_Point_getSize2(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Point_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_Point_copy(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_Point_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Vec2i_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Vec2i_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Vec2i_new3(intptr_t, intptr_t*, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Vec2i_getSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_Vec2i_getSize2(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Vec2i_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_Vec2i_copy(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_Vec2i_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Point2f_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Point2f_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Point2f_getSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_Point2f_getSize2(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Point2f_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_Point2f_copy(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_Point2f_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_string_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_string_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_string_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_string_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int8_t* CDECL vector_string_elemAt(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_string_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_string_setAt(intptr_t, int32_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_ERStat_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_ERStat_new2(intptr_t, intptr_t*, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_ERStat_getSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_ERStat_getSize2(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_ERStat_getElement(intptr_t, int32_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_ERStat_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Mat_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Mat_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Mat_new3(intptr_t*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Mat_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Mat_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Mat_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Mat_assignToArray(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Mat_addref(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL stitching_createStitcher(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL stitching_Ptr_Stitcher_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL stitching_Ptr_Stitcher_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL stitching_Stitcher_registrationResol(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL stitching_Stitcher_setRegistrationResol(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL stitching_Stitcher_seamEstimationResol(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL stitching_Stitcher_setSeamEstimationResol(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL stitching_Stitcher_compositingResol(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL stitching_Stitcher_setCompositingResol(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL stitching_Stitcher_panoConfidenceThresh(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL stitching_Stitcher_setPanoConfidenceThresh(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_waveCorrection(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL stitching_Stitcher_setWaveCorrection(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_waveCorrectKind(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL stitching_Stitcher_setWaveCorrectKind(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_estimateTransform_InputArray1(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_estimateTransform_InputArray2(intptr_t, intptr_t, intptr_t*, int32_t, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_estimateTransform_MatArray1(intptr_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_estimateTransform_MatArray2(intptr_t, intptr_t*, int32_t, intptr_t*, int32_t, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_composePanorama1(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_composePanorama2_InputArray(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_composePanorama2_MatArray(intptr_t, intptr_t*, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_stitch1_InputArray(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_stitch1_MatArray(intptr_t, intptr_t*, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_stitch2_InputArray(intptr_t, intptr_t, intptr_t*, int32_t, int32_t*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_stitch2_MatArray(intptr_t, intptr_t*, int32_t, intptr_t*, int32_t, int32_t*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL stitching_Stitcher_component(intptr_t, intptr_t*, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL stitching_Stitcher_workScale(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_FrameSource_nextFrame(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_FrameSource_reset(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createFrameSource_Empty();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createFrameSource_Video(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createFrameSource_Video_CUDA(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createFrameSource_Camera(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_Ptr_FrameSource_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_Ptr_FrameSource_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_SuperResolution_setInput(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_SuperResolution_nextFrame(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_SuperResolution_reset(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_SuperResolution_collectGarbage(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createSuperResolution_BTVL1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createSuperResolution_BTVL1_CUDA();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_Ptr_SuperResolution_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_Ptr_SuperResolution_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_DenseOpticalFlowExt_calc(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_DenseOpticalFlowExt_collectGarbage(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_Ptr_DenseOpticalFlowExt_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_Ptr_DenseOpticalFlowExt_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createOptFlow_Farneback();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createOptFlow_Farneback_CUDA();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createOptFlow_DualTVL1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createOptFlow_DualTVL1_CUDA();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createOptFlow_Brox_CUDA();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createOptFlow_PyrLK_CUDA();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_computeNMChannels(intptr_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_MSERsToERStats(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_createOCRHMMTransitionsTable(char*, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_detectRegions(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_erGrouping1(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, char*, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_erGrouping2(intptr_t, intptr_t, intptr_t, intptr_t, int32_t, char*, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_ERStat_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_ERStat_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERStat_getRect(intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL text_ERStat_getProbability(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERStat_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_loadOCRHMMClassifierCNN(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_loadOCRHMMClassifierNM(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_OCRHMMDecoder_ClassifierCallback_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_OCRHMMDecoder_ClassifierCallback_eval(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_OCRHMMDecoder_create(intptr_t, char*, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_OCRHMMDecoder_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_OCRHMMDecoder_run(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_loadOCRBeamSearchClassifierCNN(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_OCRBeamSearchDecoder_ClassifierCallback_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_OCRBeamSearchDecoder_ClassifierCallback_eval(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_OCRBeamSearchDecoder_create(intptr_t, char*, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_OCRBeamSearchDecoder_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_OCRBeamSearchDecoder_run(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_OCRBeamSearchDecoder_run2(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL text_ERFilter_Callback_eval(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERFilter_Callback_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_loadClassifierNM1(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_loadClassifierNM2(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_createERFilterNM1(intptr_t, int32_t, float, float, float, uint8_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_createERFilterNM2(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERFilter_run(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERFilter_setCallback(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERFilter_setThresholdDelta(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERFilter_setMinArea(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERFilter_setMaxArea(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERFilter_setMinProbability(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERFilter_setMinProbabilityDiff(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERFilter_setNonMaxSuppression(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL text_ERFilter_getNumRejected(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL tracking_Tracker_create(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL tracking_Tracker_init(intptr_t, intptr_t, Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL tracking_Tracker_update(intptr_t, intptr_t, Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL tracking_Ptr_Tracker_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL tracking_Ptr_Tracker_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL xfeatures2d_BriefDescriptorExtractor_create(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_Ptr_BriefDescriptorExtractor_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_BriefDescriptorExtractor_read(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_BriefDescriptorExtractor_write(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL xfeatures2d_BriefDescriptorExtractor_descriptorSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL xfeatures2d_BriefDescriptorExtractor_descriptorType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL xfeatures2d_Ptr_BriefDescriptorExtractor_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL xfeatures2d_FREAK_create(int32_t, int32_t, float, int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_Ptr_FREAK_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL xfeatures2d_Ptr_FREAK_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL xfeatures2d_StarDetector_create(int32_t, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_Ptr_StarDetector_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL xfeatures2d_Ptr_StarDetector_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL xfeatures2d_SURF_create(double, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_Ptr_SURF_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL xfeatures2d_Ptr_SURF_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL xfeatures2d_SURF_getHessianThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL xfeatures2d_SURF_getNOctaves(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL xfeatures2d_SURF_getNOctaveLayers(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL xfeatures2d_SURF_getExtended(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL xfeatures2d_SURF_getUpright(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_SURF_setHessianThreshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_SURF_setNOctaves(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_SURF_setNOctaveLayers(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_SURF_setExtended(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_SURF_setUpright(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL xfeatures2d_SIFT_create(int32_t, int32_t, double, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_Ptr_SIFT_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL xfeatures2d_Ptr_SIFT_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xphoto_balanceWhite(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_inpaint(intptr_t, intptr_t, intptr_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_fastNlMeansDenoising(intptr_t, intptr_t, float, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_fastNlMeansDenoisingColored(intptr_t, intptr_t, float, float, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_fastNlMeansDenoisingMulti(intptr_t*, int32_t, intptr_t, int32_t, int32_t, float, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_fastNlMeansDenoisingColoredMulti(intptr_t*, int32_t, intptr_t, int32_t, int32_t, float, float, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_denoise_TVL1(intptr_t*, int32_t, intptr_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_decolor(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_seamlessClone(intptr_t, intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_colorChange(intptr_t, intptr_t, intptr_t, float, float, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_illuminationChange(intptr_t, intptr_t, intptr_t, float, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_textureFlattening(intptr_t, intptr_t, intptr_t, float, float, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_edgePreservingFilter(intptr_t, intptr_t, int32_t, float, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_detailEnhance(intptr_t, intptr_t, float, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_pencilSketch(intptr_t, intptr_t, intptr_t, float, float, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_stylization(intptr_t, intptr_t, float, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL photo_createCalibrateDebevec(int32_t, float, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL photo_createCalibrateRobertson(int32_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_Ptr_CalibrateDebevec_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_Ptr_CalibrateRobertson_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL photo_Ptr_CalibrateDebevec_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL photo_Ptr_CalibrateRobertson_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_CalibrateCRF_process(intptr_t, intptr_t*, int32_t, intptr_t, float*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL shape_ShapeDistanceExtractor_computeDistance(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_Ptr_ShapeContextDistanceExtractor_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL shape_Ptr_ShapeContextDistanceExtractor_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setAngularBins(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL shape_ShapeContextDistanceExtractor_getAngularBins(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setRadialBins(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL shape_ShapeContextDistanceExtractor_getRadialBins(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setInnerRadius(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL shape_ShapeContextDistanceExtractor_getInnerRadius(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setOuterRadius(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL shape_ShapeContextDistanceExtractor_getOuterRadius(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setRotationInvariant(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL shape_ShapeContextDistanceExtractor_getRotationInvariant(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setShapeContextWeight(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL shape_ShapeContextDistanceExtractor_getShapeContextWeight(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setImageAppearanceWeight(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL shape_ShapeContextDistanceExtractor_getImageAppearanceWeight(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setBendingEnergyWeight(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL shape_ShapeContextDistanceExtractor_getBendingEnergyWeight(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setImages(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_getImages(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setIterations(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL shape_ShapeContextDistanceExtractor_getIterations(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setStdDev(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL shape_ShapeContextDistanceExtractor_getStdDev(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL shape_createShapeContextDistanceExtractor(int32_t, int32_t, float, float, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_Ptr_HausdorffDistanceExtractor_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL shape_Ptr_HausdorffDistanceExtractor_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_HausdorffDistanceExtractor_setDistanceFlag(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL shape_HausdorffDistanceExtractor_getDistanceFlag(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_HausdorffDistanceExtractor_setRankProportion(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL shape_HausdorffDistanceExtractor_getRankProportion(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL shape_createHausdorffDistanceExtractor(int32_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 CDECL video_CamShift(intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_meanShift(intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_new2(int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_KalmanFilter_init(intptr_t, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_KalmanFilter_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_predict(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_correct(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_statePre(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_statePost(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_transitionMatrix(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_controlMatrix(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_measurementMatrix(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_processNoiseCov(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_measurementNoiseCov(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_errorCovPre(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_gain(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_errorCovPost(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_buildOpticalFlowPyramid1(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_buildOpticalFlowPyramid2(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_calcOpticalFlowPyrLK_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_calcOpticalFlowPyrLK_vector(intptr_t, intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_calcOpticalFlowFarneback(intptr_t, intptr_t, intptr_t, double, int32_t, int32_t, int32_t, int32_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_estimateRigidTransform(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_DenseOpticalFlow_calc(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_DenseOpticalFlow_collectGarbage(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_createOptFlow_DualTVL1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_Ptr_DenseOpticalFlow_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_Ptr_DenseOpticalFlow_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractor_getBackgroundImage(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractor_apply(intptr_t, intptr_t, intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_Ptr_BackgroundSubtractor_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_Ptr_BackgroundSubtractor_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_createBackgroundSubtractorMOG2(int32_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_Ptr_BackgroundSubtractorMOG2_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_Ptr_BackgroundSubtractorMOG2_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_BackgroundSubtractorMOG2_getHistory(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setHistory(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_BackgroundSubtractorMOG2_getNMixtures(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setNMixtures(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL video_BackgroundSubtractorMOG2_getBackgroundRatio(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setBackgroundRatio(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL video_BackgroundSubtractorMOG2_getVarThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setVarThreshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL video_BackgroundSubtractorMOG2_getVarThresholdGen(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setVarThresholdGen(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL video_BackgroundSubtractorMOG2_getVarInit(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setVarInit(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL video_BackgroundSubtractorMOG2_getVarMin(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setVarMin(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL video_BackgroundSubtractorMOG2_getVarMax(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setVarMax(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL video_BackgroundSubtractorMOG2_getComplexityReductionThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setComplexityReductionThreshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_BackgroundSubtractorMOG2_getDetectShadows(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setDetectShadows(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_BackgroundSubtractorMOG2_getShadowValue(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setShadowValue(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL video_BackgroundSubtractorMOG2_getShadowThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setShadowThreshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_createBackgroundSubtractorKNN(int32_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_Ptr_BackgroundSubtractorKNN_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_Ptr_BackgroundSubtractorKNN_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_BackgroundSubtractorKNN_getHistory(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorKNN_setHistory(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_BackgroundSubtractorKNN_getNSamples(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorKNN_setNSamples(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_BackgroundSubtractorKNN_getDist2Threshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorKNN_setDist2Threshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_BackgroundSubtractorKNN_getkNNSamples(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorKNN_setkNNSamples(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_BackgroundSubtractorKNN_getDetectShadows(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorKNN_setDetectShadows(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_BackgroundSubtractorKNN_getShadowValue(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorKNN_setShadowValue(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL video_BackgroundSubtractorKNN_getShadowThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorKNN_setShadowThreshold(intptr_t, double);
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.TeleType::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TeleType_Awake_m8D56A3C1E06AD96B35B88C3AA8C61FB2A03E627D (TeleType_tA6F2E696EFE0B4124756D8810A7AAFB7829EE2F5* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// m_textMeshPro = GetComponent<TMP_Text>();
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_0;
		L_0 = Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5(__this, Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5_RuntimeMethod_var);
		__this->___m_textMeshPro_6 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_textMeshPro_6), (void*)L_0);
		// m_textMeshPro.text = label01;
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_1 = __this->___m_textMeshPro_6;
		String_t* L_2 = __this->___label01_4;
		NullCheck(L_1);
		VirtualActionInvoker1< String_t* >::Invoke(66 /* System.Void TMPro.TMP_Text::set_text(System.String) */, L_1, L_2);
		// m_textMeshPro.enableWordWrapping = true;
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_3 = __this->___m_textMeshPro_6;
		NullCheck(L_3);
		TMP_Text_set_enableWordWrapping_mFAEE849315B4723F9C86C127B1A59EF50BE1C12F(L_3, (bool)1, NULL);
		// m_textMeshPro.alignment = TextAlignmentOptions.Top;
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_4 = __this->___m_textMeshPro_6;
		NullCheck(L_4);
		TMP_Text_set_alignment_mE5216A28797987CC19927ED3CB8DFAC438C6B95A(L_4, ((int32_t)258), NULL);
		// }
		return;
	}
}
// System.Collections.IEnumerator TMPro.Examples.TeleType::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* TeleType_Start_m3BFE1E2B1BB5ED247DED9DBEF293FCCBD63760C6 (TeleType_tA6F2E696EFE0B4124756D8810A7AAFB7829EE2F5* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CStartU3Ed__4_t34C4F7117E4A5E63F9D03A9DD3C2493CEB376E75_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		U3CStartU3Ed__4_t34C4F7117E4A5E63F9D03A9DD3C2493CEB376E75* L_0 = (U3CStartU3Ed__4_t34C4F7117E4A5E63F9D03A9DD3C2493CEB376E75*)il2cpp_codegen_object_new(U3CStartU3Ed__4_t34C4F7117E4A5E63F9D03A9DD3C2493CEB376E75_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		U3CStartU3Ed__4__ctor_m7CB9C7DF4657B7B70F6ED6EEB00C0F422D8B0CAA(L_0, 0, NULL);
		U3CStartU3Ed__4_t34C4F7117E4A5E63F9D03A9DD3C2493CEB376E75* L_1 = L_0;
		NullCheck(L_1);
		L_1->___U3CU3E4__this_2 = __this;
		Il2CppCodeGenWriteBarrier((void**)(&L_1->___U3CU3E4__this_2), (void*)__this);
		return L_1;
	}
}
// System.Void TMPro.Examples.TeleType::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TeleType__ctor_m824BBE09CC217EB037FFB36756726A9C946526D0 (TeleType_tA6F2E696EFE0B4124756D8810A7AAFB7829EE2F5* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral0133981053AC767ED98F641B459173B5499F4EB0);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral5225EE496AAB278285733EDA00B46385A27F58CC);
		s_Il2CppMethodInitialized = true;
	}
	{
		// private string label01 = "Example <sprite=2> of using <sprite=7> <#ffa000>Graphics Inline</color> <sprite=5> with Text in <font=\"Bangers SDF\" material=\"Bangers SDF - Drop Shadow\">TextMesh<#40a0ff>Pro</color></font><sprite=0> and Unity<sprite=1>";
		__this->___label01_4 = _stringLiteral5225EE496AAB278285733EDA00B46385A27F58CC;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___label01_4), (void*)_stringLiteral5225EE496AAB278285733EDA00B46385A27F58CC);
		// private string label02 = "Example <sprite=2> of using <sprite=7> <#ffa000>Graphics Inline</color> <sprite=5> with Text in <font=\"Bangers SDF\" material=\"Bangers SDF - Drop Shadow\">TextMesh<#40a0ff>Pro</color></font><sprite=0> and Unity<sprite=2>";
		__this->___label02_5 = _stringLiteral0133981053AC767ED98F641B459173B5499F4EB0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___label02_5), (void*)_stringLiteral0133981053AC767ED98F641B459173B5499F4EB0);
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.TeleType/<Start>d__4::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CStartU3Ed__4__ctor_m7CB9C7DF4657B7B70F6ED6EEB00C0F422D8B0CAA (U3CStartU3Ed__4_t34C4F7117E4A5E63F9D03A9DD3C2493CEB376E75* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) 
{
	{
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		int32_t L_0 = ___U3CU3E1__state0;
		__this->___U3CU3E1__state_0 = L_0;
		return;
	}
}
// System.Void TMPro.Examples.TeleType/<Start>d__4::System.IDisposable.Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CStartU3Ed__4_System_IDisposable_Dispose_mA57DA4D469190B581B5DCB406E9FB70DD33511F2 (U3CStartU3Ed__4_t34C4F7117E4A5E63F9D03A9DD3C2493CEB376E75* __this, const RuntimeMethod* method) 
{
	{
		return;
	}
}
// System.Boolean TMPro.Examples.TeleType/<Start>d__4::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool U3CStartU3Ed__4_MoveNext_mE1C3343B7258BAADC74C1A060E71C28951D39D45 (U3CStartU3Ed__4_t34C4F7117E4A5E63F9D03A9DD3C2493CEB376E75* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	TeleType_tA6F2E696EFE0B4124756D8810A7AAFB7829EE2F5* V_1 = NULL;
	int32_t V_2 = 0;
	{
		int32_t L_0 = __this->___U3CU3E1__state_0;
		V_0 = L_0;
		TeleType_tA6F2E696EFE0B4124756D8810A7AAFB7829EE2F5* L_1 = __this->___U3CU3E4__this_2;
		V_1 = L_1;
		int32_t L_2 = V_0;
		switch (L_2)
		{
			case 0:
			{
				goto IL_002a;
			}
			case 1:
			{
				goto IL_009e;
			}
			case 2:
			{
				goto IL_00cf;
			}
			case 3:
			{
				goto IL_0100;
			}
			case 4:
			{
				goto IL_012e;
			}
		}
	}
	{
		return (bool)0;
	}

IL_002a:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// m_textMeshPro.ForceMeshUpdate();
		TeleType_tA6F2E696EFE0B4124756D8810A7AAFB7829EE2F5* L_3 = V_1;
		NullCheck(L_3);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_4 = L_3->___m_textMeshPro_6;
		NullCheck(L_4);
		VirtualActionInvoker2< bool, bool >::Invoke(106 /* System.Void TMPro.TMP_Text::ForceMeshUpdate(System.Boolean,System.Boolean) */, L_4, (bool)0, (bool)0);
		// int totalVisibleCharacters = m_textMeshPro.textInfo.characterCount; // Get # of Visible Character in text object
		TeleType_tA6F2E696EFE0B4124756D8810A7AAFB7829EE2F5* L_5 = V_1;
		NullCheck(L_5);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_6 = L_5->___m_textMeshPro_6;
		NullCheck(L_6);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_7;
		L_7 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_6, NULL);
		NullCheck(L_7);
		int32_t L_8 = L_7->___characterCount_3;
		__this->___U3CtotalVisibleCharactersU3E5__2_3 = L_8;
		// int counter = 0;
		__this->___U3CcounterU3E5__3_4 = 0;
		// int visibleCount = 0;
		V_2 = 0;
	}

IL_005d:
	{
		// visibleCount = counter % (totalVisibleCharacters + 1);
		int32_t L_9 = __this->___U3CcounterU3E5__3_4;
		int32_t L_10 = __this->___U3CtotalVisibleCharactersU3E5__2_3;
		V_2 = ((int32_t)(L_9%((int32_t)il2cpp_codegen_add(L_10, 1))));
		// m_textMeshPro.maxVisibleCharacters = visibleCount; // How many characters should TextMeshPro display?
		TeleType_tA6F2E696EFE0B4124756D8810A7AAFB7829EE2F5* L_11 = V_1;
		NullCheck(L_11);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_12 = L_11->___m_textMeshPro_6;
		int32_t L_13 = V_2;
		NullCheck(L_12);
		TMP_Text_set_maxVisibleCharacters_mEDD8DCB11D204F3FC10BFAC49BF6E8E09548358A(L_12, L_13, NULL);
		// if (visibleCount >= totalVisibleCharacters)
		int32_t L_14 = V_2;
		int32_t L_15 = __this->___U3CtotalVisibleCharactersU3E5__2_3;
		if ((((int32_t)L_14) < ((int32_t)L_15)))
		{
			goto IL_0107;
		}
	}
	{
		// yield return new WaitForSeconds(1.0f);
		WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3* L_16 = (WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3*)il2cpp_codegen_object_new(WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		NullCheck(L_16);
		WaitForSeconds__ctor_m579F95BADEDBAB4B3A7E302C6EE3995926EF2EFC(L_16, (1.0f), NULL);
		__this->___U3CU3E2__current_1 = L_16;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_16);
		__this->___U3CU3E1__state_0 = 1;
		return (bool)1;
	}

IL_009e:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// m_textMeshPro.text = label02;
		TeleType_tA6F2E696EFE0B4124756D8810A7AAFB7829EE2F5* L_17 = V_1;
		NullCheck(L_17);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_18 = L_17->___m_textMeshPro_6;
		TeleType_tA6F2E696EFE0B4124756D8810A7AAFB7829EE2F5* L_19 = V_1;
		NullCheck(L_19);
		String_t* L_20 = L_19->___label02_5;
		NullCheck(L_18);
		VirtualActionInvoker1< String_t* >::Invoke(66 /* System.Void TMPro.TMP_Text::set_text(System.String) */, L_18, L_20);
		// yield return new WaitForSeconds(1.0f);
		WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3* L_21 = (WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3*)il2cpp_codegen_object_new(WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		NullCheck(L_21);
		WaitForSeconds__ctor_m579F95BADEDBAB4B3A7E302C6EE3995926EF2EFC(L_21, (1.0f), NULL);
		__this->___U3CU3E2__current_1 = L_21;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_21);
		__this->___U3CU3E1__state_0 = 2;
		return (bool)1;
	}

IL_00cf:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// m_textMeshPro.text = label01;
		TeleType_tA6F2E696EFE0B4124756D8810A7AAFB7829EE2F5* L_22 = V_1;
		NullCheck(L_22);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_23 = L_22->___m_textMeshPro_6;
		TeleType_tA6F2E696EFE0B4124756D8810A7AAFB7829EE2F5* L_24 = V_1;
		NullCheck(L_24);
		String_t* L_25 = L_24->___label01_4;
		NullCheck(L_23);
		VirtualActionInvoker1< String_t* >::Invoke(66 /* System.Void TMPro.TMP_Text::set_text(System.String) */, L_23, L_25);
		// yield return new WaitForSeconds(1.0f);
		WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3* L_26 = (WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3*)il2cpp_codegen_object_new(WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		NullCheck(L_26);
		WaitForSeconds__ctor_m579F95BADEDBAB4B3A7E302C6EE3995926EF2EFC(L_26, (1.0f), NULL);
		__this->___U3CU3E2__current_1 = L_26;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_26);
		__this->___U3CU3E1__state_0 = 3;
		return (bool)1;
	}

IL_0100:
	{
		__this->___U3CU3E1__state_0 = (-1);
	}

IL_0107:
	{
		// counter += 1;
		int32_t L_27 = __this->___U3CcounterU3E5__3_4;
		__this->___U3CcounterU3E5__3_4 = ((int32_t)il2cpp_codegen_add(L_27, 1));
		// yield return new WaitForSeconds(0.05f);
		WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3* L_28 = (WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3*)il2cpp_codegen_object_new(WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		NullCheck(L_28);
		WaitForSeconds__ctor_m579F95BADEDBAB4B3A7E302C6EE3995926EF2EFC(L_28, (0.0500000007f), NULL);
		__this->___U3CU3E2__current_1 = L_28;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_28);
		__this->___U3CU3E1__state_0 = 4;
		return (bool)1;
	}

IL_012e:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// while (true)
		goto IL_005d;
	}
}
// System.Object TMPro.Examples.TeleType/<Start>d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CStartU3Ed__4_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_m1819CF068B92E7EA9EEFD7F93CA316F38DF644BA (U3CStartU3Ed__4_t34C4F7117E4A5E63F9D03A9DD3C2493CEB376E75* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
// System.Void TMPro.Examples.TeleType/<Start>d__4::System.Collections.IEnumerator.Reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CStartU3Ed__4_System_Collections_IEnumerator_Reset_m9B7AEE80C1E70D2D2FF5811A54AFD6189CD7F5A9 (U3CStartU3Ed__4_t34C4F7117E4A5E63F9D03A9DD3C2493CEB376E75* __this, const RuntimeMethod* method) 
{
	{
		NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A* L_0 = (NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A_il2cpp_TypeInfo_var)));
		NullCheck(L_0);
		NotSupportedException__ctor_m1398D0CDE19B36AA3DE9392879738C1EA2439CDF(L_0, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_0, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&U3CStartU3Ed__4_System_Collections_IEnumerator_Reset_m9B7AEE80C1E70D2D2FF5811A54AFD6189CD7F5A9_RuntimeMethod_var)));
	}
}
// System.Object TMPro.Examples.TeleType/<Start>d__4::System.Collections.IEnumerator.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CStartU3Ed__4_System_Collections_IEnumerator_get_Current_m5C22C5D235424F0613697F05E72ADB4D1A3420C8 (U3CStartU3Ed__4_t34C4F7117E4A5E63F9D03A9DD3C2493CEB376E75* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.TextConsoleSimulator::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TextConsoleSimulator_Awake_m55D28DC1F590D98621B0284B53C8A22D07CD3F7C (TextConsoleSimulator_t986082F574CD2A38D6E40D856C6A9926D7EF49D2* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_mA59A63181077B821132B53D44724D7F86C6FECB3_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// m_TextComponent = gameObject.GetComponent<TMP_Text>();
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_0;
		L_0 = Component_get_gameObject_m57AEFBB14DB39EC476F740BA000E170355DE691B(__this, NULL);
		NullCheck(L_0);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_1;
		L_1 = GameObject_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_mA59A63181077B821132B53D44724D7F86C6FECB3(L_0, GameObject_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_mA59A63181077B821132B53D44724D7F86C6FECB3_RuntimeMethod_var);
		__this->___m_TextComponent_4 = L_1;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_TextComponent_4), (void*)L_1);
		// }
		return;
	}
}
// System.Void TMPro.Examples.TextConsoleSimulator::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TextConsoleSimulator_Start_m5667F64AE1F48EBA2FF1B3D2D53E2AFCAB738B39 (TextConsoleSimulator_t986082F574CD2A38D6E40D856C6A9926D7EF49D2* __this, const RuntimeMethod* method) 
{
	{
		// StartCoroutine(RevealCharacters(m_TextComponent));
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_0 = __this->___m_TextComponent_4;
		RuntimeObject* L_1;
		L_1 = TextConsoleSimulator_RevealCharacters_mAA4D3653F05692839313CE180250A44378024E52(__this, L_0, NULL);
		Coroutine_t85EA685566A254C23F3FD77AB5BDFFFF8799596B* L_2;
		L_2 = MonoBehaviour_StartCoroutine_m4CAFF732AA28CD3BDC5363B44A863575530EC812(__this, L_1, NULL);
		// }
		return;
	}
}
// System.Void TMPro.Examples.TextConsoleSimulator::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TextConsoleSimulator_OnEnable_mDF58D349E4D62866410AAA376BE5BBAE4153FF95 (TextConsoleSimulator_t986082F574CD2A38D6E40D856C6A9926D7EF49D2* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&FastAction_1_Add_m368726E3508DB2176C4F87A79C0C0CC4816176D6_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TextConsoleSimulator_ON_TEXT_CHANGED_m050ECF4852B6A82000133662D6502577DFD57C3A_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// TMPro_EventManager.TEXT_CHANGED_EVENT.Add(ON_TEXT_CHANGED);
		il2cpp_codegen_runtime_class_init_inline(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		FastAction_1_tE50C6A692DF85AB55BE3160B659FA7DF19DFA005* L_0 = ((TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_StaticFields*)il2cpp_codegen_static_fields_for(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var))->___TEXT_CHANGED_EVENT_11;
		Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A* L_1 = (Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A*)il2cpp_codegen_object_new(Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		Action_1__ctor_m95478636F075134CA2998E22B214611472600983(L_1, __this, (intptr_t)((void*)TextConsoleSimulator_ON_TEXT_CHANGED_m050ECF4852B6A82000133662D6502577DFD57C3A_RuntimeMethod_var), NULL);
		NullCheck(L_0);
		FastAction_1_Add_m368726E3508DB2176C4F87A79C0C0CC4816176D6(L_0, L_1, FastAction_1_Add_m368726E3508DB2176C4F87A79C0C0CC4816176D6_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void TMPro.Examples.TextConsoleSimulator::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TextConsoleSimulator_OnDisable_m4B3A741D6C5279590453148419B422E8D7314689 (TextConsoleSimulator_t986082F574CD2A38D6E40D856C6A9926D7EF49D2* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&FastAction_1_Remove_mB29130AC90F5F8967CD89587717469E44E4D186F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TextConsoleSimulator_ON_TEXT_CHANGED_m050ECF4852B6A82000133662D6502577DFD57C3A_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// TMPro_EventManager.TEXT_CHANGED_EVENT.Remove(ON_TEXT_CHANGED);
		il2cpp_codegen_runtime_class_init_inline(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		FastAction_1_tE50C6A692DF85AB55BE3160B659FA7DF19DFA005* L_0 = ((TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_StaticFields*)il2cpp_codegen_static_fields_for(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var))->___TEXT_CHANGED_EVENT_11;
		Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A* L_1 = (Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A*)il2cpp_codegen_object_new(Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		Action_1__ctor_m95478636F075134CA2998E22B214611472600983(L_1, __this, (intptr_t)((void*)TextConsoleSimulator_ON_TEXT_CHANGED_m050ECF4852B6A82000133662D6502577DFD57C3A_RuntimeMethod_var), NULL);
		NullCheck(L_0);
		FastAction_1_Remove_mB29130AC90F5F8967CD89587717469E44E4D186F(L_0, L_1, FastAction_1_Remove_mB29130AC90F5F8967CD89587717469E44E4D186F_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void TMPro.Examples.TextConsoleSimulator::ON_TEXT_CHANGED(UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TextConsoleSimulator_ON_TEXT_CHANGED_m050ECF4852B6A82000133662D6502577DFD57C3A (TextConsoleSimulator_t986082F574CD2A38D6E40D856C6A9926D7EF49D2* __this, Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___obj0, const RuntimeMethod* method) 
{
	{
		// hasTextChanged = true;
		__this->___hasTextChanged_5 = (bool)1;
		// }
		return;
	}
}
// System.Collections.IEnumerator TMPro.Examples.TextConsoleSimulator::RevealCharacters(TMPro.TMP_Text)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* TextConsoleSimulator_RevealCharacters_mAA4D3653F05692839313CE180250A44378024E52 (TextConsoleSimulator_t986082F574CD2A38D6E40D856C6A9926D7EF49D2* __this, TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___textComponent0, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CRevealCharactersU3Ed__7_tB14F85C7FC57BEFD555A1A9CD8D3FF41E0F676F9_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		U3CRevealCharactersU3Ed__7_tB14F85C7FC57BEFD555A1A9CD8D3FF41E0F676F9* L_0 = (U3CRevealCharactersU3Ed__7_tB14F85C7FC57BEFD555A1A9CD8D3FF41E0F676F9*)il2cpp_codegen_object_new(U3CRevealCharactersU3Ed__7_tB14F85C7FC57BEFD555A1A9CD8D3FF41E0F676F9_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		U3CRevealCharactersU3Ed__7__ctor_m40A144070AB46560F2B3919EA5CB8BD51F8DDF45(L_0, 0, NULL);
		U3CRevealCharactersU3Ed__7_tB14F85C7FC57BEFD555A1A9CD8D3FF41E0F676F9* L_1 = L_0;
		NullCheck(L_1);
		L_1->___U3CU3E4__this_3 = __this;
		Il2CppCodeGenWriteBarrier((void**)(&L_1->___U3CU3E4__this_3), (void*)__this);
		U3CRevealCharactersU3Ed__7_tB14F85C7FC57BEFD555A1A9CD8D3FF41E0F676F9* L_2 = L_1;
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_3 = ___textComponent0;
		NullCheck(L_2);
		L_2->___textComponent_2 = L_3;
		Il2CppCodeGenWriteBarrier((void**)(&L_2->___textComponent_2), (void*)L_3);
		return L_2;
	}
}
// System.Collections.IEnumerator TMPro.Examples.TextConsoleSimulator::RevealWords(TMPro.TMP_Text)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* TextConsoleSimulator_RevealWords_m0E52802FD4239665709F086E6E0B235CDE67E9B1 (TextConsoleSimulator_t986082F574CD2A38D6E40D856C6A9926D7EF49D2* __this, TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* ___textComponent0, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CRevealWordsU3Ed__8_t912CFD430C602C79AE6BC1BC6C4AEBF101B4D7C8_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		U3CRevealWordsU3Ed__8_t912CFD430C602C79AE6BC1BC6C4AEBF101B4D7C8* L_0 = (U3CRevealWordsU3Ed__8_t912CFD430C602C79AE6BC1BC6C4AEBF101B4D7C8*)il2cpp_codegen_object_new(U3CRevealWordsU3Ed__8_t912CFD430C602C79AE6BC1BC6C4AEBF101B4D7C8_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		U3CRevealWordsU3Ed__8__ctor_mDF8D4C69F022D088AFC0E109FC0DBE0C9B938CAC(L_0, 0, NULL);
		U3CRevealWordsU3Ed__8_t912CFD430C602C79AE6BC1BC6C4AEBF101B4D7C8* L_1 = L_0;
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_2 = ___textComponent0;
		NullCheck(L_1);
		L_1->___textComponent_2 = L_2;
		Il2CppCodeGenWriteBarrier((void**)(&L_1->___textComponent_2), (void*)L_2);
		return L_1;
	}
}
// System.Void TMPro.Examples.TextConsoleSimulator::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TextConsoleSimulator__ctor_mBDDE8A2DCED8B140D78D5FE560897665753AB025 (TextConsoleSimulator_t986082F574CD2A38D6E40D856C6A9926D7EF49D2* __this, const RuntimeMethod* method) 
{
	{
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.TextConsoleSimulator/<RevealCharacters>d__7::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CRevealCharactersU3Ed__7__ctor_m40A144070AB46560F2B3919EA5CB8BD51F8DDF45 (U3CRevealCharactersU3Ed__7_tB14F85C7FC57BEFD555A1A9CD8D3FF41E0F676F9* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) 
{
	{
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		int32_t L_0 = ___U3CU3E1__state0;
		__this->___U3CU3E1__state_0 = L_0;
		return;
	}
}
// System.Void TMPro.Examples.TextConsoleSimulator/<RevealCharacters>d__7::System.IDisposable.Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CRevealCharactersU3Ed__7_System_IDisposable_Dispose_m7942532282ACF3B429FAD926284352907FFE087B (U3CRevealCharactersU3Ed__7_tB14F85C7FC57BEFD555A1A9CD8D3FF41E0F676F9* __this, const RuntimeMethod* method) 
{
	{
		return;
	}
}
// System.Boolean TMPro.Examples.TextConsoleSimulator/<RevealCharacters>d__7::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool U3CRevealCharactersU3Ed__7_MoveNext_m2D07AF9391894BCE39624FA2DCFA87AC6F8119AE (U3CRevealCharactersU3Ed__7_tB14F85C7FC57BEFD555A1A9CD8D3FF41E0F676F9* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	TextConsoleSimulator_t986082F574CD2A38D6E40D856C6A9926D7EF49D2* V_1 = NULL;
	{
		int32_t L_0 = __this->___U3CU3E1__state_0;
		V_0 = L_0;
		TextConsoleSimulator_t986082F574CD2A38D6E40D856C6A9926D7EF49D2* L_1 = __this->___U3CU3E4__this_3;
		V_1 = L_1;
		int32_t L_2 = V_0;
		switch (L_2)
		{
			case 0:
			{
				goto IL_0022;
			}
			case 1:
			{
				goto IL_00a6;
			}
			case 2:
			{
				goto IL_00e3;
			}
		}
	}
	{
		return (bool)0;
	}

IL_0022:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// textComponent.ForceMeshUpdate();
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_3 = __this->___textComponent_2;
		NullCheck(L_3);
		VirtualActionInvoker2< bool, bool >::Invoke(106 /* System.Void TMPro.TMP_Text::ForceMeshUpdate(System.Boolean,System.Boolean) */, L_3, (bool)0, (bool)0);
		// TMP_TextInfo textInfo = textComponent.textInfo;
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_4 = __this->___textComponent_2;
		NullCheck(L_4);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_5;
		L_5 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_4, NULL);
		__this->___U3CtextInfoU3E5__2_4 = L_5;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CtextInfoU3E5__2_4), (void*)L_5);
		// int totalVisibleCharacters = textInfo.characterCount; // Get # of Visible Character in text object
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_6 = __this->___U3CtextInfoU3E5__2_4;
		NullCheck(L_6);
		int32_t L_7 = L_6->___characterCount_3;
		__this->___U3CtotalVisibleCharactersU3E5__3_5 = L_7;
		// int visibleCount = 0;
		__this->___U3CvisibleCountU3E5__4_6 = 0;
	}

IL_005f:
	{
		// if (hasTextChanged)
		TextConsoleSimulator_t986082F574CD2A38D6E40D856C6A9926D7EF49D2* L_8 = V_1;
		NullCheck(L_8);
		bool L_9 = L_8->___hasTextChanged_5;
		if (!L_9)
		{
			goto IL_007f;
		}
	}
	{
		// totalVisibleCharacters = textInfo.characterCount; // Update visible character count.
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_10 = __this->___U3CtextInfoU3E5__2_4;
		NullCheck(L_10);
		int32_t L_11 = L_10->___characterCount_3;
		__this->___U3CtotalVisibleCharactersU3E5__3_5 = L_11;
		// hasTextChanged = false;
		TextConsoleSimulator_t986082F574CD2A38D6E40D856C6A9926D7EF49D2* L_12 = V_1;
		NullCheck(L_12);
		L_12->___hasTextChanged_5 = (bool)0;
	}

IL_007f:
	{
		// if (visibleCount > totalVisibleCharacters)
		int32_t L_13 = __this->___U3CvisibleCountU3E5__4_6;
		int32_t L_14 = __this->___U3CtotalVisibleCharactersU3E5__3_5;
		if ((((int32_t)L_13) <= ((int32_t)L_14)))
		{
			goto IL_00b4;
		}
	}
	{
		// yield return new WaitForSeconds(1.0f);
		WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3* L_15 = (WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3*)il2cpp_codegen_object_new(WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		NullCheck(L_15);
		WaitForSeconds__ctor_m579F95BADEDBAB4B3A7E302C6EE3995926EF2EFC(L_15, (1.0f), NULL);
		__this->___U3CU3E2__current_1 = L_15;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_15);
		__this->___U3CU3E1__state_0 = 1;
		return (bool)1;
	}

IL_00a6:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// visibleCount = 0;
		__this->___U3CvisibleCountU3E5__4_6 = 0;
	}

IL_00b4:
	{
		// textComponent.maxVisibleCharacters = visibleCount; // How many characters should TextMeshPro display?
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_16 = __this->___textComponent_2;
		int32_t L_17 = __this->___U3CvisibleCountU3E5__4_6;
		NullCheck(L_16);
		TMP_Text_set_maxVisibleCharacters_mEDD8DCB11D204F3FC10BFAC49BF6E8E09548358A(L_16, L_17, NULL);
		// visibleCount += 1;
		int32_t L_18 = __this->___U3CvisibleCountU3E5__4_6;
		__this->___U3CvisibleCountU3E5__4_6 = ((int32_t)il2cpp_codegen_add(L_18, 1));
		// yield return null;
		__this->___U3CU3E2__current_1 = NULL;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)NULL);
		__this->___U3CU3E1__state_0 = 2;
		return (bool)1;
	}

IL_00e3:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// while (true)
		goto IL_005f;
	}
}
// System.Object TMPro.Examples.TextConsoleSimulator/<RevealCharacters>d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CRevealCharactersU3Ed__7_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_m754C680B2751A9F05DBF253431A3CB42885F7854 (U3CRevealCharactersU3Ed__7_tB14F85C7FC57BEFD555A1A9CD8D3FF41E0F676F9* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
// System.Void TMPro.Examples.TextConsoleSimulator/<RevealCharacters>d__7::System.Collections.IEnumerator.Reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CRevealCharactersU3Ed__7_System_Collections_IEnumerator_Reset_mD12057609EFCBCA8E7B61B0421D4A7C5A206C8C3 (U3CRevealCharactersU3Ed__7_tB14F85C7FC57BEFD555A1A9CD8D3FF41E0F676F9* __this, const RuntimeMethod* method) 
{
	{
		NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A* L_0 = (NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A_il2cpp_TypeInfo_var)));
		NullCheck(L_0);
		NotSupportedException__ctor_m1398D0CDE19B36AA3DE9392879738C1EA2439CDF(L_0, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_0, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&U3CRevealCharactersU3Ed__7_System_Collections_IEnumerator_Reset_mD12057609EFCBCA8E7B61B0421D4A7C5A206C8C3_RuntimeMethod_var)));
	}
}
// System.Object TMPro.Examples.TextConsoleSimulator/<RevealCharacters>d__7::System.Collections.IEnumerator.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CRevealCharactersU3Ed__7_System_Collections_IEnumerator_get_Current_m9FD7DAB922AE6A58166112C295ABFF6E19E1D186 (U3CRevealCharactersU3Ed__7_tB14F85C7FC57BEFD555A1A9CD8D3FF41E0F676F9* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.TextConsoleSimulator/<RevealWords>d__8::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CRevealWordsU3Ed__8__ctor_mDF8D4C69F022D088AFC0E109FC0DBE0C9B938CAC (U3CRevealWordsU3Ed__8_t912CFD430C602C79AE6BC1BC6C4AEBF101B4D7C8* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) 
{
	{
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		int32_t L_0 = ___U3CU3E1__state0;
		__this->___U3CU3E1__state_0 = L_0;
		return;
	}
}
// System.Void TMPro.Examples.TextConsoleSimulator/<RevealWords>d__8::System.IDisposable.Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CRevealWordsU3Ed__8_System_IDisposable_Dispose_m2F2F21F38D2DD8AE3D066E64850D404497A131C5 (U3CRevealWordsU3Ed__8_t912CFD430C602C79AE6BC1BC6C4AEBF101B4D7C8* __this, const RuntimeMethod* method) 
{
	{
		return;
	}
}
// System.Boolean TMPro.Examples.TextConsoleSimulator/<RevealWords>d__8::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool U3CRevealWordsU3Ed__8_MoveNext_mC5102728A86DCB2171E54CFEDFA7BE6F29AB355C (U3CRevealWordsU3Ed__8_t912CFD430C602C79AE6BC1BC6C4AEBF101B4D7C8* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	{
		int32_t L_0 = __this->___U3CU3E1__state_0;
		V_0 = L_0;
		int32_t L_1 = V_0;
		switch (L_1)
		{
			case 0:
			{
				goto IL_001b;
			}
			case 1:
			{
				goto IL_0104;
			}
			case 2:
			{
				goto IL_0132;
			}
		}
	}
	{
		return (bool)0;
	}

IL_001b:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// textComponent.ForceMeshUpdate();
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_2 = __this->___textComponent_2;
		NullCheck(L_2);
		VirtualActionInvoker2< bool, bool >::Invoke(106 /* System.Void TMPro.TMP_Text::ForceMeshUpdate(System.Boolean,System.Boolean) */, L_2, (bool)0, (bool)0);
		// int totalWordCount = textComponent.textInfo.wordCount;
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_3 = __this->___textComponent_2;
		NullCheck(L_3);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_4;
		L_4 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_3, NULL);
		NullCheck(L_4);
		int32_t L_5 = L_4->___wordCount_6;
		__this->___U3CtotalWordCountU3E5__2_3 = L_5;
		// int totalVisibleCharacters = textComponent.textInfo.characterCount; // Get # of Visible Character in text object
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_6 = __this->___textComponent_2;
		NullCheck(L_6);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_7;
		L_7 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_6, NULL);
		NullCheck(L_7);
		int32_t L_8 = L_7->___characterCount_3;
		__this->___U3CtotalVisibleCharactersU3E5__3_4 = L_8;
		// int counter = 0;
		__this->___U3CcounterU3E5__4_5 = 0;
		// int currentWord = 0;
		V_1 = 0;
		// int visibleCount = 0;
		__this->___U3CvisibleCountU3E5__5_6 = 0;
	}

IL_006b:
	{
		// currentWord = counter % (totalWordCount + 1);
		int32_t L_9 = __this->___U3CcounterU3E5__4_5;
		int32_t L_10 = __this->___U3CtotalWordCountU3E5__2_3;
		V_1 = ((int32_t)(L_9%((int32_t)il2cpp_codegen_add(L_10, 1))));
		// if (currentWord == 0) // Display no words.
		int32_t L_11 = V_1;
		if (L_11)
		{
			goto IL_0087;
		}
	}
	{
		// visibleCount = 0;
		__this->___U3CvisibleCountU3E5__5_6 = 0;
		goto IL_00cc;
	}

IL_0087:
	{
		// else if (currentWord < totalWordCount) // Display all other words with the exception of the last one.
		int32_t L_12 = V_1;
		int32_t L_13 = __this->___U3CtotalWordCountU3E5__2_3;
		if ((((int32_t)L_12) >= ((int32_t)L_13)))
		{
			goto IL_00b7;
		}
	}
	{
		// visibleCount = textComponent.textInfo.wordInfo[currentWord - 1].lastCharacterIndex + 1;
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_14 = __this->___textComponent_2;
		NullCheck(L_14);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_15;
		L_15 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_14, NULL);
		NullCheck(L_15);
		TMP_WordInfoU5BU5D_tD1759E5A84DCCCD42B718D79E953E72A432BB4DC* L_16 = L_15->___wordInfo_12;
		int32_t L_17 = V_1;
		NullCheck(L_16);
		int32_t L_18 = ((L_16)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_subtract(L_17, 1)))))->___lastCharacterIndex_2;
		__this->___U3CvisibleCountU3E5__5_6 = ((int32_t)il2cpp_codegen_add(L_18, 1));
		goto IL_00cc;
	}

IL_00b7:
	{
		// else if (currentWord == totalWordCount) // Display last word and all remaining characters.
		int32_t L_19 = V_1;
		int32_t L_20 = __this->___U3CtotalWordCountU3E5__2_3;
		if ((!(((uint32_t)L_19) == ((uint32_t)L_20))))
		{
			goto IL_00cc;
		}
	}
	{
		// visibleCount = totalVisibleCharacters;
		int32_t L_21 = __this->___U3CtotalVisibleCharactersU3E5__3_4;
		__this->___U3CvisibleCountU3E5__5_6 = L_21;
	}

IL_00cc:
	{
		// textComponent.maxVisibleCharacters = visibleCount; // How many characters should TextMeshPro display?
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_22 = __this->___textComponent_2;
		int32_t L_23 = __this->___U3CvisibleCountU3E5__5_6;
		NullCheck(L_22);
		TMP_Text_set_maxVisibleCharacters_mEDD8DCB11D204F3FC10BFAC49BF6E8E09548358A(L_22, L_23, NULL);
		// if (visibleCount >= totalVisibleCharacters)
		int32_t L_24 = __this->___U3CvisibleCountU3E5__5_6;
		int32_t L_25 = __this->___U3CtotalVisibleCharactersU3E5__3_4;
		if ((((int32_t)L_24) < ((int32_t)L_25)))
		{
			goto IL_010b;
		}
	}
	{
		// yield return new WaitForSeconds(1.0f);
		WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3* L_26 = (WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3*)il2cpp_codegen_object_new(WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		NullCheck(L_26);
		WaitForSeconds__ctor_m579F95BADEDBAB4B3A7E302C6EE3995926EF2EFC(L_26, (1.0f), NULL);
		__this->___U3CU3E2__current_1 = L_26;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_26);
		__this->___U3CU3E1__state_0 = 1;
		return (bool)1;
	}

IL_0104:
	{
		__this->___U3CU3E1__state_0 = (-1);
	}

IL_010b:
	{
		// counter += 1;
		int32_t L_27 = __this->___U3CcounterU3E5__4_5;
		__this->___U3CcounterU3E5__4_5 = ((int32_t)il2cpp_codegen_add(L_27, 1));
		// yield return new WaitForSeconds(0.1f);
		WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3* L_28 = (WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3*)il2cpp_codegen_object_new(WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		NullCheck(L_28);
		WaitForSeconds__ctor_m579F95BADEDBAB4B3A7E302C6EE3995926EF2EFC(L_28, (0.100000001f), NULL);
		__this->___U3CU3E2__current_1 = L_28;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_28);
		__this->___U3CU3E1__state_0 = 2;
		return (bool)1;
	}

IL_0132:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// while (true)
		goto IL_006b;
	}
}
// System.Object TMPro.Examples.TextConsoleSimulator/<RevealWords>d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CRevealWordsU3Ed__8_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_m4D9A6269831C00345D245D0EED2E5FC20BBF4683 (U3CRevealWordsU3Ed__8_t912CFD430C602C79AE6BC1BC6C4AEBF101B4D7C8* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
// System.Void TMPro.Examples.TextConsoleSimulator/<RevealWords>d__8::System.Collections.IEnumerator.Reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CRevealWordsU3Ed__8_System_Collections_IEnumerator_Reset_mE5E0678716735BDF0D632FE43E392981E75A1C4D (U3CRevealWordsU3Ed__8_t912CFD430C602C79AE6BC1BC6C4AEBF101B4D7C8* __this, const RuntimeMethod* method) 
{
	{
		NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A* L_0 = (NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A_il2cpp_TypeInfo_var)));
		NullCheck(L_0);
		NotSupportedException__ctor_m1398D0CDE19B36AA3DE9392879738C1EA2439CDF(L_0, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_0, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&U3CRevealWordsU3Ed__8_System_Collections_IEnumerator_Reset_mE5E0678716735BDF0D632FE43E392981E75A1C4D_RuntimeMethod_var)));
	}
}
// System.Object TMPro.Examples.TextConsoleSimulator/<RevealWords>d__8::System.Collections.IEnumerator.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CRevealWordsU3Ed__8_System_Collections_IEnumerator_get_Current_m3E9D4960A972BD7601F6454E6F9A614AA21D553E (U3CRevealWordsU3Ed__8_t912CFD430C602C79AE6BC1BC6C4AEBF101B4D7C8* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.TextMeshProFloatingText::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TextMeshProFloatingText_Awake_m600F1825C26BB683047156FD815AE4376D2672F2 (TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_t76FEDD663AB33C991A9C9A23129337651094216F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral488BBD09F4A1A1F043A936DD66A4830B2FFA8FFC);
		s_Il2CppMethodInitialized = true;
	}
	{
		// m_transform = transform;
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_0;
		L_0 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(__this, NULL);
		__this->___m_transform_8 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_transform_8), (void*)L_0);
		// m_floatingText = new GameObject(this.name + " floating text");
		String_t* L_1;
		L_1 = Object_get_name_mAC2F6B897CF1303BA4249B4CB55271AFACBB6392(__this, NULL);
		String_t* L_2;
		L_2 = String_Concat_mAF2CE02CC0CB7460753D0A1A91CCF2B1E9804C5D(L_1, _stringLiteral488BBD09F4A1A1F043A936DD66A4830B2FFA8FFC, NULL);
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_3 = (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*)il2cpp_codegen_object_new(GameObject_t76FEDD663AB33C991A9C9A23129337651094216F_il2cpp_TypeInfo_var);
		NullCheck(L_3);
		GameObject__ctor_m37D512B05D292F954792225E6C6EEE95293A9B88(L_3, L_2, NULL);
		__this->___m_floatingText_5 = L_3;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_floatingText_5), (void*)L_3);
		// m_cameraTransform = Camera.main.transform;
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_4;
		L_4 = Camera_get_main_mF222B707D3BF8CC9C7544609EFC71CFB62E81D43(NULL);
		NullCheck(L_4);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_5;
		L_5 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_4, NULL);
		__this->___m_cameraTransform_10 = L_5;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_cameraTransform_10), (void*)L_5);
		// }
		return;
	}
}
// System.Void TMPro.Examples.TextMeshProFloatingText::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TextMeshProFloatingText_Start_m8121246A4310A0014ECA36144B9DCE093FE8AE49 (TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponent_TisRenderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF_mC91ACC92AD57CA6CA00991DAF1DB3830BCE07AF8_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_AddComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_mD3BE0A75BBE971456A1D7C8C6F6688A094A81C9C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_AddComponent_TisTextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8_mFAD74D91BCACF9C3FAE6960EB58D5C346DDBD9C2_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Resources_Load_TisFont_tC95270EA3198038970422D78B74A7F2E218A96B6_mF1595237572FCE3E2EE060D2038BE3F341DB7901_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&String_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral9D329ACFC4F7EECCB821A7FEF99A0F23E1C721B7);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (SpawnType == 0)
		int32_t L_0 = __this->___SpawnType_13;
		if (L_0)
		{
			goto IL_010f;
		}
	}
	{
		// m_textMeshPro = m_floatingText.AddComponent<TextMeshPro>();
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_1 = __this->___m_floatingText_5;
		NullCheck(L_1);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_2;
		L_2 = GameObject_AddComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_mD3BE0A75BBE971456A1D7C8C6F6688A094A81C9C(L_1, GameObject_AddComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_mD3BE0A75BBE971456A1D7C8C6F6688A094A81C9C_RuntimeMethod_var);
		__this->___m_textMeshPro_6 = L_2;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_textMeshPro_6), (void*)L_2);
		// m_textMeshPro.rectTransform.sizeDelta = new Vector2(3, 3);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_3 = __this->___m_textMeshPro_6;
		NullCheck(L_3);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_4;
		L_4 = TMP_Text_get_rectTransform_m22DC10116809BEB2C66047A55337A588ED023EBF(L_3, NULL);
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_5;
		memset((&L_5), 0, sizeof(L_5));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_5), (3.0f), (3.0f), /*hidden argument*/NULL);
		NullCheck(L_4);
		RectTransform_set_sizeDelta_mC9A980EA6036E6725EF24CEDF3EE80A9B2B50EE5(L_4, L_5, NULL);
		// m_floatingText_Transform = m_floatingText.transform;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_6 = __this->___m_floatingText_5;
		NullCheck(L_6);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_7;
		L_7 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_6, NULL);
		__this->___m_floatingText_Transform_9 = L_7;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_floatingText_Transform_9), (void*)L_7);
		// m_floatingText_Transform.position = m_transform.position + new Vector3(0, 15f, 0);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_8 = __this->___m_floatingText_Transform_9;
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_9 = __this->___m_transform_8;
		NullCheck(L_9);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_10;
		L_10 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_9, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_11;
		memset((&L_11), 0, sizeof(L_11));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_11), (0.0f), (15.0f), (0.0f), /*hidden argument*/NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_12;
		L_12 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_10, L_11, NULL);
		NullCheck(L_8);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_8, L_12, NULL);
		// m_textMeshPro.alignment = TextAlignmentOptions.Center;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_13 = __this->___m_textMeshPro_6;
		NullCheck(L_13);
		TMP_Text_set_alignment_mE5216A28797987CC19927ED3CB8DFAC438C6B95A(L_13, ((int32_t)514), NULL);
		// m_textMeshPro.color = new Color32((byte)Random.Range(0, 255), (byte)Random.Range(0, 255), (byte)Random.Range(0, 255), 255);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_14 = __this->___m_textMeshPro_6;
		int32_t L_15;
		L_15 = Random_Range_mD4D2DEE3D2E75D07740C9A6F93B3088B03BBB8F8(0, ((int32_t)255), NULL);
		int32_t L_16;
		L_16 = Random_Range_mD4D2DEE3D2E75D07740C9A6F93B3088B03BBB8F8(0, ((int32_t)255), NULL);
		int32_t L_17;
		L_17 = Random_Range_mD4D2DEE3D2E75D07740C9A6F93B3088B03BBB8F8(0, ((int32_t)255), NULL);
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_18;
		memset((&L_18), 0, sizeof(L_18));
		Color32__ctor_mC9C6B443F0C7CA3F8B174158B2AF6F05E18EAC4E_inline((&L_18), (uint8_t)((int32_t)(uint8_t)L_15), (uint8_t)((int32_t)(uint8_t)L_16), (uint8_t)((int32_t)(uint8_t)L_17), (uint8_t)((int32_t)255), /*hidden argument*/NULL);
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_19;
		L_19 = Color32_op_Implicit_m203A634DBB77053C9400C68065CA29529103D172_inline(L_18, NULL);
		NullCheck(L_14);
		VirtualActionInvoker1< Color_tD001788D726C3A7F1379BEED0260B9591F440C1F >::Invoke(23 /* System.Void UnityEngine.UI.Graphic::set_color(UnityEngine.Color) */, L_14, L_19);
		// m_textMeshPro.fontSize = 24;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_20 = __this->___m_textMeshPro_6;
		NullCheck(L_20);
		TMP_Text_set_fontSize_m1C3A3BA2BC88E5E1D89375FD35A0AA91E75D3AAD(L_20, (24.0f), NULL);
		// m_textMeshPro.enableKerning = false;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_21 = __this->___m_textMeshPro_6;
		NullCheck(L_21);
		TMP_Text_set_enableKerning_m681685E06B8789F5F2B7043EBEA561AAE48E82BD(L_21, (bool)0, NULL);
		// m_textMeshPro.text = string.Empty;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_22 = __this->___m_textMeshPro_6;
		String_t* L_23 = ((String_t_StaticFields*)il2cpp_codegen_static_fields_for(String_t_il2cpp_TypeInfo_var))->___Empty_6;
		NullCheck(L_22);
		VirtualActionInvoker1< String_t* >::Invoke(66 /* System.Void TMPro.TMP_Text::set_text(System.String) */, L_22, L_23);
		// m_textMeshPro.isTextObjectScaleStatic = true;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_24 = __this->___m_textMeshPro_6;
		NullCheck(L_24);
		TMP_Text_set_isTextObjectScaleStatic_m8436FC38400ABE08F513770AF9C8CC6743DBE092(L_24, (bool)1, NULL);
		// StartCoroutine(DisplayTextMeshProFloatingText());
		RuntimeObject* L_25;
		L_25 = TextMeshProFloatingText_DisplayTextMeshProFloatingText_mA1E370089458CD380E9BA7740C2BC2032F084148(__this, NULL);
		Coroutine_t85EA685566A254C23F3FD77AB5BDFFFF8799596B* L_26;
		L_26 = MonoBehaviour_StartCoroutine_m4CAFF732AA28CD3BDC5363B44A863575530EC812(__this, L_25, NULL);
		return;
	}

IL_010f:
	{
		// else if (SpawnType == 1)
		int32_t L_27 = __this->___SpawnType_13;
		if ((!(((uint32_t)L_27) == ((uint32_t)1))))
		{
			goto IL_0206;
		}
	}
	{
		// m_floatingText_Transform = m_floatingText.transform;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_28 = __this->___m_floatingText_5;
		NullCheck(L_28);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_29;
		L_29 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_28, NULL);
		__this->___m_floatingText_Transform_9 = L_29;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_floatingText_Transform_9), (void*)L_29);
		// m_floatingText_Transform.position = m_transform.position + new Vector3(0, 15f, 0);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_30 = __this->___m_floatingText_Transform_9;
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_31 = __this->___m_transform_8;
		NullCheck(L_31);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_32;
		L_32 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_31, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_33;
		memset((&L_33), 0, sizeof(L_33));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_33), (0.0f), (15.0f), (0.0f), /*hidden argument*/NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_34;
		L_34 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_32, L_33, NULL);
		NullCheck(L_30);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_30, L_34, NULL);
		// m_textMesh = m_floatingText.AddComponent<TextMesh>();
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_35 = __this->___m_floatingText_5;
		NullCheck(L_35);
		TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* L_36;
		L_36 = GameObject_AddComponent_TisTextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8_mFAD74D91BCACF9C3FAE6960EB58D5C346DDBD9C2(L_35, GameObject_AddComponent_TisTextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8_mFAD74D91BCACF9C3FAE6960EB58D5C346DDBD9C2_RuntimeMethod_var);
		__this->___m_textMesh_7 = L_36;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_textMesh_7), (void*)L_36);
		// m_textMesh.font = Resources.Load<Font>("Fonts/ARIAL");
		TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* L_37 = __this->___m_textMesh_7;
		Font_tC95270EA3198038970422D78B74A7F2E218A96B6* L_38;
		L_38 = Resources_Load_TisFont_tC95270EA3198038970422D78B74A7F2E218A96B6_mF1595237572FCE3E2EE060D2038BE3F341DB7901(_stringLiteral9D329ACFC4F7EECCB821A7FEF99A0F23E1C721B7, Resources_Load_TisFont_tC95270EA3198038970422D78B74A7F2E218A96B6_mF1595237572FCE3E2EE060D2038BE3F341DB7901_RuntimeMethod_var);
		NullCheck(L_37);
		TextMesh_set_font_m7E407CAEDBB382B95B70069D8FAB8A9E74EAAA74(L_37, L_38, NULL);
		// m_textMesh.GetComponent<Renderer>().sharedMaterial = m_textMesh.font.material;
		TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* L_39 = __this->___m_textMesh_7;
		NullCheck(L_39);
		Renderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF* L_40;
		L_40 = Component_GetComponent_TisRenderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF_mC91ACC92AD57CA6CA00991DAF1DB3830BCE07AF8(L_39, Component_GetComponent_TisRenderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF_mC91ACC92AD57CA6CA00991DAF1DB3830BCE07AF8_RuntimeMethod_var);
		TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* L_41 = __this->___m_textMesh_7;
		NullCheck(L_41);
		Font_tC95270EA3198038970422D78B74A7F2E218A96B6* L_42;
		L_42 = TextMesh_get_font_m94D3A4C8E4DB171B74E4FF00AC7EC27F3D495664(L_41, NULL);
		NullCheck(L_42);
		Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* L_43;
		L_43 = Font_get_material_m61ABDEC14C6D659DDC5A4F080023699116C17364(L_42, NULL);
		NullCheck(L_40);
		Renderer_set_sharedMaterial_m5E842F9A06CFB7B77656EB319881CB4B3E8E4288(L_40, L_43, NULL);
		// m_textMesh.color = new Color32((byte)Random.Range(0, 255), (byte)Random.Range(0, 255), (byte)Random.Range(0, 255), 255);
		TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* L_44 = __this->___m_textMesh_7;
		int32_t L_45;
		L_45 = Random_Range_mD4D2DEE3D2E75D07740C9A6F93B3088B03BBB8F8(0, ((int32_t)255), NULL);
		int32_t L_46;
		L_46 = Random_Range_mD4D2DEE3D2E75D07740C9A6F93B3088B03BBB8F8(0, ((int32_t)255), NULL);
		int32_t L_47;
		L_47 = Random_Range_mD4D2DEE3D2E75D07740C9A6F93B3088B03BBB8F8(0, ((int32_t)255), NULL);
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_48;
		memset((&L_48), 0, sizeof(L_48));
		Color32__ctor_mC9C6B443F0C7CA3F8B174158B2AF6F05E18EAC4E_inline((&L_48), (uint8_t)((int32_t)(uint8_t)L_45), (uint8_t)((int32_t)(uint8_t)L_46), (uint8_t)((int32_t)(uint8_t)L_47), (uint8_t)((int32_t)255), /*hidden argument*/NULL);
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_49;
		L_49 = Color32_op_Implicit_m203A634DBB77053C9400C68065CA29529103D172_inline(L_48, NULL);
		NullCheck(L_44);
		TextMesh_set_color_mF08F30C3CD797C16289225B567724B9F07DC641E(L_44, L_49, NULL);
		// m_textMesh.anchor = TextAnchor.LowerCenter;
		TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* L_50 = __this->___m_textMesh_7;
		NullCheck(L_50);
		TextMesh_set_anchor_m3FCB7C4B1FF66CE189B56076C0306AFE984FCD32(L_50, 7, NULL);
		// m_textMesh.fontSize = 24;
		TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* L_51 = __this->___m_textMesh_7;
		NullCheck(L_51);
		TextMesh_set_fontSize_mAB9F7FFC0E4DB759B786F6A9357B18C86015498B(L_51, ((int32_t)24), NULL);
		// StartCoroutine(DisplayTextMeshFloatingText());
		RuntimeObject* L_52;
		L_52 = TextMeshProFloatingText_DisplayTextMeshFloatingText_mA02B20CF33E43FE99FD5F1B90F7F350262F0BEBE(__this, NULL);
		Coroutine_t85EA685566A254C23F3FD77AB5BDFFFF8799596B* L_53;
		L_53 = MonoBehaviour_StartCoroutine_m4CAFF732AA28CD3BDC5363B44A863575530EC812(__this, L_52, NULL);
		return;
	}

IL_0206:
	{
		// else if (SpawnType == 2)
		int32_t L_54 = __this->___SpawnType_13;
		// }
		return;
	}
}
// System.Collections.IEnumerator TMPro.Examples.TextMeshProFloatingText::DisplayTextMeshProFloatingText()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* TextMeshProFloatingText_DisplayTextMeshProFloatingText_mA1E370089458CD380E9BA7740C2BC2032F084148 (TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CDisplayTextMeshProFloatingTextU3Ed__12_tF5C7EAAA1230794883FCB2D5C767C12F48C50C76_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		U3CDisplayTextMeshProFloatingTextU3Ed__12_tF5C7EAAA1230794883FCB2D5C767C12F48C50C76* L_0 = (U3CDisplayTextMeshProFloatingTextU3Ed__12_tF5C7EAAA1230794883FCB2D5C767C12F48C50C76*)il2cpp_codegen_object_new(U3CDisplayTextMeshProFloatingTextU3Ed__12_tF5C7EAAA1230794883FCB2D5C767C12F48C50C76_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		U3CDisplayTextMeshProFloatingTextU3Ed__12__ctor_m5783C7EE3A7D230F5D8FE65111F7F0B3AACF4A5D(L_0, 0, NULL);
		U3CDisplayTextMeshProFloatingTextU3Ed__12_tF5C7EAAA1230794883FCB2D5C767C12F48C50C76* L_1 = L_0;
		NullCheck(L_1);
		L_1->___U3CU3E4__this_2 = __this;
		Il2CppCodeGenWriteBarrier((void**)(&L_1->___U3CU3E4__this_2), (void*)__this);
		return L_1;
	}
}
// System.Collections.IEnumerator TMPro.Examples.TextMeshProFloatingText::DisplayTextMeshFloatingText()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* TextMeshProFloatingText_DisplayTextMeshFloatingText_mA02B20CF33E43FE99FD5F1B90F7F350262F0BEBE (TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CDisplayTextMeshFloatingTextU3Ed__13_tFC924C56A4F46E6D8D46B95035B8A6D215A180A1_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		U3CDisplayTextMeshFloatingTextU3Ed__13_tFC924C56A4F46E6D8D46B95035B8A6D215A180A1* L_0 = (U3CDisplayTextMeshFloatingTextU3Ed__13_tFC924C56A4F46E6D8D46B95035B8A6D215A180A1*)il2cpp_codegen_object_new(U3CDisplayTextMeshFloatingTextU3Ed__13_tFC924C56A4F46E6D8D46B95035B8A6D215A180A1_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		U3CDisplayTextMeshFloatingTextU3Ed__13__ctor_m093946C77D9946811A7799D06F8D7170FB42A8EB(L_0, 0, NULL);
		U3CDisplayTextMeshFloatingTextU3Ed__13_tFC924C56A4F46E6D8D46B95035B8A6D215A180A1* L_1 = L_0;
		NullCheck(L_1);
		L_1->___U3CU3E4__this_2 = __this;
		Il2CppCodeGenWriteBarrier((void**)(&L_1->___U3CU3E4__this_2), (void*)__this);
		return L_1;
	}
}
// System.Void TMPro.Examples.TextMeshProFloatingText::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TextMeshProFloatingText__ctor_mD08AF0FB6944A51BC6EA15D6BE4E33AA4A916E3E (TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* __this, const RuntimeMethod* method) 
{
	{
		// Vector3 lastPOS = Vector3.zero;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0;
		L_0 = Vector3_get_zero_m9D7F7B580B5A276411267E96AA3425736D9BDC83_inline(NULL);
		__this->___lastPOS_11 = L_0;
		// Quaternion lastRotation = Quaternion.identity;
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_1;
		L_1 = Quaternion_get_identity_mB9CAEEB21BC81352CBF32DB9664BFC06FA7EA27B_inline(NULL);
		__this->___lastRotation_12 = L_1;
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshProFloatingText>d__12::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDisplayTextMeshProFloatingTextU3Ed__12__ctor_m5783C7EE3A7D230F5D8FE65111F7F0B3AACF4A5D (U3CDisplayTextMeshProFloatingTextU3Ed__12_tF5C7EAAA1230794883FCB2D5C767C12F48C50C76* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) 
{
	{
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		int32_t L_0 = ___U3CU3E1__state0;
		__this->___U3CU3E1__state_0 = L_0;
		return;
	}
}
// System.Void TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshProFloatingText>d__12::System.IDisposable.Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDisplayTextMeshProFloatingTextU3Ed__12_System_IDisposable_Dispose_m641EA4B8AFFBA5E132B7EE46F0962E8CA6F860ED (U3CDisplayTextMeshProFloatingTextU3Ed__12_tF5C7EAAA1230794883FCB2D5C767C12F48C50C76* __this, const RuntimeMethod* method) 
{
	{
		return;
	}
}
// System.Boolean TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshProFloatingText>d__12::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool U3CDisplayTextMeshProFloatingTextU3Ed__12_MoveNext_mB9551C24D0AAF928ADC9DE924F2325884F0A2DB4 (U3CDisplayTextMeshProFloatingTextU3Ed__12_tF5C7EAAA1230794883FCB2D5C767C12F48C50C76* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WaitForEndOfFrame_tE38D80923E3F8380069B423968C25ABE50A46663_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* V_1 = NULL;
	int32_t V_2 = 0;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_3;
	memset((&V_3), 0, sizeof(V_3));
	{
		int32_t L_0 = __this->___U3CU3E1__state_0;
		V_0 = L_0;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_1 = __this->___U3CU3E4__this_2;
		V_1 = L_1;
		int32_t L_2 = V_0;
		switch (L_2)
		{
			case 0:
			{
				goto IL_0022;
			}
			case 1:
			{
				goto IL_0243;
			}
			case 2:
			{
				goto IL_027d;
			}
		}
	}
	{
		return (bool)0;
	}

IL_0022:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// float CountDuration = 2.0f; // How long is the countdown alive.
		__this->___U3CCountDurationU3E5__2_3 = (2.0f);
		// float starting_Count = Random.Range(5f, 20f); // At what number is the counter starting at.
		float L_3;
		L_3 = Random_Range_mF26F26EB446B76823B4815C91FA0907B484DF02B((5.0f), (20.0f), NULL);
		__this->___U3Cstarting_CountU3E5__3_4 = L_3;
		// float current_Count = starting_Count;
		float L_4 = __this->___U3Cstarting_CountU3E5__3_4;
		__this->___U3Ccurrent_CountU3E5__4_5 = L_4;
		// Vector3 start_pos = m_floatingText_Transform.position;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_5 = V_1;
		NullCheck(L_5);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_6 = L_5->___m_floatingText_Transform_9;
		NullCheck(L_6);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_7;
		L_7 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_6, NULL);
		__this->___U3Cstart_posU3E5__5_6 = L_7;
		// Color32 start_color = m_textMeshPro.color;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_8 = V_1;
		NullCheck(L_8);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_9 = L_8->___m_textMeshPro_6;
		NullCheck(L_9);
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_10;
		L_10 = VirtualFuncInvoker0< Color_tD001788D726C3A7F1379BEED0260B9591F440C1F >::Invoke(22 /* UnityEngine.Color UnityEngine.UI.Graphic::get_color() */, L_9);
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_11;
		L_11 = Color32_op_Implicit_m7EFA0B83AD1AE15567E9BC2FA2B8E66D3BFE1395_inline(L_10, NULL);
		__this->___U3Cstart_colorU3E5__6_7 = L_11;
		// float alpha = 255;
		__this->___U3CalphaU3E5__7_8 = (255.0f);
		// int int_counter = 0;
		V_2 = 0;
		// float fadeDuration = 3 / starting_Count * CountDuration;
		float L_12 = __this->___U3Cstarting_CountU3E5__3_4;
		float L_13 = __this->___U3CCountDurationU3E5__2_3;
		__this->___U3CfadeDurationU3E5__8_9 = ((float)il2cpp_codegen_multiply(((float)((3.0f)/L_12)), L_13));
		goto IL_024a;
	}

IL_00a7:
	{
		// current_Count -= (Time.deltaTime / CountDuration) * starting_Count;
		float L_14 = __this->___U3Ccurrent_CountU3E5__4_5;
		float L_15;
		L_15 = Time_get_deltaTime_m7AB6BFA101D83E1D8F2EF3D5A128AEE9DDBF1A6D(NULL);
		float L_16 = __this->___U3CCountDurationU3E5__2_3;
		float L_17 = __this->___U3Cstarting_CountU3E5__3_4;
		__this->___U3Ccurrent_CountU3E5__4_5 = ((float)il2cpp_codegen_subtract(L_14, ((float)il2cpp_codegen_multiply(((float)(L_15/L_16)), L_17))));
		// if (current_Count <= 3)
		float L_18 = __this->___U3Ccurrent_CountU3E5__4_5;
		if ((!(((float)L_18) <= ((float)(3.0f)))))
		{
			goto IL_0102;
		}
	}
	{
		// alpha = Mathf.Clamp(alpha - (Time.deltaTime / fadeDuration) * 255, 0, 255);
		float L_19 = __this->___U3CalphaU3E5__7_8;
		float L_20;
		L_20 = Time_get_deltaTime_m7AB6BFA101D83E1D8F2EF3D5A128AEE9DDBF1A6D(NULL);
		float L_21 = __this->___U3CfadeDurationU3E5__8_9;
		float L_22;
		L_22 = Mathf_Clamp_m154E404AF275A3B2EC99ECAA3879B4CB9F0606DC_inline(((float)il2cpp_codegen_subtract(L_19, ((float)il2cpp_codegen_multiply(((float)(L_20/L_21)), (255.0f))))), (0.0f), (255.0f), NULL);
		__this->___U3CalphaU3E5__7_8 = L_22;
	}

IL_0102:
	{
		// int_counter = (int)current_Count;
		float L_23 = __this->___U3Ccurrent_CountU3E5__4_5;
		V_2 = il2cpp_codegen_cast_double_to_int<int32_t>(L_23);
		// m_textMeshPro.text = int_counter.ToString();
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_24 = V_1;
		NullCheck(L_24);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_25 = L_24->___m_textMeshPro_6;
		String_t* L_26;
		L_26 = Int32_ToString_m030E01C24E294D6762FB0B6F37CB541581F55CA5((&V_2), NULL);
		NullCheck(L_25);
		VirtualActionInvoker1< String_t* >::Invoke(66 /* System.Void TMPro.TMP_Text::set_text(System.String) */, L_25, L_26);
		// m_textMeshPro.color = new Color32(start_color.r, start_color.g, start_color.b, (byte)alpha);
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_27 = V_1;
		NullCheck(L_27);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_28 = L_27->___m_textMeshPro_6;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B* L_29 = (&__this->___U3Cstart_colorU3E5__6_7);
		uint8_t L_30 = L_29->___r_1;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B* L_31 = (&__this->___U3Cstart_colorU3E5__6_7);
		uint8_t L_32 = L_31->___g_2;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B* L_33 = (&__this->___U3Cstart_colorU3E5__6_7);
		uint8_t L_34 = L_33->___b_3;
		float L_35 = __this->___U3CalphaU3E5__7_8;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_36;
		memset((&L_36), 0, sizeof(L_36));
		Color32__ctor_mC9C6B443F0C7CA3F8B174158B2AF6F05E18EAC4E_inline((&L_36), L_30, L_32, L_34, (uint8_t)il2cpp_codegen_cast_floating_point<uint8_t, int32_t, float>(L_35), /*hidden argument*/NULL);
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_37;
		L_37 = Color32_op_Implicit_m203A634DBB77053C9400C68065CA29529103D172_inline(L_36, NULL);
		NullCheck(L_28);
		VirtualActionInvoker1< Color_tD001788D726C3A7F1379BEED0260B9591F440C1F >::Invoke(23 /* System.Void UnityEngine.UI.Graphic::set_color(UnityEngine.Color) */, L_28, L_37);
		// m_floatingText_Transform.position += new Vector3(0, starting_Count * Time.deltaTime, 0);
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_38 = V_1;
		NullCheck(L_38);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_39 = L_38->___m_floatingText_Transform_9;
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_40 = L_39;
		NullCheck(L_40);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_41;
		L_41 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_40, NULL);
		float L_42 = __this->___U3Cstarting_CountU3E5__3_4;
		float L_43;
		L_43 = Time_get_deltaTime_m7AB6BFA101D83E1D8F2EF3D5A128AEE9DDBF1A6D(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_44;
		memset((&L_44), 0, sizeof(L_44));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_44), (0.0f), ((float)il2cpp_codegen_multiply(L_42, L_43)), (0.0f), /*hidden argument*/NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_45;
		L_45 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_41, L_44, NULL);
		NullCheck(L_40);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_40, L_45, NULL);
		// if (!lastPOS.Compare(m_cameraTransform.position, 1000) || !lastRotation.Compare(m_cameraTransform.rotation, 1000))
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_46 = V_1;
		NullCheck(L_46);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_47 = L_46->___lastPOS_11;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_48 = V_1;
		NullCheck(L_48);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_49 = L_48->___m_cameraTransform_10;
		NullCheck(L_49);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_50;
		L_50 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_49, NULL);
		bool L_51;
		L_51 = TMPro_ExtensionMethods_Compare_mA7AB3A35D921F8014C17306CC64D6CFD8F215CA6(L_47, L_50, ((int32_t)1000), NULL);
		if (!L_51)
		{
			goto IL_01c4;
		}
	}
	{
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_52 = V_1;
		NullCheck(L_52);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_53 = L_52->___lastRotation_12;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_54 = V_1;
		NullCheck(L_54);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_55 = L_54->___m_cameraTransform_10;
		NullCheck(L_55);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_56;
		L_56 = Transform_get_rotation_m32AF40CA0D50C797DA639A696F8EAEC7524C179C(L_55, NULL);
		bool L_57;
		L_57 = TMPro_ExtensionMethods_Compare_mFC4E4CDEBF258A3DC7411E7E2395FE58739BF3F7(L_53, L_56, ((int32_t)1000), NULL);
		if (L_57)
		{
			goto IL_022f;
		}
	}

IL_01c4:
	{
		// lastPOS = m_cameraTransform.position;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_58 = V_1;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_59 = V_1;
		NullCheck(L_59);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_60 = L_59->___m_cameraTransform_10;
		NullCheck(L_60);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_61;
		L_61 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_60, NULL);
		NullCheck(L_58);
		L_58->___lastPOS_11 = L_61;
		// lastRotation = m_cameraTransform.rotation;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_62 = V_1;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_63 = V_1;
		NullCheck(L_63);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_64 = L_63->___m_cameraTransform_10;
		NullCheck(L_64);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_65;
		L_65 = Transform_get_rotation_m32AF40CA0D50C797DA639A696F8EAEC7524C179C(L_64, NULL);
		NullCheck(L_62);
		L_62->___lastRotation_12 = L_65;
		// m_floatingText_Transform.rotation = lastRotation;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_66 = V_1;
		NullCheck(L_66);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_67 = L_66->___m_floatingText_Transform_9;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_68 = V_1;
		NullCheck(L_68);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_69 = L_68->___lastRotation_12;
		NullCheck(L_67);
		Transform_set_rotation_m61340DE74726CF0F9946743A727C4D444397331D(L_67, L_69, NULL);
		// Vector3 dir = m_transform.position - lastPOS;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_70 = V_1;
		NullCheck(L_70);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_71 = L_70->___m_transform_8;
		NullCheck(L_71);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_72;
		L_72 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_71, NULL);
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_73 = V_1;
		NullCheck(L_73);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_74 = L_73->___lastPOS_11;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_75;
		L_75 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_72, L_74, NULL);
		V_3 = L_75;
		// m_transform.forward = new Vector3(dir.x, 0, dir.z);
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_76 = V_1;
		NullCheck(L_76);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_77 = L_76->___m_transform_8;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_78 = V_3;
		float L_79 = L_78.___x_2;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_80 = V_3;
		float L_81 = L_80.___z_4;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_82;
		memset((&L_82), 0, sizeof(L_82));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_82), L_79, (0.0f), L_81, /*hidden argument*/NULL);
		NullCheck(L_77);
		Transform_set_forward_mA178B5CF4F0F6133F9AF8ED3A4ECD2C604C60C26(L_77, L_82, NULL);
	}

IL_022f:
	{
		// yield return new WaitForEndOfFrame();
		WaitForEndOfFrame_tE38D80923E3F8380069B423968C25ABE50A46663* L_83 = (WaitForEndOfFrame_tE38D80923E3F8380069B423968C25ABE50A46663*)il2cpp_codegen_object_new(WaitForEndOfFrame_tE38D80923E3F8380069B423968C25ABE50A46663_il2cpp_TypeInfo_var);
		NullCheck(L_83);
		WaitForEndOfFrame__ctor_m4AF7E576C01E6B04443BB898B1AE5D645F7D45AB(L_83, NULL);
		__this->___U3CU3E2__current_1 = L_83;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_83);
		__this->___U3CU3E1__state_0 = 1;
		return (bool)1;
	}

IL_0243:
	{
		__this->___U3CU3E1__state_0 = (-1);
	}

IL_024a:
	{
		// while (current_Count > 0)
		float L_84 = __this->___U3Ccurrent_CountU3E5__4_5;
		if ((((float)L_84) > ((float)(0.0f))))
		{
			goto IL_00a7;
		}
	}
	{
		// yield return new WaitForSeconds(Random.Range(0.1f, 1.0f));
		float L_85;
		L_85 = Random_Range_mF26F26EB446B76823B4815C91FA0907B484DF02B((0.100000001f), (1.0f), NULL);
		WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3* L_86 = (WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3*)il2cpp_codegen_object_new(WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		NullCheck(L_86);
		WaitForSeconds__ctor_m579F95BADEDBAB4B3A7E302C6EE3995926EF2EFC(L_86, L_85, NULL);
		__this->___U3CU3E2__current_1 = L_86;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_86);
		__this->___U3CU3E1__state_0 = 2;
		return (bool)1;
	}

IL_027d:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// m_floatingText_Transform.position = start_pos;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_87 = V_1;
		NullCheck(L_87);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_88 = L_87->___m_floatingText_Transform_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_89 = __this->___U3Cstart_posU3E5__5_6;
		NullCheck(L_88);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_88, L_89, NULL);
		// StartCoroutine(DisplayTextMeshProFloatingText());
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_90 = V_1;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_91 = V_1;
		NullCheck(L_91);
		RuntimeObject* L_92;
		L_92 = TextMeshProFloatingText_DisplayTextMeshProFloatingText_mA1E370089458CD380E9BA7740C2BC2032F084148(L_91, NULL);
		NullCheck(L_90);
		Coroutine_t85EA685566A254C23F3FD77AB5BDFFFF8799596B* L_93;
		L_93 = MonoBehaviour_StartCoroutine_m4CAFF732AA28CD3BDC5363B44A863575530EC812(L_90, L_92, NULL);
		// }
		return (bool)0;
	}
}
// System.Object TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshProFloatingText>d__12::System.Collections.Generic.IEnumerator<System.Object>.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CDisplayTextMeshProFloatingTextU3Ed__12_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_m85AD23CB0E7EC78A4A4B07652C7DCB90B27B5A52 (U3CDisplayTextMeshProFloatingTextU3Ed__12_tF5C7EAAA1230794883FCB2D5C767C12F48C50C76* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
// System.Void TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshProFloatingText>d__12::System.Collections.IEnumerator.Reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDisplayTextMeshProFloatingTextU3Ed__12_System_Collections_IEnumerator_Reset_mDE1C8E5AAFA2BE515D1868F76D4921E627F51112 (U3CDisplayTextMeshProFloatingTextU3Ed__12_tF5C7EAAA1230794883FCB2D5C767C12F48C50C76* __this, const RuntimeMethod* method) 
{
	{
		NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A* L_0 = (NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A_il2cpp_TypeInfo_var)));
		NullCheck(L_0);
		NotSupportedException__ctor_m1398D0CDE19B36AA3DE9392879738C1EA2439CDF(L_0, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_0, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&U3CDisplayTextMeshProFloatingTextU3Ed__12_System_Collections_IEnumerator_Reset_mDE1C8E5AAFA2BE515D1868F76D4921E627F51112_RuntimeMethod_var)));
	}
}
// System.Object TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshProFloatingText>d__12::System.Collections.IEnumerator.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CDisplayTextMeshProFloatingTextU3Ed__12_System_Collections_IEnumerator_get_Current_m8FA714E4D7408B556C1A280744593DCD07D7B9D0 (U3CDisplayTextMeshProFloatingTextU3Ed__12_tF5C7EAAA1230794883FCB2D5C767C12F48C50C76* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshFloatingText>d__13::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDisplayTextMeshFloatingTextU3Ed__13__ctor_m093946C77D9946811A7799D06F8D7170FB42A8EB (U3CDisplayTextMeshFloatingTextU3Ed__13_tFC924C56A4F46E6D8D46B95035B8A6D215A180A1* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) 
{
	{
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		int32_t L_0 = ___U3CU3E1__state0;
		__this->___U3CU3E1__state_0 = L_0;
		return;
	}
}
// System.Void TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshFloatingText>d__13::System.IDisposable.Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDisplayTextMeshFloatingTextU3Ed__13_System_IDisposable_Dispose_m11B84CE30C7048FC3BA409ABDF39AFFEA7AE188D (U3CDisplayTextMeshFloatingTextU3Ed__13_tFC924C56A4F46E6D8D46B95035B8A6D215A180A1* __this, const RuntimeMethod* method) 
{
	{
		return;
	}
}
// System.Boolean TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshFloatingText>d__13::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool U3CDisplayTextMeshFloatingTextU3Ed__13_MoveNext_m947F374D2AC3CE949148BC815B2ABBBD8E94D594 (U3CDisplayTextMeshFloatingTextU3Ed__13_tFC924C56A4F46E6D8D46B95035B8A6D215A180A1* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WaitForEndOfFrame_tE38D80923E3F8380069B423968C25ABE50A46663_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* V_1 = NULL;
	int32_t V_2 = 0;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_3;
	memset((&V_3), 0, sizeof(V_3));
	{
		int32_t L_0 = __this->___U3CU3E1__state_0;
		V_0 = L_0;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_1 = __this->___U3CU3E4__this_2;
		V_1 = L_1;
		int32_t L_2 = V_0;
		switch (L_2)
		{
			case 0:
			{
				goto IL_0022;
			}
			case 1:
			{
				goto IL_0243;
			}
			case 2:
			{
				goto IL_027d;
			}
		}
	}
	{
		return (bool)0;
	}

IL_0022:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// float CountDuration = 2.0f; // How long is the countdown alive.
		__this->___U3CCountDurationU3E5__2_3 = (2.0f);
		// float starting_Count = Random.Range(5f, 20f); // At what number is the counter starting at.
		float L_3;
		L_3 = Random_Range_mF26F26EB446B76823B4815C91FA0907B484DF02B((5.0f), (20.0f), NULL);
		__this->___U3Cstarting_CountU3E5__3_4 = L_3;
		// float current_Count = starting_Count;
		float L_4 = __this->___U3Cstarting_CountU3E5__3_4;
		__this->___U3Ccurrent_CountU3E5__4_5 = L_4;
		// Vector3 start_pos = m_floatingText_Transform.position;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_5 = V_1;
		NullCheck(L_5);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_6 = L_5->___m_floatingText_Transform_9;
		NullCheck(L_6);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_7;
		L_7 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_6, NULL);
		__this->___U3Cstart_posU3E5__5_6 = L_7;
		// Color32 start_color = m_textMesh.color;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_8 = V_1;
		NullCheck(L_8);
		TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* L_9 = L_8->___m_textMesh_7;
		NullCheck(L_9);
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_10;
		L_10 = TextMesh_get_color_m128E5D16AA72D5284C70957253DEAEE4FBEB023E(L_9, NULL);
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_11;
		L_11 = Color32_op_Implicit_m7EFA0B83AD1AE15567E9BC2FA2B8E66D3BFE1395_inline(L_10, NULL);
		__this->___U3Cstart_colorU3E5__6_7 = L_11;
		// float alpha = 255;
		__this->___U3CalphaU3E5__7_8 = (255.0f);
		// int int_counter = 0;
		V_2 = 0;
		// float fadeDuration = 3 / starting_Count * CountDuration;
		float L_12 = __this->___U3Cstarting_CountU3E5__3_4;
		float L_13 = __this->___U3CCountDurationU3E5__2_3;
		__this->___U3CfadeDurationU3E5__8_9 = ((float)il2cpp_codegen_multiply(((float)((3.0f)/L_12)), L_13));
		goto IL_024a;
	}

IL_00a7:
	{
		// current_Count -= (Time.deltaTime / CountDuration) * starting_Count;
		float L_14 = __this->___U3Ccurrent_CountU3E5__4_5;
		float L_15;
		L_15 = Time_get_deltaTime_m7AB6BFA101D83E1D8F2EF3D5A128AEE9DDBF1A6D(NULL);
		float L_16 = __this->___U3CCountDurationU3E5__2_3;
		float L_17 = __this->___U3Cstarting_CountU3E5__3_4;
		__this->___U3Ccurrent_CountU3E5__4_5 = ((float)il2cpp_codegen_subtract(L_14, ((float)il2cpp_codegen_multiply(((float)(L_15/L_16)), L_17))));
		// if (current_Count <= 3)
		float L_18 = __this->___U3Ccurrent_CountU3E5__4_5;
		if ((!(((float)L_18) <= ((float)(3.0f)))))
		{
			goto IL_0102;
		}
	}
	{
		// alpha = Mathf.Clamp(alpha - (Time.deltaTime / fadeDuration) * 255, 0, 255);
		float L_19 = __this->___U3CalphaU3E5__7_8;
		float L_20;
		L_20 = Time_get_deltaTime_m7AB6BFA101D83E1D8F2EF3D5A128AEE9DDBF1A6D(NULL);
		float L_21 = __this->___U3CfadeDurationU3E5__8_9;
		float L_22;
		L_22 = Mathf_Clamp_m154E404AF275A3B2EC99ECAA3879B4CB9F0606DC_inline(((float)il2cpp_codegen_subtract(L_19, ((float)il2cpp_codegen_multiply(((float)(L_20/L_21)), (255.0f))))), (0.0f), (255.0f), NULL);
		__this->___U3CalphaU3E5__7_8 = L_22;
	}

IL_0102:
	{
		// int_counter = (int)current_Count;
		float L_23 = __this->___U3Ccurrent_CountU3E5__4_5;
		V_2 = il2cpp_codegen_cast_double_to_int<int32_t>(L_23);
		// m_textMesh.text = int_counter.ToString();
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_24 = V_1;
		NullCheck(L_24);
		TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* L_25 = L_24->___m_textMesh_7;
		String_t* L_26;
		L_26 = Int32_ToString_m030E01C24E294D6762FB0B6F37CB541581F55CA5((&V_2), NULL);
		NullCheck(L_25);
		TextMesh_set_text_mDF79D39638ED82797D0B0B3BB9E6B10712F8EA9E(L_25, L_26, NULL);
		// m_textMesh.color = new Color32(start_color.r, start_color.g, start_color.b, (byte)alpha);
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_27 = V_1;
		NullCheck(L_27);
		TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* L_28 = L_27->___m_textMesh_7;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B* L_29 = (&__this->___U3Cstart_colorU3E5__6_7);
		uint8_t L_30 = L_29->___r_1;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B* L_31 = (&__this->___U3Cstart_colorU3E5__6_7);
		uint8_t L_32 = L_31->___g_2;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B* L_33 = (&__this->___U3Cstart_colorU3E5__6_7);
		uint8_t L_34 = L_33->___b_3;
		float L_35 = __this->___U3CalphaU3E5__7_8;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_36;
		memset((&L_36), 0, sizeof(L_36));
		Color32__ctor_mC9C6B443F0C7CA3F8B174158B2AF6F05E18EAC4E_inline((&L_36), L_30, L_32, L_34, (uint8_t)il2cpp_codegen_cast_floating_point<uint8_t, int32_t, float>(L_35), /*hidden argument*/NULL);
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_37;
		L_37 = Color32_op_Implicit_m203A634DBB77053C9400C68065CA29529103D172_inline(L_36, NULL);
		NullCheck(L_28);
		TextMesh_set_color_mF08F30C3CD797C16289225B567724B9F07DC641E(L_28, L_37, NULL);
		// m_floatingText_Transform.position += new Vector3(0, starting_Count * Time.deltaTime, 0);
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_38 = V_1;
		NullCheck(L_38);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_39 = L_38->___m_floatingText_Transform_9;
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_40 = L_39;
		NullCheck(L_40);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_41;
		L_41 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_40, NULL);
		float L_42 = __this->___U3Cstarting_CountU3E5__3_4;
		float L_43;
		L_43 = Time_get_deltaTime_m7AB6BFA101D83E1D8F2EF3D5A128AEE9DDBF1A6D(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_44;
		memset((&L_44), 0, sizeof(L_44));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_44), (0.0f), ((float)il2cpp_codegen_multiply(L_42, L_43)), (0.0f), /*hidden argument*/NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_45;
		L_45 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_41, L_44, NULL);
		NullCheck(L_40);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_40, L_45, NULL);
		// if (!lastPOS.Compare(m_cameraTransform.position, 1000) || !lastRotation.Compare(m_cameraTransform.rotation, 1000))
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_46 = V_1;
		NullCheck(L_46);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_47 = L_46->___lastPOS_11;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_48 = V_1;
		NullCheck(L_48);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_49 = L_48->___m_cameraTransform_10;
		NullCheck(L_49);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_50;
		L_50 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_49, NULL);
		bool L_51;
		L_51 = TMPro_ExtensionMethods_Compare_mA7AB3A35D921F8014C17306CC64D6CFD8F215CA6(L_47, L_50, ((int32_t)1000), NULL);
		if (!L_51)
		{
			goto IL_01c4;
		}
	}
	{
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_52 = V_1;
		NullCheck(L_52);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_53 = L_52->___lastRotation_12;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_54 = V_1;
		NullCheck(L_54);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_55 = L_54->___m_cameraTransform_10;
		NullCheck(L_55);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_56;
		L_56 = Transform_get_rotation_m32AF40CA0D50C797DA639A696F8EAEC7524C179C(L_55, NULL);
		bool L_57;
		L_57 = TMPro_ExtensionMethods_Compare_mFC4E4CDEBF258A3DC7411E7E2395FE58739BF3F7(L_53, L_56, ((int32_t)1000), NULL);
		if (L_57)
		{
			goto IL_022f;
		}
	}

IL_01c4:
	{
		// lastPOS = m_cameraTransform.position;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_58 = V_1;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_59 = V_1;
		NullCheck(L_59);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_60 = L_59->___m_cameraTransform_10;
		NullCheck(L_60);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_61;
		L_61 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_60, NULL);
		NullCheck(L_58);
		L_58->___lastPOS_11 = L_61;
		// lastRotation = m_cameraTransform.rotation;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_62 = V_1;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_63 = V_1;
		NullCheck(L_63);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_64 = L_63->___m_cameraTransform_10;
		NullCheck(L_64);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_65;
		L_65 = Transform_get_rotation_m32AF40CA0D50C797DA639A696F8EAEC7524C179C(L_64, NULL);
		NullCheck(L_62);
		L_62->___lastRotation_12 = L_65;
		// m_floatingText_Transform.rotation = lastRotation;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_66 = V_1;
		NullCheck(L_66);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_67 = L_66->___m_floatingText_Transform_9;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_68 = V_1;
		NullCheck(L_68);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_69 = L_68->___lastRotation_12;
		NullCheck(L_67);
		Transform_set_rotation_m61340DE74726CF0F9946743A727C4D444397331D(L_67, L_69, NULL);
		// Vector3 dir = m_transform.position - lastPOS;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_70 = V_1;
		NullCheck(L_70);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_71 = L_70->___m_transform_8;
		NullCheck(L_71);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_72;
		L_72 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_71, NULL);
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_73 = V_1;
		NullCheck(L_73);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_74 = L_73->___lastPOS_11;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_75;
		L_75 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_72, L_74, NULL);
		V_3 = L_75;
		// m_transform.forward = new Vector3(dir.x, 0, dir.z);
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_76 = V_1;
		NullCheck(L_76);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_77 = L_76->___m_transform_8;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_78 = V_3;
		float L_79 = L_78.___x_2;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_80 = V_3;
		float L_81 = L_80.___z_4;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_82;
		memset((&L_82), 0, sizeof(L_82));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_82), L_79, (0.0f), L_81, /*hidden argument*/NULL);
		NullCheck(L_77);
		Transform_set_forward_mA178B5CF4F0F6133F9AF8ED3A4ECD2C604C60C26(L_77, L_82, NULL);
	}

IL_022f:
	{
		// yield return new WaitForEndOfFrame();
		WaitForEndOfFrame_tE38D80923E3F8380069B423968C25ABE50A46663* L_83 = (WaitForEndOfFrame_tE38D80923E3F8380069B423968C25ABE50A46663*)il2cpp_codegen_object_new(WaitForEndOfFrame_tE38D80923E3F8380069B423968C25ABE50A46663_il2cpp_TypeInfo_var);
		NullCheck(L_83);
		WaitForEndOfFrame__ctor_m4AF7E576C01E6B04443BB898B1AE5D645F7D45AB(L_83, NULL);
		__this->___U3CU3E2__current_1 = L_83;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_83);
		__this->___U3CU3E1__state_0 = 1;
		return (bool)1;
	}

IL_0243:
	{
		__this->___U3CU3E1__state_0 = (-1);
	}

IL_024a:
	{
		// while (current_Count > 0)
		float L_84 = __this->___U3Ccurrent_CountU3E5__4_5;
		if ((((float)L_84) > ((float)(0.0f))))
		{
			goto IL_00a7;
		}
	}
	{
		// yield return new WaitForSeconds(Random.Range(0.1f, 1.0f));
		float L_85;
		L_85 = Random_Range_mF26F26EB446B76823B4815C91FA0907B484DF02B((0.100000001f), (1.0f), NULL);
		WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3* L_86 = (WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3*)il2cpp_codegen_object_new(WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		NullCheck(L_86);
		WaitForSeconds__ctor_m579F95BADEDBAB4B3A7E302C6EE3995926EF2EFC(L_86, L_85, NULL);
		__this->___U3CU3E2__current_1 = L_86;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_86);
		__this->___U3CU3E1__state_0 = 2;
		return (bool)1;
	}

IL_027d:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// m_floatingText_Transform.position = start_pos;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_87 = V_1;
		NullCheck(L_87);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_88 = L_87->___m_floatingText_Transform_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_89 = __this->___U3Cstart_posU3E5__5_6;
		NullCheck(L_88);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_88, L_89, NULL);
		// StartCoroutine(DisplayTextMeshFloatingText());
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_90 = V_1;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_91 = V_1;
		NullCheck(L_91);
		RuntimeObject* L_92;
		L_92 = TextMeshProFloatingText_DisplayTextMeshFloatingText_mA02B20CF33E43FE99FD5F1B90F7F350262F0BEBE(L_91, NULL);
		NullCheck(L_90);
		Coroutine_t85EA685566A254C23F3FD77AB5BDFFFF8799596B* L_93;
		L_93 = MonoBehaviour_StartCoroutine_m4CAFF732AA28CD3BDC5363B44A863575530EC812(L_90, L_92, NULL);
		// }
		return (bool)0;
	}
}
// System.Object TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshFloatingText>d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CDisplayTextMeshFloatingTextU3Ed__13_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_mA09D1AB4BEF083569018FF550A5D0E651CF9F2CD (U3CDisplayTextMeshFloatingTextU3Ed__13_tFC924C56A4F46E6D8D46B95035B8A6D215A180A1* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
// System.Void TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshFloatingText>d__13::System.Collections.IEnumerator.Reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CDisplayTextMeshFloatingTextU3Ed__13_System_Collections_IEnumerator_Reset_mC3C5ED94D6E74FB8551D2654A9279CF3E9E1DEBE (U3CDisplayTextMeshFloatingTextU3Ed__13_tFC924C56A4F46E6D8D46B95035B8A6D215A180A1* __this, const RuntimeMethod* method) 
{
	{
		NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A* L_0 = (NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A_il2cpp_TypeInfo_var)));
		NullCheck(L_0);
		NotSupportedException__ctor_m1398D0CDE19B36AA3DE9392879738C1EA2439CDF(L_0, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_0, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&U3CDisplayTextMeshFloatingTextU3Ed__13_System_Collections_IEnumerator_Reset_mC3C5ED94D6E74FB8551D2654A9279CF3E9E1DEBE_RuntimeMethod_var)));
	}
}
// System.Object TMPro.Examples.TextMeshProFloatingText/<DisplayTextMeshFloatingText>d__13::System.Collections.IEnumerator.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CDisplayTextMeshFloatingTextU3Ed__13_System_Collections_IEnumerator_get_Current_mB487D32B2C46BA2099D42B89F2275CC454E4483D (U3CDisplayTextMeshFloatingTextU3Ed__13_tFC924C56A4F46E6D8D46B95035B8A6D215A180A1* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.TextMeshSpawner::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TextMeshSpawner_Awake_m9A84A570D2582918A6B1287139527E9AB2CF088D (TextMeshSpawner_tB6905931E9BE4D7A2A2E37A51E221A7B462D75BB* __this, const RuntimeMethod* method) 
{
	{
		// }
		return;
	}
}
// System.Void TMPro.Examples.TextMeshSpawner::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TextMeshSpawner_Start_m3EE98071CA27A18904B859A0A6B215BDFEB50A66 (TextMeshSpawner_tB6905931E9BE4D7A2A2E37A51E221A7B462D75BB* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponent_TisRenderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF_mC91ACC92AD57CA6CA00991DAF1DB3830BCE07AF8_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_AddComponent_TisTextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31_m3DBA7F56D8D880227B1D70FAA3DF6988A4EE69F1_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_AddComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_mD3BE0A75BBE971456A1D7C8C6F6688A094A81C9C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_AddComponent_TisTextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8_mFAD74D91BCACF9C3FAE6960EB58D5C346DDBD9C2_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_t76FEDD663AB33C991A9C9A23129337651094216F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral15196F05B117690F3E12E56AA0C43803EA0D2A46);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* V_1 = NULL;
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* V_2 = NULL;
	{
		// for (int i = 0; i < NumberOfNPC; i++)
		V_0 = 0;
		goto IL_0159;
	}

IL_0007:
	{
		// if (SpawnType == 0)
		int32_t L_0 = __this->___SpawnType_4;
		if (L_0)
		{
			goto IL_00a3;
		}
	}
	{
		// GameObject go = new GameObject(); //"NPC " + i);
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_1 = (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*)il2cpp_codegen_object_new(GameObject_t76FEDD663AB33C991A9C9A23129337651094216F_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		GameObject__ctor_m7D0340DE160786E6EFA8DABD39EC3B694DA30AAD(L_1, NULL);
		V_1 = L_1;
		// go.transform.position = new Vector3(Random.Range(-95f, 95f), 0.5f, Random.Range(-95f, 95f));
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_2 = V_1;
		NullCheck(L_2);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_3;
		L_3 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_2, NULL);
		float L_4;
		L_4 = Random_Range_mF26F26EB446B76823B4815C91FA0907B484DF02B((-95.0f), (95.0f), NULL);
		float L_5;
		L_5 = Random_Range_mF26F26EB446B76823B4815C91FA0907B484DF02B((-95.0f), (95.0f), NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_6;
		memset((&L_6), 0, sizeof(L_6));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_6), L_4, (0.5f), L_5, /*hidden argument*/NULL);
		NullCheck(L_3);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_3, L_6, NULL);
		// TextMeshPro textMeshPro = go.AddComponent<TextMeshPro>();
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_7 = V_1;
		NullCheck(L_7);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_8;
		L_8 = GameObject_AddComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_mD3BE0A75BBE971456A1D7C8C6F6688A094A81C9C(L_7, GameObject_AddComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_mD3BE0A75BBE971456A1D7C8C6F6688A094A81C9C_RuntimeMethod_var);
		// textMeshPro.fontSize = 96;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_9 = L_8;
		NullCheck(L_9);
		TMP_Text_set_fontSize_m1C3A3BA2BC88E5E1D89375FD35A0AA91E75D3AAD(L_9, (96.0f), NULL);
		// textMeshPro.text = "!";
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_10 = L_9;
		NullCheck(L_10);
		VirtualActionInvoker1< String_t* >::Invoke(66 /* System.Void TMPro.TMP_Text::set_text(System.String) */, L_10, _stringLiteral15196F05B117690F3E12E56AA0C43803EA0D2A46);
		// textMeshPro.color = new Color32(255, 255, 0, 255);
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_11;
		memset((&L_11), 0, sizeof(L_11));
		Color32__ctor_mC9C6B443F0C7CA3F8B174158B2AF6F05E18EAC4E_inline((&L_11), (uint8_t)((int32_t)255), (uint8_t)((int32_t)255), (uint8_t)0, (uint8_t)((int32_t)255), /*hidden argument*/NULL);
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_12;
		L_12 = Color32_op_Implicit_m203A634DBB77053C9400C68065CA29529103D172_inline(L_11, NULL);
		NullCheck(L_10);
		VirtualActionInvoker1< Color_tD001788D726C3A7F1379BEED0260B9591F440C1F >::Invoke(23 /* System.Void UnityEngine.UI.Graphic::set_color(UnityEngine.Color) */, L_10, L_12);
		// floatingText_Script = go.AddComponent<TextMeshProFloatingText>();
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_13 = V_1;
		NullCheck(L_13);
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_14;
		L_14 = GameObject_AddComponent_TisTextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31_m3DBA7F56D8D880227B1D70FAA3DF6988A4EE69F1(L_13, GameObject_AddComponent_TisTextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31_m3DBA7F56D8D880227B1D70FAA3DF6988A4EE69F1_RuntimeMethod_var);
		__this->___floatingText_Script_7 = L_14;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___floatingText_Script_7), (void*)L_14);
		// floatingText_Script.SpawnType = 0;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_15 = __this->___floatingText_Script_7;
		NullCheck(L_15);
		L_15->___SpawnType_13 = 0;
		goto IL_0155;
	}

IL_00a3:
	{
		// GameObject go = new GameObject(); //"NPC " + i);
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_16 = (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*)il2cpp_codegen_object_new(GameObject_t76FEDD663AB33C991A9C9A23129337651094216F_il2cpp_TypeInfo_var);
		NullCheck(L_16);
		GameObject__ctor_m7D0340DE160786E6EFA8DABD39EC3B694DA30AAD(L_16, NULL);
		V_2 = L_16;
		// go.transform.position = new Vector3(Random.Range(-95f, 95f), 0.5f, Random.Range(-95f, 95f));
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_17 = V_2;
		NullCheck(L_17);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_18;
		L_18 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_17, NULL);
		float L_19;
		L_19 = Random_Range_mF26F26EB446B76823B4815C91FA0907B484DF02B((-95.0f), (95.0f), NULL);
		float L_20;
		L_20 = Random_Range_mF26F26EB446B76823B4815C91FA0907B484DF02B((-95.0f), (95.0f), NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_21;
		memset((&L_21), 0, sizeof(L_21));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_21), L_19, (0.5f), L_20, /*hidden argument*/NULL);
		NullCheck(L_18);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_18, L_21, NULL);
		// TextMesh textMesh = go.AddComponent<TextMesh>();
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_22 = V_2;
		NullCheck(L_22);
		TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* L_23;
		L_23 = GameObject_AddComponent_TisTextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8_mFAD74D91BCACF9C3FAE6960EB58D5C346DDBD9C2(L_22, GameObject_AddComponent_TisTextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8_mFAD74D91BCACF9C3FAE6960EB58D5C346DDBD9C2_RuntimeMethod_var);
		// textMesh.GetComponent<Renderer>().sharedMaterial = TheFont.material;
		TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* L_24 = L_23;
		NullCheck(L_24);
		Renderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF* L_25;
		L_25 = Component_GetComponent_TisRenderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF_mC91ACC92AD57CA6CA00991DAF1DB3830BCE07AF8(L_24, Component_GetComponent_TisRenderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF_mC91ACC92AD57CA6CA00991DAF1DB3830BCE07AF8_RuntimeMethod_var);
		Font_tC95270EA3198038970422D78B74A7F2E218A96B6* L_26 = __this->___TheFont_6;
		NullCheck(L_26);
		Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* L_27;
		L_27 = Font_get_material_m61ABDEC14C6D659DDC5A4F080023699116C17364(L_26, NULL);
		NullCheck(L_25);
		Renderer_set_sharedMaterial_m5E842F9A06CFB7B77656EB319881CB4B3E8E4288(L_25, L_27, NULL);
		// textMesh.font = TheFont;
		TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* L_28 = L_24;
		Font_tC95270EA3198038970422D78B74A7F2E218A96B6* L_29 = __this->___TheFont_6;
		NullCheck(L_28);
		TextMesh_set_font_m7E407CAEDBB382B95B70069D8FAB8A9E74EAAA74(L_28, L_29, NULL);
		// textMesh.anchor = TextAnchor.LowerCenter;
		TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* L_30 = L_28;
		NullCheck(L_30);
		TextMesh_set_anchor_m3FCB7C4B1FF66CE189B56076C0306AFE984FCD32(L_30, 7, NULL);
		// textMesh.fontSize = 96;
		TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* L_31 = L_30;
		NullCheck(L_31);
		TextMesh_set_fontSize_mAB9F7FFC0E4DB759B786F6A9357B18C86015498B(L_31, ((int32_t)96), NULL);
		// textMesh.color = new Color32(255, 255, 0, 255);
		TextMesh_t7E1981C7B03E50D5CA5A3AD5B0D9BB0AB6EE91F8* L_32 = L_31;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_33;
		memset((&L_33), 0, sizeof(L_33));
		Color32__ctor_mC9C6B443F0C7CA3F8B174158B2AF6F05E18EAC4E_inline((&L_33), (uint8_t)((int32_t)255), (uint8_t)((int32_t)255), (uint8_t)0, (uint8_t)((int32_t)255), /*hidden argument*/NULL);
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_34;
		L_34 = Color32_op_Implicit_m203A634DBB77053C9400C68065CA29529103D172_inline(L_33, NULL);
		NullCheck(L_32);
		TextMesh_set_color_mF08F30C3CD797C16289225B567724B9F07DC641E(L_32, L_34, NULL);
		// textMesh.text = "!";
		NullCheck(L_32);
		TextMesh_set_text_mDF79D39638ED82797D0B0B3BB9E6B10712F8EA9E(L_32, _stringLiteral15196F05B117690F3E12E56AA0C43803EA0D2A46, NULL);
		// floatingText_Script = go.AddComponent<TextMeshProFloatingText>();
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_35 = V_2;
		NullCheck(L_35);
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_36;
		L_36 = GameObject_AddComponent_TisTextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31_m3DBA7F56D8D880227B1D70FAA3DF6988A4EE69F1(L_35, GameObject_AddComponent_TisTextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31_m3DBA7F56D8D880227B1D70FAA3DF6988A4EE69F1_RuntimeMethod_var);
		__this->___floatingText_Script_7 = L_36;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___floatingText_Script_7), (void*)L_36);
		// floatingText_Script.SpawnType = 1;
		TextMeshProFloatingText_t833773B79A4826E78EDF2799C157B0EC3ACACB31* L_37 = __this->___floatingText_Script_7;
		NullCheck(L_37);
		L_37->___SpawnType_13 = 1;
	}

IL_0155:
	{
		// for (int i = 0; i < NumberOfNPC; i++)
		int32_t L_38 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add(L_38, 1));
	}

IL_0159:
	{
		// for (int i = 0; i < NumberOfNPC; i++)
		int32_t L_39 = V_0;
		int32_t L_40 = __this->___NumberOfNPC_5;
		if ((((int32_t)L_39) < ((int32_t)L_40)))
		{
			goto IL_0007;
		}
	}
	{
		// }
		return;
	}
}
// System.Void TMPro.Examples.TextMeshSpawner::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TextMeshSpawner__ctor_m8409A62C31C4A6B6CEC2F48F1DC9777460C28233 (TextMeshSpawner_tB6905931E9BE4D7A2A2E37A51E221A7B462D75BB* __this, const RuntimeMethod* method) 
{
	{
		// public int NumberOfNPC = 12;
		__this->___NumberOfNPC_5 = ((int32_t)12);
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.TMPro_InstructionOverlay::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMPro_InstructionOverlay_Awake_m0F92D44F62A9AC086DE3DF1E4C7BFAF645EE7084 (TMPro_InstructionOverlay_t1CFD12C64F70D5D2FBE29466015C02776A406B62* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_AddComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_mD3BE0A75BBE971456A1D7C8C6F6688A094A81C9C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_GetComponent_TisTextContainer_t949A6EBEE5C8832723E73D8D3DCF4C8D0B3D7F3C_mA04134D48462B7543775CE11D71859B1D2A99872_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_t76FEDD663AB33C991A9C9A23129337651094216F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Resources_Load_TisMaterial_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3_m28782CC70624922DAF3B0FB13930E4EB59848128_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Resources_Load_TisTMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160_m4C7F47B73C641ED180784E089759867A85127C13_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral269F8BFBE6C7517C00380B92291D0799AAB2F285);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral9ECD13393A1BC799BB4763A4E4CD5B53E220C53A);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralA6107EE62A5874EF8D2DEAC7D3C0A9F07B89E096);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralAB3448E21FA53C63C06270903A13B17D02935BE0);
		s_Il2CppMethodInitialized = true;
	}
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* V_0 = NULL;
	{
		// if (!enabled)
		bool L_0;
		L_0 = Behaviour_get_enabled_mAAC9F15E9EBF552217A5AE2681589CC0BFA300C1(__this, NULL);
		if (L_0)
		{
			goto IL_0009;
		}
	}
	{
		// return;
		return;
	}

IL_0009:
	{
		// m_camera = Camera.main;
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_1;
		L_1 = Camera_get_main_mF222B707D3BF8CC9C7544609EFC71CFB62E81D43(NULL);
		__this->___m_camera_9 = L_1;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_camera_9), (void*)L_1);
		// GameObject frameCounter = new GameObject("Frame Counter");
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_2 = (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*)il2cpp_codegen_object_new(GameObject_t76FEDD663AB33C991A9C9A23129337651094216F_il2cpp_TypeInfo_var);
		NullCheck(L_2);
		GameObject__ctor_m37D512B05D292F954792225E6C6EEE95293A9B88(L_2, _stringLiteralA6107EE62A5874EF8D2DEAC7D3C0A9F07B89E096, NULL);
		V_0 = L_2;
		// m_frameCounter_transform = frameCounter.transform;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_3 = V_0;
		NullCheck(L_3);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_4;
		L_4 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_3, NULL);
		__this->___m_frameCounter_transform_8 = L_4;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_frameCounter_transform_8), (void*)L_4);
		// m_frameCounter_transform.parent = m_camera.transform;
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_5 = __this->___m_frameCounter_transform_8;
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_6 = __this->___m_camera_9;
		NullCheck(L_6);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_7;
		L_7 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_6, NULL);
		NullCheck(L_5);
		Transform_set_parent_m9BD5E563B539DD5BEC342736B03F97B38A243234(L_5, L_7, NULL);
		// m_frameCounter_transform.localRotation = Quaternion.identity;
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_8 = __this->___m_frameCounter_transform_8;
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_9;
		L_9 = Quaternion_get_identity_mB9CAEEB21BC81352CBF32DB9664BFC06FA7EA27B_inline(NULL);
		NullCheck(L_8);
		Transform_set_localRotation_mAB4A011D134BA58AB780BECC0025CA65F16185FA(L_8, L_9, NULL);
		// m_TextMeshPro = frameCounter.AddComponent<TextMeshPro>();
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_10 = V_0;
		NullCheck(L_10);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_11;
		L_11 = GameObject_AddComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_mD3BE0A75BBE971456A1D7C8C6F6688A094A81C9C(L_10, GameObject_AddComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_mD3BE0A75BBE971456A1D7C8C6F6688A094A81C9C_RuntimeMethod_var);
		__this->___m_TextMeshPro_6 = L_11;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_TextMeshPro_6), (void*)L_11);
		// m_TextMeshPro.font = Resources.Load<TMP_FontAsset>("Fonts & Materials/LiberationSans SDF");
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_12 = __this->___m_TextMeshPro_6;
		TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160* L_13;
		L_13 = Resources_Load_TisTMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160_m4C7F47B73C641ED180784E089759867A85127C13(_stringLiteralAB3448E21FA53C63C06270903A13B17D02935BE0, Resources_Load_TisTMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160_m4C7F47B73C641ED180784E089759867A85127C13_RuntimeMethod_var);
		NullCheck(L_12);
		TMP_Text_set_font_mC55E4A8C1C09595031384B35F2C2FB2FC3479E83(L_12, L_13, NULL);
		// m_TextMeshPro.fontSharedMaterial = Resources.Load<Material>("Fonts & Materials/LiberationSans SDF - Overlay");
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_14 = __this->___m_TextMeshPro_6;
		Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* L_15;
		L_15 = Resources_Load_TisMaterial_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3_m28782CC70624922DAF3B0FB13930E4EB59848128(_stringLiteral9ECD13393A1BC799BB4763A4E4CD5B53E220C53A, Resources_Load_TisMaterial_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3_m28782CC70624922DAF3B0FB13930E4EB59848128_RuntimeMethod_var);
		NullCheck(L_14);
		VirtualActionInvoker1< Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* >::Invoke(68 /* System.Void TMPro.TMP_Text::set_fontSharedMaterial(UnityEngine.Material) */, L_14, L_15);
		// m_TextMeshPro.fontSize = 30;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_16 = __this->___m_TextMeshPro_6;
		NullCheck(L_16);
		TMP_Text_set_fontSize_m1C3A3BA2BC88E5E1D89375FD35A0AA91E75D3AAD(L_16, (30.0f), NULL);
		// m_TextMeshPro.isOverlay = true;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_17 = __this->___m_TextMeshPro_6;
		NullCheck(L_17);
		TMP_Text_set_isOverlay_m0DA2AC113AE402CA25097641AD38D0822C6D5561(L_17, (bool)1, NULL);
		// m_textContainer = frameCounter.GetComponent<TextContainer>();
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_18 = V_0;
		NullCheck(L_18);
		TextContainer_t949A6EBEE5C8832723E73D8D3DCF4C8D0B3D7F3C* L_19;
		L_19 = GameObject_GetComponent_TisTextContainer_t949A6EBEE5C8832723E73D8D3DCF4C8D0B3D7F3C_mA04134D48462B7543775CE11D71859B1D2A99872(L_18, GameObject_GetComponent_TisTextContainer_t949A6EBEE5C8832723E73D8D3DCF4C8D0B3D7F3C_mA04134D48462B7543775CE11D71859B1D2A99872_RuntimeMethod_var);
		__this->___m_textContainer_7 = L_19;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_textContainer_7), (void*)L_19);
		// Set_FrameCounter_Position(AnchorPosition);
		int32_t L_20 = __this->___AnchorPosition_4;
		TMPro_InstructionOverlay_Set_FrameCounter_Position_m3CC1B812C740BAE87C6B5CA94DC64E6131F42A7C(__this, L_20, NULL);
		// m_TextMeshPro.text = instructions;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_21 = __this->___m_TextMeshPro_6;
		NullCheck(L_21);
		VirtualActionInvoker1< String_t* >::Invoke(66 /* System.Void TMPro.TMP_Text::set_text(System.String) */, L_21, _stringLiteral269F8BFBE6C7517C00380B92291D0799AAB2F285);
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMPro_InstructionOverlay::Set_FrameCounter_Position(TMPro.Examples.TMPro_InstructionOverlay/FpsCounterAnchorPositions)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMPro_InstructionOverlay_Set_FrameCounter_Position_m3CC1B812C740BAE87C6B5CA94DC64E6131F42A7C (TMPro_InstructionOverlay_t1CFD12C64F70D5D2FBE29466015C02776A406B62* __this, int32_t ___anchor_position0, const RuntimeMethod* method) 
{
	{
		int32_t L_0 = ___anchor_position0;
		switch (L_0)
		{
			case 0:
			{
				goto IL_0017;
			}
			case 1:
			{
				goto IL_004e;
			}
			case 2:
			{
				goto IL_0085;
			}
			case 3:
			{
				goto IL_00bc;
			}
		}
	}
	{
		return;
	}

IL_0017:
	{
		// m_textContainer.anchorPosition = TextContainerAnchors.TopLeft;
		TextContainer_t949A6EBEE5C8832723E73D8D3DCF4C8D0B3D7F3C* L_1 = __this->___m_textContainer_7;
		NullCheck(L_1);
		TextContainer_set_anchorPosition_mA915529616A0B4679FAAA6183FC194597E03EA50(L_1, 0, NULL);
		// m_frameCounter_transform.position = m_camera.ViewportToWorldPoint(new Vector3(0, 1, 100.0f));
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_2 = __this->___m_frameCounter_transform_8;
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_3 = __this->___m_camera_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_4;
		memset((&L_4), 0, sizeof(L_4));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_4), (0.0f), (1.0f), (100.0f), /*hidden argument*/NULL);
		NullCheck(L_3);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_5;
		L_5 = Camera_ViewportToWorldPoint_m9D76494E8B695ADF7690BAF7953B89B152D96E71(L_3, L_4, NULL);
		NullCheck(L_2);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_2, L_5, NULL);
		// break;
		return;
	}

IL_004e:
	{
		// m_textContainer.anchorPosition = TextContainerAnchors.BottomLeft;
		TextContainer_t949A6EBEE5C8832723E73D8D3DCF4C8D0B3D7F3C* L_6 = __this->___m_textContainer_7;
		NullCheck(L_6);
		TextContainer_set_anchorPosition_mA915529616A0B4679FAAA6183FC194597E03EA50(L_6, 6, NULL);
		// m_frameCounter_transform.position = m_camera.ViewportToWorldPoint(new Vector3(0, 0, 100.0f));
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_7 = __this->___m_frameCounter_transform_8;
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_8 = __this->___m_camera_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_9;
		memset((&L_9), 0, sizeof(L_9));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_9), (0.0f), (0.0f), (100.0f), /*hidden argument*/NULL);
		NullCheck(L_8);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_10;
		L_10 = Camera_ViewportToWorldPoint_m9D76494E8B695ADF7690BAF7953B89B152D96E71(L_8, L_9, NULL);
		NullCheck(L_7);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_7, L_10, NULL);
		// break;
		return;
	}

IL_0085:
	{
		// m_textContainer.anchorPosition = TextContainerAnchors.TopRight;
		TextContainer_t949A6EBEE5C8832723E73D8D3DCF4C8D0B3D7F3C* L_11 = __this->___m_textContainer_7;
		NullCheck(L_11);
		TextContainer_set_anchorPosition_mA915529616A0B4679FAAA6183FC194597E03EA50(L_11, 2, NULL);
		// m_frameCounter_transform.position = m_camera.ViewportToWorldPoint(new Vector3(1, 1, 100.0f));
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_12 = __this->___m_frameCounter_transform_8;
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_13 = __this->___m_camera_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_14;
		memset((&L_14), 0, sizeof(L_14));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_14), (1.0f), (1.0f), (100.0f), /*hidden argument*/NULL);
		NullCheck(L_13);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_15;
		L_15 = Camera_ViewportToWorldPoint_m9D76494E8B695ADF7690BAF7953B89B152D96E71(L_13, L_14, NULL);
		NullCheck(L_12);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_12, L_15, NULL);
		// break;
		return;
	}

IL_00bc:
	{
		// m_textContainer.anchorPosition = TextContainerAnchors.BottomRight;
		TextContainer_t949A6EBEE5C8832723E73D8D3DCF4C8D0B3D7F3C* L_16 = __this->___m_textContainer_7;
		NullCheck(L_16);
		TextContainer_set_anchorPosition_mA915529616A0B4679FAAA6183FC194597E03EA50(L_16, 8, NULL);
		// m_frameCounter_transform.position = m_camera.ViewportToWorldPoint(new Vector3(1, 0, 100.0f));
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_17 = __this->___m_frameCounter_transform_8;
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_18 = __this->___m_camera_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_19;
		memset((&L_19), 0, sizeof(L_19));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_19), (1.0f), (0.0f), (100.0f), /*hidden argument*/NULL);
		NullCheck(L_18);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_20;
		L_20 = Camera_ViewportToWorldPoint_m9D76494E8B695ADF7690BAF7953B89B152D96E71(L_18, L_19, NULL);
		NullCheck(L_17);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_17, L_20, NULL);
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMPro_InstructionOverlay::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMPro_InstructionOverlay__ctor_m247258528E488171765F77A9A3C6B7E079E64839 (TMPro_InstructionOverlay_t1CFD12C64F70D5D2FBE29466015C02776A406B62* __this, const RuntimeMethod* method) 
{
	{
		// public FpsCounterAnchorPositions AnchorPosition = FpsCounterAnchorPositions.BottomLeft;
		__this->___AnchorPosition_4 = 1;
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.TMP_ExampleScript_01::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_ExampleScript_01_Awake_m6E620605AE9CCC3789A2D5CFD841E5DAB8592063 (TMP_ExampleScript_01_t12A14830C25DE1BA02443B22907A196BE4B44305* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponent_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_m23F8F2F9DD5A54329CEB47D53B4CAA8BC4A562AA_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_m991A1A2A2EFE70B64BBECFF1B44EE5C04FF8994E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_AddComponent_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_m15E50057DA76710B136ADF4E7CA55A463D9DA3EB_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_AddComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_mD3BE0A75BBE971456A1D7C8C6F6688A094A81C9C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Resources_Load_TisMaterial_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3_m28782CC70624922DAF3B0FB13930E4EB59848128_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Resources_Load_TisTMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160_m4C7F47B73C641ED180784E089759867A85127C13_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral0570B799853B77BFC04E0AB8BD83CD1E5089060A);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralA294DAD207C32424675CE40B7B7673FBE9C295B3);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralCEB055F85C5660DEABF3989A924C2D2EDB0C8C84);
		s_Il2CppMethodInitialized = true;
	}
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 V_0;
	memset((&V_0), 0, sizeof(V_0));
	TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* G_B3_0 = NULL;
	TMP_ExampleScript_01_t12A14830C25DE1BA02443B22907A196BE4B44305* G_B3_1 = NULL;
	TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* G_B2_0 = NULL;
	TMP_ExampleScript_01_t12A14830C25DE1BA02443B22907A196BE4B44305* G_B2_1 = NULL;
	TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* G_B6_0 = NULL;
	TMP_ExampleScript_01_t12A14830C25DE1BA02443B22907A196BE4B44305* G_B6_1 = NULL;
	TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* G_B5_0 = NULL;
	TMP_ExampleScript_01_t12A14830C25DE1BA02443B22907A196BE4B44305* G_B5_1 = NULL;
	{
		// if (ObjectType == 0)
		int32_t L_0 = __this->___ObjectType_4;
		if (L_0)
		{
			goto IL_0025;
		}
	}
	{
		// m_text = GetComponent<TextMeshPro>() ?? gameObject.AddComponent<TextMeshPro>();
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_1;
		L_1 = Component_GetComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_m991A1A2A2EFE70B64BBECFF1B44EE5C04FF8994E(__this, Component_GetComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_m991A1A2A2EFE70B64BBECFF1B44EE5C04FF8994E_RuntimeMethod_var);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_2 = L_1;
		G_B2_0 = L_2;
		G_B2_1 = __this;
		if (L_2)
		{
			G_B3_0 = L_2;
			G_B3_1 = __this;
			goto IL_001e;
		}
	}
	{
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_3;
		L_3 = Component_get_gameObject_m57AEFBB14DB39EC476F740BA000E170355DE691B(__this, NULL);
		NullCheck(L_3);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_4;
		L_4 = GameObject_AddComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_mD3BE0A75BBE971456A1D7C8C6F6688A094A81C9C(L_3, GameObject_AddComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_mD3BE0A75BBE971456A1D7C8C6F6688A094A81C9C_RuntimeMethod_var);
		G_B3_0 = L_4;
		G_B3_1 = G_B2_1;
	}

IL_001e:
	{
		NullCheck(G_B3_1);
		G_B3_1->___m_text_6 = G_B3_0;
		Il2CppCodeGenWriteBarrier((void**)(&G_B3_1->___m_text_6), (void*)G_B3_0);
		goto IL_0040;
	}

IL_0025:
	{
		// m_text = GetComponent<TextMeshProUGUI>() ?? gameObject.AddComponent<TextMeshProUGUI>();
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_5;
		L_5 = Component_GetComponent_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_m23F8F2F9DD5A54329CEB47D53B4CAA8BC4A562AA(__this, Component_GetComponent_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_m23F8F2F9DD5A54329CEB47D53B4CAA8BC4A562AA_RuntimeMethod_var);
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_6 = L_5;
		G_B5_0 = L_6;
		G_B5_1 = __this;
		if (L_6)
		{
			G_B6_0 = L_6;
			G_B6_1 = __this;
			goto IL_003b;
		}
	}
	{
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_7;
		L_7 = Component_get_gameObject_m57AEFBB14DB39EC476F740BA000E170355DE691B(__this, NULL);
		NullCheck(L_7);
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_8;
		L_8 = GameObject_AddComponent_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_m15E50057DA76710B136ADF4E7CA55A463D9DA3EB(L_7, GameObject_AddComponent_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_m15E50057DA76710B136ADF4E7CA55A463D9DA3EB_RuntimeMethod_var);
		G_B6_0 = L_8;
		G_B6_1 = G_B5_1;
	}

IL_003b:
	{
		NullCheck(G_B6_1);
		G_B6_1->___m_text_6 = G_B6_0;
		Il2CppCodeGenWriteBarrier((void**)(&G_B6_1->___m_text_6), (void*)G_B6_0);
	}

IL_0040:
	{
		// m_text.font = Resources.Load<TMP_FontAsset>("Fonts & Materials/Anton SDF");
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_9 = __this->___m_text_6;
		TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160* L_10;
		L_10 = Resources_Load_TisTMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160_m4C7F47B73C641ED180784E089759867A85127C13(_stringLiteralCEB055F85C5660DEABF3989A924C2D2EDB0C8C84, Resources_Load_TisTMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160_m4C7F47B73C641ED180784E089759867A85127C13_RuntimeMethod_var);
		NullCheck(L_9);
		TMP_Text_set_font_mC55E4A8C1C09595031384B35F2C2FB2FC3479E83(L_9, L_10, NULL);
		// m_text.fontSharedMaterial = Resources.Load<Material>("Fonts & Materials/Anton SDF - Drop Shadow");
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_11 = __this->___m_text_6;
		Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* L_12;
		L_12 = Resources_Load_TisMaterial_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3_m28782CC70624922DAF3B0FB13930E4EB59848128(_stringLiteralA294DAD207C32424675CE40B7B7673FBE9C295B3, Resources_Load_TisMaterial_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3_m28782CC70624922DAF3B0FB13930E4EB59848128_RuntimeMethod_var);
		NullCheck(L_11);
		VirtualActionInvoker1< Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* >::Invoke(68 /* System.Void TMPro.TMP_Text::set_fontSharedMaterial(UnityEngine.Material) */, L_11, L_12);
		// m_text.fontSize = 120;
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_13 = __this->___m_text_6;
		NullCheck(L_13);
		TMP_Text_set_fontSize_m1C3A3BA2BC88E5E1D89375FD35A0AA91E75D3AAD(L_13, (120.0f), NULL);
		// m_text.text = "A <#0080ff>simple</color> line of text.";
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_14 = __this->___m_text_6;
		NullCheck(L_14);
		VirtualActionInvoker1< String_t* >::Invoke(66 /* System.Void TMPro.TMP_Text::set_text(System.String) */, L_14, _stringLiteral0570B799853B77BFC04E0AB8BD83CD1E5089060A);
		// Vector2 size = m_text.GetPreferredValues(Mathf.Infinity, Mathf.Infinity);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_15 = __this->___m_text_6;
		NullCheck(L_15);
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_16;
		L_16 = TMP_Text_GetPreferredValues_m1F06F3D203FD8F13D0335F697E839E5DAA61DD14(L_15, (std::numeric_limits<float>::infinity()), (std::numeric_limits<float>::infinity()), NULL);
		V_0 = L_16;
		// m_text.rectTransform.sizeDelta = new Vector2(size.x, size.y);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_17 = __this->___m_text_6;
		NullCheck(L_17);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_18;
		L_18 = TMP_Text_get_rectTransform_m22DC10116809BEB2C66047A55337A588ED023EBF(L_17, NULL);
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_19 = V_0;
		float L_20 = L_19.___x_0;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_21 = V_0;
		float L_22 = L_21.___y_1;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_23;
		memset((&L_23), 0, sizeof(L_23));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_23), L_20, L_22, /*hidden argument*/NULL);
		NullCheck(L_18);
		RectTransform_set_sizeDelta_mC9A980EA6036E6725EF24CEDF3EE80A9B2B50EE5(L_18, L_23, NULL);
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_ExampleScript_01::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_ExampleScript_01_Update_m3D4A9AB04728F0ABD4C7C8A462E2C811308D97A1 (TMP_ExampleScript_01_t12A14830C25DE1BA02443B22907A196BE4B44305* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral71BD498E5FC7E3B8709294B88AB8FAB2CFF77CAE);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (!isStatic)
		bool L_0 = __this->___isStatic_5;
		if (L_0)
		{
			goto IL_0033;
		}
	}
	{
		// m_text.SetText(k_label, count % 1000);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_1 = __this->___m_text_6;
		int32_t L_2 = __this->___count_8;
		NullCheck(L_1);
		TMP_Text_SetText_mC6973FFC60DB6A96B0C4253CD2FD9D0789ECC533(L_1, _stringLiteral71BD498E5FC7E3B8709294B88AB8FAB2CFF77CAE, ((float)((int32_t)(L_2%((int32_t)1000)))), NULL);
		// count += 1;
		int32_t L_3 = __this->___count_8;
		__this->___count_8 = ((int32_t)il2cpp_codegen_add(L_3, 1));
	}

IL_0033:
	{
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_ExampleScript_01::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_ExampleScript_01__ctor_m43F9206FDB1606CD28F1A441188E777546CFEA2A (TMP_ExampleScript_01_t12A14830C25DE1BA02443B22907A196BE4B44305* __this, const RuntimeMethod* method) 
{
	{
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.TMP_FrameRateCounter::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_FrameRateCounter_Awake_m99156EF53E5848DE83107BFAC803C33DC964265C (TMP_FrameRateCounter_t65C436069EE403C827CBE41C38F5B5C9D2FC946B* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_AddComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_mD3BE0A75BBE971456A1D7C8C6F6688A094A81C9C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_t76FEDD663AB33C991A9C9A23129337651094216F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Resources_Load_TisMaterial_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3_m28782CC70624922DAF3B0FB13930E4EB59848128_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Resources_Load_TisTMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160_m4C7F47B73C641ED180784E089759867A85127C13_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral9ECD13393A1BC799BB4763A4E4CD5B53E220C53A);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralA6107EE62A5874EF8D2DEAC7D3C0A9F07B89E096);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralAB3448E21FA53C63C06270903A13B17D02935BE0);
		s_Il2CppMethodInitialized = true;
	}
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* V_0 = NULL;
	{
		// if (!enabled)
		bool L_0;
		L_0 = Behaviour_get_enabled_mAAC9F15E9EBF552217A5AE2681589CC0BFA300C1(__this, NULL);
		if (L_0)
		{
			goto IL_0009;
		}
	}
	{
		// return;
		return;
	}

IL_0009:
	{
		// m_camera = Camera.main;
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_1;
		L_1 = Camera_get_main_mF222B707D3BF8CC9C7544609EFC71CFB62E81D43(NULL);
		__this->___m_camera_12 = L_1;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_camera_12), (void*)L_1);
		// Application.targetFrameRate = 9999;
		Application_set_targetFrameRate_m794A13DC5116C506B042663606691257CF3A7325(((int32_t)9999), NULL);
		// GameObject frameCounter = new GameObject("Frame Counter");
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_2 = (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*)il2cpp_codegen_object_new(GameObject_t76FEDD663AB33C991A9C9A23129337651094216F_il2cpp_TypeInfo_var);
		NullCheck(L_2);
		GameObject__ctor_m37D512B05D292F954792225E6C6EEE95293A9B88(L_2, _stringLiteralA6107EE62A5874EF8D2DEAC7D3C0A9F07B89E096, NULL);
		V_0 = L_2;
		// m_TextMeshPro = frameCounter.AddComponent<TextMeshPro>();
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_3 = V_0;
		NullCheck(L_3);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_4;
		L_4 = GameObject_AddComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_mD3BE0A75BBE971456A1D7C8C6F6688A094A81C9C(L_3, GameObject_AddComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_mD3BE0A75BBE971456A1D7C8C6F6688A094A81C9C_RuntimeMethod_var);
		__this->___m_TextMeshPro_10 = L_4;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_TextMeshPro_10), (void*)L_4);
		// m_TextMeshPro.font = Resources.Load<TMP_FontAsset>("Fonts & Materials/LiberationSans SDF");
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_5 = __this->___m_TextMeshPro_10;
		TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160* L_6;
		L_6 = Resources_Load_TisTMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160_m4C7F47B73C641ED180784E089759867A85127C13(_stringLiteralAB3448E21FA53C63C06270903A13B17D02935BE0, Resources_Load_TisTMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160_m4C7F47B73C641ED180784E089759867A85127C13_RuntimeMethod_var);
		NullCheck(L_5);
		TMP_Text_set_font_mC55E4A8C1C09595031384B35F2C2FB2FC3479E83(L_5, L_6, NULL);
		// m_TextMeshPro.fontSharedMaterial = Resources.Load<Material>("Fonts & Materials/LiberationSans SDF - Overlay");
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_7 = __this->___m_TextMeshPro_10;
		Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* L_8;
		L_8 = Resources_Load_TisMaterial_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3_m28782CC70624922DAF3B0FB13930E4EB59848128(_stringLiteral9ECD13393A1BC799BB4763A4E4CD5B53E220C53A, Resources_Load_TisMaterial_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3_m28782CC70624922DAF3B0FB13930E4EB59848128_RuntimeMethod_var);
		NullCheck(L_7);
		VirtualActionInvoker1< Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* >::Invoke(68 /* System.Void TMPro.TMP_Text::set_fontSharedMaterial(UnityEngine.Material) */, L_7, L_8);
		// m_frameCounter_transform = frameCounter.transform;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_9 = V_0;
		NullCheck(L_9);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_10;
		L_10 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_9, NULL);
		__this->___m_frameCounter_transform_11 = L_10;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_frameCounter_transform_11), (void*)L_10);
		// m_frameCounter_transform.SetParent(m_camera.transform);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_11 = __this->___m_frameCounter_transform_11;
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_12 = __this->___m_camera_12;
		NullCheck(L_12);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_13;
		L_13 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_12, NULL);
		NullCheck(L_11);
		Transform_SetParent_m6677538B60246D958DD91F931C50F969CCBB5250(L_11, L_13, NULL);
		// m_frameCounter_transform.localRotation = Quaternion.identity;
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_14 = __this->___m_frameCounter_transform_11;
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_15;
		L_15 = Quaternion_get_identity_mB9CAEEB21BC81352CBF32DB9664BFC06FA7EA27B_inline(NULL);
		NullCheck(L_14);
		Transform_set_localRotation_mAB4A011D134BA58AB780BECC0025CA65F16185FA(L_14, L_15, NULL);
		// m_TextMeshPro.enableWordWrapping = false;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_16 = __this->___m_TextMeshPro_10;
		NullCheck(L_16);
		TMP_Text_set_enableWordWrapping_mFAEE849315B4723F9C86C127B1A59EF50BE1C12F(L_16, (bool)0, NULL);
		// m_TextMeshPro.fontSize = 24;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_17 = __this->___m_TextMeshPro_10;
		NullCheck(L_17);
		TMP_Text_set_fontSize_m1C3A3BA2BC88E5E1D89375FD35A0AA91E75D3AAD(L_17, (24.0f), NULL);
		// Set_FrameCounter_Position(AnchorPosition);
		int32_t L_18 = __this->___AnchorPosition_7;
		TMP_FrameRateCounter_Set_FrameCounter_Position_m1CC40A8236B2161050D19C4B2EBFF34B96645723(__this, L_18, NULL);
		// last_AnchorPosition = AnchorPosition;
		int32_t L_19 = __this->___AnchorPosition_7;
		__this->___last_AnchorPosition_13 = L_19;
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_FrameRateCounter::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_FrameRateCounter_Start_m9B5D0A86D174DA019F3EB5C6E9BD54634B2F909A (TMP_FrameRateCounter_t65C436069EE403C827CBE41C38F5B5C9D2FC946B* __this, const RuntimeMethod* method) 
{
	{
		// m_LastInterval = Time.realtimeSinceStartup;
		float L_0;
		L_0 = Time_get_realtimeSinceStartup_mB49A5622E38FFE9589EB9B3E75573E443B8D63EC(NULL);
		__this->___m_LastInterval_5 = L_0;
		// m_Frames = 0;
		__this->___m_Frames_6 = 0;
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_FrameRateCounter::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_FrameRateCounter_Update_m5251EE9AC9DCB99D0871EE83624C8A9012E6A079 (TMP_FrameRateCounter_t65C436069EE403C827CBE41C38F5B5C9D2FC946B* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral7F85A2723BB62FEF95DD6F8C5F0FF606EA62246A);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral8ACAA4E0B28437F5FD1A41CE6591A16813F05377);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralA87D266F5AAE1AF5998468D25833A8C6AD50D4FD);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralD00074DE8ACBEBA7EF28BE447E997E8352E84502);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	float V_1 = 0.0f;
	float V_2 = 0.0f;
	{
		// if (AnchorPosition != last_AnchorPosition)
		int32_t L_0 = __this->___AnchorPosition_7;
		int32_t L_1 = __this->___last_AnchorPosition_13;
		if ((((int32_t)L_0) == ((int32_t)L_1)))
		{
			goto IL_001a;
		}
	}
	{
		// Set_FrameCounter_Position(AnchorPosition);
		int32_t L_2 = __this->___AnchorPosition_7;
		TMP_FrameRateCounter_Set_FrameCounter_Position_m1CC40A8236B2161050D19C4B2EBFF34B96645723(__this, L_2, NULL);
	}

IL_001a:
	{
		// last_AnchorPosition = AnchorPosition;
		int32_t L_3 = __this->___AnchorPosition_7;
		__this->___last_AnchorPosition_13 = L_3;
		// m_Frames += 1;
		int32_t L_4 = __this->___m_Frames_6;
		__this->___m_Frames_6 = ((int32_t)il2cpp_codegen_add(L_4, 1));
		// float timeNow = Time.realtimeSinceStartup;
		float L_5;
		L_5 = Time_get_realtimeSinceStartup_mB49A5622E38FFE9589EB9B3E75573E443B8D63EC(NULL);
		V_0 = L_5;
		// if (timeNow > m_LastInterval + UpdateInterval)
		float L_6 = V_0;
		float L_7 = __this->___m_LastInterval_5;
		float L_8 = __this->___UpdateInterval_4;
		if ((!(((float)L_6) > ((float)((float)il2cpp_codegen_add(L_7, L_8))))))
		{
			goto IL_00d0;
		}
	}
	{
		// float fps = m_Frames / (timeNow - m_LastInterval);
		int32_t L_9 = __this->___m_Frames_6;
		float L_10 = V_0;
		float L_11 = __this->___m_LastInterval_5;
		V_1 = ((float)(((float)L_9)/((float)il2cpp_codegen_subtract(L_10, L_11))));
		// float ms = 1000.0f / Mathf.Max(fps, 0.00001f);
		float L_12 = V_1;
		float L_13;
		L_13 = Mathf_Max_mA9DCA91E87D6D27034F56ABA52606A9090406016_inline(L_12, (9.99999975E-06f), NULL);
		V_2 = ((float)((1000.0f)/L_13));
		// if (fps < 30)
		float L_14 = V_1;
		if ((!(((float)L_14) < ((float)(30.0f)))))
		{
			goto IL_0085;
		}
	}
	{
		// htmlColorTag = "<color=yellow>";
		__this->___htmlColorTag_8 = _stringLiteralA87D266F5AAE1AF5998468D25833A8C6AD50D4FD;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___htmlColorTag_8), (void*)_stringLiteralA87D266F5AAE1AF5998468D25833A8C6AD50D4FD);
		goto IL_00a5;
	}

IL_0085:
	{
		// else if (fps < 10)
		float L_15 = V_1;
		if ((!(((float)L_15) < ((float)(10.0f)))))
		{
			goto IL_009a;
		}
	}
	{
		// htmlColorTag = "<color=red>";
		__this->___htmlColorTag_8 = _stringLiteral8ACAA4E0B28437F5FD1A41CE6591A16813F05377;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___htmlColorTag_8), (void*)_stringLiteral8ACAA4E0B28437F5FD1A41CE6591A16813F05377);
		goto IL_00a5;
	}

IL_009a:
	{
		// htmlColorTag = "<color=green>";
		__this->___htmlColorTag_8 = _stringLiteral7F85A2723BB62FEF95DD6F8C5F0FF606EA62246A;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___htmlColorTag_8), (void*)_stringLiteral7F85A2723BB62FEF95DD6F8C5F0FF606EA62246A);
	}

IL_00a5:
	{
		// m_TextMeshPro.SetText(htmlColorTag + fpsLabel, fps, ms);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_16 = __this->___m_TextMeshPro_10;
		String_t* L_17 = __this->___htmlColorTag_8;
		String_t* L_18;
		L_18 = String_Concat_mAF2CE02CC0CB7460753D0A1A91CCF2B1E9804C5D(L_17, _stringLiteralD00074DE8ACBEBA7EF28BE447E997E8352E84502, NULL);
		float L_19 = V_1;
		float L_20 = V_2;
		NullCheck(L_16);
		TMP_Text_SetText_m033947AEEEBDA12707E4B0535B4CCD7EB28B5F31(L_16, L_18, L_19, L_20, NULL);
		// m_Frames = 0;
		__this->___m_Frames_6 = 0;
		// m_LastInterval = timeNow;
		float L_21 = V_0;
		__this->___m_LastInterval_5 = L_21;
	}

IL_00d0:
	{
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_FrameRateCounter::Set_FrameCounter_Position(TMPro.Examples.TMP_FrameRateCounter/FpsCounterAnchorPositions)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_FrameRateCounter_Set_FrameCounter_Position_m1CC40A8236B2161050D19C4B2EBFF34B96645723 (TMP_FrameRateCounter_t65C436069EE403C827CBE41C38F5B5C9D2FC946B* __this, int32_t ___anchor_position0, const RuntimeMethod* method) 
{
	{
		// m_TextMeshPro.margin = new Vector4(1f, 1f, 1f, 1f);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_0 = __this->___m_TextMeshPro_10;
		Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 L_1;
		memset((&L_1), 0, sizeof(L_1));
		Vector4__ctor_m96B2CD8B862B271F513AF0BDC2EABD58E4DBC813_inline((&L_1), (1.0f), (1.0f), (1.0f), (1.0f), /*hidden argument*/NULL);
		NullCheck(L_0);
		VirtualActionInvoker1< Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 >::Invoke(74 /* System.Void TMPro.TMP_Text::set_margin(UnityEngine.Vector4) */, L_0, L_1);
		int32_t L_2 = ___anchor_position0;
		switch (L_2)
		{
			case 0:
			{
				goto IL_003b;
			}
			case 1:
			{
				goto IL_0095;
			}
			case 2:
			{
				goto IL_00ef;
			}
			case 3:
			{
				goto IL_0149;
			}
		}
	}
	{
		return;
	}

IL_003b:
	{
		// m_TextMeshPro.alignment = TextAlignmentOptions.TopLeft;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_3 = __this->___m_TextMeshPro_10;
		NullCheck(L_3);
		TMP_Text_set_alignment_mE5216A28797987CC19927ED3CB8DFAC438C6B95A(L_3, ((int32_t)257), NULL);
		// m_TextMeshPro.rectTransform.pivot = new Vector2(0, 1);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_4 = __this->___m_TextMeshPro_10;
		NullCheck(L_4);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_5;
		L_5 = TMP_Text_get_rectTransform_m22DC10116809BEB2C66047A55337A588ED023EBF(L_4, NULL);
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_6;
		memset((&L_6), 0, sizeof(L_6));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_6), (0.0f), (1.0f), /*hidden argument*/NULL);
		NullCheck(L_5);
		RectTransform_set_pivot_m79D0177D383D432A93C2615F1932B739B1C6E146(L_5, L_6, NULL);
		// m_frameCounter_transform.position = m_camera.ViewportToWorldPoint(new Vector3(0, 1, 100.0f));
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_7 = __this->___m_frameCounter_transform_11;
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_8 = __this->___m_camera_12;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_9;
		memset((&L_9), 0, sizeof(L_9));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_9), (0.0f), (1.0f), (100.0f), /*hidden argument*/NULL);
		NullCheck(L_8);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_10;
		L_10 = Camera_ViewportToWorldPoint_m9D76494E8B695ADF7690BAF7953B89B152D96E71(L_8, L_9, NULL);
		NullCheck(L_7);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_7, L_10, NULL);
		// break;
		return;
	}

IL_0095:
	{
		// m_TextMeshPro.alignment = TextAlignmentOptions.BottomLeft;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_11 = __this->___m_TextMeshPro_10;
		NullCheck(L_11);
		TMP_Text_set_alignment_mE5216A28797987CC19927ED3CB8DFAC438C6B95A(L_11, ((int32_t)1025), NULL);
		// m_TextMeshPro.rectTransform.pivot = new Vector2(0, 0);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_12 = __this->___m_TextMeshPro_10;
		NullCheck(L_12);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_13;
		L_13 = TMP_Text_get_rectTransform_m22DC10116809BEB2C66047A55337A588ED023EBF(L_12, NULL);
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_14;
		memset((&L_14), 0, sizeof(L_14));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_14), (0.0f), (0.0f), /*hidden argument*/NULL);
		NullCheck(L_13);
		RectTransform_set_pivot_m79D0177D383D432A93C2615F1932B739B1C6E146(L_13, L_14, NULL);
		// m_frameCounter_transform.position = m_camera.ViewportToWorldPoint(new Vector3(0, 0, 100.0f));
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_15 = __this->___m_frameCounter_transform_11;
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_16 = __this->___m_camera_12;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_17;
		memset((&L_17), 0, sizeof(L_17));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_17), (0.0f), (0.0f), (100.0f), /*hidden argument*/NULL);
		NullCheck(L_16);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_18;
		L_18 = Camera_ViewportToWorldPoint_m9D76494E8B695ADF7690BAF7953B89B152D96E71(L_16, L_17, NULL);
		NullCheck(L_15);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_15, L_18, NULL);
		// break;
		return;
	}

IL_00ef:
	{
		// m_TextMeshPro.alignment = TextAlignmentOptions.TopRight;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_19 = __this->___m_TextMeshPro_10;
		NullCheck(L_19);
		TMP_Text_set_alignment_mE5216A28797987CC19927ED3CB8DFAC438C6B95A(L_19, ((int32_t)260), NULL);
		// m_TextMeshPro.rectTransform.pivot = new Vector2(1, 1);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_20 = __this->___m_TextMeshPro_10;
		NullCheck(L_20);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_21;
		L_21 = TMP_Text_get_rectTransform_m22DC10116809BEB2C66047A55337A588ED023EBF(L_20, NULL);
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_22;
		memset((&L_22), 0, sizeof(L_22));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_22), (1.0f), (1.0f), /*hidden argument*/NULL);
		NullCheck(L_21);
		RectTransform_set_pivot_m79D0177D383D432A93C2615F1932B739B1C6E146(L_21, L_22, NULL);
		// m_frameCounter_transform.position = m_camera.ViewportToWorldPoint(new Vector3(1, 1, 100.0f));
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_23 = __this->___m_frameCounter_transform_11;
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_24 = __this->___m_camera_12;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_25;
		memset((&L_25), 0, sizeof(L_25));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_25), (1.0f), (1.0f), (100.0f), /*hidden argument*/NULL);
		NullCheck(L_24);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_26;
		L_26 = Camera_ViewportToWorldPoint_m9D76494E8B695ADF7690BAF7953B89B152D96E71(L_24, L_25, NULL);
		NullCheck(L_23);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_23, L_26, NULL);
		// break;
		return;
	}

IL_0149:
	{
		// m_TextMeshPro.alignment = TextAlignmentOptions.BottomRight;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_27 = __this->___m_TextMeshPro_10;
		NullCheck(L_27);
		TMP_Text_set_alignment_mE5216A28797987CC19927ED3CB8DFAC438C6B95A(L_27, ((int32_t)1028), NULL);
		// m_TextMeshPro.rectTransform.pivot = new Vector2(1, 0);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_28 = __this->___m_TextMeshPro_10;
		NullCheck(L_28);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_29;
		L_29 = TMP_Text_get_rectTransform_m22DC10116809BEB2C66047A55337A588ED023EBF(L_28, NULL);
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_30;
		memset((&L_30), 0, sizeof(L_30));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_30), (1.0f), (0.0f), /*hidden argument*/NULL);
		NullCheck(L_29);
		RectTransform_set_pivot_m79D0177D383D432A93C2615F1932B739B1C6E146(L_29, L_30, NULL);
		// m_frameCounter_transform.position = m_camera.ViewportToWorldPoint(new Vector3(1, 0, 100.0f));
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_31 = __this->___m_frameCounter_transform_11;
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_32 = __this->___m_camera_12;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_33;
		memset((&L_33), 0, sizeof(L_33));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_33), (1.0f), (0.0f), (100.0f), /*hidden argument*/NULL);
		NullCheck(L_32);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_34;
		L_34 = Camera_ViewportToWorldPoint_m9D76494E8B695ADF7690BAF7953B89B152D96E71(L_32, L_33, NULL);
		NullCheck(L_31);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_31, L_34, NULL);
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_FrameRateCounter::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_FrameRateCounter__ctor_mD8804AE37CED37A01DF943624D3C2C48FBC9AE43 (TMP_FrameRateCounter_t65C436069EE403C827CBE41C38F5B5C9D2FC946B* __this, const RuntimeMethod* method) 
{
	{
		// public float UpdateInterval = 5.0f;
		__this->___UpdateInterval_4 = (5.0f);
		// public FpsCounterAnchorPositions AnchorPosition = FpsCounterAnchorPositions.TopRight;
		__this->___AnchorPosition_7 = 2;
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.TMP_TextEventCheck::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextEventCheck_OnEnable_mABF0C00DDBB37230534C49AD9CA342D96757AA3E (TMP_TextEventCheck_tC19A6E94690E74ED73926E8EDC5F611501DC6233* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMP_TextEventCheck_OnCharacterSelection_mB421E2CFB617397137CF1AE9CC2F49E46EB3F0AE_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMP_TextEventCheck_OnLineSelection_mE0538FFAFE04A286F937907D0E4664338DCF1559_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMP_TextEventCheck_OnLinkSelection_m72BF9241651D44805590F1DBADF2FD864D209779_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMP_TextEventCheck_OnSpriteSelection_mD88D899DE3321CC15502BB1174709BE290AB6215_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMP_TextEventCheck_OnWordSelection_m180B102DAED1F3313F2F4BB6CF588FF96C8CAB79_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&UnityAction_3_tA4BA03B0D2CAB7D20E7006E36EF6B1D662432039_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&UnityEvent_2_AddListener_mE2FC084F4ADB9D24D904D6A39A83763969F91E27_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&UnityEvent_3_AddListener_mB8CBD686B0A41D0A0F0D809824E8904A827C3188_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&UnityEvent_3_AddListener_mE456028DE63E2FF37E53F2618AA321B5551B881A_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (TextEventHandler != null)
		TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* L_0 = __this->___TextEventHandler_4;
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_1;
		L_1 = Object_op_Inequality_m4D656395C27694A7F33F5AA8DE80A7AAF9E20BA7(L_0, (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C*)NULL, NULL);
		if (!L_1)
		{
			goto IL_00ae;
		}
	}
	{
		// m_TextComponent = TextEventHandler.GetComponent<TMP_Text>();
		TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* L_2 = __this->___TextEventHandler_4;
		NullCheck(L_2);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_3;
		L_3 = Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5(L_2, Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5_RuntimeMethod_var);
		__this->___m_TextComponent_5 = L_3;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_TextComponent_5), (void*)L_3);
		// TextEventHandler.onCharacterSelection.AddListener(OnCharacterSelection);
		TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* L_4 = __this->___TextEventHandler_4;
		NullCheck(L_4);
		CharacterSelectionEvent_t5D7AF67F47A37175CF8615AD66DEC4A0AA021392* L_5;
		L_5 = TMP_TextEventHandler_get_onCharacterSelection_mA62049738125E3C48405E6DFF09E2D42300BE8C3_inline(L_4, NULL);
		UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007* L_6 = (UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007*)il2cpp_codegen_object_new(UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007_il2cpp_TypeInfo_var);
		NullCheck(L_6);
		UnityAction_2__ctor_m9F49CFF4FADF7EF080CEA8DCAD9FA2EB8D63F35D(L_6, __this, (intptr_t)((void*)TMP_TextEventCheck_OnCharacterSelection_mB421E2CFB617397137CF1AE9CC2F49E46EB3F0AE_RuntimeMethod_var), NULL);
		NullCheck(L_5);
		UnityEvent_2_AddListener_mE2FC084F4ADB9D24D904D6A39A83763969F91E27(L_5, L_6, UnityEvent_2_AddListener_mE2FC084F4ADB9D24D904D6A39A83763969F91E27_RuntimeMethod_var);
		// TextEventHandler.onSpriteSelection.AddListener(OnSpriteSelection);
		TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* L_7 = __this->___TextEventHandler_4;
		NullCheck(L_7);
		SpriteSelectionEvent_t770551D2973013622C464E817FA74D53BCD4FD95* L_8;
		L_8 = TMP_TextEventHandler_get_onSpriteSelection_m95CDEB7394FFF38F310717EEEFDCD481D96A5E82_inline(L_7, NULL);
		UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007* L_9 = (UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007*)il2cpp_codegen_object_new(UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007_il2cpp_TypeInfo_var);
		NullCheck(L_9);
		UnityAction_2__ctor_m9F49CFF4FADF7EF080CEA8DCAD9FA2EB8D63F35D(L_9, __this, (intptr_t)((void*)TMP_TextEventCheck_OnSpriteSelection_mD88D899DE3321CC15502BB1174709BE290AB6215_RuntimeMethod_var), NULL);
		NullCheck(L_8);
		UnityEvent_2_AddListener_mE2FC084F4ADB9D24D904D6A39A83763969F91E27(L_8, L_9, UnityEvent_2_AddListener_mE2FC084F4ADB9D24D904D6A39A83763969F91E27_RuntimeMethod_var);
		// TextEventHandler.onWordSelection.AddListener(OnWordSelection);
		TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* L_10 = __this->___TextEventHandler_4;
		NullCheck(L_10);
		WordSelectionEvent_t340E6006406B5E90F7190C56218E8F7E3712945E* L_11;
		L_11 = TMP_TextEventHandler_get_onWordSelection_mF22771B4213EEB3AEFCDA390A4FF28FED5D9184C_inline(L_10, NULL);
		UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6* L_12 = (UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6*)il2cpp_codegen_object_new(UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6_il2cpp_TypeInfo_var);
		NullCheck(L_12);
		UnityAction_3__ctor_m16AB9F4E444421420CA4A34EA0A6F60B15E20B9D(L_12, __this, (intptr_t)((void*)TMP_TextEventCheck_OnWordSelection_m180B102DAED1F3313F2F4BB6CF588FF96C8CAB79_RuntimeMethod_var), NULL);
		NullCheck(L_11);
		UnityEvent_3_AddListener_mE456028DE63E2FF37E53F2618AA321B5551B881A(L_11, L_12, UnityEvent_3_AddListener_mE456028DE63E2FF37E53F2618AA321B5551B881A_RuntimeMethod_var);
		// TextEventHandler.onLineSelection.AddListener(OnLineSelection);
		TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* L_13 = __this->___TextEventHandler_4;
		NullCheck(L_13);
		LineSelectionEvent_t526120C6113E0638913B951E3D1D7B1CF94F0880* L_14;
		L_14 = TMP_TextEventHandler_get_onLineSelection_mDDF07E7000993FCD6EAF2FBD2D2226EB66273908_inline(L_13, NULL);
		UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6* L_15 = (UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6*)il2cpp_codegen_object_new(UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6_il2cpp_TypeInfo_var);
		NullCheck(L_15);
		UnityAction_3__ctor_m16AB9F4E444421420CA4A34EA0A6F60B15E20B9D(L_15, __this, (intptr_t)((void*)TMP_TextEventCheck_OnLineSelection_mE0538FFAFE04A286F937907D0E4664338DCF1559_RuntimeMethod_var), NULL);
		NullCheck(L_14);
		UnityEvent_3_AddListener_mE456028DE63E2FF37E53F2618AA321B5551B881A(L_14, L_15, UnityEvent_3_AddListener_mE456028DE63E2FF37E53F2618AA321B5551B881A_RuntimeMethod_var);
		// TextEventHandler.onLinkSelection.AddListener(OnLinkSelection);
		TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* L_16 = __this->___TextEventHandler_4;
		NullCheck(L_16);
		LinkSelectionEvent_t5CE74F742D231580ED2C810ECE394E1A2BC81B3D* L_17;
		L_17 = TMP_TextEventHandler_get_onLinkSelection_m87FB9EABE7F917B2F910A18A3B5F1AE3020D976D_inline(L_16, NULL);
		UnityAction_3_tA4BA03B0D2CAB7D20E7006E36EF6B1D662432039* L_18 = (UnityAction_3_tA4BA03B0D2CAB7D20E7006E36EF6B1D662432039*)il2cpp_codegen_object_new(UnityAction_3_tA4BA03B0D2CAB7D20E7006E36EF6B1D662432039_il2cpp_TypeInfo_var);
		NullCheck(L_18);
		UnityAction_3__ctor_m7F8FD30A8410091074136C8426E3B7338FD2D7FB(L_18, __this, (intptr_t)((void*)TMP_TextEventCheck_OnLinkSelection_m72BF9241651D44805590F1DBADF2FD864D209779_RuntimeMethod_var), NULL);
		NullCheck(L_17);
		UnityEvent_3_AddListener_mB8CBD686B0A41D0A0F0D809824E8904A827C3188(L_17, L_18, UnityEvent_3_AddListener_mB8CBD686B0A41D0A0F0D809824E8904A827C3188_RuntimeMethod_var);
	}

IL_00ae:
	{
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_TextEventCheck::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextEventCheck_OnDisable_m4AE76C19CBF131CB80B73A7C71378CA063CFC4C6 (TMP_TextEventCheck_tC19A6E94690E74ED73926E8EDC5F611501DC6233* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMP_TextEventCheck_OnCharacterSelection_mB421E2CFB617397137CF1AE9CC2F49E46EB3F0AE_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMP_TextEventCheck_OnLineSelection_mE0538FFAFE04A286F937907D0E4664338DCF1559_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMP_TextEventCheck_OnLinkSelection_m72BF9241651D44805590F1DBADF2FD864D209779_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMP_TextEventCheck_OnSpriteSelection_mD88D899DE3321CC15502BB1174709BE290AB6215_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMP_TextEventCheck_OnWordSelection_m180B102DAED1F3313F2F4BB6CF588FF96C8CAB79_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&UnityAction_3_tA4BA03B0D2CAB7D20E7006E36EF6B1D662432039_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&UnityEvent_2_RemoveListener_m57B7F9B719A15831F63EA67147A848E324F3760B_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&UnityEvent_3_RemoveListener_m9741C57D75E2CE8CCD912E252CBACCE5FC950523_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&UnityEvent_3_RemoveListener_mA451198DCB5DD86D0B87D256F26293566D209026_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (TextEventHandler != null)
		TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* L_0 = __this->___TextEventHandler_4;
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_1;
		L_1 = Object_op_Inequality_m4D656395C27694A7F33F5AA8DE80A7AAF9E20BA7(L_0, (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C*)NULL, NULL);
		if (!L_1)
		{
			goto IL_009d;
		}
	}
	{
		// TextEventHandler.onCharacterSelection.RemoveListener(OnCharacterSelection);
		TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* L_2 = __this->___TextEventHandler_4;
		NullCheck(L_2);
		CharacterSelectionEvent_t5D7AF67F47A37175CF8615AD66DEC4A0AA021392* L_3;
		L_3 = TMP_TextEventHandler_get_onCharacterSelection_mA62049738125E3C48405E6DFF09E2D42300BE8C3_inline(L_2, NULL);
		UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007* L_4 = (UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007*)il2cpp_codegen_object_new(UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007_il2cpp_TypeInfo_var);
		NullCheck(L_4);
		UnityAction_2__ctor_m9F49CFF4FADF7EF080CEA8DCAD9FA2EB8D63F35D(L_4, __this, (intptr_t)((void*)TMP_TextEventCheck_OnCharacterSelection_mB421E2CFB617397137CF1AE9CC2F49E46EB3F0AE_RuntimeMethod_var), NULL);
		NullCheck(L_3);
		UnityEvent_2_RemoveListener_m57B7F9B719A15831F63EA67147A848E324F3760B(L_3, L_4, UnityEvent_2_RemoveListener_m57B7F9B719A15831F63EA67147A848E324F3760B_RuntimeMethod_var);
		// TextEventHandler.onSpriteSelection.RemoveListener(OnSpriteSelection);
		TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* L_5 = __this->___TextEventHandler_4;
		NullCheck(L_5);
		SpriteSelectionEvent_t770551D2973013622C464E817FA74D53BCD4FD95* L_6;
		L_6 = TMP_TextEventHandler_get_onSpriteSelection_m95CDEB7394FFF38F310717EEEFDCD481D96A5E82_inline(L_5, NULL);
		UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007* L_7 = (UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007*)il2cpp_codegen_object_new(UnityAction_2_t2654BCB968A8286196F6268276089A674B0A9007_il2cpp_TypeInfo_var);
		NullCheck(L_7);
		UnityAction_2__ctor_m9F49CFF4FADF7EF080CEA8DCAD9FA2EB8D63F35D(L_7, __this, (intptr_t)((void*)TMP_TextEventCheck_OnSpriteSelection_mD88D899DE3321CC15502BB1174709BE290AB6215_RuntimeMethod_var), NULL);
		NullCheck(L_6);
		UnityEvent_2_RemoveListener_m57B7F9B719A15831F63EA67147A848E324F3760B(L_6, L_7, UnityEvent_2_RemoveListener_m57B7F9B719A15831F63EA67147A848E324F3760B_RuntimeMethod_var);
		// TextEventHandler.onWordSelection.RemoveListener(OnWordSelection);
		TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* L_8 = __this->___TextEventHandler_4;
		NullCheck(L_8);
		WordSelectionEvent_t340E6006406B5E90F7190C56218E8F7E3712945E* L_9;
		L_9 = TMP_TextEventHandler_get_onWordSelection_mF22771B4213EEB3AEFCDA390A4FF28FED5D9184C_inline(L_8, NULL);
		UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6* L_10 = (UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6*)il2cpp_codegen_object_new(UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6_il2cpp_TypeInfo_var);
		NullCheck(L_10);
		UnityAction_3__ctor_m16AB9F4E444421420CA4A34EA0A6F60B15E20B9D(L_10, __this, (intptr_t)((void*)TMP_TextEventCheck_OnWordSelection_m180B102DAED1F3313F2F4BB6CF588FF96C8CAB79_RuntimeMethod_var), NULL);
		NullCheck(L_9);
		UnityEvent_3_RemoveListener_m9741C57D75E2CE8CCD912E252CBACCE5FC950523(L_9, L_10, UnityEvent_3_RemoveListener_m9741C57D75E2CE8CCD912E252CBACCE5FC950523_RuntimeMethod_var);
		// TextEventHandler.onLineSelection.RemoveListener(OnLineSelection);
		TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* L_11 = __this->___TextEventHandler_4;
		NullCheck(L_11);
		LineSelectionEvent_t526120C6113E0638913B951E3D1D7B1CF94F0880* L_12;
		L_12 = TMP_TextEventHandler_get_onLineSelection_mDDF07E7000993FCD6EAF2FBD2D2226EB66273908_inline(L_11, NULL);
		UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6* L_13 = (UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6*)il2cpp_codegen_object_new(UnityAction_3_t7A7A6102F3358E3083226D4228E8083EFD40EFE6_il2cpp_TypeInfo_var);
		NullCheck(L_13);
		UnityAction_3__ctor_m16AB9F4E444421420CA4A34EA0A6F60B15E20B9D(L_13, __this, (intptr_t)((void*)TMP_TextEventCheck_OnLineSelection_mE0538FFAFE04A286F937907D0E4664338DCF1559_RuntimeMethod_var), NULL);
		NullCheck(L_12);
		UnityEvent_3_RemoveListener_m9741C57D75E2CE8CCD912E252CBACCE5FC950523(L_12, L_13, UnityEvent_3_RemoveListener_m9741C57D75E2CE8CCD912E252CBACCE5FC950523_RuntimeMethod_var);
		// TextEventHandler.onLinkSelection.RemoveListener(OnLinkSelection);
		TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* L_14 = __this->___TextEventHandler_4;
		NullCheck(L_14);
		LinkSelectionEvent_t5CE74F742D231580ED2C810ECE394E1A2BC81B3D* L_15;
		L_15 = TMP_TextEventHandler_get_onLinkSelection_m87FB9EABE7F917B2F910A18A3B5F1AE3020D976D_inline(L_14, NULL);
		UnityAction_3_tA4BA03B0D2CAB7D20E7006E36EF6B1D662432039* L_16 = (UnityAction_3_tA4BA03B0D2CAB7D20E7006E36EF6B1D662432039*)il2cpp_codegen_object_new(UnityAction_3_tA4BA03B0D2CAB7D20E7006E36EF6B1D662432039_il2cpp_TypeInfo_var);
		NullCheck(L_16);
		UnityAction_3__ctor_m7F8FD30A8410091074136C8426E3B7338FD2D7FB(L_16, __this, (intptr_t)((void*)TMP_TextEventCheck_OnLinkSelection_m72BF9241651D44805590F1DBADF2FD864D209779_RuntimeMethod_var), NULL);
		NullCheck(L_15);
		UnityEvent_3_RemoveListener_mA451198DCB5DD86D0B87D256F26293566D209026(L_15, L_16, UnityEvent_3_RemoveListener_mA451198DCB5DD86D0B87D256F26293566D209026_RuntimeMethod_var);
	}

IL_009d:
	{
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_TextEventCheck::OnCharacterSelection(System.Char,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextEventCheck_OnCharacterSelection_mB421E2CFB617397137CF1AE9CC2F49E46EB3F0AE (TMP_TextEventCheck_tC19A6E94690E74ED73926E8EDC5F611501DC6233* __this, Il2CppChar ___c0, int32_t ___index1, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral5A3D6FC5AC03F283E51A1E494164E2F6D006FCE2);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralC088F0B05AACBA3A2E3A89109BF6E8C25EB734D1);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralF1B6AAF37DDF842141E903D071B58A3BDF13A5C6);
		s_Il2CppMethodInitialized = true;
	}
	{
		// Debug.Log("Character [" + c + "] at Index: " + index + " has been selected.");
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_0 = (StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)SZArrayNew(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var, (uint32_t)5);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_1 = L_0;
		NullCheck(L_1);
		ArrayElementTypeCheck (L_1, _stringLiteralC088F0B05AACBA3A2E3A89109BF6E8C25EB734D1);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralC088F0B05AACBA3A2E3A89109BF6E8C25EB734D1);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_2 = L_1;
		String_t* L_3;
		L_3 = Char_ToString_m2A308731F9577C06AF3C0901234E2EAC8327410C((&___c0), NULL);
		NullCheck(L_2);
		ArrayElementTypeCheck (L_2, L_3);
		(L_2)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_3);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_4 = L_2;
		NullCheck(L_4);
		ArrayElementTypeCheck (L_4, _stringLiteralF1B6AAF37DDF842141E903D071B58A3BDF13A5C6);
		(L_4)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralF1B6AAF37DDF842141E903D071B58A3BDF13A5C6);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_5 = L_4;
		String_t* L_6;
		L_6 = Int32_ToString_m030E01C24E294D6762FB0B6F37CB541581F55CA5((&___index1), NULL);
		NullCheck(L_5);
		ArrayElementTypeCheck (L_5, L_6);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_6);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_7 = L_5;
		NullCheck(L_7);
		ArrayElementTypeCheck (L_7, _stringLiteral5A3D6FC5AC03F283E51A1E494164E2F6D006FCE2);
		(L_7)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral5A3D6FC5AC03F283E51A1E494164E2F6D006FCE2);
		String_t* L_8;
		L_8 = String_Concat_m6B0734B65813C8EA093D78E5C2D16534EB6FE8C0(L_7, NULL);
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m86567BCF22BBE7809747817453CACA0E41E68219(L_8, NULL);
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_TextEventCheck::OnSpriteSelection(System.Char,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextEventCheck_OnSpriteSelection_mD88D899DE3321CC15502BB1174709BE290AB6215 (TMP_TextEventCheck_tC19A6E94690E74ED73926E8EDC5F611501DC6233* __this, Il2CppChar ___c0, int32_t ___index1, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral49F573D371AD0ACE3EA6E766EE4177DA2021309B);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral5A3D6FC5AC03F283E51A1E494164E2F6D006FCE2);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralF1B6AAF37DDF842141E903D071B58A3BDF13A5C6);
		s_Il2CppMethodInitialized = true;
	}
	{
		// Debug.Log("Sprite [" + c + "] at Index: " + index + " has been selected.");
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_0 = (StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)SZArrayNew(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var, (uint32_t)5);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_1 = L_0;
		NullCheck(L_1);
		ArrayElementTypeCheck (L_1, _stringLiteral49F573D371AD0ACE3EA6E766EE4177DA2021309B);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral49F573D371AD0ACE3EA6E766EE4177DA2021309B);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_2 = L_1;
		String_t* L_3;
		L_3 = Char_ToString_m2A308731F9577C06AF3C0901234E2EAC8327410C((&___c0), NULL);
		NullCheck(L_2);
		ArrayElementTypeCheck (L_2, L_3);
		(L_2)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_3);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_4 = L_2;
		NullCheck(L_4);
		ArrayElementTypeCheck (L_4, _stringLiteralF1B6AAF37DDF842141E903D071B58A3BDF13A5C6);
		(L_4)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralF1B6AAF37DDF842141E903D071B58A3BDF13A5C6);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_5 = L_4;
		String_t* L_6;
		L_6 = Int32_ToString_m030E01C24E294D6762FB0B6F37CB541581F55CA5((&___index1), NULL);
		NullCheck(L_5);
		ArrayElementTypeCheck (L_5, L_6);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_6);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_7 = L_5;
		NullCheck(L_7);
		ArrayElementTypeCheck (L_7, _stringLiteral5A3D6FC5AC03F283E51A1E494164E2F6D006FCE2);
		(L_7)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral5A3D6FC5AC03F283E51A1E494164E2F6D006FCE2);
		String_t* L_8;
		L_8 = String_Concat_m6B0734B65813C8EA093D78E5C2D16534EB6FE8C0(L_7, NULL);
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m86567BCF22BBE7809747817453CACA0E41E68219(L_8, NULL);
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_TextEventCheck::OnWordSelection(System.String,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextEventCheck_OnWordSelection_m180B102DAED1F3313F2F4BB6CF588FF96C8CAB79 (TMP_TextEventCheck_tC19A6E94690E74ED73926E8EDC5F611501DC6233* __this, String_t* ___word0, int32_t ___firstCharacterIndex1, int32_t ___length2, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral0E5ACD8F8AECEE8F67E336B26C4EAF8C98F34BD0);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral5A3D6FC5AC03F283E51A1E494164E2F6D006FCE2);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralCCFEDFAABA1932DDBD53E5E640ADC53339EB2C8D);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralD99C319B457682A09D028AF022D0B2EE6B4D48A6);
		s_Il2CppMethodInitialized = true;
	}
	{
		// Debug.Log("Word [" + word + "] with first character index of " + firstCharacterIndex + " and length of " + length + " has been selected.");
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_0 = (StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)SZArrayNew(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var, (uint32_t)7);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_1 = L_0;
		NullCheck(L_1);
		ArrayElementTypeCheck (L_1, _stringLiteralD99C319B457682A09D028AF022D0B2EE6B4D48A6);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralD99C319B457682A09D028AF022D0B2EE6B4D48A6);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_2 = L_1;
		String_t* L_3 = ___word0;
		NullCheck(L_2);
		ArrayElementTypeCheck (L_2, L_3);
		(L_2)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_3);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_4 = L_2;
		NullCheck(L_4);
		ArrayElementTypeCheck (L_4, _stringLiteral0E5ACD8F8AECEE8F67E336B26C4EAF8C98F34BD0);
		(L_4)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteral0E5ACD8F8AECEE8F67E336B26C4EAF8C98F34BD0);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_5 = L_4;
		String_t* L_6;
		L_6 = Int32_ToString_m030E01C24E294D6762FB0B6F37CB541581F55CA5((&___firstCharacterIndex1), NULL);
		NullCheck(L_5);
		ArrayElementTypeCheck (L_5, L_6);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_6);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_7 = L_5;
		NullCheck(L_7);
		ArrayElementTypeCheck (L_7, _stringLiteralCCFEDFAABA1932DDBD53E5E640ADC53339EB2C8D);
		(L_7)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteralCCFEDFAABA1932DDBD53E5E640ADC53339EB2C8D);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_8 = L_7;
		String_t* L_9;
		L_9 = Int32_ToString_m030E01C24E294D6762FB0B6F37CB541581F55CA5((&___length2), NULL);
		NullCheck(L_8);
		ArrayElementTypeCheck (L_8, L_9);
		(L_8)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_9);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_10 = L_8;
		NullCheck(L_10);
		ArrayElementTypeCheck (L_10, _stringLiteral5A3D6FC5AC03F283E51A1E494164E2F6D006FCE2);
		(L_10)->SetAt(static_cast<il2cpp_array_size_t>(6), (String_t*)_stringLiteral5A3D6FC5AC03F283E51A1E494164E2F6D006FCE2);
		String_t* L_11;
		L_11 = String_Concat_m6B0734B65813C8EA093D78E5C2D16534EB6FE8C0(L_10, NULL);
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m86567BCF22BBE7809747817453CACA0E41E68219(L_11, NULL);
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_TextEventCheck::OnLineSelection(System.String,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextEventCheck_OnLineSelection_mE0538FFAFE04A286F937907D0E4664338DCF1559 (TMP_TextEventCheck_tC19A6E94690E74ED73926E8EDC5F611501DC6233* __this, String_t* ___lineText0, int32_t ___firstCharacterIndex1, int32_t ___length2, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral0E5ACD8F8AECEE8F67E336B26C4EAF8C98F34BD0);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral5A3D6FC5AC03F283E51A1E494164E2F6D006FCE2);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralCCFEDFAABA1932DDBD53E5E640ADC53339EB2C8D);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralE2138FA8D137D1C6C81747FE1638815DDE9177B0);
		s_Il2CppMethodInitialized = true;
	}
	{
		// Debug.Log("Line [" + lineText + "] with first character index of " + firstCharacterIndex + " and length of " + length + " has been selected.");
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_0 = (StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)SZArrayNew(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var, (uint32_t)7);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_1 = L_0;
		NullCheck(L_1);
		ArrayElementTypeCheck (L_1, _stringLiteralE2138FA8D137D1C6C81747FE1638815DDE9177B0);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralE2138FA8D137D1C6C81747FE1638815DDE9177B0);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_2 = L_1;
		String_t* L_3 = ___lineText0;
		NullCheck(L_2);
		ArrayElementTypeCheck (L_2, L_3);
		(L_2)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_3);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_4 = L_2;
		NullCheck(L_4);
		ArrayElementTypeCheck (L_4, _stringLiteral0E5ACD8F8AECEE8F67E336B26C4EAF8C98F34BD0);
		(L_4)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteral0E5ACD8F8AECEE8F67E336B26C4EAF8C98F34BD0);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_5 = L_4;
		String_t* L_6;
		L_6 = Int32_ToString_m030E01C24E294D6762FB0B6F37CB541581F55CA5((&___firstCharacterIndex1), NULL);
		NullCheck(L_5);
		ArrayElementTypeCheck (L_5, L_6);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_6);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_7 = L_5;
		NullCheck(L_7);
		ArrayElementTypeCheck (L_7, _stringLiteralCCFEDFAABA1932DDBD53E5E640ADC53339EB2C8D);
		(L_7)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteralCCFEDFAABA1932DDBD53E5E640ADC53339EB2C8D);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_8 = L_7;
		String_t* L_9;
		L_9 = Int32_ToString_m030E01C24E294D6762FB0B6F37CB541581F55CA5((&___length2), NULL);
		NullCheck(L_8);
		ArrayElementTypeCheck (L_8, L_9);
		(L_8)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_9);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_10 = L_8;
		NullCheck(L_10);
		ArrayElementTypeCheck (L_10, _stringLiteral5A3D6FC5AC03F283E51A1E494164E2F6D006FCE2);
		(L_10)->SetAt(static_cast<il2cpp_array_size_t>(6), (String_t*)_stringLiteral5A3D6FC5AC03F283E51A1E494164E2F6D006FCE2);
		String_t* L_11;
		L_11 = String_Concat_m6B0734B65813C8EA093D78E5C2D16534EB6FE8C0(L_10, NULL);
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m86567BCF22BBE7809747817453CACA0E41E68219(L_11, NULL);
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_TextEventCheck::OnLinkSelection(System.String,System.String,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextEventCheck_OnLinkSelection_m72BF9241651D44805590F1DBADF2FD864D209779 (TMP_TextEventCheck_tC19A6E94690E74ED73926E8EDC5F611501DC6233* __this, String_t* ___linkID0, String_t* ___linkText1, int32_t ___linkIndex2, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral042E81C2165064627022D513DE063F1AE9F8EF49);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral1BF20F795791AC67CCC9E2B5B855E3A9D68CDDD6);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral2A5808F3B889783C5484106C7296410EA27F30B5);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral3D340328C9A8D4C7396701777F9419AB7A7D1DD7);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (m_TextComponent != null)
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_0 = __this->___m_TextComponent_5;
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_1;
		L_1 = Object_op_Inequality_m4D656395C27694A7F33F5AA8DE80A7AAF9E20BA7(L_0, (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C*)NULL, NULL);
		if (!L_1)
		{
			goto IL_0025;
		}
	}
	{
		// TMP_LinkInfo linkInfo = m_TextComponent.textInfo.linkInfo[linkIndex];
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_2 = __this->___m_TextComponent_5;
		NullCheck(L_2);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_3;
		L_3 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_2, NULL);
		NullCheck(L_3);
		TMP_LinkInfoU5BU5D_tE11BE54A5923BD2148E716289F44EA465E06536E* L_4 = L_3->___linkInfo_13;
		int32_t L_5 = ___linkIndex2;
		NullCheck(L_4);
	}

IL_0025:
	{
		// Debug.Log("Link Index: " + linkIndex + " with ID [" + linkID + "] and Text \"" + linkText + "\" has been selected.");
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_6 = (StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)SZArrayNew(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var, (uint32_t)7);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_7 = L_6;
		NullCheck(L_7);
		ArrayElementTypeCheck (L_7, _stringLiteral1BF20F795791AC67CCC9E2B5B855E3A9D68CDDD6);
		(L_7)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral1BF20F795791AC67CCC9E2B5B855E3A9D68CDDD6);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_8 = L_7;
		String_t* L_9;
		L_9 = Int32_ToString_m030E01C24E294D6762FB0B6F37CB541581F55CA5((&___linkIndex2), NULL);
		NullCheck(L_8);
		ArrayElementTypeCheck (L_8, L_9);
		(L_8)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_9);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_10 = L_8;
		NullCheck(L_10);
		ArrayElementTypeCheck (L_10, _stringLiteral3D340328C9A8D4C7396701777F9419AB7A7D1DD7);
		(L_10)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteral3D340328C9A8D4C7396701777F9419AB7A7D1DD7);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_11 = L_10;
		String_t* L_12 = ___linkID0;
		NullCheck(L_11);
		ArrayElementTypeCheck (L_11, L_12);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_12);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_13 = L_11;
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, _stringLiteral042E81C2165064627022D513DE063F1AE9F8EF49);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral042E81C2165064627022D513DE063F1AE9F8EF49);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_14 = L_13;
		String_t* L_15 = ___linkText1;
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, L_15);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_15);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_16 = L_14;
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, _stringLiteral2A5808F3B889783C5484106C7296410EA27F30B5);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(6), (String_t*)_stringLiteral2A5808F3B889783C5484106C7296410EA27F30B5);
		String_t* L_17;
		L_17 = String_Concat_m6B0734B65813C8EA093D78E5C2D16534EB6FE8C0(L_16, NULL);
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m86567BCF22BBE7809747817453CACA0E41E68219(L_17, NULL);
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_TextEventCheck::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextEventCheck__ctor_m8F6CDB8774BDF6C6B909919393AC0290BA2BB0AF (TMP_TextEventCheck_tC19A6E94690E74ED73926E8EDC5F611501DC6233* __this, const RuntimeMethod* method) 
{
	{
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.TMP_TextInfoDebugTool::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextInfoDebugTool__ctor_m54C6EE99B1DC2B4DE1F8E870974B3B41B970C37E (TMP_TextInfoDebugTool_tC8728D25321C0091ECD61B136B0E3A5B4AB4B76F* __this, const RuntimeMethod* method) 
{
	{
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.TMP_TextSelector_A::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextSelector_A_Awake_m662ED2E3CDB7AE16174109344A01A50AF3C44797 (TMP_TextSelector_A_t088F530FC9DE9E7B6AC9720D50A05B757189B294* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_GetComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_m788ADD6C98FD3A1039F72A865AB7D335AEA6116F_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// m_TextMeshPro = gameObject.GetComponent<TextMeshPro>();
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_0;
		L_0 = Component_get_gameObject_m57AEFBB14DB39EC476F740BA000E170355DE691B(__this, NULL);
		NullCheck(L_0);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_1;
		L_1 = GameObject_GetComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_m788ADD6C98FD3A1039F72A865AB7D335AEA6116F(L_0, GameObject_GetComponent_TisTextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E_m788ADD6C98FD3A1039F72A865AB7D335AEA6116F_RuntimeMethod_var);
		__this->___m_TextMeshPro_4 = L_1;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_TextMeshPro_4), (void*)L_1);
		// m_Camera = Camera.main;
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_2;
		L_2 = Camera_get_main_mF222B707D3BF8CC9C7544609EFC71CFB62E81D43(NULL);
		__this->___m_Camera_5 = L_2;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_Camera_5), (void*)L_2);
		// m_TextMeshPro.ForceMeshUpdate();
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_3 = __this->___m_TextMeshPro_4;
		NullCheck(L_3);
		VirtualActionInvoker2< bool, bool >::Invoke(106 /* System.Void TMPro.TMP_Text::ForceMeshUpdate(System.Boolean,System.Boolean) */, L_3, (bool)0, (bool)0);
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_TextSelector_A::LateUpdate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextSelector_A_LateUpdate_m1A711EC87962C6C5A7157414CD059D984D3BD55B (TMP_TextSelector_A_t088F530FC9DE9E7B6AC9720D50A05B757189B294* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RectTransformUtility_t65C00A84A72F17D78B81F2E7D88C2AA98AB61244_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMP_TextUtilities_tD7ED516E31C2AA0EB607D587C0BB0FE71A8BB934_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral6C3B90D0C27E620F9CB6F4530546C591AB0C5E12);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralFF988BE1271FBA06A4FB243CE21817E36A0AE666);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	int32_t V_2 = 0;
	int32_t V_3 = 0;
	int32_t V_4 = 0;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B V_5;
	memset((&V_5), 0, sizeof(V_5));
	Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* V_6 = NULL;
	TMP_LinkInfo_t9DC08E8BF8C5E8094AFF8C9FB3C251AF88B92DA6 V_7;
	memset((&V_7), 0, sizeof(V_7));
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_8;
	memset((&V_8), 0, sizeof(V_8));
	String_t* V_9 = NULL;
	TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983 V_10;
	memset((&V_10), 0, sizeof(V_10));
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_11;
	memset((&V_11), 0, sizeof(V_11));
	Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* V_12 = NULL;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B V_13;
	memset((&V_13), 0, sizeof(V_13));
	int32_t V_14 = 0;
	int32_t V_15 = 0;
	{
		// m_isHoveringObject = false;
		__this->___m_isHoveringObject_6 = (bool)0;
		// if (TMP_TextUtilities.IsIntersectingRectTransform(m_TextMeshPro.rectTransform, Input.mousePosition, Camera.main))
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_0 = __this->___m_TextMeshPro_4;
		NullCheck(L_0);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_1;
		L_1 = TMP_Text_get_rectTransform_m22DC10116809BEB2C66047A55337A588ED023EBF(L_0, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_2;
		L_2 = Input_get_mousePosition_m2414B43222ED0C5FAB960D393964189AFD21EEAD(NULL);
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_3;
		L_3 = Camera_get_main_mF222B707D3BF8CC9C7544609EFC71CFB62E81D43(NULL);
		il2cpp_codegen_runtime_class_init_inline(TMP_TextUtilities_tD7ED516E31C2AA0EB607D587C0BB0FE71A8BB934_il2cpp_TypeInfo_var);
		bool L_4;
		L_4 = TMP_TextUtilities_IsIntersectingRectTransform_mD130C941AB32BCEA5B2B293E979A7AC7F1160FFF(L_1, L_2, L_3, NULL);
		if (!L_4)
		{
			goto IL_002a;
		}
	}
	{
		// m_isHoveringObject = true;
		__this->___m_isHoveringObject_6 = (bool)1;
	}

IL_002a:
	{
		// if (m_isHoveringObject)
		bool L_5 = __this->___m_isHoveringObject_6;
		if (!L_5)
		{
			goto IL_0358;
		}
	}
	{
		// int charIndex = TMP_TextUtilities.FindIntersectingCharacter(m_TextMeshPro, Input.mousePosition, Camera.main, true);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_6 = __this->___m_TextMeshPro_4;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_7;
		L_7 = Input_get_mousePosition_m2414B43222ED0C5FAB960D393964189AFD21EEAD(NULL);
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_8;
		L_8 = Camera_get_main_mF222B707D3BF8CC9C7544609EFC71CFB62E81D43(NULL);
		il2cpp_codegen_runtime_class_init_inline(TMP_TextUtilities_tD7ED516E31C2AA0EB607D587C0BB0FE71A8BB934_il2cpp_TypeInfo_var);
		int32_t L_9;
		L_9 = TMP_TextUtilities_FindIntersectingCharacter_m6C03B17BB15028215958B0DAB969BB5199990DF2(L_6, L_7, L_8, (bool)1, NULL);
		V_0 = L_9;
		// if (charIndex != -1 && charIndex != m_lastCharIndex && (Input.GetKey(KeyCode.LeftShift) || Input.GetKey(KeyCode.RightShift)))
		int32_t L_10 = V_0;
		if ((((int32_t)L_10) == ((int32_t)(-1))))
		{
			goto IL_015b;
		}
	}
	{
		int32_t L_11 = V_0;
		int32_t L_12 = __this->___m_lastCharIndex_8;
		if ((((int32_t)L_11) == ((int32_t)L_12)))
		{
			goto IL_015b;
		}
	}
	{
		bool L_13;
		L_13 = Input_GetKey_m0BF0499CADC378F02B6BEE2399FB945AB929B81A(((int32_t)304), NULL);
		if (L_13)
		{
			goto IL_007a;
		}
	}
	{
		bool L_14;
		L_14 = Input_GetKey_m0BF0499CADC378F02B6BEE2399FB945AB929B81A(((int32_t)303), NULL);
		if (!L_14)
		{
			goto IL_015b;
		}
	}

IL_007a:
	{
		// m_lastCharIndex = charIndex;
		int32_t L_15 = V_0;
		__this->___m_lastCharIndex_8 = L_15;
		// int meshIndex = m_TextMeshPro.textInfo.characterInfo[charIndex].materialReferenceIndex;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_16 = __this->___m_TextMeshPro_4;
		NullCheck(L_16);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_17;
		L_17 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_16, NULL);
		NullCheck(L_17);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_18 = L_17->___characterInfo_11;
		int32_t L_19 = V_0;
		NullCheck(L_18);
		int32_t L_20 = ((L_18)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_19)))->___materialReferenceIndex_9;
		V_3 = L_20;
		// int vertexIndex = m_TextMeshPro.textInfo.characterInfo[charIndex].vertexIndex;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_21 = __this->___m_TextMeshPro_4;
		NullCheck(L_21);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_22;
		L_22 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_21, NULL);
		NullCheck(L_22);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_23 = L_22->___characterInfo_11;
		int32_t L_24 = V_0;
		NullCheck(L_23);
		int32_t L_25 = ((L_23)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_24)))->___vertexIndex_14;
		V_4 = L_25;
		// Color32 c = new Color32((byte)Random.Range(0, 255), (byte)Random.Range(0, 255), (byte)Random.Range(0, 255), 255);
		int32_t L_26;
		L_26 = Random_Range_mD4D2DEE3D2E75D07740C9A6F93B3088B03BBB8F8(0, ((int32_t)255), NULL);
		int32_t L_27;
		L_27 = Random_Range_mD4D2DEE3D2E75D07740C9A6F93B3088B03BBB8F8(0, ((int32_t)255), NULL);
		int32_t L_28;
		L_28 = Random_Range_mD4D2DEE3D2E75D07740C9A6F93B3088B03BBB8F8(0, ((int32_t)255), NULL);
		Color32__ctor_mC9C6B443F0C7CA3F8B174158B2AF6F05E18EAC4E_inline((&V_5), (uint8_t)((int32_t)(uint8_t)L_26), (uint8_t)((int32_t)(uint8_t)L_27), (uint8_t)((int32_t)(uint8_t)L_28), (uint8_t)((int32_t)255), NULL);
		// Color32[] vertexColors = m_TextMeshPro.textInfo.meshInfo[meshIndex].colors32;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_29 = __this->___m_TextMeshPro_4;
		NullCheck(L_29);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_30;
		L_30 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_29, NULL);
		NullCheck(L_30);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_31 = L_30->___meshInfo_16;
		int32_t L_32 = V_3;
		NullCheck(L_31);
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_33 = ((L_31)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_32)))->___colors32_11;
		V_6 = L_33;
		// vertexColors[vertexIndex + 0] = c;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_34 = V_6;
		int32_t L_35 = V_4;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_36 = V_5;
		NullCheck(L_34);
		(L_34)->SetAt(static_cast<il2cpp_array_size_t>(L_35), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_36);
		// vertexColors[vertexIndex + 1] = c;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_37 = V_6;
		int32_t L_38 = V_4;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_39 = V_5;
		NullCheck(L_37);
		(L_37)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_38, 1))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_39);
		// vertexColors[vertexIndex + 2] = c;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_40 = V_6;
		int32_t L_41 = V_4;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_42 = V_5;
		NullCheck(L_40);
		(L_40)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_41, 2))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_42);
		// vertexColors[vertexIndex + 3] = c;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_43 = V_6;
		int32_t L_44 = V_4;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_45 = V_5;
		NullCheck(L_43);
		(L_43)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_44, 3))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_45);
		// m_TextMeshPro.textInfo.meshInfo[meshIndex].mesh.colors32 = vertexColors;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_46 = __this->___m_TextMeshPro_4;
		NullCheck(L_46);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_47;
		L_47 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_46, NULL);
		NullCheck(L_47);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_48 = L_47->___meshInfo_16;
		int32_t L_49 = V_3;
		NullCheck(L_48);
		Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* L_50 = ((L_48)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_49)))->___mesh_4;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_51 = V_6;
		NullCheck(L_50);
		Mesh_set_colors32_m0E4462B7A1D613E6FB15DD7584BCE5491C17820F(L_50, L_51, NULL);
	}

IL_015b:
	{
		// int linkIndex = TMP_TextUtilities.FindIntersectingLink(m_TextMeshPro, Input.mousePosition, m_Camera);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_52 = __this->___m_TextMeshPro_4;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_53;
		L_53 = Input_get_mousePosition_m2414B43222ED0C5FAB960D393964189AFD21EEAD(NULL);
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_54 = __this->___m_Camera_5;
		il2cpp_codegen_runtime_class_init_inline(TMP_TextUtilities_tD7ED516E31C2AA0EB607D587C0BB0FE71A8BB934_il2cpp_TypeInfo_var);
		int32_t L_55;
		L_55 = TMP_TextUtilities_FindIntersectingLink_m2B5823274A30BBB3A54592E8DB44F119140C3778(L_52, L_53, L_54, NULL);
		V_1 = L_55;
		// if ((linkIndex == -1 && m_selectedLink != -1) || linkIndex != m_selectedLink)
		int32_t L_56 = V_1;
		if ((!(((uint32_t)L_56) == ((uint32_t)(-1)))))
		{
			goto IL_017f;
		}
	}
	{
		int32_t L_57 = __this->___m_selectedLink_7;
		if ((!(((uint32_t)L_57) == ((uint32_t)(-1)))))
		{
			goto IL_0188;
		}
	}

IL_017f:
	{
		int32_t L_58 = V_1;
		int32_t L_59 = __this->___m_selectedLink_7;
		if ((((int32_t)L_58) == ((int32_t)L_59)))
		{
			goto IL_018f;
		}
	}

IL_0188:
	{
		// m_selectedLink = -1;
		__this->___m_selectedLink_7 = (-1);
	}

IL_018f:
	{
		// if (linkIndex != -1 && linkIndex != m_selectedLink)
		int32_t L_60 = V_1;
		if ((((int32_t)L_60) == ((int32_t)(-1))))
		{
			goto IL_0202;
		}
	}
	{
		int32_t L_61 = V_1;
		int32_t L_62 = __this->___m_selectedLink_7;
		if ((((int32_t)L_61) == ((int32_t)L_62)))
		{
			goto IL_0202;
		}
	}
	{
		// m_selectedLink = linkIndex;
		int32_t L_63 = V_1;
		__this->___m_selectedLink_7 = L_63;
		// TMP_LinkInfo linkInfo = m_TextMeshPro.textInfo.linkInfo[linkIndex];
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_64 = __this->___m_TextMeshPro_4;
		NullCheck(L_64);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_65;
		L_65 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_64, NULL);
		NullCheck(L_65);
		TMP_LinkInfoU5BU5D_tE11BE54A5923BD2148E716289F44EA465E06536E* L_66 = L_65->___linkInfo_13;
		int32_t L_67 = V_1;
		NullCheck(L_66);
		int32_t L_68 = L_67;
		TMP_LinkInfo_t9DC08E8BF8C5E8094AFF8C9FB3C251AF88B92DA6 L_69 = (L_66)->GetAt(static_cast<il2cpp_array_size_t>(L_68));
		V_7 = L_69;
		// RectTransformUtility.ScreenPointToWorldPointInRectangle(m_TextMeshPro.rectTransform, Input.mousePosition, m_Camera, out worldPointInRectangle);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_70 = __this->___m_TextMeshPro_4;
		NullCheck(L_70);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_71;
		L_71 = TMP_Text_get_rectTransform_m22DC10116809BEB2C66047A55337A588ED023EBF(L_70, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_72;
		L_72 = Input_get_mousePosition_m2414B43222ED0C5FAB960D393964189AFD21EEAD(NULL);
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_73;
		L_73 = Vector2_op_Implicit_m8F73B300CB4E6F9B4EB5FB6130363D76CEAA230B_inline(L_72, NULL);
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_74 = __this->___m_Camera_5;
		il2cpp_codegen_runtime_class_init_inline(RectTransformUtility_t65C00A84A72F17D78B81F2E7D88C2AA98AB61244_il2cpp_TypeInfo_var);
		bool L_75;
		L_75 = RectTransformUtility_ScreenPointToWorldPointInRectangle_mA37289182AEA7D89BA927C325F82980085D6A882(L_71, L_73, L_74, (&V_8), NULL);
		// switch (linkInfo.GetLinkID())
		String_t* L_76;
		L_76 = TMP_LinkInfo_GetLinkID_mCC9D9E783D606660A4D15E0E746E1E27AD9C2425((&V_7), NULL);
		V_9 = L_76;
		String_t* L_77 = V_9;
		bool L_78;
		L_78 = String_op_Equality_m0D685A924E5CD78078F248ED1726DA5A9D7D6AC0(L_77, _stringLiteral6C3B90D0C27E620F9CB6F4530546C591AB0C5E12, NULL);
		if (L_78)
		{
			goto IL_0202;
		}
	}
	{
		String_t* L_79 = V_9;
		bool L_80;
		L_80 = String_op_Equality_m0D685A924E5CD78078F248ED1726DA5A9D7D6AC0(L_79, _stringLiteralFF988BE1271FBA06A4FB243CE21817E36A0AE666, NULL);
	}

IL_0202:
	{
		// int wordIndex = TMP_TextUtilities.FindIntersectingWord(m_TextMeshPro, Input.mousePosition, Camera.main);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_81 = __this->___m_TextMeshPro_4;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_82;
		L_82 = Input_get_mousePosition_m2414B43222ED0C5FAB960D393964189AFD21EEAD(NULL);
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_83;
		L_83 = Camera_get_main_mF222B707D3BF8CC9C7544609EFC71CFB62E81D43(NULL);
		il2cpp_codegen_runtime_class_init_inline(TMP_TextUtilities_tD7ED516E31C2AA0EB607D587C0BB0FE71A8BB934_il2cpp_TypeInfo_var);
		int32_t L_84;
		L_84 = TMP_TextUtilities_FindIntersectingWord_m1442DFD5AAE1FF0EE5054262A34E4D31B1E56879(L_81, L_82, L_83, NULL);
		V_2 = L_84;
		// if (wordIndex != -1 && wordIndex != m_lastWordIndex)
		int32_t L_85 = V_2;
		if ((((int32_t)L_85) == ((int32_t)(-1))))
		{
			goto IL_0358;
		}
	}
	{
		int32_t L_86 = V_2;
		int32_t L_87 = __this->___m_lastWordIndex_9;
		if ((((int32_t)L_86) == ((int32_t)L_87)))
		{
			goto IL_0358;
		}
	}
	{
		// m_lastWordIndex = wordIndex;
		int32_t L_88 = V_2;
		__this->___m_lastWordIndex_9 = L_88;
		// TMP_WordInfo wInfo = m_TextMeshPro.textInfo.wordInfo[wordIndex];
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_89 = __this->___m_TextMeshPro_4;
		NullCheck(L_89);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_90;
		L_90 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_89, NULL);
		NullCheck(L_90);
		TMP_WordInfoU5BU5D_tD1759E5A84DCCCD42B718D79E953E72A432BB4DC* L_91 = L_90->___wordInfo_12;
		int32_t L_92 = V_2;
		NullCheck(L_91);
		int32_t L_93 = L_92;
		TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983 L_94 = (L_91)->GetAt(static_cast<il2cpp_array_size_t>(L_93));
		V_10 = L_94;
		// Vector3 wordPOS = m_TextMeshPro.transform.TransformPoint(m_TextMeshPro.textInfo.characterInfo[wInfo.firstCharacterIndex].bottomLeft);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_95 = __this->___m_TextMeshPro_4;
		NullCheck(L_95);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_96;
		L_96 = TextMeshPro_get_transform_m750148EC362B176A0E80D6F4ABAC1062E5281E11(L_95, NULL);
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_97 = __this->___m_TextMeshPro_4;
		NullCheck(L_97);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_98;
		L_98 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_97, NULL);
		NullCheck(L_98);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_99 = L_98->___characterInfo_11;
		TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983 L_100 = V_10;
		int32_t L_101 = L_100.___firstCharacterIndex_1;
		NullCheck(L_99);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_102 = ((L_99)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_101)))->___bottomLeft_20;
		NullCheck(L_96);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_103;
		L_103 = Transform_TransformPoint_m05BFF013DB830D7BFE44A007703694AE1062EE44(L_96, L_102, NULL);
		V_11 = L_103;
		// wordPOS = Camera.main.WorldToScreenPoint(wordPOS);
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_104;
		L_104 = Camera_get_main_mF222B707D3BF8CC9C7544609EFC71CFB62E81D43(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_105 = V_11;
		NullCheck(L_104);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_106;
		L_106 = Camera_WorldToScreenPoint_m26B4C8945C3B5731F1CC5944CFD96BF17126BAA3(L_104, L_105, NULL);
		V_11 = L_106;
		// Color32[] vertexColors = m_TextMeshPro.textInfo.meshInfo[0].colors32;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_107 = __this->___m_TextMeshPro_4;
		NullCheck(L_107);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_108;
		L_108 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_107, NULL);
		NullCheck(L_108);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_109 = L_108->___meshInfo_16;
		NullCheck(L_109);
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_110 = ((L_109)->GetAddressAt(static_cast<il2cpp_array_size_t>(0)))->___colors32_11;
		V_12 = L_110;
		// Color32 c = new Color32((byte)Random.Range(0, 255), (byte)Random.Range(0, 255), (byte)Random.Range(0, 255), 255);
		int32_t L_111;
		L_111 = Random_Range_mD4D2DEE3D2E75D07740C9A6F93B3088B03BBB8F8(0, ((int32_t)255), NULL);
		int32_t L_112;
		L_112 = Random_Range_mD4D2DEE3D2E75D07740C9A6F93B3088B03BBB8F8(0, ((int32_t)255), NULL);
		int32_t L_113;
		L_113 = Random_Range_mD4D2DEE3D2E75D07740C9A6F93B3088B03BBB8F8(0, ((int32_t)255), NULL);
		Color32__ctor_mC9C6B443F0C7CA3F8B174158B2AF6F05E18EAC4E_inline((&V_13), (uint8_t)((int32_t)(uint8_t)L_111), (uint8_t)((int32_t)(uint8_t)L_112), (uint8_t)((int32_t)(uint8_t)L_113), (uint8_t)((int32_t)255), NULL);
		// for (int i = 0; i < wInfo.characterCount; i++)
		V_14 = 0;
		goto IL_033b;
	}

IL_02dd:
	{
		// int vertexIndex = m_TextMeshPro.textInfo.characterInfo[wInfo.firstCharacterIndex + i].vertexIndex;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_114 = __this->___m_TextMeshPro_4;
		NullCheck(L_114);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_115;
		L_115 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_114, NULL);
		NullCheck(L_115);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_116 = L_115->___characterInfo_11;
		TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983 L_117 = V_10;
		int32_t L_118 = L_117.___firstCharacterIndex_1;
		int32_t L_119 = V_14;
		NullCheck(L_116);
		int32_t L_120 = ((L_116)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_118, L_119)))))->___vertexIndex_14;
		V_15 = L_120;
		// vertexColors[vertexIndex + 0] = c;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_121 = V_12;
		int32_t L_122 = V_15;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_123 = V_13;
		NullCheck(L_121);
		(L_121)->SetAt(static_cast<il2cpp_array_size_t>(L_122), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_123);
		// vertexColors[vertexIndex + 1] = c;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_124 = V_12;
		int32_t L_125 = V_15;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_126 = V_13;
		NullCheck(L_124);
		(L_124)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_125, 1))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_126);
		// vertexColors[vertexIndex + 2] = c;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_127 = V_12;
		int32_t L_128 = V_15;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_129 = V_13;
		NullCheck(L_127);
		(L_127)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_128, 2))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_129);
		// vertexColors[vertexIndex + 3] = c;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_130 = V_12;
		int32_t L_131 = V_15;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_132 = V_13;
		NullCheck(L_130);
		(L_130)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_131, 3))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_132);
		// for (int i = 0; i < wInfo.characterCount; i++)
		int32_t L_133 = V_14;
		V_14 = ((int32_t)il2cpp_codegen_add(L_133, 1));
	}

IL_033b:
	{
		// for (int i = 0; i < wInfo.characterCount; i++)
		int32_t L_134 = V_14;
		TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983 L_135 = V_10;
		int32_t L_136 = L_135.___characterCount_3;
		if ((((int32_t)L_134) < ((int32_t)L_136)))
		{
			goto IL_02dd;
		}
	}
	{
		// m_TextMeshPro.mesh.colors32 = vertexColors;
		TextMeshPro_t4560AB28A3EAF503895A781A9C625273D833270E* L_137 = __this->___m_TextMeshPro_4;
		NullCheck(L_137);
		Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* L_138;
		L_138 = VirtualFuncInvoker0< Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* >::Invoke(77 /* UnityEngine.Mesh TMPro.TMP_Text::get_mesh() */, L_137);
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_139 = V_12;
		NullCheck(L_138);
		Mesh_set_colors32_m0E4462B7A1D613E6FB15DD7584BCE5491C17820F(L_138, L_139, NULL);
	}

IL_0358:
	{
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_TextSelector_A::OnPointerEnter(UnityEngine.EventSystems.PointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextSelector_A_OnPointerEnter_m747F05CBEF90BF713BF726E47CA37DC86D9B439A (TMP_TextSelector_A_t088F530FC9DE9E7B6AC9720D50A05B757189B294* __this, PointerEventData_t9670F3C7D823CCB738A1604C72A1EB90292396FB* ___eventData0, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralA2EC275CC698277AF27C3AFD1084563679CC06EB);
		s_Il2CppMethodInitialized = true;
	}
	{
		// Debug.Log("OnPointerEnter()");
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m86567BCF22BBE7809747817453CACA0E41E68219(_stringLiteralA2EC275CC698277AF27C3AFD1084563679CC06EB, NULL);
		// m_isHoveringObject = true;
		__this->___m_isHoveringObject_6 = (bool)1;
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_TextSelector_A::OnPointerExit(UnityEngine.EventSystems.PointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextSelector_A_OnPointerExit_m5D7D8A07591506FB7291E84A951AB5C43DAA5503 (TMP_TextSelector_A_t088F530FC9DE9E7B6AC9720D50A05B757189B294* __this, PointerEventData_t9670F3C7D823CCB738A1604C72A1EB90292396FB* ___eventData0, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral598081DBD06E8B1A338629AF7933F9131C6D33AB);
		s_Il2CppMethodInitialized = true;
	}
	{
		// Debug.Log("OnPointerExit()");
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m86567BCF22BBE7809747817453CACA0E41E68219(_stringLiteral598081DBD06E8B1A338629AF7933F9131C6D33AB, NULL);
		// m_isHoveringObject = false;
		__this->___m_isHoveringObject_6 = (bool)0;
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_TextSelector_A::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextSelector_A__ctor_m4C56A438A3140D5CF9C7AFB8466E11142F4FA3BE (TMP_TextSelector_A_t088F530FC9DE9E7B6AC9720D50A05B757189B294* __this, const RuntimeMethod* method) 
{
	{
		// private int m_selectedLink = -1;
		__this->___m_selectedLink_7 = (-1);
		// private int m_lastCharIndex = -1;
		__this->___m_lastCharIndex_8 = (-1);
		// private int m_lastWordIndex = -1;
		__this->___m_lastWordIndex_9 = (-1);
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.TMP_TextSelector_B::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextSelector_B_Awake_m773D4C87E67823272DBF597B9CADE82DD3BFFD87 (TMP_TextSelector_B_t57166268B8E5437286F55085EA19969D0A528CC2* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponentInChildren_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_m60A1B193FDBBFB3719065622DB5E0BB21CA4ABDC_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_GetComponentInParent_TisCanvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26_m0A41CB7A7F9A10FCC98D1C7B5799D57C2724D991_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_GetComponent_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_mBDBF977A8C7734F6EDD83FC65C6FDDE74427611E_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_Instantiate_TisRectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5_m432798BF76671A2FB88A9BF403D2F706ADA37236_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// m_TextMeshPro = gameObject.GetComponent<TextMeshProUGUI>();
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_0;
		L_0 = Component_get_gameObject_m57AEFBB14DB39EC476F740BA000E170355DE691B(__this, NULL);
		NullCheck(L_0);
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_1;
		L_1 = GameObject_GetComponent_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_mBDBF977A8C7734F6EDD83FC65C6FDDE74427611E(L_0, GameObject_GetComponent_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_mBDBF977A8C7734F6EDD83FC65C6FDDE74427611E_RuntimeMethod_var);
		__this->___m_TextMeshPro_9 = L_1;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_TextMeshPro_9), (void*)L_1);
		// m_Canvas = gameObject.GetComponentInParent<Canvas>();
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_2;
		L_2 = Component_get_gameObject_m57AEFBB14DB39EC476F740BA000E170355DE691B(__this, NULL);
		NullCheck(L_2);
		Canvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26* L_3;
		L_3 = GameObject_GetComponentInParent_TisCanvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26_m0A41CB7A7F9A10FCC98D1C7B5799D57C2724D991(L_2, GameObject_GetComponentInParent_TisCanvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26_m0A41CB7A7F9A10FCC98D1C7B5799D57C2724D991_RuntimeMethod_var);
		__this->___m_Canvas_10 = L_3;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_Canvas_10), (void*)L_3);
		// if (m_Canvas.renderMode == RenderMode.ScreenSpaceOverlay)
		Canvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26* L_4 = __this->___m_Canvas_10;
		NullCheck(L_4);
		int32_t L_5;
		L_5 = Canvas_get_renderMode_m1BEF259548C6CAD27E4466F31D20752D246688CC(L_4, NULL);
		if (L_5)
		{
			goto IL_0038;
		}
	}
	{
		// m_Camera = null;
		__this->___m_Camera_11 = (Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184*)NULL;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_Camera_11), (void*)(Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184*)NULL);
		goto IL_0049;
	}

IL_0038:
	{
		// m_Camera = m_Canvas.worldCamera;
		Canvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26* L_6 = __this->___m_Canvas_10;
		NullCheck(L_6);
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_7;
		L_7 = Canvas_get_worldCamera_mD2FDE13B61A5213F4E64B40008EB0A8D2D07B853(L_6, NULL);
		__this->___m_Camera_11 = L_7;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_Camera_11), (void*)L_7);
	}

IL_0049:
	{
		// m_TextPopup_RectTransform = Instantiate(TextPopup_Prefab_01) as RectTransform;
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_8 = __this->___TextPopup_Prefab_01_4;
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_9;
		L_9 = Object_Instantiate_TisRectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5_m432798BF76671A2FB88A9BF403D2F706ADA37236(L_8, Object_Instantiate_TisRectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5_m432798BF76671A2FB88A9BF403D2F706ADA37236_RuntimeMethod_var);
		__this->___m_TextPopup_RectTransform_5 = L_9;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_TextPopup_RectTransform_5), (void*)L_9);
		// m_TextPopup_RectTransform.SetParent(m_Canvas.transform, false);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_10 = __this->___m_TextPopup_RectTransform_5;
		Canvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26* L_11 = __this->___m_Canvas_10;
		NullCheck(L_11);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_12;
		L_12 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_11, NULL);
		NullCheck(L_10);
		Transform_SetParent_m9BDD7B7476714B2D7919B10BDC22CE75C0A0A195(L_10, L_12, (bool)0, NULL);
		// m_TextPopup_TMPComponent = m_TextPopup_RectTransform.GetComponentInChildren<TextMeshProUGUI>();
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_13 = __this->___m_TextPopup_RectTransform_5;
		NullCheck(L_13);
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_14;
		L_14 = Component_GetComponentInChildren_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_m60A1B193FDBBFB3719065622DB5E0BB21CA4ABDC(L_13, Component_GetComponentInChildren_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_m60A1B193FDBBFB3719065622DB5E0BB21CA4ABDC_RuntimeMethod_var);
		__this->___m_TextPopup_TMPComponent_6 = L_14;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_TextPopup_TMPComponent_6), (void*)L_14);
		// m_TextPopup_RectTransform.gameObject.SetActive(false);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_15 = __this->___m_TextPopup_RectTransform_5;
		NullCheck(L_15);
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_16;
		L_16 = Component_get_gameObject_m57AEFBB14DB39EC476F740BA000E170355DE691B(L_15, NULL);
		NullCheck(L_16);
		GameObject_SetActive_m638E92E1E75E519E5B24CF150B08CA8E0CDFAB92(L_16, (bool)0, NULL);
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_TextSelector_B::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextSelector_B_OnEnable_m8DA695DB0913F7123C4ADAFD5BEAB4424FA5861B (TMP_TextSelector_B_t57166268B8E5437286F55085EA19969D0A528CC2* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&FastAction_1_Add_m368726E3508DB2176C4F87A79C0C0CC4816176D6_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMP_TextSelector_B_ON_TEXT_CHANGED_m5B53EF1608E98B6A56AAA386085A3216B35A51EE_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// TMPro_EventManager.TEXT_CHANGED_EVENT.Add(ON_TEXT_CHANGED);
		il2cpp_codegen_runtime_class_init_inline(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		FastAction_1_tE50C6A692DF85AB55BE3160B659FA7DF19DFA005* L_0 = ((TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_StaticFields*)il2cpp_codegen_static_fields_for(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var))->___TEXT_CHANGED_EVENT_11;
		Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A* L_1 = (Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A*)il2cpp_codegen_object_new(Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		Action_1__ctor_m95478636F075134CA2998E22B214611472600983(L_1, __this, (intptr_t)((void*)TMP_TextSelector_B_ON_TEXT_CHANGED_m5B53EF1608E98B6A56AAA386085A3216B35A51EE_RuntimeMethod_var), NULL);
		NullCheck(L_0);
		FastAction_1_Add_m368726E3508DB2176C4F87A79C0C0CC4816176D6(L_0, L_1, FastAction_1_Add_m368726E3508DB2176C4F87A79C0C0CC4816176D6_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_TextSelector_B::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextSelector_B_OnDisable_mF2EF7AE0E015218AB77936BD5FD6863F7788F11D (TMP_TextSelector_B_t57166268B8E5437286F55085EA19969D0A528CC2* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&FastAction_1_Remove_mB29130AC90F5F8967CD89587717469E44E4D186F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMP_TextSelector_B_ON_TEXT_CHANGED_m5B53EF1608E98B6A56AAA386085A3216B35A51EE_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// TMPro_EventManager.TEXT_CHANGED_EVENT.Remove(ON_TEXT_CHANGED);
		il2cpp_codegen_runtime_class_init_inline(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		FastAction_1_tE50C6A692DF85AB55BE3160B659FA7DF19DFA005* L_0 = ((TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_StaticFields*)il2cpp_codegen_static_fields_for(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var))->___TEXT_CHANGED_EVENT_11;
		Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A* L_1 = (Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A*)il2cpp_codegen_object_new(Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		Action_1__ctor_m95478636F075134CA2998E22B214611472600983(L_1, __this, (intptr_t)((void*)TMP_TextSelector_B_ON_TEXT_CHANGED_m5B53EF1608E98B6A56AAA386085A3216B35A51EE_RuntimeMethod_var), NULL);
		NullCheck(L_0);
		FastAction_1_Remove_mB29130AC90F5F8967CD89587717469E44E4D186F(L_0, L_1, FastAction_1_Remove_mB29130AC90F5F8967CD89587717469E44E4D186F_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_TextSelector_B::ON_TEXT_CHANGED(UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextSelector_B_ON_TEXT_CHANGED_m5B53EF1608E98B6A56AAA386085A3216B35A51EE (TMP_TextSelector_B_t57166268B8E5437286F55085EA19969D0A528CC2* __this, Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___obj0, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (obj == m_TextMeshPro)
		Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* L_0 = ___obj0;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_1 = __this->___m_TextMeshPro_9;
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = Object_op_Equality_mD3DB0D72CE0250C84033DC2A90AEF9D59896E536(L_0, L_1, NULL);
		if (!L_2)
		{
			goto IL_0024;
		}
	}
	{
		// m_cachedMeshInfoVertexData = m_TextMeshPro.textInfo.CopyMeshInfoVertexData();
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_3 = __this->___m_TextMeshPro_9;
		NullCheck(L_3);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_4;
		L_4 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_3, NULL);
		NullCheck(L_4);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_5;
		L_5 = TMP_TextInfo_CopyMeshInfoVertexData_mF66E2F8821470E68D95FEB53D456CFA86241C0CA(L_4, NULL);
		__this->___m_cachedMeshInfoVertexData_17 = L_5;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_cachedMeshInfoVertexData_17), (void*)L_5);
	}

IL_0024:
	{
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_TextSelector_B::LateUpdate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextSelector_B_LateUpdate_mE1B3969D788695E37240927FC6B1827CC6DD5EFF (TMP_TextSelector_B_t57166268B8E5437286F55085EA19969D0A528CC2* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&RectTransformUtility_t65C00A84A72F17D78B81F2E7D88C2AA98AB61244_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMP_TextUtilities_tD7ED516E31C2AA0EB607D587C0BB0FE71A8BB934_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral69CE07E5C7ADCC833DA3E659BC9009F6C3C1346A);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral6C3B90D0C27E620F9CB6F4530546C591AB0C5E12);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralEE3657997C5E6EC82CDE374326A95906F03A3315);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralFF988BE1271FBA06A4FB243CE21817E36A0AE666);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	int32_t V_2 = 0;
	int32_t V_3 = 0;
	int32_t V_4 = 0;
	Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* V_5 = NULL;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_6;
	memset((&V_6), 0, sizeof(V_6));
	float V_7 = 0.0f;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B V_8;
	memset((&V_8), 0, sizeof(V_8));
	TMP_MeshInfo_t320C52212E9D672EBB5F5C18C3E0700AA33DD76B V_9;
	memset((&V_9), 0, sizeof(V_9));
	int32_t V_10 = 0;
	TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983 V_11;
	memset((&V_11), 0, sizeof(V_11));
	int32_t V_12 = 0;
	int32_t V_13 = 0;
	int32_t V_14 = 0;
	int32_t V_15 = 0;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B V_16;
	memset((&V_16), 0, sizeof(V_16));
	TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983 V_17;
	memset((&V_17), 0, sizeof(V_17));
	int32_t V_18 = 0;
	int32_t V_19 = 0;
	int32_t V_20 = 0;
	int32_t V_21 = 0;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B V_22;
	memset((&V_22), 0, sizeof(V_22));
	TMP_LinkInfo_t9DC08E8BF8C5E8094AFF8C9FB3C251AF88B92DA6 V_23;
	memset((&V_23), 0, sizeof(V_23));
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_24;
	memset((&V_24), 0, sizeof(V_24));
	String_t* V_25 = NULL;
	{
		// if (isHoveringObject)
		bool L_0 = __this->___isHoveringObject_12;
		if (!L_0)
		{
			goto IL_069b;
		}
	}
	{
		// int charIndex = TMP_TextUtilities.FindIntersectingCharacter(m_TextMeshPro, Input.mousePosition, m_Camera, true);
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_1 = __this->___m_TextMeshPro_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_2;
		L_2 = Input_get_mousePosition_m2414B43222ED0C5FAB960D393964189AFD21EEAD(NULL);
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_3 = __this->___m_Camera_11;
		il2cpp_codegen_runtime_class_init_inline(TMP_TextUtilities_tD7ED516E31C2AA0EB607D587C0BB0FE71A8BB934_il2cpp_TypeInfo_var);
		int32_t L_4;
		L_4 = TMP_TextUtilities_FindIntersectingCharacter_m6C03B17BB15028215958B0DAB969BB5199990DF2(L_1, L_2, L_3, (bool)1, NULL);
		V_0 = L_4;
		// if (charIndex == -1 || charIndex != m_lastIndex)
		int32_t L_5 = V_0;
		if ((((int32_t)L_5) == ((int32_t)(-1))))
		{
			goto IL_0030;
		}
	}
	{
		int32_t L_6 = V_0;
		int32_t L_7 = __this->___m_lastIndex_15;
		if ((((int32_t)L_6) == ((int32_t)L_7)))
		{
			goto IL_0043;
		}
	}

IL_0030:
	{
		// RestoreCachedVertexAttributes(m_lastIndex);
		int32_t L_8 = __this->___m_lastIndex_15;
		TMP_TextSelector_B_RestoreCachedVertexAttributes_m1FD258EC7A53C8E1ECB18EB6FFEFC6239780C398(__this, L_8, NULL);
		// m_lastIndex = -1;
		__this->___m_lastIndex_15 = (-1);
	}

IL_0043:
	{
		// if (charIndex != -1 && charIndex != m_lastIndex && (Input.GetKey(KeyCode.LeftShift) || Input.GetKey(KeyCode.RightShift)))
		int32_t L_9 = V_0;
		if ((((int32_t)L_9) == ((int32_t)(-1))))
		{
			goto IL_0323;
		}
	}
	{
		int32_t L_10 = V_0;
		int32_t L_11 = __this->___m_lastIndex_15;
		if ((((int32_t)L_10) == ((int32_t)L_11)))
		{
			goto IL_0323;
		}
	}
	{
		bool L_12;
		L_12 = Input_GetKey_m0BF0499CADC378F02B6BEE2399FB945AB929B81A(((int32_t)304), NULL);
		if (L_12)
		{
			goto IL_0071;
		}
	}
	{
		bool L_13;
		L_13 = Input_GetKey_m0BF0499CADC378F02B6BEE2399FB945AB929B81A(((int32_t)303), NULL);
		if (!L_13)
		{
			goto IL_0323;
		}
	}

IL_0071:
	{
		// m_lastIndex = charIndex;
		int32_t L_14 = V_0;
		__this->___m_lastIndex_15 = L_14;
		// int materialIndex = m_TextMeshPro.textInfo.characterInfo[charIndex].materialReferenceIndex;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_15 = __this->___m_TextMeshPro_9;
		NullCheck(L_15);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_16;
		L_16 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_15, NULL);
		NullCheck(L_16);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_17 = L_16->___characterInfo_11;
		int32_t L_18 = V_0;
		NullCheck(L_17);
		int32_t L_19 = ((L_17)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_18)))->___materialReferenceIndex_9;
		V_3 = L_19;
		// int vertexIndex = m_TextMeshPro.textInfo.characterInfo[charIndex].vertexIndex;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_20 = __this->___m_TextMeshPro_9;
		NullCheck(L_20);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_21;
		L_21 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_20, NULL);
		NullCheck(L_21);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_22 = L_21->___characterInfo_11;
		int32_t L_23 = V_0;
		NullCheck(L_22);
		int32_t L_24 = ((L_22)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_23)))->___vertexIndex_14;
		V_4 = L_24;
		// Vector3[] vertices = m_TextMeshPro.textInfo.meshInfo[materialIndex].vertices;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_25 = __this->___m_TextMeshPro_9;
		NullCheck(L_25);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_26;
		L_26 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_25, NULL);
		NullCheck(L_26);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_27 = L_26->___meshInfo_16;
		int32_t L_28 = V_3;
		NullCheck(L_27);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_29 = ((L_27)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_28)))->___vertices_6;
		V_5 = L_29;
		// Vector2 charMidBasline = (vertices[vertexIndex + 0] + vertices[vertexIndex + 2]) / 2;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_30 = V_5;
		int32_t L_31 = V_4;
		NullCheck(L_30);
		int32_t L_32 = L_31;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_33 = (L_30)->GetAt(static_cast<il2cpp_array_size_t>(L_32));
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_34 = V_5;
		int32_t L_35 = V_4;
		NullCheck(L_34);
		int32_t L_36 = ((int32_t)il2cpp_codegen_add(L_35, 2));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_37 = (L_34)->GetAt(static_cast<il2cpp_array_size_t>(L_36));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_38;
		L_38 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_33, L_37, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_39;
		L_39 = Vector3_op_Division_mD7200D6D432BAFC4135C5B17A0B0A812203B0270_inline(L_38, (2.0f), NULL);
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_40;
		L_40 = Vector2_op_Implicit_m8F73B300CB4E6F9B4EB5FB6130363D76CEAA230B_inline(L_39, NULL);
		// Vector3 offset = charMidBasline;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_41;
		L_41 = Vector2_op_Implicit_mCD214B04BC52AED3C89C3BEF664B6247E5F8954A_inline(L_40, NULL);
		V_6 = L_41;
		// vertices[vertexIndex + 0] = vertices[vertexIndex + 0] - offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_42 = V_5;
		int32_t L_43 = V_4;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_44 = V_5;
		int32_t L_45 = V_4;
		NullCheck(L_44);
		int32_t L_46 = L_45;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_47 = (L_44)->GetAt(static_cast<il2cpp_array_size_t>(L_46));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_48 = V_6;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_49;
		L_49 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_47, L_48, NULL);
		NullCheck(L_42);
		(L_42)->SetAt(static_cast<il2cpp_array_size_t>(L_43), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_49);
		// vertices[vertexIndex + 1] = vertices[vertexIndex + 1] - offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_50 = V_5;
		int32_t L_51 = V_4;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_52 = V_5;
		int32_t L_53 = V_4;
		NullCheck(L_52);
		int32_t L_54 = ((int32_t)il2cpp_codegen_add(L_53, 1));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_55 = (L_52)->GetAt(static_cast<il2cpp_array_size_t>(L_54));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_56 = V_6;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_57;
		L_57 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_55, L_56, NULL);
		NullCheck(L_50);
		(L_50)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_51, 1))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_57);
		// vertices[vertexIndex + 2] = vertices[vertexIndex + 2] - offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_58 = V_5;
		int32_t L_59 = V_4;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_60 = V_5;
		int32_t L_61 = V_4;
		NullCheck(L_60);
		int32_t L_62 = ((int32_t)il2cpp_codegen_add(L_61, 2));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_63 = (L_60)->GetAt(static_cast<il2cpp_array_size_t>(L_62));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_64 = V_6;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_65;
		L_65 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_63, L_64, NULL);
		NullCheck(L_58);
		(L_58)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_59, 2))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_65);
		// vertices[vertexIndex + 3] = vertices[vertexIndex + 3] - offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_66 = V_5;
		int32_t L_67 = V_4;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_68 = V_5;
		int32_t L_69 = V_4;
		NullCheck(L_68);
		int32_t L_70 = ((int32_t)il2cpp_codegen_add(L_69, 3));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_71 = (L_68)->GetAt(static_cast<il2cpp_array_size_t>(L_70));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_72 = V_6;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_73;
		L_73 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_71, L_72, NULL);
		NullCheck(L_66);
		(L_66)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_67, 3))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_73);
		// float zoomFactor = 1.5f;
		V_7 = (1.5f);
		// m_matrix = Matrix4x4.TRS(Vector3.zero, Quaternion.identity, Vector3.one * zoomFactor);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_74;
		L_74 = Vector3_get_zero_m9D7F7B580B5A276411267E96AA3425736D9BDC83_inline(NULL);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_75;
		L_75 = Quaternion_get_identity_mB9CAEEB21BC81352CBF32DB9664BFC06FA7EA27B_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_76;
		L_76 = Vector3_get_one_mE6A2D5C6578E94268024613B596BF09F990B1260_inline(NULL);
		float L_77 = V_7;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_78;
		L_78 = Vector3_op_Multiply_m516FE285F5342F922C6EB3FCB33197E9017FF484_inline(L_76, L_77, NULL);
		Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 L_79;
		L_79 = Matrix4x4_TRS_mFEBA6926DB0044B96EF0CE98F30FEE7596820680(L_74, L_75, L_78, NULL);
		__this->___m_matrix_16 = L_79;
		// vertices[vertexIndex + 0] = m_matrix.MultiplyPoint3x4(vertices[vertexIndex + 0]);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_80 = V_5;
		int32_t L_81 = V_4;
		Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6* L_82 = (&__this->___m_matrix_16);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_83 = V_5;
		int32_t L_84 = V_4;
		NullCheck(L_83);
		int32_t L_85 = L_84;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_86 = (L_83)->GetAt(static_cast<il2cpp_array_size_t>(L_85));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_87;
		L_87 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814(L_82, L_86, NULL);
		NullCheck(L_80);
		(L_80)->SetAt(static_cast<il2cpp_array_size_t>(L_81), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_87);
		// vertices[vertexIndex + 1] = m_matrix.MultiplyPoint3x4(vertices[vertexIndex + 1]);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_88 = V_5;
		int32_t L_89 = V_4;
		Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6* L_90 = (&__this->___m_matrix_16);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_91 = V_5;
		int32_t L_92 = V_4;
		NullCheck(L_91);
		int32_t L_93 = ((int32_t)il2cpp_codegen_add(L_92, 1));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_94 = (L_91)->GetAt(static_cast<il2cpp_array_size_t>(L_93));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_95;
		L_95 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814(L_90, L_94, NULL);
		NullCheck(L_88);
		(L_88)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_89, 1))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_95);
		// vertices[vertexIndex + 2] = m_matrix.MultiplyPoint3x4(vertices[vertexIndex + 2]);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_96 = V_5;
		int32_t L_97 = V_4;
		Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6* L_98 = (&__this->___m_matrix_16);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_99 = V_5;
		int32_t L_100 = V_4;
		NullCheck(L_99);
		int32_t L_101 = ((int32_t)il2cpp_codegen_add(L_100, 2));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_102 = (L_99)->GetAt(static_cast<il2cpp_array_size_t>(L_101));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_103;
		L_103 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814(L_98, L_102, NULL);
		NullCheck(L_96);
		(L_96)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_97, 2))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_103);
		// vertices[vertexIndex + 3] = m_matrix.MultiplyPoint3x4(vertices[vertexIndex + 3]);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_104 = V_5;
		int32_t L_105 = V_4;
		Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6* L_106 = (&__this->___m_matrix_16);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_107 = V_5;
		int32_t L_108 = V_4;
		NullCheck(L_107);
		int32_t L_109 = ((int32_t)il2cpp_codegen_add(L_108, 3));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_110 = (L_107)->GetAt(static_cast<il2cpp_array_size_t>(L_109));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_111;
		L_111 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814(L_106, L_110, NULL);
		NullCheck(L_104);
		(L_104)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_105, 3))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_111);
		// vertices[vertexIndex + 0] = vertices[vertexIndex + 0] + offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_112 = V_5;
		int32_t L_113 = V_4;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_114 = V_5;
		int32_t L_115 = V_4;
		NullCheck(L_114);
		int32_t L_116 = L_115;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_117 = (L_114)->GetAt(static_cast<il2cpp_array_size_t>(L_116));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_118 = V_6;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_119;
		L_119 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_117, L_118, NULL);
		NullCheck(L_112);
		(L_112)->SetAt(static_cast<il2cpp_array_size_t>(L_113), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_119);
		// vertices[vertexIndex + 1] = vertices[vertexIndex + 1] + offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_120 = V_5;
		int32_t L_121 = V_4;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_122 = V_5;
		int32_t L_123 = V_4;
		NullCheck(L_122);
		int32_t L_124 = ((int32_t)il2cpp_codegen_add(L_123, 1));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_125 = (L_122)->GetAt(static_cast<il2cpp_array_size_t>(L_124));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_126 = V_6;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_127;
		L_127 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_125, L_126, NULL);
		NullCheck(L_120);
		(L_120)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_121, 1))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_127);
		// vertices[vertexIndex + 2] = vertices[vertexIndex + 2] + offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_128 = V_5;
		int32_t L_129 = V_4;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_130 = V_5;
		int32_t L_131 = V_4;
		NullCheck(L_130);
		int32_t L_132 = ((int32_t)il2cpp_codegen_add(L_131, 2));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_133 = (L_130)->GetAt(static_cast<il2cpp_array_size_t>(L_132));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_134 = V_6;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_135;
		L_135 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_133, L_134, NULL);
		NullCheck(L_128);
		(L_128)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_129, 2))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_135);
		// vertices[vertexIndex + 3] = vertices[vertexIndex + 3] + offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_136 = V_5;
		int32_t L_137 = V_4;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_138 = V_5;
		int32_t L_139 = V_4;
		NullCheck(L_138);
		int32_t L_140 = ((int32_t)il2cpp_codegen_add(L_139, 3));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_141 = (L_138)->GetAt(static_cast<il2cpp_array_size_t>(L_140));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_142 = V_6;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_143;
		L_143 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_141, L_142, NULL);
		NullCheck(L_136);
		(L_136)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_137, 3))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_143);
		// Color32 c = new Color32(255, 255, 192, 255);
		Color32__ctor_mC9C6B443F0C7CA3F8B174158B2AF6F05E18EAC4E_inline((&V_8), (uint8_t)((int32_t)255), (uint8_t)((int32_t)255), (uint8_t)((int32_t)192), (uint8_t)((int32_t)255), NULL);
		// Color32[] vertexColors = m_TextMeshPro.textInfo.meshInfo[materialIndex].colors32;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_144 = __this->___m_TextMeshPro_9;
		NullCheck(L_144);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_145;
		L_145 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_144, NULL);
		NullCheck(L_145);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_146 = L_145->___meshInfo_16;
		int32_t L_147 = V_3;
		NullCheck(L_146);
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_148 = ((L_146)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_147)))->___colors32_11;
		// vertexColors[vertexIndex + 0] = c;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_149 = L_148;
		int32_t L_150 = V_4;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_151 = V_8;
		NullCheck(L_149);
		(L_149)->SetAt(static_cast<il2cpp_array_size_t>(L_150), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_151);
		// vertexColors[vertexIndex + 1] = c;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_152 = L_149;
		int32_t L_153 = V_4;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_154 = V_8;
		NullCheck(L_152);
		(L_152)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_153, 1))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_154);
		// vertexColors[vertexIndex + 2] = c;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_155 = L_152;
		int32_t L_156 = V_4;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_157 = V_8;
		NullCheck(L_155);
		(L_155)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_156, 2))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_157);
		// vertexColors[vertexIndex + 3] = c;
		int32_t L_158 = V_4;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_159 = V_8;
		NullCheck(L_155);
		(L_155)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_158, 3))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_159);
		// TMP_MeshInfo meshInfo = m_TextMeshPro.textInfo.meshInfo[materialIndex];
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_160 = __this->___m_TextMeshPro_9;
		NullCheck(L_160);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_161;
		L_161 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_160, NULL);
		NullCheck(L_161);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_162 = L_161->___meshInfo_16;
		int32_t L_163 = V_3;
		NullCheck(L_162);
		int32_t L_164 = L_163;
		TMP_MeshInfo_t320C52212E9D672EBB5F5C18C3E0700AA33DD76B L_165 = (L_162)->GetAt(static_cast<il2cpp_array_size_t>(L_164));
		V_9 = L_165;
		// int lastVertexIndex = vertices.Length - 4;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_166 = V_5;
		NullCheck(L_166);
		V_10 = ((int32_t)il2cpp_codegen_subtract(((int32_t)(((RuntimeArray*)L_166)->max_length)), 4));
		// meshInfo.SwapVertexData(vertexIndex, lastVertexIndex);
		int32_t L_167 = V_4;
		int32_t L_168 = V_10;
		TMP_MeshInfo_SwapVertexData_mBB35F36F8E7E6CF1429B26417140570EE94FE718((&V_9), L_167, L_168, NULL);
		// m_TextMeshPro.UpdateVertexData(TMP_VertexDataUpdateFlags.All);
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_169 = __this->___m_TextMeshPro_9;
		NullCheck(L_169);
		VirtualActionInvoker1< int32_t >::Invoke(108 /* System.Void TMPro.TMP_Text::UpdateVertexData(TMPro.TMP_VertexDataUpdateFlags) */, L_169, ((int32_t)255));
	}

IL_0323:
	{
		// int wordIndex = TMP_TextUtilities.FindIntersectingWord(m_TextMeshPro, Input.mousePosition, m_Camera);
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_170 = __this->___m_TextMeshPro_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_171;
		L_171 = Input_get_mousePosition_m2414B43222ED0C5FAB960D393964189AFD21EEAD(NULL);
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_172 = __this->___m_Camera_11;
		il2cpp_codegen_runtime_class_init_inline(TMP_TextUtilities_tD7ED516E31C2AA0EB607D587C0BB0FE71A8BB934_il2cpp_TypeInfo_var);
		int32_t L_173;
		L_173 = TMP_TextUtilities_FindIntersectingWord_m1442DFD5AAE1FF0EE5054262A34E4D31B1E56879(L_170, L_171, L_172, NULL);
		V_1 = L_173;
		// if (m_TextPopup_RectTransform != null && m_selectedWord != -1 && (wordIndex == -1 || wordIndex != m_selectedWord))
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_174 = __this->___m_TextPopup_RectTransform_5;
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_175;
		L_175 = Object_op_Inequality_m4D656395C27694A7F33F5AA8DE80A7AAF9E20BA7(L_174, (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C*)NULL, NULL);
		if (!L_175)
		{
			goto IL_045c;
		}
	}
	{
		int32_t L_176 = __this->___m_selectedWord_13;
		if ((((int32_t)L_176) == ((int32_t)(-1))))
		{
			goto IL_045c;
		}
	}
	{
		int32_t L_177 = V_1;
		if ((((int32_t)L_177) == ((int32_t)(-1))))
		{
			goto IL_0367;
		}
	}
	{
		int32_t L_178 = V_1;
		int32_t L_179 = __this->___m_selectedWord_13;
		if ((((int32_t)L_178) == ((int32_t)L_179)))
		{
			goto IL_045c;
		}
	}

IL_0367:
	{
		// TMP_WordInfo wInfo = m_TextMeshPro.textInfo.wordInfo[m_selectedWord];
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_180 = __this->___m_TextMeshPro_9;
		NullCheck(L_180);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_181;
		L_181 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_180, NULL);
		NullCheck(L_181);
		TMP_WordInfoU5BU5D_tD1759E5A84DCCCD42B718D79E953E72A432BB4DC* L_182 = L_181->___wordInfo_12;
		int32_t L_183 = __this->___m_selectedWord_13;
		NullCheck(L_182);
		int32_t L_184 = L_183;
		TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983 L_185 = (L_182)->GetAt(static_cast<il2cpp_array_size_t>(L_184));
		V_11 = L_185;
		// for (int i = 0; i < wInfo.characterCount; i++)
		V_12 = 0;
		goto IL_0437;
	}

IL_038c:
	{
		// int characterIndex = wInfo.firstCharacterIndex + i;
		TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983 L_186 = V_11;
		int32_t L_187 = L_186.___firstCharacterIndex_1;
		int32_t L_188 = V_12;
		V_13 = ((int32_t)il2cpp_codegen_add(L_187, L_188));
		// int meshIndex = m_TextMeshPro.textInfo.characterInfo[characterIndex].materialReferenceIndex;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_189 = __this->___m_TextMeshPro_9;
		NullCheck(L_189);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_190;
		L_190 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_189, NULL);
		NullCheck(L_190);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_191 = L_190->___characterInfo_11;
		int32_t L_192 = V_13;
		NullCheck(L_191);
		int32_t L_193 = ((L_191)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_192)))->___materialReferenceIndex_9;
		V_14 = L_193;
		// int vertexIndex = m_TextMeshPro.textInfo.characterInfo[characterIndex].vertexIndex;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_194 = __this->___m_TextMeshPro_9;
		NullCheck(L_194);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_195;
		L_195 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_194, NULL);
		NullCheck(L_195);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_196 = L_195->___characterInfo_11;
		int32_t L_197 = V_13;
		NullCheck(L_196);
		int32_t L_198 = ((L_196)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_197)))->___vertexIndex_14;
		V_15 = L_198;
		// Color32[] vertexColors = m_TextMeshPro.textInfo.meshInfo[meshIndex].colors32;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_199 = __this->___m_TextMeshPro_9;
		NullCheck(L_199);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_200;
		L_200 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_199, NULL);
		NullCheck(L_200);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_201 = L_200->___meshInfo_16;
		int32_t L_202 = V_14;
		NullCheck(L_201);
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_203 = ((L_201)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_202)))->___colors32_11;
		// Color32 c = vertexColors[vertexIndex + 0].Tint(1.33333f);
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_204 = L_203;
		int32_t L_205 = V_15;
		NullCheck(L_204);
		int32_t L_206 = L_205;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_207 = (L_204)->GetAt(static_cast<il2cpp_array_size_t>(L_206));
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_208;
		L_208 = TMPro_ExtensionMethods_Tint_m5DA2EA8D3C7DFF5FC493CE93D07C3FC039A07133(L_207, (1.33333004f), NULL);
		V_16 = L_208;
		// vertexColors[vertexIndex + 0] = c;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_209 = L_204;
		int32_t L_210 = V_15;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_211 = V_16;
		NullCheck(L_209);
		(L_209)->SetAt(static_cast<il2cpp_array_size_t>(L_210), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_211);
		// vertexColors[vertexIndex + 1] = c;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_212 = L_209;
		int32_t L_213 = V_15;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_214 = V_16;
		NullCheck(L_212);
		(L_212)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_213, 1))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_214);
		// vertexColors[vertexIndex + 2] = c;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_215 = L_212;
		int32_t L_216 = V_15;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_217 = V_16;
		NullCheck(L_215);
		(L_215)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_216, 2))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_217);
		// vertexColors[vertexIndex + 3] = c;
		int32_t L_218 = V_15;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_219 = V_16;
		NullCheck(L_215);
		(L_215)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_218, 3))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_219);
		// for (int i = 0; i < wInfo.characterCount; i++)
		int32_t L_220 = V_12;
		V_12 = ((int32_t)il2cpp_codegen_add(L_220, 1));
	}

IL_0437:
	{
		// for (int i = 0; i < wInfo.characterCount; i++)
		int32_t L_221 = V_12;
		TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983 L_222 = V_11;
		int32_t L_223 = L_222.___characterCount_3;
		if ((((int32_t)L_221) < ((int32_t)L_223)))
		{
			goto IL_038c;
		}
	}
	{
		// m_TextMeshPro.UpdateVertexData(TMP_VertexDataUpdateFlags.All);
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_224 = __this->___m_TextMeshPro_9;
		NullCheck(L_224);
		VirtualActionInvoker1< int32_t >::Invoke(108 /* System.Void TMPro.TMP_Text::UpdateVertexData(TMPro.TMP_VertexDataUpdateFlags) */, L_224, ((int32_t)255));
		// m_selectedWord = -1;
		__this->___m_selectedWord_13 = (-1);
	}

IL_045c:
	{
		// if (wordIndex != -1 && wordIndex != m_selectedWord && !(Input.GetKey(KeyCode.LeftShift) || Input.GetKey(KeyCode.RightShift)))
		int32_t L_225 = V_1;
		if ((((int32_t)L_225) == ((int32_t)(-1))))
		{
			goto IL_057d;
		}
	}
	{
		int32_t L_226 = V_1;
		int32_t L_227 = __this->___m_selectedWord_13;
		if ((((int32_t)L_226) == ((int32_t)L_227)))
		{
			goto IL_057d;
		}
	}
	{
		bool L_228;
		L_228 = Input_GetKey_m0BF0499CADC378F02B6BEE2399FB945AB929B81A(((int32_t)304), NULL);
		if (L_228)
		{
			goto IL_057d;
		}
	}
	{
		bool L_229;
		L_229 = Input_GetKey_m0BF0499CADC378F02B6BEE2399FB945AB929B81A(((int32_t)303), NULL);
		if (L_229)
		{
			goto IL_057d;
		}
	}
	{
		// m_selectedWord = wordIndex;
		int32_t L_230 = V_1;
		__this->___m_selectedWord_13 = L_230;
		// TMP_WordInfo wInfo = m_TextMeshPro.textInfo.wordInfo[wordIndex];
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_231 = __this->___m_TextMeshPro_9;
		NullCheck(L_231);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_232;
		L_232 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_231, NULL);
		NullCheck(L_232);
		TMP_WordInfoU5BU5D_tD1759E5A84DCCCD42B718D79E953E72A432BB4DC* L_233 = L_232->___wordInfo_12;
		int32_t L_234 = V_1;
		NullCheck(L_233);
		int32_t L_235 = L_234;
		TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983 L_236 = (L_233)->GetAt(static_cast<il2cpp_array_size_t>(L_235));
		V_17 = L_236;
		// for (int i = 0; i < wInfo.characterCount; i++)
		V_18 = 0;
		goto IL_055f;
	}

IL_04b4:
	{
		// int characterIndex = wInfo.firstCharacterIndex + i;
		TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983 L_237 = V_17;
		int32_t L_238 = L_237.___firstCharacterIndex_1;
		int32_t L_239 = V_18;
		V_19 = ((int32_t)il2cpp_codegen_add(L_238, L_239));
		// int meshIndex = m_TextMeshPro.textInfo.characterInfo[characterIndex].materialReferenceIndex;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_240 = __this->___m_TextMeshPro_9;
		NullCheck(L_240);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_241;
		L_241 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_240, NULL);
		NullCheck(L_241);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_242 = L_241->___characterInfo_11;
		int32_t L_243 = V_19;
		NullCheck(L_242);
		int32_t L_244 = ((L_242)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_243)))->___materialReferenceIndex_9;
		V_20 = L_244;
		// int vertexIndex = m_TextMeshPro.textInfo.characterInfo[characterIndex].vertexIndex;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_245 = __this->___m_TextMeshPro_9;
		NullCheck(L_245);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_246;
		L_246 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_245, NULL);
		NullCheck(L_246);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_247 = L_246->___characterInfo_11;
		int32_t L_248 = V_19;
		NullCheck(L_247);
		int32_t L_249 = ((L_247)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_248)))->___vertexIndex_14;
		V_21 = L_249;
		// Color32[] vertexColors = m_TextMeshPro.textInfo.meshInfo[meshIndex].colors32;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_250 = __this->___m_TextMeshPro_9;
		NullCheck(L_250);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_251;
		L_251 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_250, NULL);
		NullCheck(L_251);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_252 = L_251->___meshInfo_16;
		int32_t L_253 = V_20;
		NullCheck(L_252);
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_254 = ((L_252)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_253)))->___colors32_11;
		// Color32 c = vertexColors[vertexIndex + 0].Tint(0.75f);
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_255 = L_254;
		int32_t L_256 = V_21;
		NullCheck(L_255);
		int32_t L_257 = L_256;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_258 = (L_255)->GetAt(static_cast<il2cpp_array_size_t>(L_257));
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_259;
		L_259 = TMPro_ExtensionMethods_Tint_m5DA2EA8D3C7DFF5FC493CE93D07C3FC039A07133(L_258, (0.75f), NULL);
		V_22 = L_259;
		// vertexColors[vertexIndex + 0] = c;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_260 = L_255;
		int32_t L_261 = V_21;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_262 = V_22;
		NullCheck(L_260);
		(L_260)->SetAt(static_cast<il2cpp_array_size_t>(L_261), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_262);
		// vertexColors[vertexIndex + 1] = c;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_263 = L_260;
		int32_t L_264 = V_21;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_265 = V_22;
		NullCheck(L_263);
		(L_263)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_264, 1))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_265);
		// vertexColors[vertexIndex + 2] = c;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_266 = L_263;
		int32_t L_267 = V_21;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_268 = V_22;
		NullCheck(L_266);
		(L_266)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_267, 2))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_268);
		// vertexColors[vertexIndex + 3] = c;
		int32_t L_269 = V_21;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_270 = V_22;
		NullCheck(L_266);
		(L_266)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_269, 3))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_270);
		// for (int i = 0; i < wInfo.characterCount; i++)
		int32_t L_271 = V_18;
		V_18 = ((int32_t)il2cpp_codegen_add(L_271, 1));
	}

IL_055f:
	{
		// for (int i = 0; i < wInfo.characterCount; i++)
		int32_t L_272 = V_18;
		TMP_WordInfo_t825112AF0B76E4461F9C7DD336A02CC6A090A983 L_273 = V_17;
		int32_t L_274 = L_273.___characterCount_3;
		if ((((int32_t)L_272) < ((int32_t)L_274)))
		{
			goto IL_04b4;
		}
	}
	{
		// m_TextMeshPro.UpdateVertexData(TMP_VertexDataUpdateFlags.All);
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_275 = __this->___m_TextMeshPro_9;
		NullCheck(L_275);
		VirtualActionInvoker1< int32_t >::Invoke(108 /* System.Void TMPro.TMP_Text::UpdateVertexData(TMPro.TMP_VertexDataUpdateFlags) */, L_275, ((int32_t)255));
	}

IL_057d:
	{
		// int linkIndex = TMP_TextUtilities.FindIntersectingLink(m_TextMeshPro, Input.mousePosition, m_Camera);
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_276 = __this->___m_TextMeshPro_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_277;
		L_277 = Input_get_mousePosition_m2414B43222ED0C5FAB960D393964189AFD21EEAD(NULL);
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_278 = __this->___m_Camera_11;
		il2cpp_codegen_runtime_class_init_inline(TMP_TextUtilities_tD7ED516E31C2AA0EB607D587C0BB0FE71A8BB934_il2cpp_TypeInfo_var);
		int32_t L_279;
		L_279 = TMP_TextUtilities_FindIntersectingLink_m2B5823274A30BBB3A54592E8DB44F119140C3778(L_276, L_277, L_278, NULL);
		V_2 = L_279;
		// if ((linkIndex == -1 && m_selectedLink != -1) || linkIndex != m_selectedLink)
		int32_t L_280 = V_2;
		if ((!(((uint32_t)L_280) == ((uint32_t)(-1)))))
		{
			goto IL_05a1;
		}
	}
	{
		int32_t L_281 = __this->___m_selectedLink_14;
		if ((!(((uint32_t)L_281) == ((uint32_t)(-1)))))
		{
			goto IL_05aa;
		}
	}

IL_05a1:
	{
		int32_t L_282 = V_2;
		int32_t L_283 = __this->___m_selectedLink_14;
		if ((((int32_t)L_282) == ((int32_t)L_283)))
		{
			goto IL_05c2;
		}
	}

IL_05aa:
	{
		// m_TextPopup_RectTransform.gameObject.SetActive(false);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_284 = __this->___m_TextPopup_RectTransform_5;
		NullCheck(L_284);
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_285;
		L_285 = Component_get_gameObject_m57AEFBB14DB39EC476F740BA000E170355DE691B(L_284, NULL);
		NullCheck(L_285);
		GameObject_SetActive_m638E92E1E75E519E5B24CF150B08CA8E0CDFAB92(L_285, (bool)0, NULL);
		// m_selectedLink = -1;
		__this->___m_selectedLink_14 = (-1);
	}

IL_05c2:
	{
		// if (linkIndex != -1 && linkIndex != m_selectedLink)
		int32_t L_286 = V_2;
		if ((((int32_t)L_286) == ((int32_t)(-1))))
		{
			goto IL_06b7;
		}
	}
	{
		int32_t L_287 = V_2;
		int32_t L_288 = __this->___m_selectedLink_14;
		if ((((int32_t)L_287) == ((int32_t)L_288)))
		{
			goto IL_06b7;
		}
	}
	{
		// m_selectedLink = linkIndex;
		int32_t L_289 = V_2;
		__this->___m_selectedLink_14 = L_289;
		// TMP_LinkInfo linkInfo = m_TextMeshPro.textInfo.linkInfo[linkIndex];
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_290 = __this->___m_TextMeshPro_9;
		NullCheck(L_290);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_291;
		L_291 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_290, NULL);
		NullCheck(L_291);
		TMP_LinkInfoU5BU5D_tE11BE54A5923BD2148E716289F44EA465E06536E* L_292 = L_291->___linkInfo_13;
		int32_t L_293 = V_2;
		NullCheck(L_292);
		int32_t L_294 = L_293;
		TMP_LinkInfo_t9DC08E8BF8C5E8094AFF8C9FB3C251AF88B92DA6 L_295 = (L_292)->GetAt(static_cast<il2cpp_array_size_t>(L_294));
		V_23 = L_295;
		// RectTransformUtility.ScreenPointToWorldPointInRectangle(m_TextMeshPro.rectTransform, Input.mousePosition, m_Camera, out worldPointInRectangle);
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_296 = __this->___m_TextMeshPro_9;
		NullCheck(L_296);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_297;
		L_297 = TMP_Text_get_rectTransform_m22DC10116809BEB2C66047A55337A588ED023EBF(L_296, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_298;
		L_298 = Input_get_mousePosition_m2414B43222ED0C5FAB960D393964189AFD21EEAD(NULL);
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_299;
		L_299 = Vector2_op_Implicit_m8F73B300CB4E6F9B4EB5FB6130363D76CEAA230B_inline(L_298, NULL);
		Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* L_300 = __this->___m_Camera_11;
		il2cpp_codegen_runtime_class_init_inline(RectTransformUtility_t65C00A84A72F17D78B81F2E7D88C2AA98AB61244_il2cpp_TypeInfo_var);
		bool L_301;
		L_301 = RectTransformUtility_ScreenPointToWorldPointInRectangle_mA37289182AEA7D89BA927C325F82980085D6A882(L_297, L_299, L_300, (&V_24), NULL);
		// switch (linkInfo.GetLinkID())
		String_t* L_302;
		L_302 = TMP_LinkInfo_GetLinkID_mCC9D9E783D606660A4D15E0E746E1E27AD9C2425((&V_23), NULL);
		V_25 = L_302;
		String_t* L_303 = V_25;
		bool L_304;
		L_304 = String_op_Equality_m0D685A924E5CD78078F248ED1726DA5A9D7D6AC0(L_303, _stringLiteral6C3B90D0C27E620F9CB6F4530546C591AB0C5E12, NULL);
		if (L_304)
		{
			goto IL_063d;
		}
	}
	{
		String_t* L_305 = V_25;
		bool L_306;
		L_306 = String_op_Equality_m0D685A924E5CD78078F248ED1726DA5A9D7D6AC0(L_305, _stringLiteralFF988BE1271FBA06A4FB243CE21817E36A0AE666, NULL);
		if (L_306)
		{
			goto IL_066c;
		}
	}
	{
		return;
	}

IL_063d:
	{
		// m_TextPopup_RectTransform.position = worldPointInRectangle;
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_307 = __this->___m_TextPopup_RectTransform_5;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_308 = V_24;
		NullCheck(L_307);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_307, L_308, NULL);
		// m_TextPopup_RectTransform.gameObject.SetActive(true);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_309 = __this->___m_TextPopup_RectTransform_5;
		NullCheck(L_309);
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_310;
		L_310 = Component_get_gameObject_m57AEFBB14DB39EC476F740BA000E170355DE691B(L_309, NULL);
		NullCheck(L_310);
		GameObject_SetActive_m638E92E1E75E519E5B24CF150B08CA8E0CDFAB92(L_310, (bool)1, NULL);
		// m_TextPopup_TMPComponent.text = k_LinkText + " ID 01";
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_311 = __this->___m_TextPopup_TMPComponent_6;
		NullCheck(L_311);
		VirtualActionInvoker1< String_t* >::Invoke(66 /* System.Void TMPro.TMP_Text::set_text(System.String) */, L_311, _stringLiteralEE3657997C5E6EC82CDE374326A95906F03A3315);
		// break;
		return;
	}

IL_066c:
	{
		// m_TextPopup_RectTransform.position = worldPointInRectangle;
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_312 = __this->___m_TextPopup_RectTransform_5;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_313 = V_24;
		NullCheck(L_312);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_312, L_313, NULL);
		// m_TextPopup_RectTransform.gameObject.SetActive(true);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_314 = __this->___m_TextPopup_RectTransform_5;
		NullCheck(L_314);
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_315;
		L_315 = Component_get_gameObject_m57AEFBB14DB39EC476F740BA000E170355DE691B(L_314, NULL);
		NullCheck(L_315);
		GameObject_SetActive_m638E92E1E75E519E5B24CF150B08CA8E0CDFAB92(L_315, (bool)1, NULL);
		// m_TextPopup_TMPComponent.text = k_LinkText + " ID 02";
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_316 = __this->___m_TextPopup_TMPComponent_6;
		NullCheck(L_316);
		VirtualActionInvoker1< String_t* >::Invoke(66 /* System.Void TMPro.TMP_Text::set_text(System.String) */, L_316, _stringLiteral69CE07E5C7ADCC833DA3E659BC9009F6C3C1346A);
		// break;
		return;
	}

IL_069b:
	{
		// if (m_lastIndex != -1)
		int32_t L_317 = __this->___m_lastIndex_15;
		if ((((int32_t)L_317) == ((int32_t)(-1))))
		{
			goto IL_06b7;
		}
	}
	{
		// RestoreCachedVertexAttributes(m_lastIndex);
		int32_t L_318 = __this->___m_lastIndex_15;
		TMP_TextSelector_B_RestoreCachedVertexAttributes_m1FD258EC7A53C8E1ECB18EB6FFEFC6239780C398(__this, L_318, NULL);
		// m_lastIndex = -1;
		__this->___m_lastIndex_15 = (-1);
	}

IL_06b7:
	{
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_TextSelector_B::OnPointerEnter(UnityEngine.EventSystems.PointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextSelector_B_OnPointerEnter_mBAF5711E20E579D21258BD4040454A64E1134D98 (TMP_TextSelector_B_t57166268B8E5437286F55085EA19969D0A528CC2* __this, PointerEventData_t9670F3C7D823CCB738A1604C72A1EB90292396FB* ___eventData0, const RuntimeMethod* method) 
{
	{
		// isHoveringObject = true;
		__this->___isHoveringObject_12 = (bool)1;
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_TextSelector_B::OnPointerExit(UnityEngine.EventSystems.PointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextSelector_B_OnPointerExit_m40ED8F7E47FF6FD8B38BE96B2216267F61509D65 (TMP_TextSelector_B_t57166268B8E5437286F55085EA19969D0A528CC2* __this, PointerEventData_t9670F3C7D823CCB738A1604C72A1EB90292396FB* ___eventData0, const RuntimeMethod* method) 
{
	{
		// isHoveringObject = false;
		__this->___isHoveringObject_12 = (bool)0;
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_TextSelector_B::OnPointerClick(UnityEngine.EventSystems.PointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextSelector_B_OnPointerClick_m773B56D918B1D0F73C5ABC0EB22FD34D39AFBB97 (TMP_TextSelector_B_t57166268B8E5437286F55085EA19969D0A528CC2* __this, PointerEventData_t9670F3C7D823CCB738A1604C72A1EB90292396FB* ___eventData0, const RuntimeMethod* method) 
{
	{
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_TextSelector_B::OnPointerUp(UnityEngine.EventSystems.PointerEventData)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextSelector_B_OnPointerUp_mF409D728900872CC323B18DDA7F91265058BE772 (TMP_TextSelector_B_t57166268B8E5437286F55085EA19969D0A528CC2* __this, PointerEventData_t9670F3C7D823CCB738A1604C72A1EB90292396FB* ___eventData0, const RuntimeMethod* method) 
{
	{
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_TextSelector_B::RestoreCachedVertexAttributes(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextSelector_B_RestoreCachedVertexAttributes_m1FD258EC7A53C8E1ECB18EB6FFEFC6239780C398 (TMP_TextSelector_B_t57166268B8E5437286F55085EA19969D0A528CC2* __this, int32_t ___index0, const RuntimeMethod* method) 
{
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* V_2 = NULL;
	Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* V_3 = NULL;
	Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* V_4 = NULL;
	Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* V_5 = NULL;
	int32_t V_6 = 0;
	{
		// if (index == -1 || index > m_TextMeshPro.textInfo.characterCount - 1) return;
		int32_t L_0 = ___index0;
		if ((((int32_t)L_0) == ((int32_t)(-1))))
		{
			goto IL_0019;
		}
	}
	{
		int32_t L_1 = ___index0;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_2 = __this->___m_TextMeshPro_9;
		NullCheck(L_2);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_3;
		L_3 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_2, NULL);
		NullCheck(L_3);
		int32_t L_4 = L_3->___characterCount_3;
		if ((((int32_t)L_1) <= ((int32_t)((int32_t)il2cpp_codegen_subtract(L_4, 1)))))
		{
			goto IL_001a;
		}
	}

IL_0019:
	{
		// if (index == -1 || index > m_TextMeshPro.textInfo.characterCount - 1) return;
		return;
	}

IL_001a:
	{
		// int materialIndex = m_TextMeshPro.textInfo.characterInfo[index].materialReferenceIndex;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_5 = __this->___m_TextMeshPro_9;
		NullCheck(L_5);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_6;
		L_6 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_5, NULL);
		NullCheck(L_6);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_7 = L_6->___characterInfo_11;
		int32_t L_8 = ___index0;
		NullCheck(L_7);
		int32_t L_9 = ((L_7)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_8)))->___materialReferenceIndex_9;
		V_0 = L_9;
		// int vertexIndex = m_TextMeshPro.textInfo.characterInfo[index].vertexIndex;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_10 = __this->___m_TextMeshPro_9;
		NullCheck(L_10);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_11;
		L_11 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_10, NULL);
		NullCheck(L_11);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_12 = L_11->___characterInfo_11;
		int32_t L_13 = ___index0;
		NullCheck(L_12);
		int32_t L_14 = ((L_12)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_13)))->___vertexIndex_14;
		V_1 = L_14;
		// Vector3[] src_vertices = m_cachedMeshInfoVertexData[materialIndex].vertices;
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_15 = __this->___m_cachedMeshInfoVertexData_17;
		int32_t L_16 = V_0;
		NullCheck(L_15);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_17 = ((L_15)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_16)))->___vertices_6;
		V_2 = L_17;
		// Vector3[] dst_vertices = m_TextMeshPro.textInfo.meshInfo[materialIndex].vertices;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_18 = __this->___m_TextMeshPro_9;
		NullCheck(L_18);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_19;
		L_19 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_18, NULL);
		NullCheck(L_19);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_20 = L_19->___meshInfo_16;
		int32_t L_21 = V_0;
		NullCheck(L_20);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_22 = ((L_20)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_21)))->___vertices_6;
		// dst_vertices[vertexIndex + 0] = src_vertices[vertexIndex + 0];
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_23 = L_22;
		int32_t L_24 = V_1;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_25 = V_2;
		int32_t L_26 = V_1;
		NullCheck(L_25);
		int32_t L_27 = L_26;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_28 = (L_25)->GetAt(static_cast<il2cpp_array_size_t>(L_27));
		NullCheck(L_23);
		(L_23)->SetAt(static_cast<il2cpp_array_size_t>(L_24), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_28);
		// dst_vertices[vertexIndex + 1] = src_vertices[vertexIndex + 1];
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_29 = L_23;
		int32_t L_30 = V_1;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_31 = V_2;
		int32_t L_32 = V_1;
		NullCheck(L_31);
		int32_t L_33 = ((int32_t)il2cpp_codegen_add(L_32, 1));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_34 = (L_31)->GetAt(static_cast<il2cpp_array_size_t>(L_33));
		NullCheck(L_29);
		(L_29)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_30, 1))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_34);
		// dst_vertices[vertexIndex + 2] = src_vertices[vertexIndex + 2];
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_35 = L_29;
		int32_t L_36 = V_1;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_37 = V_2;
		int32_t L_38 = V_1;
		NullCheck(L_37);
		int32_t L_39 = ((int32_t)il2cpp_codegen_add(L_38, 2));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_40 = (L_37)->GetAt(static_cast<il2cpp_array_size_t>(L_39));
		NullCheck(L_35);
		(L_35)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_36, 2))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_40);
		// dst_vertices[vertexIndex + 3] = src_vertices[vertexIndex + 3];
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_41 = L_35;
		int32_t L_42 = V_1;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_43 = V_2;
		int32_t L_44 = V_1;
		NullCheck(L_43);
		int32_t L_45 = ((int32_t)il2cpp_codegen_add(L_44, 3));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_46 = (L_43)->GetAt(static_cast<il2cpp_array_size_t>(L_45));
		NullCheck(L_41);
		(L_41)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_42, 3))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_46);
		// Color32[] dst_colors = m_TextMeshPro.textInfo.meshInfo[materialIndex].colors32;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_47 = __this->___m_TextMeshPro_9;
		NullCheck(L_47);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_48;
		L_48 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_47, NULL);
		NullCheck(L_48);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_49 = L_48->___meshInfo_16;
		int32_t L_50 = V_0;
		NullCheck(L_49);
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_51 = ((L_49)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_50)))->___colors32_11;
		// Color32[] src_colors = m_cachedMeshInfoVertexData[materialIndex].colors32;
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_52 = __this->___m_cachedMeshInfoVertexData_17;
		int32_t L_53 = V_0;
		NullCheck(L_52);
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_54 = ((L_52)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_53)))->___colors32_11;
		V_3 = L_54;
		// dst_colors[vertexIndex + 0] = src_colors[vertexIndex + 0];
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_55 = L_51;
		int32_t L_56 = V_1;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_57 = V_3;
		int32_t L_58 = V_1;
		NullCheck(L_57);
		int32_t L_59 = L_58;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_60 = (L_57)->GetAt(static_cast<il2cpp_array_size_t>(L_59));
		NullCheck(L_55);
		(L_55)->SetAt(static_cast<il2cpp_array_size_t>(L_56), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_60);
		// dst_colors[vertexIndex + 1] = src_colors[vertexIndex + 1];
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_61 = L_55;
		int32_t L_62 = V_1;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_63 = V_3;
		int32_t L_64 = V_1;
		NullCheck(L_63);
		int32_t L_65 = ((int32_t)il2cpp_codegen_add(L_64, 1));
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_66 = (L_63)->GetAt(static_cast<il2cpp_array_size_t>(L_65));
		NullCheck(L_61);
		(L_61)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_62, 1))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_66);
		// dst_colors[vertexIndex + 2] = src_colors[vertexIndex + 2];
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_67 = L_61;
		int32_t L_68 = V_1;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_69 = V_3;
		int32_t L_70 = V_1;
		NullCheck(L_69);
		int32_t L_71 = ((int32_t)il2cpp_codegen_add(L_70, 2));
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_72 = (L_69)->GetAt(static_cast<il2cpp_array_size_t>(L_71));
		NullCheck(L_67);
		(L_67)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_68, 2))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_72);
		// dst_colors[vertexIndex + 3] = src_colors[vertexIndex + 3];
		int32_t L_73 = V_1;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_74 = V_3;
		int32_t L_75 = V_1;
		NullCheck(L_74);
		int32_t L_76 = ((int32_t)il2cpp_codegen_add(L_75, 3));
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_77 = (L_74)->GetAt(static_cast<il2cpp_array_size_t>(L_76));
		NullCheck(L_67);
		(L_67)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_73, 3))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_77);
		// Vector2[] src_uv0s = m_cachedMeshInfoVertexData[materialIndex].uvs0;
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_78 = __this->___m_cachedMeshInfoVertexData_17;
		int32_t L_79 = V_0;
		NullCheck(L_78);
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_80 = ((L_78)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_79)))->___uvs0_9;
		V_4 = L_80;
		// Vector2[] dst_uv0s = m_TextMeshPro.textInfo.meshInfo[materialIndex].uvs0;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_81 = __this->___m_TextMeshPro_9;
		NullCheck(L_81);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_82;
		L_82 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_81, NULL);
		NullCheck(L_82);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_83 = L_82->___meshInfo_16;
		int32_t L_84 = V_0;
		NullCheck(L_83);
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_85 = ((L_83)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_84)))->___uvs0_9;
		// dst_uv0s[vertexIndex + 0] = src_uv0s[vertexIndex + 0];
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_86 = L_85;
		int32_t L_87 = V_1;
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_88 = V_4;
		int32_t L_89 = V_1;
		NullCheck(L_88);
		int32_t L_90 = L_89;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_91 = (L_88)->GetAt(static_cast<il2cpp_array_size_t>(L_90));
		NullCheck(L_86);
		(L_86)->SetAt(static_cast<il2cpp_array_size_t>(L_87), (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7)L_91);
		// dst_uv0s[vertexIndex + 1] = src_uv0s[vertexIndex + 1];
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_92 = L_86;
		int32_t L_93 = V_1;
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_94 = V_4;
		int32_t L_95 = V_1;
		NullCheck(L_94);
		int32_t L_96 = ((int32_t)il2cpp_codegen_add(L_95, 1));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_97 = (L_94)->GetAt(static_cast<il2cpp_array_size_t>(L_96));
		NullCheck(L_92);
		(L_92)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_93, 1))), (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7)L_97);
		// dst_uv0s[vertexIndex + 2] = src_uv0s[vertexIndex + 2];
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_98 = L_92;
		int32_t L_99 = V_1;
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_100 = V_4;
		int32_t L_101 = V_1;
		NullCheck(L_100);
		int32_t L_102 = ((int32_t)il2cpp_codegen_add(L_101, 2));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_103 = (L_100)->GetAt(static_cast<il2cpp_array_size_t>(L_102));
		NullCheck(L_98);
		(L_98)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_99, 2))), (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7)L_103);
		// dst_uv0s[vertexIndex + 3] = src_uv0s[vertexIndex + 3];
		int32_t L_104 = V_1;
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_105 = V_4;
		int32_t L_106 = V_1;
		NullCheck(L_105);
		int32_t L_107 = ((int32_t)il2cpp_codegen_add(L_106, 3));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_108 = (L_105)->GetAt(static_cast<il2cpp_array_size_t>(L_107));
		NullCheck(L_98);
		(L_98)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_104, 3))), (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7)L_108);
		// Vector2[] src_uv2s = m_cachedMeshInfoVertexData[materialIndex].uvs2;
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_109 = __this->___m_cachedMeshInfoVertexData_17;
		int32_t L_110 = V_0;
		NullCheck(L_109);
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_111 = ((L_109)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_110)))->___uvs2_10;
		V_5 = L_111;
		// Vector2[] dst_uv2s = m_TextMeshPro.textInfo.meshInfo[materialIndex].uvs2;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_112 = __this->___m_TextMeshPro_9;
		NullCheck(L_112);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_113;
		L_113 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_112, NULL);
		NullCheck(L_113);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_114 = L_113->___meshInfo_16;
		int32_t L_115 = V_0;
		NullCheck(L_114);
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_116 = ((L_114)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_115)))->___uvs2_10;
		// dst_uv2s[vertexIndex + 0] = src_uv2s[vertexIndex + 0];
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_117 = L_116;
		int32_t L_118 = V_1;
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_119 = V_5;
		int32_t L_120 = V_1;
		NullCheck(L_119);
		int32_t L_121 = L_120;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_122 = (L_119)->GetAt(static_cast<il2cpp_array_size_t>(L_121));
		NullCheck(L_117);
		(L_117)->SetAt(static_cast<il2cpp_array_size_t>(L_118), (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7)L_122);
		// dst_uv2s[vertexIndex + 1] = src_uv2s[vertexIndex + 1];
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_123 = L_117;
		int32_t L_124 = V_1;
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_125 = V_5;
		int32_t L_126 = V_1;
		NullCheck(L_125);
		int32_t L_127 = ((int32_t)il2cpp_codegen_add(L_126, 1));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_128 = (L_125)->GetAt(static_cast<il2cpp_array_size_t>(L_127));
		NullCheck(L_123);
		(L_123)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_124, 1))), (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7)L_128);
		// dst_uv2s[vertexIndex + 2] = src_uv2s[vertexIndex + 2];
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_129 = L_123;
		int32_t L_130 = V_1;
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_131 = V_5;
		int32_t L_132 = V_1;
		NullCheck(L_131);
		int32_t L_133 = ((int32_t)il2cpp_codegen_add(L_132, 2));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_134 = (L_131)->GetAt(static_cast<il2cpp_array_size_t>(L_133));
		NullCheck(L_129);
		(L_129)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_130, 2))), (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7)L_134);
		// dst_uv2s[vertexIndex + 3] = src_uv2s[vertexIndex + 3];
		int32_t L_135 = V_1;
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_136 = V_5;
		int32_t L_137 = V_1;
		NullCheck(L_136);
		int32_t L_138 = ((int32_t)il2cpp_codegen_add(L_137, 3));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_139 = (L_136)->GetAt(static_cast<il2cpp_array_size_t>(L_138));
		NullCheck(L_129);
		(L_129)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_135, 3))), (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7)L_139);
		// int lastIndex = (src_vertices.Length / 4 - 1) * 4;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_140 = V_2;
		NullCheck(L_140);
		V_6 = ((int32_t)il2cpp_codegen_multiply(((int32_t)il2cpp_codegen_subtract(((int32_t)(((int32_t)(((RuntimeArray*)L_140)->max_length))/4)), 1)), 4));
		// dst_vertices[lastIndex + 0] = src_vertices[lastIndex + 0];
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_141 = L_41;
		int32_t L_142 = V_6;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_143 = V_2;
		int32_t L_144 = V_6;
		NullCheck(L_143);
		int32_t L_145 = L_144;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_146 = (L_143)->GetAt(static_cast<il2cpp_array_size_t>(L_145));
		NullCheck(L_141);
		(L_141)->SetAt(static_cast<il2cpp_array_size_t>(L_142), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_146);
		// dst_vertices[lastIndex + 1] = src_vertices[lastIndex + 1];
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_147 = L_141;
		int32_t L_148 = V_6;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_149 = V_2;
		int32_t L_150 = V_6;
		NullCheck(L_149);
		int32_t L_151 = ((int32_t)il2cpp_codegen_add(L_150, 1));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_152 = (L_149)->GetAt(static_cast<il2cpp_array_size_t>(L_151));
		NullCheck(L_147);
		(L_147)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_148, 1))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_152);
		// dst_vertices[lastIndex + 2] = src_vertices[lastIndex + 2];
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_153 = L_147;
		int32_t L_154 = V_6;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_155 = V_2;
		int32_t L_156 = V_6;
		NullCheck(L_155);
		int32_t L_157 = ((int32_t)il2cpp_codegen_add(L_156, 2));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_158 = (L_155)->GetAt(static_cast<il2cpp_array_size_t>(L_157));
		NullCheck(L_153);
		(L_153)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_154, 2))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_158);
		// dst_vertices[lastIndex + 3] = src_vertices[lastIndex + 3];
		int32_t L_159 = V_6;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_160 = V_2;
		int32_t L_161 = V_6;
		NullCheck(L_160);
		int32_t L_162 = ((int32_t)il2cpp_codegen_add(L_161, 3));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_163 = (L_160)->GetAt(static_cast<il2cpp_array_size_t>(L_162));
		NullCheck(L_153);
		(L_153)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_159, 3))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_163);
		// src_colors = m_cachedMeshInfoVertexData[materialIndex].colors32;
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_164 = __this->___m_cachedMeshInfoVertexData_17;
		int32_t L_165 = V_0;
		NullCheck(L_164);
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_166 = ((L_164)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_165)))->___colors32_11;
		V_3 = L_166;
		// dst_colors = m_TextMeshPro.textInfo.meshInfo[materialIndex].colors32;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_167 = __this->___m_TextMeshPro_9;
		NullCheck(L_167);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_168;
		L_168 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_167, NULL);
		NullCheck(L_168);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_169 = L_168->___meshInfo_16;
		int32_t L_170 = V_0;
		NullCheck(L_169);
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_171 = ((L_169)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_170)))->___colors32_11;
		// dst_colors[lastIndex + 0] = src_colors[lastIndex + 0];
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_172 = L_171;
		int32_t L_173 = V_6;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_174 = V_3;
		int32_t L_175 = V_6;
		NullCheck(L_174);
		int32_t L_176 = L_175;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_177 = (L_174)->GetAt(static_cast<il2cpp_array_size_t>(L_176));
		NullCheck(L_172);
		(L_172)->SetAt(static_cast<il2cpp_array_size_t>(L_173), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_177);
		// dst_colors[lastIndex + 1] = src_colors[lastIndex + 1];
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_178 = L_172;
		int32_t L_179 = V_6;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_180 = V_3;
		int32_t L_181 = V_6;
		NullCheck(L_180);
		int32_t L_182 = ((int32_t)il2cpp_codegen_add(L_181, 1));
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_183 = (L_180)->GetAt(static_cast<il2cpp_array_size_t>(L_182));
		NullCheck(L_178);
		(L_178)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_179, 1))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_183);
		// dst_colors[lastIndex + 2] = src_colors[lastIndex + 2];
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_184 = L_178;
		int32_t L_185 = V_6;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_186 = V_3;
		int32_t L_187 = V_6;
		NullCheck(L_186);
		int32_t L_188 = ((int32_t)il2cpp_codegen_add(L_187, 2));
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_189 = (L_186)->GetAt(static_cast<il2cpp_array_size_t>(L_188));
		NullCheck(L_184);
		(L_184)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_185, 2))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_189);
		// dst_colors[lastIndex + 3] = src_colors[lastIndex + 3];
		int32_t L_190 = V_6;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_191 = V_3;
		int32_t L_192 = V_6;
		NullCheck(L_191);
		int32_t L_193 = ((int32_t)il2cpp_codegen_add(L_192, 3));
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_194 = (L_191)->GetAt(static_cast<il2cpp_array_size_t>(L_193));
		NullCheck(L_184);
		(L_184)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_190, 3))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_194);
		// src_uv0s = m_cachedMeshInfoVertexData[materialIndex].uvs0;
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_195 = __this->___m_cachedMeshInfoVertexData_17;
		int32_t L_196 = V_0;
		NullCheck(L_195);
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_197 = ((L_195)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_196)))->___uvs0_9;
		V_4 = L_197;
		// dst_uv0s = m_TextMeshPro.textInfo.meshInfo[materialIndex].uvs0;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_198 = __this->___m_TextMeshPro_9;
		NullCheck(L_198);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_199;
		L_199 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_198, NULL);
		NullCheck(L_199);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_200 = L_199->___meshInfo_16;
		int32_t L_201 = V_0;
		NullCheck(L_200);
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_202 = ((L_200)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_201)))->___uvs0_9;
		// dst_uv0s[lastIndex + 0] = src_uv0s[lastIndex + 0];
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_203 = L_202;
		int32_t L_204 = V_6;
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_205 = V_4;
		int32_t L_206 = V_6;
		NullCheck(L_205);
		int32_t L_207 = L_206;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_208 = (L_205)->GetAt(static_cast<il2cpp_array_size_t>(L_207));
		NullCheck(L_203);
		(L_203)->SetAt(static_cast<il2cpp_array_size_t>(L_204), (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7)L_208);
		// dst_uv0s[lastIndex + 1] = src_uv0s[lastIndex + 1];
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_209 = L_203;
		int32_t L_210 = V_6;
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_211 = V_4;
		int32_t L_212 = V_6;
		NullCheck(L_211);
		int32_t L_213 = ((int32_t)il2cpp_codegen_add(L_212, 1));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_214 = (L_211)->GetAt(static_cast<il2cpp_array_size_t>(L_213));
		NullCheck(L_209);
		(L_209)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_210, 1))), (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7)L_214);
		// dst_uv0s[lastIndex + 2] = src_uv0s[lastIndex + 2];
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_215 = L_209;
		int32_t L_216 = V_6;
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_217 = V_4;
		int32_t L_218 = V_6;
		NullCheck(L_217);
		int32_t L_219 = ((int32_t)il2cpp_codegen_add(L_218, 2));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_220 = (L_217)->GetAt(static_cast<il2cpp_array_size_t>(L_219));
		NullCheck(L_215);
		(L_215)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_216, 2))), (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7)L_220);
		// dst_uv0s[lastIndex + 3] = src_uv0s[lastIndex + 3];
		int32_t L_221 = V_6;
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_222 = V_4;
		int32_t L_223 = V_6;
		NullCheck(L_222);
		int32_t L_224 = ((int32_t)il2cpp_codegen_add(L_223, 3));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_225 = (L_222)->GetAt(static_cast<il2cpp_array_size_t>(L_224));
		NullCheck(L_215);
		(L_215)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_221, 3))), (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7)L_225);
		// src_uv2s = m_cachedMeshInfoVertexData[materialIndex].uvs2;
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_226 = __this->___m_cachedMeshInfoVertexData_17;
		int32_t L_227 = V_0;
		NullCheck(L_226);
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_228 = ((L_226)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_227)))->___uvs2_10;
		V_5 = L_228;
		// dst_uv2s = m_TextMeshPro.textInfo.meshInfo[materialIndex].uvs2;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_229 = __this->___m_TextMeshPro_9;
		NullCheck(L_229);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_230;
		L_230 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_229, NULL);
		NullCheck(L_230);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_231 = L_230->___meshInfo_16;
		int32_t L_232 = V_0;
		NullCheck(L_231);
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_233 = ((L_231)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_232)))->___uvs2_10;
		// dst_uv2s[lastIndex + 0] = src_uv2s[lastIndex + 0];
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_234 = L_233;
		int32_t L_235 = V_6;
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_236 = V_5;
		int32_t L_237 = V_6;
		NullCheck(L_236);
		int32_t L_238 = L_237;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_239 = (L_236)->GetAt(static_cast<il2cpp_array_size_t>(L_238));
		NullCheck(L_234);
		(L_234)->SetAt(static_cast<il2cpp_array_size_t>(L_235), (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7)L_239);
		// dst_uv2s[lastIndex + 1] = src_uv2s[lastIndex + 1];
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_240 = L_234;
		int32_t L_241 = V_6;
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_242 = V_5;
		int32_t L_243 = V_6;
		NullCheck(L_242);
		int32_t L_244 = ((int32_t)il2cpp_codegen_add(L_243, 1));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_245 = (L_242)->GetAt(static_cast<il2cpp_array_size_t>(L_244));
		NullCheck(L_240);
		(L_240)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_241, 1))), (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7)L_245);
		// dst_uv2s[lastIndex + 2] = src_uv2s[lastIndex + 2];
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_246 = L_240;
		int32_t L_247 = V_6;
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_248 = V_5;
		int32_t L_249 = V_6;
		NullCheck(L_248);
		int32_t L_250 = ((int32_t)il2cpp_codegen_add(L_249, 2));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_251 = (L_248)->GetAt(static_cast<il2cpp_array_size_t>(L_250));
		NullCheck(L_246);
		(L_246)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_247, 2))), (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7)L_251);
		// dst_uv2s[lastIndex + 3] = src_uv2s[lastIndex + 3];
		int32_t L_252 = V_6;
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_253 = V_5;
		int32_t L_254 = V_6;
		NullCheck(L_253);
		int32_t L_255 = ((int32_t)il2cpp_codegen_add(L_254, 3));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_256 = (L_253)->GetAt(static_cast<il2cpp_array_size_t>(L_255));
		NullCheck(L_246);
		(L_246)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_252, 3))), (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7)L_256);
		// m_TextMeshPro.UpdateVertexData(TMP_VertexDataUpdateFlags.All);
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_257 = __this->___m_TextMeshPro_9;
		NullCheck(L_257);
		VirtualActionInvoker1< int32_t >::Invoke(108 /* System.Void TMPro.TMP_Text::UpdateVertexData(TMPro.TMP_VertexDataUpdateFlags) */, L_257, ((int32_t)255));
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_TextSelector_B::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_TextSelector_B__ctor_mB45DD6360094ADBEF5E8020E8C62404B7E45E301 (TMP_TextSelector_B_t57166268B8E5437286F55085EA19969D0A528CC2* __this, const RuntimeMethod* method) 
{
	{
		// private int m_selectedWord = -1;
		__this->___m_selectedWord_13 = (-1);
		// private int m_selectedLink = -1;
		__this->___m_selectedLink_14 = (-1);
		// private int m_lastIndex = -1;
		__this->___m_lastIndex_15 = (-1);
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.TMP_UiFrameRateCounter::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_UiFrameRateCounter_Awake_m3E0ECAD08FA25B61DD75F4D36EC3F1DE5A22A491 (TMP_UiFrameRateCounter_t3CB67462256A3570DFD0BD10261E7CABB11AFC0E* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_AddComponent_TisRectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5_m771EB78FF8813B5AFF21AC0D252E5461943E6388_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_AddComponent_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_m15E50057DA76710B136ADF4E7CA55A463D9DA3EB_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_t76FEDD663AB33C991A9C9A23129337651094216F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Resources_Load_TisMaterial_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3_m28782CC70624922DAF3B0FB13930E4EB59848128_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Resources_Load_TisTMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160_m4C7F47B73C641ED180784E089759867A85127C13_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral9ECD13393A1BC799BB4763A4E4CD5B53E220C53A);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralA6107EE62A5874EF8D2DEAC7D3C0A9F07B89E096);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralAB3448E21FA53C63C06270903A13B17D02935BE0);
		s_Il2CppMethodInitialized = true;
	}
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* V_0 = NULL;
	{
		// if (!enabled)
		bool L_0;
		L_0 = Behaviour_get_enabled_mAAC9F15E9EBF552217A5AE2681589CC0BFA300C1(__this, NULL);
		if (L_0)
		{
			goto IL_0009;
		}
	}
	{
		// return;
		return;
	}

IL_0009:
	{
		// Application.targetFrameRate = 1000;
		Application_set_targetFrameRate_m794A13DC5116C506B042663606691257CF3A7325(((int32_t)1000), NULL);
		// GameObject frameCounter = new GameObject("Frame Counter");
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_1 = (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*)il2cpp_codegen_object_new(GameObject_t76FEDD663AB33C991A9C9A23129337651094216F_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		GameObject__ctor_m37D512B05D292F954792225E6C6EEE95293A9B88(L_1, _stringLiteralA6107EE62A5874EF8D2DEAC7D3C0A9F07B89E096, NULL);
		V_0 = L_1;
		// m_frameCounter_transform = frameCounter.AddComponent<RectTransform>();
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_2 = V_0;
		NullCheck(L_2);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_3;
		L_3 = GameObject_AddComponent_TisRectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5_m771EB78FF8813B5AFF21AC0D252E5461943E6388(L_2, GameObject_AddComponent_TisRectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5_m771EB78FF8813B5AFF21AC0D252E5461943E6388_RuntimeMethod_var);
		__this->___m_frameCounter_transform_11 = L_3;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_frameCounter_transform_11), (void*)L_3);
		// m_frameCounter_transform.SetParent(this.transform, false);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_4 = __this->___m_frameCounter_transform_11;
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_5;
		L_5 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(__this, NULL);
		NullCheck(L_4);
		Transform_SetParent_m9BDD7B7476714B2D7919B10BDC22CE75C0A0A195(L_4, L_5, (bool)0, NULL);
		// m_TextMeshPro = frameCounter.AddComponent<TextMeshProUGUI>();
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_6 = V_0;
		NullCheck(L_6);
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_7;
		L_7 = GameObject_AddComponent_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_m15E50057DA76710B136ADF4E7CA55A463D9DA3EB(L_6, GameObject_AddComponent_TisTextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957_m15E50057DA76710B136ADF4E7CA55A463D9DA3EB_RuntimeMethod_var);
		__this->___m_TextMeshPro_10 = L_7;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_TextMeshPro_10), (void*)L_7);
		// m_TextMeshPro.font = Resources.Load<TMP_FontAsset>("Fonts & Materials/LiberationSans SDF");
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_8 = __this->___m_TextMeshPro_10;
		TMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160* L_9;
		L_9 = Resources_Load_TisTMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160_m4C7F47B73C641ED180784E089759867A85127C13(_stringLiteralAB3448E21FA53C63C06270903A13B17D02935BE0, Resources_Load_TisTMP_FontAsset_t923BF2F78D7C5AC36376E168A1193B7CB4855160_m4C7F47B73C641ED180784E089759867A85127C13_RuntimeMethod_var);
		NullCheck(L_8);
		TMP_Text_set_font_mC55E4A8C1C09595031384B35F2C2FB2FC3479E83(L_8, L_9, NULL);
		// m_TextMeshPro.fontSharedMaterial = Resources.Load<Material>("Fonts & Materials/LiberationSans SDF - Overlay");
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_10 = __this->___m_TextMeshPro_10;
		Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* L_11;
		L_11 = Resources_Load_TisMaterial_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3_m28782CC70624922DAF3B0FB13930E4EB59848128(_stringLiteral9ECD13393A1BC799BB4763A4E4CD5B53E220C53A, Resources_Load_TisMaterial_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3_m28782CC70624922DAF3B0FB13930E4EB59848128_RuntimeMethod_var);
		NullCheck(L_10);
		VirtualActionInvoker1< Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* >::Invoke(68 /* System.Void TMPro.TMP_Text::set_fontSharedMaterial(UnityEngine.Material) */, L_10, L_11);
		// m_TextMeshPro.enableWordWrapping = false;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_12 = __this->___m_TextMeshPro_10;
		NullCheck(L_12);
		TMP_Text_set_enableWordWrapping_mFAEE849315B4723F9C86C127B1A59EF50BE1C12F(L_12, (bool)0, NULL);
		// m_TextMeshPro.fontSize = 36;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_13 = __this->___m_TextMeshPro_10;
		NullCheck(L_13);
		TMP_Text_set_fontSize_m1C3A3BA2BC88E5E1D89375FD35A0AA91E75D3AAD(L_13, (36.0f), NULL);
		// m_TextMeshPro.isOverlay = true;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_14 = __this->___m_TextMeshPro_10;
		NullCheck(L_14);
		TMP_Text_set_isOverlay_m0DA2AC113AE402CA25097641AD38D0822C6D5561(L_14, (bool)1, NULL);
		// Set_FrameCounter_Position(AnchorPosition);
		int32_t L_15 = __this->___AnchorPosition_7;
		TMP_UiFrameRateCounter_Set_FrameCounter_Position_mAF25D6E90A6CB17EE041885B32579A2AEDBFCC36(__this, L_15, NULL);
		// last_AnchorPosition = AnchorPosition;
		int32_t L_16 = __this->___AnchorPosition_7;
		__this->___last_AnchorPosition_12 = L_16;
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_UiFrameRateCounter::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_UiFrameRateCounter_Start_m11EF02C330E5D834C41F009CF088A3150352567F (TMP_UiFrameRateCounter_t3CB67462256A3570DFD0BD10261E7CABB11AFC0E* __this, const RuntimeMethod* method) 
{
	{
		// m_LastInterval = Time.realtimeSinceStartup;
		float L_0;
		L_0 = Time_get_realtimeSinceStartup_mB49A5622E38FFE9589EB9B3E75573E443B8D63EC(NULL);
		__this->___m_LastInterval_5 = L_0;
		// m_Frames = 0;
		__this->___m_Frames_6 = 0;
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_UiFrameRateCounter::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_UiFrameRateCounter_Update_m568E467033B0FF7C67251895A0772CFA197789A3 (TMP_UiFrameRateCounter_t3CB67462256A3570DFD0BD10261E7CABB11AFC0E* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral7F85A2723BB62FEF95DD6F8C5F0FF606EA62246A);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral8ACAA4E0B28437F5FD1A41CE6591A16813F05377);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralA87D266F5AAE1AF5998468D25833A8C6AD50D4FD);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralD00074DE8ACBEBA7EF28BE447E997E8352E84502);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	float V_1 = 0.0f;
	float V_2 = 0.0f;
	{
		// if (AnchorPosition != last_AnchorPosition)
		int32_t L_0 = __this->___AnchorPosition_7;
		int32_t L_1 = __this->___last_AnchorPosition_12;
		if ((((int32_t)L_0) == ((int32_t)L_1)))
		{
			goto IL_001a;
		}
	}
	{
		// Set_FrameCounter_Position(AnchorPosition);
		int32_t L_2 = __this->___AnchorPosition_7;
		TMP_UiFrameRateCounter_Set_FrameCounter_Position_mAF25D6E90A6CB17EE041885B32579A2AEDBFCC36(__this, L_2, NULL);
	}

IL_001a:
	{
		// last_AnchorPosition = AnchorPosition;
		int32_t L_3 = __this->___AnchorPosition_7;
		__this->___last_AnchorPosition_12 = L_3;
		// m_Frames += 1;
		int32_t L_4 = __this->___m_Frames_6;
		__this->___m_Frames_6 = ((int32_t)il2cpp_codegen_add(L_4, 1));
		// float timeNow = Time.realtimeSinceStartup;
		float L_5;
		L_5 = Time_get_realtimeSinceStartup_mB49A5622E38FFE9589EB9B3E75573E443B8D63EC(NULL);
		V_0 = L_5;
		// if (timeNow > m_LastInterval + UpdateInterval)
		float L_6 = V_0;
		float L_7 = __this->___m_LastInterval_5;
		float L_8 = __this->___UpdateInterval_4;
		if ((!(((float)L_6) > ((float)((float)il2cpp_codegen_add(L_7, L_8))))))
		{
			goto IL_00d0;
		}
	}
	{
		// float fps = m_Frames / (timeNow - m_LastInterval);
		int32_t L_9 = __this->___m_Frames_6;
		float L_10 = V_0;
		float L_11 = __this->___m_LastInterval_5;
		V_1 = ((float)(((float)L_9)/((float)il2cpp_codegen_subtract(L_10, L_11))));
		// float ms = 1000.0f / Mathf.Max(fps, 0.00001f);
		float L_12 = V_1;
		float L_13;
		L_13 = Mathf_Max_mA9DCA91E87D6D27034F56ABA52606A9090406016_inline(L_12, (9.99999975E-06f), NULL);
		V_2 = ((float)((1000.0f)/L_13));
		// if (fps < 30)
		float L_14 = V_1;
		if ((!(((float)L_14) < ((float)(30.0f)))))
		{
			goto IL_0085;
		}
	}
	{
		// htmlColorTag = "<color=yellow>";
		__this->___htmlColorTag_8 = _stringLiteralA87D266F5AAE1AF5998468D25833A8C6AD50D4FD;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___htmlColorTag_8), (void*)_stringLiteralA87D266F5AAE1AF5998468D25833A8C6AD50D4FD);
		goto IL_00a5;
	}

IL_0085:
	{
		// else if (fps < 10)
		float L_15 = V_1;
		if ((!(((float)L_15) < ((float)(10.0f)))))
		{
			goto IL_009a;
		}
	}
	{
		// htmlColorTag = "<color=red>";
		__this->___htmlColorTag_8 = _stringLiteral8ACAA4E0B28437F5FD1A41CE6591A16813F05377;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___htmlColorTag_8), (void*)_stringLiteral8ACAA4E0B28437F5FD1A41CE6591A16813F05377);
		goto IL_00a5;
	}

IL_009a:
	{
		// htmlColorTag = "<color=green>";
		__this->___htmlColorTag_8 = _stringLiteral7F85A2723BB62FEF95DD6F8C5F0FF606EA62246A;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___htmlColorTag_8), (void*)_stringLiteral7F85A2723BB62FEF95DD6F8C5F0FF606EA62246A);
	}

IL_00a5:
	{
		// m_TextMeshPro.SetText(htmlColorTag + fpsLabel, fps, ms);
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_16 = __this->___m_TextMeshPro_10;
		String_t* L_17 = __this->___htmlColorTag_8;
		String_t* L_18;
		L_18 = String_Concat_mAF2CE02CC0CB7460753D0A1A91CCF2B1E9804C5D(L_17, _stringLiteralD00074DE8ACBEBA7EF28BE447E997E8352E84502, NULL);
		float L_19 = V_1;
		float L_20 = V_2;
		NullCheck(L_16);
		TMP_Text_SetText_m033947AEEEBDA12707E4B0535B4CCD7EB28B5F31(L_16, L_18, L_19, L_20, NULL);
		// m_Frames = 0;
		__this->___m_Frames_6 = 0;
		// m_LastInterval = timeNow;
		float L_21 = V_0;
		__this->___m_LastInterval_5 = L_21;
	}

IL_00d0:
	{
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_UiFrameRateCounter::Set_FrameCounter_Position(TMPro.Examples.TMP_UiFrameRateCounter/FpsCounterAnchorPositions)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_UiFrameRateCounter_Set_FrameCounter_Position_mAF25D6E90A6CB17EE041885B32579A2AEDBFCC36 (TMP_UiFrameRateCounter_t3CB67462256A3570DFD0BD10261E7CABB11AFC0E* __this, int32_t ___anchor_position0, const RuntimeMethod* method) 
{
	{
		int32_t L_0 = ___anchor_position0;
		switch (L_0)
		{
			case 0:
			{
				goto IL_0017;
			}
			case 1:
			{
				goto IL_0090;
			}
			case 2:
			{
				goto IL_0109;
			}
			case 3:
			{
				goto IL_0182;
			}
		}
	}
	{
		return;
	}

IL_0017:
	{
		// m_TextMeshPro.alignment = TextAlignmentOptions.TopLeft;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_1 = __this->___m_TextMeshPro_10;
		NullCheck(L_1);
		TMP_Text_set_alignment_mE5216A28797987CC19927ED3CB8DFAC438C6B95A(L_1, ((int32_t)257), NULL);
		// m_frameCounter_transform.pivot = new Vector2(0, 1);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_2 = __this->___m_frameCounter_transform_11;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_3;
		memset((&L_3), 0, sizeof(L_3));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_3), (0.0f), (1.0f), /*hidden argument*/NULL);
		NullCheck(L_2);
		RectTransform_set_pivot_m79D0177D383D432A93C2615F1932B739B1C6E146(L_2, L_3, NULL);
		// m_frameCounter_transform.anchorMin = new Vector2(0.01f, 0.99f);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_4 = __this->___m_frameCounter_transform_11;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_5;
		memset((&L_5), 0, sizeof(L_5));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_5), (0.00999999978f), (0.99000001f), /*hidden argument*/NULL);
		NullCheck(L_4);
		RectTransform_set_anchorMin_m931442ABE3368D6D4309F43DF1D64AB64B0F52E3(L_4, L_5, NULL);
		// m_frameCounter_transform.anchorMax = new Vector2(0.01f, 0.99f);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_6 = __this->___m_frameCounter_transform_11;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_7;
		memset((&L_7), 0, sizeof(L_7));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_7), (0.00999999978f), (0.99000001f), /*hidden argument*/NULL);
		NullCheck(L_6);
		RectTransform_set_anchorMax_m52829ABEDD229ABD3DA20BCA676FA1DCA4A39B7D(L_6, L_7, NULL);
		// m_frameCounter_transform.anchoredPosition = new Vector2(0, 1);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_8 = __this->___m_frameCounter_transform_11;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_9;
		memset((&L_9), 0, sizeof(L_9));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_9), (0.0f), (1.0f), /*hidden argument*/NULL);
		NullCheck(L_8);
		RectTransform_set_anchoredPosition_mF903ACE04F6959B1CD67E2B94FABC0263068F965(L_8, L_9, NULL);
		// break;
		return;
	}

IL_0090:
	{
		// m_TextMeshPro.alignment = TextAlignmentOptions.BottomLeft;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_10 = __this->___m_TextMeshPro_10;
		NullCheck(L_10);
		TMP_Text_set_alignment_mE5216A28797987CC19927ED3CB8DFAC438C6B95A(L_10, ((int32_t)1025), NULL);
		// m_frameCounter_transform.pivot = new Vector2(0, 0);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_11 = __this->___m_frameCounter_transform_11;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_12;
		memset((&L_12), 0, sizeof(L_12));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_12), (0.0f), (0.0f), /*hidden argument*/NULL);
		NullCheck(L_11);
		RectTransform_set_pivot_m79D0177D383D432A93C2615F1932B739B1C6E146(L_11, L_12, NULL);
		// m_frameCounter_transform.anchorMin = new Vector2(0.01f, 0.01f);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_13 = __this->___m_frameCounter_transform_11;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_14;
		memset((&L_14), 0, sizeof(L_14));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_14), (0.00999999978f), (0.00999999978f), /*hidden argument*/NULL);
		NullCheck(L_13);
		RectTransform_set_anchorMin_m931442ABE3368D6D4309F43DF1D64AB64B0F52E3(L_13, L_14, NULL);
		// m_frameCounter_transform.anchorMax = new Vector2(0.01f, 0.01f);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_15 = __this->___m_frameCounter_transform_11;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_16;
		memset((&L_16), 0, sizeof(L_16));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_16), (0.00999999978f), (0.00999999978f), /*hidden argument*/NULL);
		NullCheck(L_15);
		RectTransform_set_anchorMax_m52829ABEDD229ABD3DA20BCA676FA1DCA4A39B7D(L_15, L_16, NULL);
		// m_frameCounter_transform.anchoredPosition = new Vector2(0, 0);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_17 = __this->___m_frameCounter_transform_11;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_18;
		memset((&L_18), 0, sizeof(L_18));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_18), (0.0f), (0.0f), /*hidden argument*/NULL);
		NullCheck(L_17);
		RectTransform_set_anchoredPosition_mF903ACE04F6959B1CD67E2B94FABC0263068F965(L_17, L_18, NULL);
		// break;
		return;
	}

IL_0109:
	{
		// m_TextMeshPro.alignment = TextAlignmentOptions.TopRight;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_19 = __this->___m_TextMeshPro_10;
		NullCheck(L_19);
		TMP_Text_set_alignment_mE5216A28797987CC19927ED3CB8DFAC438C6B95A(L_19, ((int32_t)260), NULL);
		// m_frameCounter_transform.pivot = new Vector2(1, 1);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_20 = __this->___m_frameCounter_transform_11;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_21;
		memset((&L_21), 0, sizeof(L_21));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_21), (1.0f), (1.0f), /*hidden argument*/NULL);
		NullCheck(L_20);
		RectTransform_set_pivot_m79D0177D383D432A93C2615F1932B739B1C6E146(L_20, L_21, NULL);
		// m_frameCounter_transform.anchorMin = new Vector2(0.99f, 0.99f);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_22 = __this->___m_frameCounter_transform_11;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_23;
		memset((&L_23), 0, sizeof(L_23));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_23), (0.99000001f), (0.99000001f), /*hidden argument*/NULL);
		NullCheck(L_22);
		RectTransform_set_anchorMin_m931442ABE3368D6D4309F43DF1D64AB64B0F52E3(L_22, L_23, NULL);
		// m_frameCounter_transform.anchorMax = new Vector2(0.99f, 0.99f);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_24 = __this->___m_frameCounter_transform_11;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_25;
		memset((&L_25), 0, sizeof(L_25));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_25), (0.99000001f), (0.99000001f), /*hidden argument*/NULL);
		NullCheck(L_24);
		RectTransform_set_anchorMax_m52829ABEDD229ABD3DA20BCA676FA1DCA4A39B7D(L_24, L_25, NULL);
		// m_frameCounter_transform.anchoredPosition = new Vector2(1, 1);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_26 = __this->___m_frameCounter_transform_11;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_27;
		memset((&L_27), 0, sizeof(L_27));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_27), (1.0f), (1.0f), /*hidden argument*/NULL);
		NullCheck(L_26);
		RectTransform_set_anchoredPosition_mF903ACE04F6959B1CD67E2B94FABC0263068F965(L_26, L_27, NULL);
		// break;
		return;
	}

IL_0182:
	{
		// m_TextMeshPro.alignment = TextAlignmentOptions.BottomRight;
		TextMeshProUGUI_t101091AF4B578BB534C92E9D1EEAF0611636D957* L_28 = __this->___m_TextMeshPro_10;
		NullCheck(L_28);
		TMP_Text_set_alignment_mE5216A28797987CC19927ED3CB8DFAC438C6B95A(L_28, ((int32_t)1028), NULL);
		// m_frameCounter_transform.pivot = new Vector2(1, 0);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_29 = __this->___m_frameCounter_transform_11;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_30;
		memset((&L_30), 0, sizeof(L_30));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_30), (1.0f), (0.0f), /*hidden argument*/NULL);
		NullCheck(L_29);
		RectTransform_set_pivot_m79D0177D383D432A93C2615F1932B739B1C6E146(L_29, L_30, NULL);
		// m_frameCounter_transform.anchorMin = new Vector2(0.99f, 0.01f);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_31 = __this->___m_frameCounter_transform_11;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_32;
		memset((&L_32), 0, sizeof(L_32));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_32), (0.99000001f), (0.00999999978f), /*hidden argument*/NULL);
		NullCheck(L_31);
		RectTransform_set_anchorMin_m931442ABE3368D6D4309F43DF1D64AB64B0F52E3(L_31, L_32, NULL);
		// m_frameCounter_transform.anchorMax = new Vector2(0.99f, 0.01f);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_33 = __this->___m_frameCounter_transform_11;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_34;
		memset((&L_34), 0, sizeof(L_34));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_34), (0.99000001f), (0.00999999978f), /*hidden argument*/NULL);
		NullCheck(L_33);
		RectTransform_set_anchorMax_m52829ABEDD229ABD3DA20BCA676FA1DCA4A39B7D(L_33, L_34, NULL);
		// m_frameCounter_transform.anchoredPosition = new Vector2(1, 0);
		RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* L_35 = __this->___m_frameCounter_transform_11;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_36;
		memset((&L_36), 0, sizeof(L_36));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_36), (1.0f), (0.0f), /*hidden argument*/NULL);
		NullCheck(L_35);
		RectTransform_set_anchoredPosition_mF903ACE04F6959B1CD67E2B94FABC0263068F965(L_35, L_36, NULL);
		// }
		return;
	}
}
// System.Void TMPro.Examples.TMP_UiFrameRateCounter::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TMP_UiFrameRateCounter__ctor_mBF5305427799EBC515580C2747FE604A6DFEC848 (TMP_UiFrameRateCounter_t3CB67462256A3570DFD0BD10261E7CABB11AFC0E* __this, const RuntimeMethod* method) 
{
	{
		// public float UpdateInterval = 5.0f;
		__this->___UpdateInterval_4 = (5.0f);
		// public FpsCounterAnchorPositions AnchorPosition = FpsCounterAnchorPositions.TopRight;
		__this->___AnchorPosition_7 = 2;
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.VertexColorCycler::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexColorCycler_Awake_m8895A9C06DB3EC4379334601DC726F1AFAF543C1 (VertexColorCycler_t527535DC3F38CBB70E8A4B35907DA8EC4FC62C8D* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// m_TextComponent = GetComponent<TMP_Text>();
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_0;
		L_0 = Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5(__this, Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5_RuntimeMethod_var);
		__this->___m_TextComponent_4 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_TextComponent_4), (void*)L_0);
		// }
		return;
	}
}
// System.Void TMPro.Examples.VertexColorCycler::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexColorCycler_Start_m36846DA72BFC7FDFA944A368C9DB62D17A15917B (VertexColorCycler_t527535DC3F38CBB70E8A4B35907DA8EC4FC62C8D* __this, const RuntimeMethod* method) 
{
	{
		// StartCoroutine(AnimateVertexColors());
		RuntimeObject* L_0;
		L_0 = VertexColorCycler_AnimateVertexColors_m16733B3DFF4C0F625AA66B5DF9D3B04D723E49CC(__this, NULL);
		Coroutine_t85EA685566A254C23F3FD77AB5BDFFFF8799596B* L_1;
		L_1 = MonoBehaviour_StartCoroutine_m4CAFF732AA28CD3BDC5363B44A863575530EC812(__this, L_0, NULL);
		// }
		return;
	}
}
// System.Collections.IEnumerator TMPro.Examples.VertexColorCycler::AnimateVertexColors()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* VertexColorCycler_AnimateVertexColors_m16733B3DFF4C0F625AA66B5DF9D3B04D723E49CC (VertexColorCycler_t527535DC3F38CBB70E8A4B35907DA8EC4FC62C8D* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CAnimateVertexColorsU3Ed__3_t88CF335125784EBBA1DA65AF7B815F1814D31264_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		U3CAnimateVertexColorsU3Ed__3_t88CF335125784EBBA1DA65AF7B815F1814D31264* L_0 = (U3CAnimateVertexColorsU3Ed__3_t88CF335125784EBBA1DA65AF7B815F1814D31264*)il2cpp_codegen_object_new(U3CAnimateVertexColorsU3Ed__3_t88CF335125784EBBA1DA65AF7B815F1814D31264_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		U3CAnimateVertexColorsU3Ed__3__ctor_m0245999D5FAAF8855583609DB16CAF48E9450262(L_0, 0, NULL);
		U3CAnimateVertexColorsU3Ed__3_t88CF335125784EBBA1DA65AF7B815F1814D31264* L_1 = L_0;
		NullCheck(L_1);
		L_1->___U3CU3E4__this_2 = __this;
		Il2CppCodeGenWriteBarrier((void**)(&L_1->___U3CU3E4__this_2), (void*)__this);
		return L_1;
	}
}
// System.Void TMPro.Examples.VertexColorCycler::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexColorCycler__ctor_m673CA077DC5E935BABCEA79E5E70116E9934F4C1 (VertexColorCycler_t527535DC3F38CBB70E8A4B35907DA8EC4FC62C8D* __this, const RuntimeMethod* method) 
{
	{
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.VertexColorCycler/<AnimateVertexColors>d__3::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CAnimateVertexColorsU3Ed__3__ctor_m0245999D5FAAF8855583609DB16CAF48E9450262 (U3CAnimateVertexColorsU3Ed__3_t88CF335125784EBBA1DA65AF7B815F1814D31264* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) 
{
	{
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		int32_t L_0 = ___U3CU3E1__state0;
		__this->___U3CU3E1__state_0 = L_0;
		return;
	}
}
// System.Void TMPro.Examples.VertexColorCycler/<AnimateVertexColors>d__3::System.IDisposable.Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CAnimateVertexColorsU3Ed__3_System_IDisposable_Dispose_mF965F484C619EFA1359F7DB6495C1C79A89001BF (U3CAnimateVertexColorsU3Ed__3_t88CF335125784EBBA1DA65AF7B815F1814D31264* __this, const RuntimeMethod* method) 
{
	{
		return;
	}
}
// System.Boolean TMPro.Examples.VertexColorCycler/<AnimateVertexColors>d__3::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool U3CAnimateVertexColorsU3Ed__3_MoveNext_m5C44B8CC0AB09A205BB1649931D2AC7C6F016E60 (U3CAnimateVertexColorsU3Ed__3_t88CF335125784EBBA1DA65AF7B815F1814D31264* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	VertexColorCycler_t527535DC3F38CBB70E8A4B35907DA8EC4FC62C8D* V_1 = NULL;
	Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* V_2 = NULL;
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B V_3;
	memset((&V_3), 0, sizeof(V_3));
	int32_t V_4 = 0;
	int32_t V_5 = 0;
	int32_t V_6 = 0;
	{
		int32_t L_0 = __this->___U3CU3E1__state_0;
		V_0 = L_0;
		VertexColorCycler_t527535DC3F38CBB70E8A4B35907DA8EC4FC62C8D* L_1 = __this->___U3CU3E4__this_2;
		V_1 = L_1;
		int32_t L_2 = V_0;
		switch (L_2)
		{
			case 0:
			{
				goto IL_0022;
			}
			case 1:
			{
				goto IL_0089;
			}
			case 2:
			{
				goto IL_0192;
			}
		}
	}
	{
		return (bool)0;
	}

IL_0022:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// m_TextComponent.ForceMeshUpdate();
		VertexColorCycler_t527535DC3F38CBB70E8A4B35907DA8EC4FC62C8D* L_3 = V_1;
		NullCheck(L_3);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_4 = L_3->___m_TextComponent_4;
		NullCheck(L_4);
		VirtualActionInvoker2< bool, bool >::Invoke(106 /* System.Void TMPro.TMP_Text::ForceMeshUpdate(System.Boolean,System.Boolean) */, L_4, (bool)0, (bool)0);
		// TMP_TextInfo textInfo = m_TextComponent.textInfo;
		VertexColorCycler_t527535DC3F38CBB70E8A4B35907DA8EC4FC62C8D* L_5 = V_1;
		NullCheck(L_5);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_6 = L_5->___m_TextComponent_4;
		NullCheck(L_6);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_7;
		L_7 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_6, NULL);
		__this->___U3CtextInfoU3E5__2_3 = L_7;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CtextInfoU3E5__2_3), (void*)L_7);
		// int currentCharacter = 0;
		__this->___U3CcurrentCharacterU3E5__3_4 = 0;
		// Color32 c0 = m_TextComponent.color;
		VertexColorCycler_t527535DC3F38CBB70E8A4B35907DA8EC4FC62C8D* L_8 = V_1;
		NullCheck(L_8);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_9 = L_8->___m_TextComponent_4;
		NullCheck(L_9);
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_10;
		L_10 = VirtualFuncInvoker0< Color_tD001788D726C3A7F1379BEED0260B9591F440C1F >::Invoke(22 /* UnityEngine.Color UnityEngine.UI.Graphic::get_color() */, L_9);
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_11;
		L_11 = Color32_op_Implicit_m7EFA0B83AD1AE15567E9BC2FA2B8E66D3BFE1395_inline(L_10, NULL);
		V_3 = L_11;
	}

IL_005f:
	{
		// int characterCount = textInfo.characterCount;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_12 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_12);
		int32_t L_13 = L_12->___characterCount_3;
		V_4 = L_13;
		// if (characterCount == 0)
		int32_t L_14 = V_4;
		if (L_14)
		{
			goto IL_0092;
		}
	}
	{
		// yield return new WaitForSeconds(0.25f);
		WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3* L_15 = (WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3*)il2cpp_codegen_object_new(WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		NullCheck(L_15);
		WaitForSeconds__ctor_m579F95BADEDBAB4B3A7E302C6EE3995926EF2EFC(L_15, (0.25f), NULL);
		__this->___U3CU3E2__current_1 = L_15;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_15);
		__this->___U3CU3E1__state_0 = 1;
		return (bool)1;
	}

IL_0089:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// continue;
		goto IL_005f;
	}

IL_0092:
	{
		// int materialIndex = textInfo.characterInfo[currentCharacter].materialReferenceIndex;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_16 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_16);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_17 = L_16->___characterInfo_11;
		int32_t L_18 = __this->___U3CcurrentCharacterU3E5__3_4;
		NullCheck(L_17);
		int32_t L_19 = ((L_17)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_18)))->___materialReferenceIndex_9;
		V_5 = L_19;
		// newVertexColors = textInfo.meshInfo[materialIndex].colors32;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_20 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_20);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_21 = L_20->___meshInfo_16;
		int32_t L_22 = V_5;
		NullCheck(L_21);
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_23 = ((L_21)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_22)))->___colors32_11;
		V_2 = L_23;
		// int vertexIndex = textInfo.characterInfo[currentCharacter].vertexIndex;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_24 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_24);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_25 = L_24->___characterInfo_11;
		int32_t L_26 = __this->___U3CcurrentCharacterU3E5__3_4;
		NullCheck(L_25);
		int32_t L_27 = ((L_25)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_26)))->___vertexIndex_14;
		V_6 = L_27;
		// if (textInfo.characterInfo[currentCharacter].isVisible)
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_28 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_28);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_29 = L_28->___characterInfo_11;
		int32_t L_30 = __this->___U3CcurrentCharacterU3E5__3_4;
		NullCheck(L_29);
		bool L_31 = ((L_29)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_30)))->___isVisible_40;
		if (!L_31)
		{
			goto IL_0168;
		}
	}
	{
		// c0 = new Color32((byte)Random.Range(0, 255), (byte)Random.Range(0, 255), (byte)Random.Range(0, 255), 255);
		int32_t L_32;
		L_32 = Random_Range_mD4D2DEE3D2E75D07740C9A6F93B3088B03BBB8F8(0, ((int32_t)255), NULL);
		int32_t L_33;
		L_33 = Random_Range_mD4D2DEE3D2E75D07740C9A6F93B3088B03BBB8F8(0, ((int32_t)255), NULL);
		int32_t L_34;
		L_34 = Random_Range_mD4D2DEE3D2E75D07740C9A6F93B3088B03BBB8F8(0, ((int32_t)255), NULL);
		Color32__ctor_mC9C6B443F0C7CA3F8B174158B2AF6F05E18EAC4E_inline((&V_3), (uint8_t)((int32_t)(uint8_t)L_32), (uint8_t)((int32_t)(uint8_t)L_33), (uint8_t)((int32_t)(uint8_t)L_34), (uint8_t)((int32_t)255), NULL);
		// newVertexColors[vertexIndex + 0] = c0;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_35 = V_2;
		int32_t L_36 = V_6;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_37 = V_3;
		NullCheck(L_35);
		(L_35)->SetAt(static_cast<il2cpp_array_size_t>(L_36), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_37);
		// newVertexColors[vertexIndex + 1] = c0;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_38 = V_2;
		int32_t L_39 = V_6;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_40 = V_3;
		NullCheck(L_38);
		(L_38)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_39, 1))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_40);
		// newVertexColors[vertexIndex + 2] = c0;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_41 = V_2;
		int32_t L_42 = V_6;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_43 = V_3;
		NullCheck(L_41);
		(L_41)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_42, 2))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_43);
		// newVertexColors[vertexIndex + 3] = c0;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_44 = V_2;
		int32_t L_45 = V_6;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_46 = V_3;
		NullCheck(L_44);
		(L_44)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_45, 3))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_46);
		// m_TextComponent.UpdateVertexData(TMP_VertexDataUpdateFlags.Colors32);
		VertexColorCycler_t527535DC3F38CBB70E8A4B35907DA8EC4FC62C8D* L_47 = V_1;
		NullCheck(L_47);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_48 = L_47->___m_TextComponent_4;
		NullCheck(L_48);
		VirtualActionInvoker1< int32_t >::Invoke(108 /* System.Void TMPro.TMP_Text::UpdateVertexData(TMPro.TMP_VertexDataUpdateFlags) */, L_48, ((int32_t)16));
	}

IL_0168:
	{
		// currentCharacter = (currentCharacter + 1) % characterCount;
		int32_t L_49 = __this->___U3CcurrentCharacterU3E5__3_4;
		int32_t L_50 = V_4;
		__this->___U3CcurrentCharacterU3E5__3_4 = ((int32_t)(((int32_t)il2cpp_codegen_add(L_49, 1))%L_50));
		// yield return new WaitForSeconds(0.05f);
		WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3* L_51 = (WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3*)il2cpp_codegen_object_new(WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		NullCheck(L_51);
		WaitForSeconds__ctor_m579F95BADEDBAB4B3A7E302C6EE3995926EF2EFC(L_51, (0.0500000007f), NULL);
		__this->___U3CU3E2__current_1 = L_51;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_51);
		__this->___U3CU3E1__state_0 = 2;
		return (bool)1;
	}

IL_0192:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// while (true)
		goto IL_005f;
	}
}
// System.Object TMPro.Examples.VertexColorCycler/<AnimateVertexColors>d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CAnimateVertexColorsU3Ed__3_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_mF9600944C968C16121129C479F8B25D8E8B7FDD1 (U3CAnimateVertexColorsU3Ed__3_t88CF335125784EBBA1DA65AF7B815F1814D31264* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
// System.Void TMPro.Examples.VertexColorCycler/<AnimateVertexColors>d__3::System.Collections.IEnumerator.Reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CAnimateVertexColorsU3Ed__3_System_Collections_IEnumerator_Reset_m319AC50F2DE1572FB7D7AF4F5F65958D01477899 (U3CAnimateVertexColorsU3Ed__3_t88CF335125784EBBA1DA65AF7B815F1814D31264* __this, const RuntimeMethod* method) 
{
	{
		NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A* L_0 = (NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A_il2cpp_TypeInfo_var)));
		NullCheck(L_0);
		NotSupportedException__ctor_m1398D0CDE19B36AA3DE9392879738C1EA2439CDF(L_0, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_0, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&U3CAnimateVertexColorsU3Ed__3_System_Collections_IEnumerator_Reset_m319AC50F2DE1572FB7D7AF4F5F65958D01477899_RuntimeMethod_var)));
	}
}
// System.Object TMPro.Examples.VertexColorCycler/<AnimateVertexColors>d__3::System.Collections.IEnumerator.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CAnimateVertexColorsU3Ed__3_System_Collections_IEnumerator_get_Current_mC19EC9CE0C245B49D987C18357571FF3462F1D2C (U3CAnimateVertexColorsU3Ed__3_t88CF335125784EBBA1DA65AF7B815F1814D31264* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.VertexJitter::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexJitter_Awake_m0DF2AC9C728A15EEB427F1FE2426E3C31FBA544C (VertexJitter_t5D8689E23D1DD2CCF81ACE6FFC9E34797E8AE4C7* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// m_TextComponent = GetComponent<TMP_Text>();
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_0;
		L_0 = Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5(__this, Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5_RuntimeMethod_var);
		__this->___m_TextComponent_7 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_TextComponent_7), (void*)L_0);
		// }
		return;
	}
}
// System.Void TMPro.Examples.VertexJitter::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexJitter_OnEnable_mCD5C1FDDBA809B04AC6F6CB00562D0AA45BC4354 (VertexJitter_t5D8689E23D1DD2CCF81ACE6FFC9E34797E8AE4C7* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&FastAction_1_Add_m368726E3508DB2176C4F87A79C0C0CC4816176D6_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VertexJitter_ON_TEXT_CHANGED_m0CF9C49A1033B4475C04A417440F39490FED64A8_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// TMPro_EventManager.TEXT_CHANGED_EVENT.Add(ON_TEXT_CHANGED);
		il2cpp_codegen_runtime_class_init_inline(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		FastAction_1_tE50C6A692DF85AB55BE3160B659FA7DF19DFA005* L_0 = ((TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_StaticFields*)il2cpp_codegen_static_fields_for(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var))->___TEXT_CHANGED_EVENT_11;
		Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A* L_1 = (Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A*)il2cpp_codegen_object_new(Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		Action_1__ctor_m95478636F075134CA2998E22B214611472600983(L_1, __this, (intptr_t)((void*)VertexJitter_ON_TEXT_CHANGED_m0CF9C49A1033B4475C04A417440F39490FED64A8_RuntimeMethod_var), NULL);
		NullCheck(L_0);
		FastAction_1_Add_m368726E3508DB2176C4F87A79C0C0CC4816176D6(L_0, L_1, FastAction_1_Add_m368726E3508DB2176C4F87A79C0C0CC4816176D6_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void TMPro.Examples.VertexJitter::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexJitter_OnDisable_mB670406B3982BFC44CB6BB05A73F1BE877FDFAF2 (VertexJitter_t5D8689E23D1DD2CCF81ACE6FFC9E34797E8AE4C7* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&FastAction_1_Remove_mB29130AC90F5F8967CD89587717469E44E4D186F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VertexJitter_ON_TEXT_CHANGED_m0CF9C49A1033B4475C04A417440F39490FED64A8_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// TMPro_EventManager.TEXT_CHANGED_EVENT.Remove(ON_TEXT_CHANGED);
		il2cpp_codegen_runtime_class_init_inline(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		FastAction_1_tE50C6A692DF85AB55BE3160B659FA7DF19DFA005* L_0 = ((TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_StaticFields*)il2cpp_codegen_static_fields_for(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var))->___TEXT_CHANGED_EVENT_11;
		Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A* L_1 = (Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A*)il2cpp_codegen_object_new(Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		Action_1__ctor_m95478636F075134CA2998E22B214611472600983(L_1, __this, (intptr_t)((void*)VertexJitter_ON_TEXT_CHANGED_m0CF9C49A1033B4475C04A417440F39490FED64A8_RuntimeMethod_var), NULL);
		NullCheck(L_0);
		FastAction_1_Remove_mB29130AC90F5F8967CD89587717469E44E4D186F(L_0, L_1, FastAction_1_Remove_mB29130AC90F5F8967CD89587717469E44E4D186F_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void TMPro.Examples.VertexJitter::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexJitter_Start_mDE6155803CF2B1E6CE0EBAE8DF7DB93601E1DD76 (VertexJitter_t5D8689E23D1DD2CCF81ACE6FFC9E34797E8AE4C7* __this, const RuntimeMethod* method) 
{
	{
		// StartCoroutine(AnimateVertexColors());
		RuntimeObject* L_0;
		L_0 = VertexJitter_AnimateVertexColors_m2A69F06CF58FA46B689BD4166DEF5AD15FA2FA88(__this, NULL);
		Coroutine_t85EA685566A254C23F3FD77AB5BDFFFF8799596B* L_1;
		L_1 = MonoBehaviour_StartCoroutine_m4CAFF732AA28CD3BDC5363B44A863575530EC812(__this, L_0, NULL);
		// }
		return;
	}
}
// System.Void TMPro.Examples.VertexJitter::ON_TEXT_CHANGED(UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexJitter_ON_TEXT_CHANGED_m0CF9C49A1033B4475C04A417440F39490FED64A8 (VertexJitter_t5D8689E23D1DD2CCF81ACE6FFC9E34797E8AE4C7* __this, Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___obj0, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (obj == m_TextComponent)
		Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* L_0 = ___obj0;
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_1 = __this->___m_TextComponent_7;
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = Object_op_Equality_mD3DB0D72CE0250C84033DC2A90AEF9D59896E536(L_0, L_1, NULL);
		if (!L_2)
		{
			goto IL_0015;
		}
	}
	{
		// hasTextChanged = true;
		__this->___hasTextChanged_8 = (bool)1;
	}

IL_0015:
	{
		// }
		return;
	}
}
// System.Collections.IEnumerator TMPro.Examples.VertexJitter::AnimateVertexColors()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* VertexJitter_AnimateVertexColors_m2A69F06CF58FA46B689BD4166DEF5AD15FA2FA88 (VertexJitter_t5D8689E23D1DD2CCF81ACE6FFC9E34797E8AE4C7* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CAnimateVertexColorsU3Ed__11_t2EF4BA1F3569F2C4ECDD4AD4980AAC251CD1D956_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		U3CAnimateVertexColorsU3Ed__11_t2EF4BA1F3569F2C4ECDD4AD4980AAC251CD1D956* L_0 = (U3CAnimateVertexColorsU3Ed__11_t2EF4BA1F3569F2C4ECDD4AD4980AAC251CD1D956*)il2cpp_codegen_object_new(U3CAnimateVertexColorsU3Ed__11_t2EF4BA1F3569F2C4ECDD4AD4980AAC251CD1D956_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		U3CAnimateVertexColorsU3Ed__11__ctor_m10C4D98A634474BAA883419ED308835B7D91C01A(L_0, 0, NULL);
		U3CAnimateVertexColorsU3Ed__11_t2EF4BA1F3569F2C4ECDD4AD4980AAC251CD1D956* L_1 = L_0;
		NullCheck(L_1);
		L_1->___U3CU3E4__this_2 = __this;
		Il2CppCodeGenWriteBarrier((void**)(&L_1->___U3CU3E4__this_2), (void*)__this);
		return L_1;
	}
}
// System.Void TMPro.Examples.VertexJitter::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexJitter__ctor_m41E4682405B3C0B19779BA8CB77156D65D64716D (VertexJitter_t5D8689E23D1DD2CCF81ACE6FFC9E34797E8AE4C7* __this, const RuntimeMethod* method) 
{
	{
		// public float AngleMultiplier = 1.0f;
		__this->___AngleMultiplier_4 = (1.0f);
		// public float SpeedMultiplier = 1.0f;
		__this->___SpeedMultiplier_5 = (1.0f);
		// public float CurveScale = 1.0f;
		__this->___CurveScale_6 = (1.0f);
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.VertexJitter/<AnimateVertexColors>d__11::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CAnimateVertexColorsU3Ed__11__ctor_m10C4D98A634474BAA883419ED308835B7D91C01A (U3CAnimateVertexColorsU3Ed__11_t2EF4BA1F3569F2C4ECDD4AD4980AAC251CD1D956* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) 
{
	{
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		int32_t L_0 = ___U3CU3E1__state0;
		__this->___U3CU3E1__state_0 = L_0;
		return;
	}
}
// System.Void TMPro.Examples.VertexJitter/<AnimateVertexColors>d__11::System.IDisposable.Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CAnimateVertexColorsU3Ed__11_System_IDisposable_Dispose_mB3756FBFDD731F3CC1EFF9AB132FF5075C8411F8 (U3CAnimateVertexColorsU3Ed__11_t2EF4BA1F3569F2C4ECDD4AD4980AAC251CD1D956* __this, const RuntimeMethod* method) 
{
	{
		return;
	}
}
// System.Boolean TMPro.Examples.VertexJitter/<AnimateVertexColors>d__11::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool U3CAnimateVertexColorsU3Ed__11_MoveNext_mD694A3145B54B9C5EB351853752B9292DBFF0273 (U3CAnimateVertexColorsU3Ed__11_t2EF4BA1F3569F2C4ECDD4AD4980AAC251CD1D956* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VertexAnimU5BU5D_tC74236D4EB454A8EF2CE1E6145CE5F78E1D5CF38_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	VertexJitter_t5D8689E23D1DD2CCF81ACE6FFC9E34797E8AE4C7* V_1 = NULL;
	Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 V_2;
	memset((&V_2), 0, sizeof(V_2));
	int32_t V_3 = 0;
	int32_t V_4 = 0;
	int32_t V_5 = 0;
	VertexAnim_tFF5399F548EE5426E46DEB662F561DDE129E20D7 V_6;
	memset((&V_6), 0, sizeof(V_6));
	int32_t V_7 = 0;
	int32_t V_8 = 0;
	Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* V_9 = NULL;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_10;
	memset((&V_10), 0, sizeof(V_10));
	Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* V_11 = NULL;
	int32_t V_12 = 0;
	{
		int32_t L_0 = __this->___U3CU3E1__state_0;
		V_0 = L_0;
		VertexJitter_t5D8689E23D1DD2CCF81ACE6FFC9E34797E8AE4C7* L_1 = __this->___U3CU3E4__this_2;
		V_1 = L_1;
		int32_t L_2 = V_0;
		switch (L_2)
		{
			case 0:
			{
				goto IL_0022;
			}
			case 1:
			{
				goto IL_0110;
			}
			case 2:
			{
				goto IL_0481;
			}
		}
	}
	{
		return (bool)0;
	}

IL_0022:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// m_TextComponent.ForceMeshUpdate();
		VertexJitter_t5D8689E23D1DD2CCF81ACE6FFC9E34797E8AE4C7* L_3 = V_1;
		NullCheck(L_3);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_4 = L_3->___m_TextComponent_7;
		NullCheck(L_4);
		VirtualActionInvoker2< bool, bool >::Invoke(106 /* System.Void TMPro.TMP_Text::ForceMeshUpdate(System.Boolean,System.Boolean) */, L_4, (bool)0, (bool)0);
		// TMP_TextInfo textInfo = m_TextComponent.textInfo;
		VertexJitter_t5D8689E23D1DD2CCF81ACE6FFC9E34797E8AE4C7* L_5 = V_1;
		NullCheck(L_5);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_6 = L_5->___m_TextComponent_7;
		NullCheck(L_6);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_7;
		L_7 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_6, NULL);
		__this->___U3CtextInfoU3E5__2_3 = L_7;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CtextInfoU3E5__2_3), (void*)L_7);
		// int loopCount = 0;
		__this->___U3CloopCountU3E5__3_4 = 0;
		// hasTextChanged = true;
		VertexJitter_t5D8689E23D1DD2CCF81ACE6FFC9E34797E8AE4C7* L_8 = V_1;
		NullCheck(L_8);
		L_8->___hasTextChanged_8 = (bool)1;
		// VertexAnim[] vertexAnim = new VertexAnim[1024];
		VertexAnimU5BU5D_tC74236D4EB454A8EF2CE1E6145CE5F78E1D5CF38* L_9 = (VertexAnimU5BU5D_tC74236D4EB454A8EF2CE1E6145CE5F78E1D5CF38*)(VertexAnimU5BU5D_tC74236D4EB454A8EF2CE1E6145CE5F78E1D5CF38*)SZArrayNew(VertexAnimU5BU5D_tC74236D4EB454A8EF2CE1E6145CE5F78E1D5CF38_il2cpp_TypeInfo_var, (uint32_t)((int32_t)1024));
		__this->___U3CvertexAnimU3E5__4_5 = L_9;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CvertexAnimU3E5__4_5), (void*)L_9);
		// for (int i = 0; i < 1024; i++)
		V_3 = 0;
		goto IL_00ad;
	}

IL_0069:
	{
		// vertexAnim[i].angleRange = Random.Range(10f, 25f);
		VertexAnimU5BU5D_tC74236D4EB454A8EF2CE1E6145CE5F78E1D5CF38* L_10 = __this->___U3CvertexAnimU3E5__4_5;
		int32_t L_11 = V_3;
		NullCheck(L_10);
		float L_12;
		L_12 = Random_Range_mF26F26EB446B76823B4815C91FA0907B484DF02B((10.0f), (25.0f), NULL);
		((L_10)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_11)))->___angleRange_0 = L_12;
		// vertexAnim[i].speed = Random.Range(1f, 3f);
		VertexAnimU5BU5D_tC74236D4EB454A8EF2CE1E6145CE5F78E1D5CF38* L_13 = __this->___U3CvertexAnimU3E5__4_5;
		int32_t L_14 = V_3;
		NullCheck(L_13);
		float L_15;
		L_15 = Random_Range_mF26F26EB446B76823B4815C91FA0907B484DF02B((1.0f), (3.0f), NULL);
		((L_13)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_14)))->___speed_2 = L_15;
		// for (int i = 0; i < 1024; i++)
		int32_t L_16 = V_3;
		V_3 = ((int32_t)il2cpp_codegen_add(L_16, 1));
	}

IL_00ad:
	{
		// for (int i = 0; i < 1024; i++)
		int32_t L_17 = V_3;
		if ((((int32_t)L_17) < ((int32_t)((int32_t)1024))))
		{
			goto IL_0069;
		}
	}
	{
		// TMP_MeshInfo[] cachedMeshInfo = textInfo.CopyMeshInfoVertexData();
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_18 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_18);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_19;
		L_19 = TMP_TextInfo_CopyMeshInfoVertexData_mF66E2F8821470E68D95FEB53D456CFA86241C0CA(L_18, NULL);
		__this->___U3CcachedMeshInfoU3E5__5_6 = L_19;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CcachedMeshInfoU3E5__5_6), (void*)L_19);
	}

IL_00c6:
	{
		// if (hasTextChanged)
		VertexJitter_t5D8689E23D1DD2CCF81ACE6FFC9E34797E8AE4C7* L_20 = V_1;
		NullCheck(L_20);
		bool L_21 = L_20->___hasTextChanged_8;
		if (!L_21)
		{
			goto IL_00e6;
		}
	}
	{
		// cachedMeshInfo = textInfo.CopyMeshInfoVertexData();
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_22 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_22);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_23;
		L_23 = TMP_TextInfo_CopyMeshInfoVertexData_mF66E2F8821470E68D95FEB53D456CFA86241C0CA(L_22, NULL);
		__this->___U3CcachedMeshInfoU3E5__5_6 = L_23;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CcachedMeshInfoU3E5__5_6), (void*)L_23);
		// hasTextChanged = false;
		VertexJitter_t5D8689E23D1DD2CCF81ACE6FFC9E34797E8AE4C7* L_24 = V_1;
		NullCheck(L_24);
		L_24->___hasTextChanged_8 = (bool)0;
	}

IL_00e6:
	{
		// int characterCount = textInfo.characterCount;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_25 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_25);
		int32_t L_26 = L_25->___characterCount_3;
		V_4 = L_26;
		// if (characterCount == 0)
		int32_t L_27 = V_4;
		if (L_27)
		{
			goto IL_0119;
		}
	}
	{
		// yield return new WaitForSeconds(0.25f);
		WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3* L_28 = (WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3*)il2cpp_codegen_object_new(WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		NullCheck(L_28);
		WaitForSeconds__ctor_m579F95BADEDBAB4B3A7E302C6EE3995926EF2EFC(L_28, (0.25f), NULL);
		__this->___U3CU3E2__current_1 = L_28;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_28);
		__this->___U3CU3E1__state_0 = 1;
		return (bool)1;
	}

IL_0110:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// continue;
		goto IL_00c6;
	}

IL_0119:
	{
		// for (int i = 0; i < characterCount; i++)
		V_5 = 0;
		goto IL_03de;
	}

IL_0121:
	{
		// TMP_CharacterInfo charInfo = textInfo.characterInfo[i];
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_29 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_29);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_30 = L_29->___characterInfo_11;
		int32_t L_31 = V_5;
		NullCheck(L_30);
		int32_t L_32 = L_31;
		TMP_CharacterInfo_t8B8FF32D6AACE251F2E7835AA5BC6608D535D9F8 L_33 = (L_30)->GetAt(static_cast<il2cpp_array_size_t>(L_32));
		// if (!charInfo.isVisible)
		bool L_34 = L_33.___isVisible_40;
		if (!L_34)
		{
			goto IL_03d8;
		}
	}
	{
		// VertexAnim vertAnim = vertexAnim[i];
		VertexAnimU5BU5D_tC74236D4EB454A8EF2CE1E6145CE5F78E1D5CF38* L_35 = __this->___U3CvertexAnimU3E5__4_5;
		int32_t L_36 = V_5;
		NullCheck(L_35);
		int32_t L_37 = L_36;
		VertexAnim_tFF5399F548EE5426E46DEB662F561DDE129E20D7 L_38 = (L_35)->GetAt(static_cast<il2cpp_array_size_t>(L_37));
		V_6 = L_38;
		// int materialIndex = textInfo.characterInfo[i].materialReferenceIndex;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_39 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_39);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_40 = L_39->___characterInfo_11;
		int32_t L_41 = V_5;
		NullCheck(L_40);
		int32_t L_42 = ((L_40)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_41)))->___materialReferenceIndex_9;
		V_7 = L_42;
		// int vertexIndex = textInfo.characterInfo[i].vertexIndex;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_43 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_43);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_44 = L_43->___characterInfo_11;
		int32_t L_45 = V_5;
		NullCheck(L_44);
		int32_t L_46 = ((L_44)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_45)))->___vertexIndex_14;
		V_8 = L_46;
		// Vector3[] sourceVertices = cachedMeshInfo[materialIndex].vertices;
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_47 = __this->___U3CcachedMeshInfoU3E5__5_6;
		int32_t L_48 = V_7;
		NullCheck(L_47);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_49 = ((L_47)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_48)))->___vertices_6;
		V_9 = L_49;
		// Vector2 charMidBasline = (sourceVertices[vertexIndex + 0] + sourceVertices[vertexIndex + 2]) / 2;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_50 = V_9;
		int32_t L_51 = V_8;
		NullCheck(L_50);
		int32_t L_52 = L_51;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_53 = (L_50)->GetAt(static_cast<il2cpp_array_size_t>(L_52));
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_54 = V_9;
		int32_t L_55 = V_8;
		NullCheck(L_54);
		int32_t L_56 = ((int32_t)il2cpp_codegen_add(L_55, 2));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_57 = (L_54)->GetAt(static_cast<il2cpp_array_size_t>(L_56));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_58;
		L_58 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_53, L_57, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_59;
		L_59 = Vector3_op_Division_mD7200D6D432BAFC4135C5B17A0B0A812203B0270_inline(L_58, (2.0f), NULL);
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_60;
		L_60 = Vector2_op_Implicit_m8F73B300CB4E6F9B4EB5FB6130363D76CEAA230B_inline(L_59, NULL);
		// Vector3 offset = charMidBasline;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_61;
		L_61 = Vector2_op_Implicit_mCD214B04BC52AED3C89C3BEF664B6247E5F8954A_inline(L_60, NULL);
		V_10 = L_61;
		// Vector3[] destinationVertices = textInfo.meshInfo[materialIndex].vertices;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_62 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_62);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_63 = L_62->___meshInfo_16;
		int32_t L_64 = V_7;
		NullCheck(L_63);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_65 = ((L_63)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_64)))->___vertices_6;
		V_11 = L_65;
		// destinationVertices[vertexIndex + 0] = sourceVertices[vertexIndex + 0] - offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_66 = V_11;
		int32_t L_67 = V_8;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_68 = V_9;
		int32_t L_69 = V_8;
		NullCheck(L_68);
		int32_t L_70 = L_69;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_71 = (L_68)->GetAt(static_cast<il2cpp_array_size_t>(L_70));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_72 = V_10;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_73;
		L_73 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_71, L_72, NULL);
		NullCheck(L_66);
		(L_66)->SetAt(static_cast<il2cpp_array_size_t>(L_67), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_73);
		// destinationVertices[vertexIndex + 1] = sourceVertices[vertexIndex + 1] - offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_74 = V_11;
		int32_t L_75 = V_8;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_76 = V_9;
		int32_t L_77 = V_8;
		NullCheck(L_76);
		int32_t L_78 = ((int32_t)il2cpp_codegen_add(L_77, 1));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_79 = (L_76)->GetAt(static_cast<il2cpp_array_size_t>(L_78));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_80 = V_10;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_81;
		L_81 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_79, L_80, NULL);
		NullCheck(L_74);
		(L_74)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_75, 1))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_81);
		// destinationVertices[vertexIndex + 2] = sourceVertices[vertexIndex + 2] - offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_82 = V_11;
		int32_t L_83 = V_8;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_84 = V_9;
		int32_t L_85 = V_8;
		NullCheck(L_84);
		int32_t L_86 = ((int32_t)il2cpp_codegen_add(L_85, 2));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_87 = (L_84)->GetAt(static_cast<il2cpp_array_size_t>(L_86));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_88 = V_10;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_89;
		L_89 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_87, L_88, NULL);
		NullCheck(L_82);
		(L_82)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_83, 2))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_89);
		// destinationVertices[vertexIndex + 3] = sourceVertices[vertexIndex + 3] - offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_90 = V_11;
		int32_t L_91 = V_8;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_92 = V_9;
		int32_t L_93 = V_8;
		NullCheck(L_92);
		int32_t L_94 = ((int32_t)il2cpp_codegen_add(L_93, 3));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_95 = (L_92)->GetAt(static_cast<il2cpp_array_size_t>(L_94));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_96 = V_10;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_97;
		L_97 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_95, L_96, NULL);
		NullCheck(L_90);
		(L_90)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_91, 3))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_97);
		// vertAnim.angle = Mathf.SmoothStep(-vertAnim.angleRange, vertAnim.angleRange, Mathf.PingPong(loopCount / 25f * vertAnim.speed, 1f));
		VertexAnim_tFF5399F548EE5426E46DEB662F561DDE129E20D7 L_98 = V_6;
		float L_99 = L_98.___angleRange_0;
		VertexAnim_tFF5399F548EE5426E46DEB662F561DDE129E20D7 L_100 = V_6;
		float L_101 = L_100.___angleRange_0;
		int32_t L_102 = __this->___U3CloopCountU3E5__3_4;
		VertexAnim_tFF5399F548EE5426E46DEB662F561DDE129E20D7 L_103 = V_6;
		float L_104 = L_103.___speed_2;
		float L_105;
		L_105 = Mathf_PingPong_m157C55BCFEA2BB96680B7B29D714C3F9390551C9_inline(((float)il2cpp_codegen_multiply(((float)(((float)L_102)/(25.0f))), L_104)), (1.0f), NULL);
		float L_106;
		L_106 = Mathf_SmoothStep_mF724C7893D0F0C02FB14D573DDB7F92935451B81_inline(((-L_99)), L_101, L_105, NULL);
		(&V_6)->___angle_1 = L_106;
		// Vector3 jitterOffset = new Vector3(Random.Range(-.25f, .25f), Random.Range(-.25f, .25f), 0);
		float L_107;
		L_107 = Random_Range_mF26F26EB446B76823B4815C91FA0907B484DF02B((-0.25f), (0.25f), NULL);
		float L_108;
		L_108 = Random_Range_mF26F26EB446B76823B4815C91FA0907B484DF02B((-0.25f), (0.25f), NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_109;
		memset((&L_109), 0, sizeof(L_109));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_109), L_107, L_108, (0.0f), /*hidden argument*/NULL);
		// matrix = Matrix4x4.TRS(jitterOffset * CurveScale, Quaternion.Euler(0, 0, Random.Range(-5f, 5f) * AngleMultiplier), Vector3.one);
		VertexJitter_t5D8689E23D1DD2CCF81ACE6FFC9E34797E8AE4C7* L_110 = V_1;
		NullCheck(L_110);
		float L_111 = L_110->___CurveScale_6;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_112;
		L_112 = Vector3_op_Multiply_m516FE285F5342F922C6EB3FCB33197E9017FF484_inline(L_109, L_111, NULL);
		float L_113;
		L_113 = Random_Range_mF26F26EB446B76823B4815C91FA0907B484DF02B((-5.0f), (5.0f), NULL);
		VertexJitter_t5D8689E23D1DD2CCF81ACE6FFC9E34797E8AE4C7* L_114 = V_1;
		NullCheck(L_114);
		float L_115 = L_114->___AngleMultiplier_4;
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_116;
		L_116 = Quaternion_Euler_mD4601D966F1F58F3FCA01B3FC19A12D0AD0396DD_inline((0.0f), (0.0f), ((float)il2cpp_codegen_multiply(L_113, L_115)), NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_117;
		L_117 = Vector3_get_one_mE6A2D5C6578E94268024613B596BF09F990B1260_inline(NULL);
		Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 L_118;
		L_118 = Matrix4x4_TRS_mFEBA6926DB0044B96EF0CE98F30FEE7596820680(L_112, L_116, L_117, NULL);
		V_2 = L_118;
		// destinationVertices[vertexIndex + 0] = matrix.MultiplyPoint3x4(destinationVertices[vertexIndex + 0]);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_119 = V_11;
		int32_t L_120 = V_8;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_121 = V_11;
		int32_t L_122 = V_8;
		NullCheck(L_121);
		int32_t L_123 = L_122;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_124 = (L_121)->GetAt(static_cast<il2cpp_array_size_t>(L_123));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_125;
		L_125 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_2), L_124, NULL);
		NullCheck(L_119);
		(L_119)->SetAt(static_cast<il2cpp_array_size_t>(L_120), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_125);
		// destinationVertices[vertexIndex + 1] = matrix.MultiplyPoint3x4(destinationVertices[vertexIndex + 1]);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_126 = V_11;
		int32_t L_127 = V_8;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_128 = V_11;
		int32_t L_129 = V_8;
		NullCheck(L_128);
		int32_t L_130 = ((int32_t)il2cpp_codegen_add(L_129, 1));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_131 = (L_128)->GetAt(static_cast<il2cpp_array_size_t>(L_130));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_132;
		L_132 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_2), L_131, NULL);
		NullCheck(L_126);
		(L_126)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_127, 1))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_132);
		// destinationVertices[vertexIndex + 2] = matrix.MultiplyPoint3x4(destinationVertices[vertexIndex + 2]);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_133 = V_11;
		int32_t L_134 = V_8;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_135 = V_11;
		int32_t L_136 = V_8;
		NullCheck(L_135);
		int32_t L_137 = ((int32_t)il2cpp_codegen_add(L_136, 2));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_138 = (L_135)->GetAt(static_cast<il2cpp_array_size_t>(L_137));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_139;
		L_139 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_2), L_138, NULL);
		NullCheck(L_133);
		(L_133)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_134, 2))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_139);
		// destinationVertices[vertexIndex + 3] = matrix.MultiplyPoint3x4(destinationVertices[vertexIndex + 3]);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_140 = V_11;
		int32_t L_141 = V_8;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_142 = V_11;
		int32_t L_143 = V_8;
		NullCheck(L_142);
		int32_t L_144 = ((int32_t)il2cpp_codegen_add(L_143, 3));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_145 = (L_142)->GetAt(static_cast<il2cpp_array_size_t>(L_144));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_146;
		L_146 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_2), L_145, NULL);
		NullCheck(L_140);
		(L_140)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_141, 3))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_146);
		// destinationVertices[vertexIndex + 0] += offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_147 = V_11;
		int32_t L_148 = V_8;
		NullCheck(L_147);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_149 = ((L_147)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_148)));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_150 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_149);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_151 = V_10;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_152;
		L_152 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_150, L_151, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_149 = L_152;
		// destinationVertices[vertexIndex + 1] += offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_153 = V_11;
		int32_t L_154 = V_8;
		NullCheck(L_153);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_155 = ((L_153)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_154, 1)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_156 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_155);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_157 = V_10;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_158;
		L_158 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_156, L_157, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_155 = L_158;
		// destinationVertices[vertexIndex + 2] += offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_159 = V_11;
		int32_t L_160 = V_8;
		NullCheck(L_159);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_161 = ((L_159)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_160, 2)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_162 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_161);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_163 = V_10;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_164;
		L_164 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_162, L_163, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_161 = L_164;
		// destinationVertices[vertexIndex + 3] += offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_165 = V_11;
		int32_t L_166 = V_8;
		NullCheck(L_165);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_167 = ((L_165)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_166, 3)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_168 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_167);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_169 = V_10;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_170;
		L_170 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_168, L_169, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_167 = L_170;
		// vertexAnim[i] = vertAnim;
		VertexAnimU5BU5D_tC74236D4EB454A8EF2CE1E6145CE5F78E1D5CF38* L_171 = __this->___U3CvertexAnimU3E5__4_5;
		int32_t L_172 = V_5;
		VertexAnim_tFF5399F548EE5426E46DEB662F561DDE129E20D7 L_173 = V_6;
		NullCheck(L_171);
		(L_171)->SetAt(static_cast<il2cpp_array_size_t>(L_172), (VertexAnim_tFF5399F548EE5426E46DEB662F561DDE129E20D7)L_173);
	}

IL_03d8:
	{
		// for (int i = 0; i < characterCount; i++)
		int32_t L_174 = V_5;
		V_5 = ((int32_t)il2cpp_codegen_add(L_174, 1));
	}

IL_03de:
	{
		// for (int i = 0; i < characterCount; i++)
		int32_t L_175 = V_5;
		int32_t L_176 = V_4;
		if ((((int32_t)L_175) < ((int32_t)L_176)))
		{
			goto IL_0121;
		}
	}
	{
		// for (int i = 0; i < textInfo.meshInfo.Length; i++)
		V_12 = 0;
		goto IL_0449;
	}

IL_03ec:
	{
		// textInfo.meshInfo[i].mesh.vertices = textInfo.meshInfo[i].vertices;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_177 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_177);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_178 = L_177->___meshInfo_16;
		int32_t L_179 = V_12;
		NullCheck(L_178);
		Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* L_180 = ((L_178)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_179)))->___mesh_4;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_181 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_181);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_182 = L_181->___meshInfo_16;
		int32_t L_183 = V_12;
		NullCheck(L_182);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_184 = ((L_182)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_183)))->___vertices_6;
		NullCheck(L_180);
		Mesh_set_vertices_m5BB814D89E9ACA00DBF19F7D8E22CB73AC73FE5C(L_180, L_184, NULL);
		// m_TextComponent.UpdateGeometry(textInfo.meshInfo[i].mesh, i);
		VertexJitter_t5D8689E23D1DD2CCF81ACE6FFC9E34797E8AE4C7* L_185 = V_1;
		NullCheck(L_185);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_186 = L_185->___m_TextComponent_7;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_187 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_187);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_188 = L_187->___meshInfo_16;
		int32_t L_189 = V_12;
		NullCheck(L_188);
		Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* L_190 = ((L_188)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_189)))->___mesh_4;
		int32_t L_191 = V_12;
		NullCheck(L_186);
		VirtualActionInvoker2< Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4*, int32_t >::Invoke(107 /* System.Void TMPro.TMP_Text::UpdateGeometry(UnityEngine.Mesh,System.Int32) */, L_186, L_190, L_191);
		// for (int i = 0; i < textInfo.meshInfo.Length; i++)
		int32_t L_192 = V_12;
		V_12 = ((int32_t)il2cpp_codegen_add(L_192, 1));
	}

IL_0449:
	{
		// for (int i = 0; i < textInfo.meshInfo.Length; i++)
		int32_t L_193 = V_12;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_194 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_194);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_195 = L_194->___meshInfo_16;
		NullCheck(L_195);
		if ((((int32_t)L_193) < ((int32_t)((int32_t)(((RuntimeArray*)L_195)->max_length)))))
		{
			goto IL_03ec;
		}
	}
	{
		// loopCount += 1;
		int32_t L_196 = __this->___U3CloopCountU3E5__3_4;
		__this->___U3CloopCountU3E5__3_4 = ((int32_t)il2cpp_codegen_add(L_196, 1));
		// yield return new WaitForSeconds(0.1f);
		WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3* L_197 = (WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3*)il2cpp_codegen_object_new(WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		NullCheck(L_197);
		WaitForSeconds__ctor_m579F95BADEDBAB4B3A7E302C6EE3995926EF2EFC(L_197, (0.100000001f), NULL);
		__this->___U3CU3E2__current_1 = L_197;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_197);
		__this->___U3CU3E1__state_0 = 2;
		return (bool)1;
	}

IL_0481:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// while (true)
		goto IL_00c6;
	}
}
// System.Object TMPro.Examples.VertexJitter/<AnimateVertexColors>d__11::System.Collections.Generic.IEnumerator<System.Object>.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CAnimateVertexColorsU3Ed__11_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_m79C3A529011A51B9A994106D3C1271548B02D405 (U3CAnimateVertexColorsU3Ed__11_t2EF4BA1F3569F2C4ECDD4AD4980AAC251CD1D956* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
// System.Void TMPro.Examples.VertexJitter/<AnimateVertexColors>d__11::System.Collections.IEnumerator.Reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CAnimateVertexColorsU3Ed__11_System_Collections_IEnumerator_Reset_m15291DCCCEC264095634B26DD6F24D52360BDAF0 (U3CAnimateVertexColorsU3Ed__11_t2EF4BA1F3569F2C4ECDD4AD4980AAC251CD1D956* __this, const RuntimeMethod* method) 
{
	{
		NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A* L_0 = (NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A_il2cpp_TypeInfo_var)));
		NullCheck(L_0);
		NotSupportedException__ctor_m1398D0CDE19B36AA3DE9392879738C1EA2439CDF(L_0, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_0, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&U3CAnimateVertexColorsU3Ed__11_System_Collections_IEnumerator_Reset_m15291DCCCEC264095634B26DD6F24D52360BDAF0_RuntimeMethod_var)));
	}
}
// System.Object TMPro.Examples.VertexJitter/<AnimateVertexColors>d__11::System.Collections.IEnumerator.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CAnimateVertexColorsU3Ed__11_System_Collections_IEnumerator_get_Current_m0B8F21A4589C68BA16A8340938BB44C980260CC9 (U3CAnimateVertexColorsU3Ed__11_t2EF4BA1F3569F2C4ECDD4AD4980AAC251CD1D956* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.VertexShakeA::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexShakeA_Awake_m092957B0A67A153E7CD56A75A438087DE4806867 (VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// m_TextComponent = GetComponent<TMP_Text>();
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_0;
		L_0 = Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5(__this, Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5_RuntimeMethod_var);
		__this->___m_TextComponent_8 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_TextComponent_8), (void*)L_0);
		// }
		return;
	}
}
// System.Void TMPro.Examples.VertexShakeA::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexShakeA_OnEnable_m52E2A036C9EB2C1D633BA7F43E31C36983972304 (VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&FastAction_1_Add_m368726E3508DB2176C4F87A79C0C0CC4816176D6_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VertexShakeA_ON_TEXT_CHANGED_mE7A41CEFDB0008A1CD15F156EFEE1C895A92EE77_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// TMPro_EventManager.TEXT_CHANGED_EVENT.Add(ON_TEXT_CHANGED);
		il2cpp_codegen_runtime_class_init_inline(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		FastAction_1_tE50C6A692DF85AB55BE3160B659FA7DF19DFA005* L_0 = ((TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_StaticFields*)il2cpp_codegen_static_fields_for(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var))->___TEXT_CHANGED_EVENT_11;
		Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A* L_1 = (Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A*)il2cpp_codegen_object_new(Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		Action_1__ctor_m95478636F075134CA2998E22B214611472600983(L_1, __this, (intptr_t)((void*)VertexShakeA_ON_TEXT_CHANGED_mE7A41CEFDB0008A1CD15F156EFEE1C895A92EE77_RuntimeMethod_var), NULL);
		NullCheck(L_0);
		FastAction_1_Add_m368726E3508DB2176C4F87A79C0C0CC4816176D6(L_0, L_1, FastAction_1_Add_m368726E3508DB2176C4F87A79C0C0CC4816176D6_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void TMPro.Examples.VertexShakeA::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexShakeA_OnDisable_m52F58AF9438377D222543AA67CFF7B30FCCB0F23 (VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&FastAction_1_Remove_mB29130AC90F5F8967CD89587717469E44E4D186F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VertexShakeA_ON_TEXT_CHANGED_mE7A41CEFDB0008A1CD15F156EFEE1C895A92EE77_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// TMPro_EventManager.TEXT_CHANGED_EVENT.Remove(ON_TEXT_CHANGED);
		il2cpp_codegen_runtime_class_init_inline(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		FastAction_1_tE50C6A692DF85AB55BE3160B659FA7DF19DFA005* L_0 = ((TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_StaticFields*)il2cpp_codegen_static_fields_for(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var))->___TEXT_CHANGED_EVENT_11;
		Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A* L_1 = (Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A*)il2cpp_codegen_object_new(Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		Action_1__ctor_m95478636F075134CA2998E22B214611472600983(L_1, __this, (intptr_t)((void*)VertexShakeA_ON_TEXT_CHANGED_mE7A41CEFDB0008A1CD15F156EFEE1C895A92EE77_RuntimeMethod_var), NULL);
		NullCheck(L_0);
		FastAction_1_Remove_mB29130AC90F5F8967CD89587717469E44E4D186F(L_0, L_1, FastAction_1_Remove_mB29130AC90F5F8967CD89587717469E44E4D186F_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void TMPro.Examples.VertexShakeA::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexShakeA_Start_mDD8B5538BDFBC2BA242B997B879E7ED64ACAFC5E (VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F* __this, const RuntimeMethod* method) 
{
	{
		// StartCoroutine(AnimateVertexColors());
		RuntimeObject* L_0;
		L_0 = VertexShakeA_AnimateVertexColors_m5FD933D6BF976B64FC0B80614DE5112377D1DC38(__this, NULL);
		Coroutine_t85EA685566A254C23F3FD77AB5BDFFFF8799596B* L_1;
		L_1 = MonoBehaviour_StartCoroutine_m4CAFF732AA28CD3BDC5363B44A863575530EC812(__this, L_0, NULL);
		// }
		return;
	}
}
// System.Void TMPro.Examples.VertexShakeA::ON_TEXT_CHANGED(UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexShakeA_ON_TEXT_CHANGED_mE7A41CEFDB0008A1CD15F156EFEE1C895A92EE77 (VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F* __this, Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___obj0, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (obj = m_TextComponent)
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_0 = __this->___m_TextComponent_8;
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_1 = L_0;
		___obj0 = L_1;
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = Object_op_Implicit_m18E1885C296CC868AC918101523697CFE6413C79(L_1, NULL);
		if (!L_2)
		{
			goto IL_0017;
		}
	}
	{
		// hasTextChanged = true;
		__this->___hasTextChanged_9 = (bool)1;
	}

IL_0017:
	{
		// }
		return;
	}
}
// System.Collections.IEnumerator TMPro.Examples.VertexShakeA::AnimateVertexColors()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* VertexShakeA_AnimateVertexColors_m5FD933D6BF976B64FC0B80614DE5112377D1DC38 (VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CAnimateVertexColorsU3Ed__11_t2E62EF65D8AE7185E18D8711E582A76E45AC843E_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		U3CAnimateVertexColorsU3Ed__11_t2E62EF65D8AE7185E18D8711E582A76E45AC843E* L_0 = (U3CAnimateVertexColorsU3Ed__11_t2E62EF65D8AE7185E18D8711E582A76E45AC843E*)il2cpp_codegen_object_new(U3CAnimateVertexColorsU3Ed__11_t2E62EF65D8AE7185E18D8711E582A76E45AC843E_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		U3CAnimateVertexColorsU3Ed__11__ctor_m440985E6DF2F1B461E2964101EA242FFD472A25A(L_0, 0, NULL);
		U3CAnimateVertexColorsU3Ed__11_t2E62EF65D8AE7185E18D8711E582A76E45AC843E* L_1 = L_0;
		NullCheck(L_1);
		L_1->___U3CU3E4__this_2 = __this;
		Il2CppCodeGenWriteBarrier((void**)(&L_1->___U3CU3E4__this_2), (void*)__this);
		return L_1;
	}
}
// System.Void TMPro.Examples.VertexShakeA::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexShakeA__ctor_m63ED483A292CA310B90144E0779C0472AAC22CBB (VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F* __this, const RuntimeMethod* method) 
{
	{
		// public float AngleMultiplier = 1.0f;
		__this->___AngleMultiplier_4 = (1.0f);
		// public float SpeedMultiplier = 1.0f;
		__this->___SpeedMultiplier_5 = (1.0f);
		// public float ScaleMultiplier = 1.0f;
		__this->___ScaleMultiplier_6 = (1.0f);
		// public float RotationMultiplier = 1.0f;
		__this->___RotationMultiplier_7 = (1.0f);
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.VertexShakeA/<AnimateVertexColors>d__11::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CAnimateVertexColorsU3Ed__11__ctor_m440985E6DF2F1B461E2964101EA242FFD472A25A (U3CAnimateVertexColorsU3Ed__11_t2E62EF65D8AE7185E18D8711E582A76E45AC843E* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) 
{
	{
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		int32_t L_0 = ___U3CU3E1__state0;
		__this->___U3CU3E1__state_0 = L_0;
		return;
	}
}
// System.Void TMPro.Examples.VertexShakeA/<AnimateVertexColors>d__11::System.IDisposable.Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CAnimateVertexColorsU3Ed__11_System_IDisposable_Dispose_m74112773E1FD645722BC221FA5256331C068EAE7 (U3CAnimateVertexColorsU3Ed__11_t2E62EF65D8AE7185E18D8711E582A76E45AC843E* __this, const RuntimeMethod* method) 
{
	{
		return;
	}
}
// System.Boolean TMPro.Examples.VertexShakeA/<AnimateVertexColors>d__11::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool U3CAnimateVertexColorsU3Ed__11_MoveNext_mA6858F6CA14AAE3DFB7EA13748E10E063BBAB934 (U3CAnimateVertexColorsU3Ed__11_t2E62EF65D8AE7185E18D8711E582A76E45AC843E* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F* V_1 = NULL;
	Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 V_2;
	memset((&V_2), 0, sizeof(V_2));
	int32_t V_3 = 0;
	int32_t V_4 = 0;
	int32_t V_5 = 0;
	int32_t V_6 = 0;
	int32_t V_7 = 0;
	int32_t V_8 = 0;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_9;
	memset((&V_9), 0, sizeof(V_9));
	Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 V_10;
	memset((&V_10), 0, sizeof(V_10));
	int32_t V_11 = 0;
	int32_t V_12 = 0;
	int32_t V_13 = 0;
	Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* V_14 = NULL;
	float V_15 = 0.0f;
	int32_t V_16 = 0;
	{
		int32_t L_0 = __this->___U3CU3E1__state_0;
		V_0 = L_0;
		VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F* L_1 = __this->___U3CU3E4__this_2;
		V_1 = L_1;
		int32_t L_2 = V_0;
		switch (L_2)
		{
			case 0:
			{
				goto IL_0022;
			}
			case 1:
			{
				goto IL_0105;
			}
			case 2:
			{
				goto IL_04ce;
			}
		}
	}
	{
		return (bool)0;
	}

IL_0022:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// m_TextComponent.ForceMeshUpdate();
		VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F* L_3 = V_1;
		NullCheck(L_3);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_4 = L_3->___m_TextComponent_8;
		NullCheck(L_4);
		VirtualActionInvoker2< bool, bool >::Invoke(106 /* System.Void TMPro.TMP_Text::ForceMeshUpdate(System.Boolean,System.Boolean) */, L_4, (bool)0, (bool)0);
		// TMP_TextInfo textInfo = m_TextComponent.textInfo;
		VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F* L_5 = V_1;
		NullCheck(L_5);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_6 = L_5->___m_TextComponent_8;
		NullCheck(L_6);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_7;
		L_7 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_6, NULL);
		__this->___U3CtextInfoU3E5__2_3 = L_7;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CtextInfoU3E5__2_3), (void*)L_7);
		// Vector3[][] copyOfVertices = new Vector3[0][];
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_8 = (Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D*)(Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D*)SZArrayNew(Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D_il2cpp_TypeInfo_var, (uint32_t)0);
		__this->___U3CcopyOfVerticesU3E5__3_4 = L_8;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CcopyOfVerticesU3E5__3_4), (void*)L_8);
		// hasTextChanged = true;
		VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F* L_9 = V_1;
		NullCheck(L_9);
		L_9->___hasTextChanged_9 = (bool)1;
	}

IL_005a:
	{
		// if (hasTextChanged)
		VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F* L_10 = V_1;
		NullCheck(L_10);
		bool L_11 = L_10->___hasTextChanged_9;
		if (!L_11)
		{
			goto IL_00df;
		}
	}
	{
		// if (copyOfVertices.Length < textInfo.meshInfo.Length)
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_12 = __this->___U3CcopyOfVerticesU3E5__3_4;
		NullCheck(L_12);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_13 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_13);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_14 = L_13->___meshInfo_16;
		NullCheck(L_14);
		if ((((int32_t)((int32_t)(((RuntimeArray*)L_12)->max_length))) >= ((int32_t)((int32_t)(((RuntimeArray*)L_14)->max_length)))))
		{
			goto IL_0091;
		}
	}
	{
		// copyOfVertices = new Vector3[textInfo.meshInfo.Length][];
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_15 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_15);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_16 = L_15->___meshInfo_16;
		NullCheck(L_16);
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_17 = (Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D*)(Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D*)SZArrayNew(Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D_il2cpp_TypeInfo_var, (uint32_t)((int32_t)(((RuntimeArray*)L_16)->max_length)));
		__this->___U3CcopyOfVerticesU3E5__3_4 = L_17;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CcopyOfVerticesU3E5__3_4), (void*)L_17);
	}

IL_0091:
	{
		// for (int i = 0; i < textInfo.meshInfo.Length; i++)
		V_4 = 0;
		goto IL_00c7;
	}

IL_0096:
	{
		// int length = textInfo.meshInfo[i].vertices.Length;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_18 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_18);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_19 = L_18->___meshInfo_16;
		int32_t L_20 = V_4;
		NullCheck(L_19);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_21 = ((L_19)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_20)))->___vertices_6;
		NullCheck(L_21);
		V_5 = ((int32_t)(((RuntimeArray*)L_21)->max_length));
		// copyOfVertices[i] = new Vector3[length];
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_22 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_23 = V_4;
		int32_t L_24 = V_5;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_25 = (Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C*)(Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C*)SZArrayNew(Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C_il2cpp_TypeInfo_var, (uint32_t)L_24);
		NullCheck(L_22);
		ArrayElementTypeCheck (L_22, L_25);
		(L_22)->SetAt(static_cast<il2cpp_array_size_t>(L_23), (Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C*)L_25);
		// for (int i = 0; i < textInfo.meshInfo.Length; i++)
		int32_t L_26 = V_4;
		V_4 = ((int32_t)il2cpp_codegen_add(L_26, 1));
	}

IL_00c7:
	{
		// for (int i = 0; i < textInfo.meshInfo.Length; i++)
		int32_t L_27 = V_4;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_28 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_28);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_29 = L_28->___meshInfo_16;
		NullCheck(L_29);
		if ((((int32_t)L_27) < ((int32_t)((int32_t)(((RuntimeArray*)L_29)->max_length)))))
		{
			goto IL_0096;
		}
	}
	{
		// hasTextChanged = false;
		VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F* L_30 = V_1;
		NullCheck(L_30);
		L_30->___hasTextChanged_9 = (bool)0;
	}

IL_00df:
	{
		// int characterCount = textInfo.characterCount;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_31 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_31);
		int32_t L_32 = L_31->___characterCount_3;
		// if (characterCount == 0)
		if (L_32)
		{
			goto IL_0111;
		}
	}
	{
		// yield return new WaitForSeconds(0.25f);
		WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3* L_33 = (WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3*)il2cpp_codegen_object_new(WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		NullCheck(L_33);
		WaitForSeconds__ctor_m579F95BADEDBAB4B3A7E302C6EE3995926EF2EFC(L_33, (0.25f), NULL);
		__this->___U3CU3E2__current_1 = L_33;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_33);
		__this->___U3CU3E1__state_0 = 1;
		return (bool)1;
	}

IL_0105:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// continue;
		goto IL_005a;
	}

IL_0111:
	{
		// int lineCount = textInfo.lineCount;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_34 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_34);
		int32_t L_35 = L_34->___lineCount_8;
		V_3 = L_35;
		// for (int i = 0; i < lineCount; i++)
		V_6 = 0;
		goto IL_0448;
	}

IL_0125:
	{
		// int first = textInfo.lineInfo[i].firstCharacterIndex;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_36 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_36);
		TMP_LineInfoU5BU5D_tE485ECF6A7A96441C72B53D75E7A5A5461A2CA0E* L_37 = L_36->___lineInfo_14;
		int32_t L_38 = V_6;
		NullCheck(L_37);
		int32_t L_39 = ((L_37)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_38)))->___firstCharacterIndex_5;
		V_7 = L_39;
		// int last = textInfo.lineInfo[i].lastCharacterIndex;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_40 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_40);
		TMP_LineInfoU5BU5D_tE485ECF6A7A96441C72B53D75E7A5A5461A2CA0E* L_41 = L_40->___lineInfo_14;
		int32_t L_42 = V_6;
		NullCheck(L_41);
		int32_t L_43 = ((L_41)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_42)))->___lastCharacterIndex_7;
		V_8 = L_43;
		// Vector3 centerOfLine = (textInfo.characterInfo[first].bottomLeft + textInfo.characterInfo[last].topRight) / 2;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_44 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_44);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_45 = L_44->___characterInfo_11;
		int32_t L_46 = V_7;
		NullCheck(L_45);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_47 = ((L_45)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_46)))->___bottomLeft_20;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_48 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_48);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_49 = L_48->___characterInfo_11;
		int32_t L_50 = V_8;
		NullCheck(L_49);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_51 = ((L_49)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_50)))->___topRight_21;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_52;
		L_52 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_47, L_51, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_53;
		L_53 = Vector3_op_Division_mD7200D6D432BAFC4135C5B17A0B0A812203B0270_inline(L_52, (2.0f), NULL);
		V_9 = L_53;
		// Quaternion rotation = Quaternion.Euler(0, 0, Random.Range(-0.25f, 0.25f) * RotationMultiplier);
		float L_54;
		L_54 = Random_Range_mF26F26EB446B76823B4815C91FA0907B484DF02B((-0.25f), (0.25f), NULL);
		VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F* L_55 = V_1;
		NullCheck(L_55);
		float L_56 = L_55->___RotationMultiplier_7;
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_57;
		L_57 = Quaternion_Euler_mD4601D966F1F58F3FCA01B3FC19A12D0AD0396DD_inline((0.0f), (0.0f), ((float)il2cpp_codegen_multiply(L_54, L_56)), NULL);
		V_10 = L_57;
		// for (int j = first; j <= last; j++)
		int32_t L_58 = V_7;
		V_11 = L_58;
		goto IL_0439;
	}

IL_01c6:
	{
		// if (!textInfo.characterInfo[j].isVisible)
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_59 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_59);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_60 = L_59->___characterInfo_11;
		int32_t L_61 = V_11;
		NullCheck(L_60);
		bool L_62 = ((L_60)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_61)))->___isVisible_40;
		if (!L_62)
		{
			goto IL_0433;
		}
	}
	{
		// int materialIndex = textInfo.characterInfo[j].materialReferenceIndex;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_63 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_63);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_64 = L_63->___characterInfo_11;
		int32_t L_65 = V_11;
		NullCheck(L_64);
		int32_t L_66 = ((L_64)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_65)))->___materialReferenceIndex_9;
		V_12 = L_66;
		// int vertexIndex = textInfo.characterInfo[j].vertexIndex;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_67 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_67);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_68 = L_67->___characterInfo_11;
		int32_t L_69 = V_11;
		NullCheck(L_68);
		int32_t L_70 = ((L_68)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_69)))->___vertexIndex_14;
		V_13 = L_70;
		// Vector3[] sourceVertices = textInfo.meshInfo[materialIndex].vertices;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_71 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_71);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_72 = L_71->___meshInfo_16;
		int32_t L_73 = V_12;
		NullCheck(L_72);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_74 = ((L_72)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_73)))->___vertices_6;
		V_14 = L_74;
		// copyOfVertices[materialIndex][vertexIndex + 0] = sourceVertices[vertexIndex + 0] - centerOfLine;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_75 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_76 = V_12;
		NullCheck(L_75);
		int32_t L_77 = L_76;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_78 = (L_75)->GetAt(static_cast<il2cpp_array_size_t>(L_77));
		int32_t L_79 = V_13;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_80 = V_14;
		int32_t L_81 = V_13;
		NullCheck(L_80);
		int32_t L_82 = L_81;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_83 = (L_80)->GetAt(static_cast<il2cpp_array_size_t>(L_82));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_84 = V_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_85;
		L_85 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_83, L_84, NULL);
		NullCheck(L_78);
		(L_78)->SetAt(static_cast<il2cpp_array_size_t>(L_79), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_85);
		// copyOfVertices[materialIndex][vertexIndex + 1] = sourceVertices[vertexIndex + 1] - centerOfLine;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_86 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_87 = V_12;
		NullCheck(L_86);
		int32_t L_88 = L_87;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_89 = (L_86)->GetAt(static_cast<il2cpp_array_size_t>(L_88));
		int32_t L_90 = V_13;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_91 = V_14;
		int32_t L_92 = V_13;
		NullCheck(L_91);
		int32_t L_93 = ((int32_t)il2cpp_codegen_add(L_92, 1));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_94 = (L_91)->GetAt(static_cast<il2cpp_array_size_t>(L_93));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_95 = V_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_96;
		L_96 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_94, L_95, NULL);
		NullCheck(L_89);
		(L_89)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_90, 1))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_96);
		// copyOfVertices[materialIndex][vertexIndex + 2] = sourceVertices[vertexIndex + 2] - centerOfLine;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_97 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_98 = V_12;
		NullCheck(L_97);
		int32_t L_99 = L_98;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_100 = (L_97)->GetAt(static_cast<il2cpp_array_size_t>(L_99));
		int32_t L_101 = V_13;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_102 = V_14;
		int32_t L_103 = V_13;
		NullCheck(L_102);
		int32_t L_104 = ((int32_t)il2cpp_codegen_add(L_103, 2));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_105 = (L_102)->GetAt(static_cast<il2cpp_array_size_t>(L_104));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_106 = V_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_107;
		L_107 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_105, L_106, NULL);
		NullCheck(L_100);
		(L_100)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_101, 2))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_107);
		// copyOfVertices[materialIndex][vertexIndex + 3] = sourceVertices[vertexIndex + 3] - centerOfLine;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_108 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_109 = V_12;
		NullCheck(L_108);
		int32_t L_110 = L_109;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_111 = (L_108)->GetAt(static_cast<il2cpp_array_size_t>(L_110));
		int32_t L_112 = V_13;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_113 = V_14;
		int32_t L_114 = V_13;
		NullCheck(L_113);
		int32_t L_115 = ((int32_t)il2cpp_codegen_add(L_114, 3));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_116 = (L_113)->GetAt(static_cast<il2cpp_array_size_t>(L_115));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_117 = V_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_118;
		L_118 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_116, L_117, NULL);
		NullCheck(L_111);
		(L_111)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_112, 3))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_118);
		// float randomScale = Random.Range(0.995f - 0.001f * ScaleMultiplier, 1.005f + 0.001f * ScaleMultiplier);
		VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F* L_119 = V_1;
		NullCheck(L_119);
		float L_120 = L_119->___ScaleMultiplier_6;
		VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F* L_121 = V_1;
		NullCheck(L_121);
		float L_122 = L_121->___ScaleMultiplier_6;
		float L_123;
		L_123 = Random_Range_mF26F26EB446B76823B4815C91FA0907B484DF02B(((float)il2cpp_codegen_subtract((0.995000005f), ((float)il2cpp_codegen_multiply((0.00100000005f), L_120)))), ((float)il2cpp_codegen_add((1.005f), ((float)il2cpp_codegen_multiply((0.00100000005f), L_122)))), NULL);
		V_15 = L_123;
		// matrix = Matrix4x4.TRS(Vector3.one, rotation, Vector3.one * randomScale);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_124;
		L_124 = Vector3_get_one_mE6A2D5C6578E94268024613B596BF09F990B1260_inline(NULL);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_125 = V_10;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_126;
		L_126 = Vector3_get_one_mE6A2D5C6578E94268024613B596BF09F990B1260_inline(NULL);
		float L_127 = V_15;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_128;
		L_128 = Vector3_op_Multiply_m516FE285F5342F922C6EB3FCB33197E9017FF484_inline(L_126, L_127, NULL);
		Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 L_129;
		L_129 = Matrix4x4_TRS_mFEBA6926DB0044B96EF0CE98F30FEE7596820680(L_124, L_125, L_128, NULL);
		V_2 = L_129;
		// copyOfVertices[materialIndex][vertexIndex + 0] = matrix.MultiplyPoint3x4(copyOfVertices[materialIndex][vertexIndex + 0]);
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_130 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_131 = V_12;
		NullCheck(L_130);
		int32_t L_132 = L_131;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_133 = (L_130)->GetAt(static_cast<il2cpp_array_size_t>(L_132));
		int32_t L_134 = V_13;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_135 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_136 = V_12;
		NullCheck(L_135);
		int32_t L_137 = L_136;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_138 = (L_135)->GetAt(static_cast<il2cpp_array_size_t>(L_137));
		int32_t L_139 = V_13;
		NullCheck(L_138);
		int32_t L_140 = L_139;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_141 = (L_138)->GetAt(static_cast<il2cpp_array_size_t>(L_140));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_142;
		L_142 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_2), L_141, NULL);
		NullCheck(L_133);
		(L_133)->SetAt(static_cast<il2cpp_array_size_t>(L_134), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_142);
		// copyOfVertices[materialIndex][vertexIndex + 1] = matrix.MultiplyPoint3x4(copyOfVertices[materialIndex][vertexIndex + 1]);
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_143 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_144 = V_12;
		NullCheck(L_143);
		int32_t L_145 = L_144;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_146 = (L_143)->GetAt(static_cast<il2cpp_array_size_t>(L_145));
		int32_t L_147 = V_13;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_148 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_149 = V_12;
		NullCheck(L_148);
		int32_t L_150 = L_149;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_151 = (L_148)->GetAt(static_cast<il2cpp_array_size_t>(L_150));
		int32_t L_152 = V_13;
		NullCheck(L_151);
		int32_t L_153 = ((int32_t)il2cpp_codegen_add(L_152, 1));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_154 = (L_151)->GetAt(static_cast<il2cpp_array_size_t>(L_153));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_155;
		L_155 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_2), L_154, NULL);
		NullCheck(L_146);
		(L_146)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_147, 1))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_155);
		// copyOfVertices[materialIndex][vertexIndex + 2] = matrix.MultiplyPoint3x4(copyOfVertices[materialIndex][vertexIndex + 2]);
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_156 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_157 = V_12;
		NullCheck(L_156);
		int32_t L_158 = L_157;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_159 = (L_156)->GetAt(static_cast<il2cpp_array_size_t>(L_158));
		int32_t L_160 = V_13;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_161 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_162 = V_12;
		NullCheck(L_161);
		int32_t L_163 = L_162;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_164 = (L_161)->GetAt(static_cast<il2cpp_array_size_t>(L_163));
		int32_t L_165 = V_13;
		NullCheck(L_164);
		int32_t L_166 = ((int32_t)il2cpp_codegen_add(L_165, 2));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_167 = (L_164)->GetAt(static_cast<il2cpp_array_size_t>(L_166));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_168;
		L_168 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_2), L_167, NULL);
		NullCheck(L_159);
		(L_159)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_160, 2))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_168);
		// copyOfVertices[materialIndex][vertexIndex + 3] = matrix.MultiplyPoint3x4(copyOfVertices[materialIndex][vertexIndex + 3]);
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_169 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_170 = V_12;
		NullCheck(L_169);
		int32_t L_171 = L_170;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_172 = (L_169)->GetAt(static_cast<il2cpp_array_size_t>(L_171));
		int32_t L_173 = V_13;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_174 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_175 = V_12;
		NullCheck(L_174);
		int32_t L_176 = L_175;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_177 = (L_174)->GetAt(static_cast<il2cpp_array_size_t>(L_176));
		int32_t L_178 = V_13;
		NullCheck(L_177);
		int32_t L_179 = ((int32_t)il2cpp_codegen_add(L_178, 3));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_180 = (L_177)->GetAt(static_cast<il2cpp_array_size_t>(L_179));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_181;
		L_181 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_2), L_180, NULL);
		NullCheck(L_172);
		(L_172)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_173, 3))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_181);
		// copyOfVertices[materialIndex][vertexIndex + 0] += centerOfLine;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_182 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_183 = V_12;
		NullCheck(L_182);
		int32_t L_184 = L_183;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_185 = (L_182)->GetAt(static_cast<il2cpp_array_size_t>(L_184));
		int32_t L_186 = V_13;
		NullCheck(L_185);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_187 = ((L_185)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_186)));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_188 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_187);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_189 = V_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_190;
		L_190 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_188, L_189, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_187 = L_190;
		// copyOfVertices[materialIndex][vertexIndex + 1] += centerOfLine;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_191 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_192 = V_12;
		NullCheck(L_191);
		int32_t L_193 = L_192;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_194 = (L_191)->GetAt(static_cast<il2cpp_array_size_t>(L_193));
		int32_t L_195 = V_13;
		NullCheck(L_194);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_196 = ((L_194)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_195, 1)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_197 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_196);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_198 = V_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_199;
		L_199 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_197, L_198, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_196 = L_199;
		// copyOfVertices[materialIndex][vertexIndex + 2] += centerOfLine;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_200 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_201 = V_12;
		NullCheck(L_200);
		int32_t L_202 = L_201;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_203 = (L_200)->GetAt(static_cast<il2cpp_array_size_t>(L_202));
		int32_t L_204 = V_13;
		NullCheck(L_203);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_205 = ((L_203)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_204, 2)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_206 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_205);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_207 = V_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_208;
		L_208 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_206, L_207, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_205 = L_208;
		// copyOfVertices[materialIndex][vertexIndex + 3] += centerOfLine;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_209 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_210 = V_12;
		NullCheck(L_209);
		int32_t L_211 = L_210;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_212 = (L_209)->GetAt(static_cast<il2cpp_array_size_t>(L_211));
		int32_t L_213 = V_13;
		NullCheck(L_212);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_214 = ((L_212)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_213, 3)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_215 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_214);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_216 = V_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_217;
		L_217 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_215, L_216, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_214 = L_217;
	}

IL_0433:
	{
		// for (int j = first; j <= last; j++)
		int32_t L_218 = V_11;
		V_11 = ((int32_t)il2cpp_codegen_add(L_218, 1));
	}

IL_0439:
	{
		// for (int j = first; j <= last; j++)
		int32_t L_219 = V_11;
		int32_t L_220 = V_8;
		if ((((int32_t)L_219) <= ((int32_t)L_220)))
		{
			goto IL_01c6;
		}
	}
	{
		// for (int i = 0; i < lineCount; i++)
		int32_t L_221 = V_6;
		V_6 = ((int32_t)il2cpp_codegen_add(L_221, 1));
	}

IL_0448:
	{
		// for (int i = 0; i < lineCount; i++)
		int32_t L_222 = V_6;
		int32_t L_223 = V_3;
		if ((((int32_t)L_222) < ((int32_t)L_223)))
		{
			goto IL_0125;
		}
	}
	{
		// for (int i = 0; i < textInfo.meshInfo.Length; i++)
		V_16 = 0;
		goto IL_04a4;
	}

IL_0455:
	{
		// textInfo.meshInfo[i].mesh.vertices = copyOfVertices[i];
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_224 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_224);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_225 = L_224->___meshInfo_16;
		int32_t L_226 = V_16;
		NullCheck(L_225);
		Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* L_227 = ((L_225)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_226)))->___mesh_4;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_228 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_229 = V_16;
		NullCheck(L_228);
		int32_t L_230 = L_229;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_231 = (L_228)->GetAt(static_cast<il2cpp_array_size_t>(L_230));
		NullCheck(L_227);
		Mesh_set_vertices_m5BB814D89E9ACA00DBF19F7D8E22CB73AC73FE5C(L_227, L_231, NULL);
		// m_TextComponent.UpdateGeometry(textInfo.meshInfo[i].mesh, i);
		VertexShakeA_t0915AA60878050D69BA28697506CF5CF6F789E8F* L_232 = V_1;
		NullCheck(L_232);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_233 = L_232->___m_TextComponent_8;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_234 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_234);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_235 = L_234->___meshInfo_16;
		int32_t L_236 = V_16;
		NullCheck(L_235);
		Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* L_237 = ((L_235)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_236)))->___mesh_4;
		int32_t L_238 = V_16;
		NullCheck(L_233);
		VirtualActionInvoker2< Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4*, int32_t >::Invoke(107 /* System.Void TMPro.TMP_Text::UpdateGeometry(UnityEngine.Mesh,System.Int32) */, L_233, L_237, L_238);
		// for (int i = 0; i < textInfo.meshInfo.Length; i++)
		int32_t L_239 = V_16;
		V_16 = ((int32_t)il2cpp_codegen_add(L_239, 1));
	}

IL_04a4:
	{
		// for (int i = 0; i < textInfo.meshInfo.Length; i++)
		int32_t L_240 = V_16;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_241 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_241);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_242 = L_241->___meshInfo_16;
		NullCheck(L_242);
		if ((((int32_t)L_240) < ((int32_t)((int32_t)(((RuntimeArray*)L_242)->max_length)))))
		{
			goto IL_0455;
		}
	}
	{
		// yield return new WaitForSeconds(0.1f);
		WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3* L_243 = (WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3*)il2cpp_codegen_object_new(WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		NullCheck(L_243);
		WaitForSeconds__ctor_m579F95BADEDBAB4B3A7E302C6EE3995926EF2EFC(L_243, (0.100000001f), NULL);
		__this->___U3CU3E2__current_1 = L_243;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_243);
		__this->___U3CU3E1__state_0 = 2;
		return (bool)1;
	}

IL_04ce:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// while (true)
		goto IL_005a;
	}
}
// System.Object TMPro.Examples.VertexShakeA/<AnimateVertexColors>d__11::System.Collections.Generic.IEnumerator<System.Object>.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CAnimateVertexColorsU3Ed__11_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_m8DD4F3768C9025EFAC0BFDBB942FEF7953FB20BE (U3CAnimateVertexColorsU3Ed__11_t2E62EF65D8AE7185E18D8711E582A76E45AC843E* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
// System.Void TMPro.Examples.VertexShakeA/<AnimateVertexColors>d__11::System.Collections.IEnumerator.Reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CAnimateVertexColorsU3Ed__11_System_Collections_IEnumerator_Reset_m2F84864A089CBA0B878B7AC1EA39A49B82682A90 (U3CAnimateVertexColorsU3Ed__11_t2E62EF65D8AE7185E18D8711E582A76E45AC843E* __this, const RuntimeMethod* method) 
{
	{
		NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A* L_0 = (NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A_il2cpp_TypeInfo_var)));
		NullCheck(L_0);
		NotSupportedException__ctor_m1398D0CDE19B36AA3DE9392879738C1EA2439CDF(L_0, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_0, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&U3CAnimateVertexColorsU3Ed__11_System_Collections_IEnumerator_Reset_m2F84864A089CBA0B878B7AC1EA39A49B82682A90_RuntimeMethod_var)));
	}
}
// System.Object TMPro.Examples.VertexShakeA/<AnimateVertexColors>d__11::System.Collections.IEnumerator.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CAnimateVertexColorsU3Ed__11_System_Collections_IEnumerator_get_Current_m3106DAC17EF56701CBC9812DD031932B04BB730B (U3CAnimateVertexColorsU3Ed__11_t2E62EF65D8AE7185E18D8711E582A76E45AC843E* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.VertexShakeB::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexShakeB_Awake_mFA9A180BD1769CC79E6325314B5652D605ABE58E (VertexShakeB_tA3849618A1BE8DCE150A615F38CE2E247FC6F6C8* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// m_TextComponent = GetComponent<TMP_Text>();
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_0;
		L_0 = Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5(__this, Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5_RuntimeMethod_var);
		__this->___m_TextComponent_7 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_TextComponent_7), (void*)L_0);
		// }
		return;
	}
}
// System.Void TMPro.Examples.VertexShakeB::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexShakeB_OnEnable_m4999DF4598174EDA2A47F4F667B5CE061DF97C21 (VertexShakeB_tA3849618A1BE8DCE150A615F38CE2E247FC6F6C8* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&FastAction_1_Add_m368726E3508DB2176C4F87A79C0C0CC4816176D6_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VertexShakeB_ON_TEXT_CHANGED_mF8641640C828A9664AE03AF01CB4832E14EF436D_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// TMPro_EventManager.TEXT_CHANGED_EVENT.Add(ON_TEXT_CHANGED);
		il2cpp_codegen_runtime_class_init_inline(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		FastAction_1_tE50C6A692DF85AB55BE3160B659FA7DF19DFA005* L_0 = ((TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_StaticFields*)il2cpp_codegen_static_fields_for(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var))->___TEXT_CHANGED_EVENT_11;
		Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A* L_1 = (Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A*)il2cpp_codegen_object_new(Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		Action_1__ctor_m95478636F075134CA2998E22B214611472600983(L_1, __this, (intptr_t)((void*)VertexShakeB_ON_TEXT_CHANGED_mF8641640C828A9664AE03AF01CB4832E14EF436D_RuntimeMethod_var), NULL);
		NullCheck(L_0);
		FastAction_1_Add_m368726E3508DB2176C4F87A79C0C0CC4816176D6(L_0, L_1, FastAction_1_Add_m368726E3508DB2176C4F87A79C0C0CC4816176D6_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void TMPro.Examples.VertexShakeB::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexShakeB_OnDisable_m2FB32CBD277A271400BF8AF2A35294C09FE9B8E5 (VertexShakeB_tA3849618A1BE8DCE150A615F38CE2E247FC6F6C8* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&FastAction_1_Remove_mB29130AC90F5F8967CD89587717469E44E4D186F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VertexShakeB_ON_TEXT_CHANGED_mF8641640C828A9664AE03AF01CB4832E14EF436D_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// TMPro_EventManager.TEXT_CHANGED_EVENT.Remove(ON_TEXT_CHANGED);
		il2cpp_codegen_runtime_class_init_inline(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		FastAction_1_tE50C6A692DF85AB55BE3160B659FA7DF19DFA005* L_0 = ((TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_StaticFields*)il2cpp_codegen_static_fields_for(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var))->___TEXT_CHANGED_EVENT_11;
		Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A* L_1 = (Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A*)il2cpp_codegen_object_new(Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		Action_1__ctor_m95478636F075134CA2998E22B214611472600983(L_1, __this, (intptr_t)((void*)VertexShakeB_ON_TEXT_CHANGED_mF8641640C828A9664AE03AF01CB4832E14EF436D_RuntimeMethod_var), NULL);
		NullCheck(L_0);
		FastAction_1_Remove_mB29130AC90F5F8967CD89587717469E44E4D186F(L_0, L_1, FastAction_1_Remove_mB29130AC90F5F8967CD89587717469E44E4D186F_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void TMPro.Examples.VertexShakeB::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexShakeB_Start_m58786A0944340EF16E024ADB596C9AB5686C2AF1 (VertexShakeB_tA3849618A1BE8DCE150A615F38CE2E247FC6F6C8* __this, const RuntimeMethod* method) 
{
	{
		// StartCoroutine(AnimateVertexColors());
		RuntimeObject* L_0;
		L_0 = VertexShakeB_AnimateVertexColors_m06D25FE7F9F3EFF693DDC889BF725F01D0CF2A6F(__this, NULL);
		Coroutine_t85EA685566A254C23F3FD77AB5BDFFFF8799596B* L_1;
		L_1 = MonoBehaviour_StartCoroutine_m4CAFF732AA28CD3BDC5363B44A863575530EC812(__this, L_0, NULL);
		// }
		return;
	}
}
// System.Void TMPro.Examples.VertexShakeB::ON_TEXT_CHANGED(UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexShakeB_ON_TEXT_CHANGED_mF8641640C828A9664AE03AF01CB4832E14EF436D (VertexShakeB_tA3849618A1BE8DCE150A615F38CE2E247FC6F6C8* __this, Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___obj0, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (obj = m_TextComponent)
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_0 = __this->___m_TextComponent_7;
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_1 = L_0;
		___obj0 = L_1;
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = Object_op_Implicit_m18E1885C296CC868AC918101523697CFE6413C79(L_1, NULL);
		if (!L_2)
		{
			goto IL_0017;
		}
	}
	{
		// hasTextChanged = true;
		__this->___hasTextChanged_8 = (bool)1;
	}

IL_0017:
	{
		// }
		return;
	}
}
// System.Collections.IEnumerator TMPro.Examples.VertexShakeB::AnimateVertexColors()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* VertexShakeB_AnimateVertexColors_m06D25FE7F9F3EFF693DDC889BF725F01D0CF2A6F (VertexShakeB_tA3849618A1BE8DCE150A615F38CE2E247FC6F6C8* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CAnimateVertexColorsU3Ed__10_tD6C6C3147726423C8C82952A638432E12AA2C91E_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		U3CAnimateVertexColorsU3Ed__10_tD6C6C3147726423C8C82952A638432E12AA2C91E* L_0 = (U3CAnimateVertexColorsU3Ed__10_tD6C6C3147726423C8C82952A638432E12AA2C91E*)il2cpp_codegen_object_new(U3CAnimateVertexColorsU3Ed__10_tD6C6C3147726423C8C82952A638432E12AA2C91E_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		U3CAnimateVertexColorsU3Ed__10__ctor_mBE5C0E4A0F65F07A7510D171683AD319F76E6C6D(L_0, 0, NULL);
		U3CAnimateVertexColorsU3Ed__10_tD6C6C3147726423C8C82952A638432E12AA2C91E* L_1 = L_0;
		NullCheck(L_1);
		L_1->___U3CU3E4__this_2 = __this;
		Il2CppCodeGenWriteBarrier((void**)(&L_1->___U3CU3E4__this_2), (void*)__this);
		return L_1;
	}
}
// System.Void TMPro.Examples.VertexShakeB::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexShakeB__ctor_m9D068774503CF8642CC0BAC0E909ECE91E4E2198 (VertexShakeB_tA3849618A1BE8DCE150A615F38CE2E247FC6F6C8* __this, const RuntimeMethod* method) 
{
	{
		// public float AngleMultiplier = 1.0f;
		__this->___AngleMultiplier_4 = (1.0f);
		// public float SpeedMultiplier = 1.0f;
		__this->___SpeedMultiplier_5 = (1.0f);
		// public float CurveScale = 1.0f;
		__this->___CurveScale_6 = (1.0f);
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.VertexShakeB/<AnimateVertexColors>d__10::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CAnimateVertexColorsU3Ed__10__ctor_mBE5C0E4A0F65F07A7510D171683AD319F76E6C6D (U3CAnimateVertexColorsU3Ed__10_tD6C6C3147726423C8C82952A638432E12AA2C91E* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) 
{
	{
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		int32_t L_0 = ___U3CU3E1__state0;
		__this->___U3CU3E1__state_0 = L_0;
		return;
	}
}
// System.Void TMPro.Examples.VertexShakeB/<AnimateVertexColors>d__10::System.IDisposable.Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CAnimateVertexColorsU3Ed__10_System_IDisposable_Dispose_m4DD41FA568ABBC327FA38C0E345EFB6F1A71C2C8 (U3CAnimateVertexColorsU3Ed__10_tD6C6C3147726423C8C82952A638432E12AA2C91E* __this, const RuntimeMethod* method) 
{
	{
		return;
	}
}
// System.Boolean TMPro.Examples.VertexShakeB/<AnimateVertexColors>d__10::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool U3CAnimateVertexColorsU3Ed__10_MoveNext_mDD84A4116FCAAF920F86BA72F890CE0BE76AF348 (U3CAnimateVertexColorsU3Ed__10_tD6C6C3147726423C8C82952A638432E12AA2C91E* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	VertexShakeB_tA3849618A1BE8DCE150A615F38CE2E247FC6F6C8* V_1 = NULL;
	Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 V_2;
	memset((&V_2), 0, sizeof(V_2));
	int32_t V_3 = 0;
	int32_t V_4 = 0;
	int32_t V_5 = 0;
	int32_t V_6 = 0;
	int32_t V_7 = 0;
	int32_t V_8 = 0;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_9;
	memset((&V_9), 0, sizeof(V_9));
	Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 V_10;
	memset((&V_10), 0, sizeof(V_10));
	int32_t V_11 = 0;
	int32_t V_12 = 0;
	int32_t V_13 = 0;
	Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* V_14 = NULL;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_15;
	memset((&V_15), 0, sizeof(V_15));
	float V_16 = 0.0f;
	int32_t V_17 = 0;
	{
		int32_t L_0 = __this->___U3CU3E1__state_0;
		V_0 = L_0;
		VertexShakeB_tA3849618A1BE8DCE150A615F38CE2E247FC6F6C8* L_1 = __this->___U3CU3E4__this_2;
		V_1 = L_1;
		int32_t L_2 = V_0;
		switch (L_2)
		{
			case 0:
			{
				goto IL_0022;
			}
			case 1:
			{
				goto IL_0105;
			}
			case 2:
			{
				goto IL_06ab;
			}
		}
	}
	{
		return (bool)0;
	}

IL_0022:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// m_TextComponent.ForceMeshUpdate();
		VertexShakeB_tA3849618A1BE8DCE150A615F38CE2E247FC6F6C8* L_3 = V_1;
		NullCheck(L_3);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_4 = L_3->___m_TextComponent_7;
		NullCheck(L_4);
		VirtualActionInvoker2< bool, bool >::Invoke(106 /* System.Void TMPro.TMP_Text::ForceMeshUpdate(System.Boolean,System.Boolean) */, L_4, (bool)0, (bool)0);
		// TMP_TextInfo textInfo = m_TextComponent.textInfo;
		VertexShakeB_tA3849618A1BE8DCE150A615F38CE2E247FC6F6C8* L_5 = V_1;
		NullCheck(L_5);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_6 = L_5->___m_TextComponent_7;
		NullCheck(L_6);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_7;
		L_7 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_6, NULL);
		__this->___U3CtextInfoU3E5__2_3 = L_7;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CtextInfoU3E5__2_3), (void*)L_7);
		// Vector3[][] copyOfVertices = new Vector3[0][];
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_8 = (Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D*)(Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D*)SZArrayNew(Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D_il2cpp_TypeInfo_var, (uint32_t)0);
		__this->___U3CcopyOfVerticesU3E5__3_4 = L_8;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CcopyOfVerticesU3E5__3_4), (void*)L_8);
		// hasTextChanged = true;
		VertexShakeB_tA3849618A1BE8DCE150A615F38CE2E247FC6F6C8* L_9 = V_1;
		NullCheck(L_9);
		L_9->___hasTextChanged_8 = (bool)1;
	}

IL_005a:
	{
		// if (hasTextChanged)
		VertexShakeB_tA3849618A1BE8DCE150A615F38CE2E247FC6F6C8* L_10 = V_1;
		NullCheck(L_10);
		bool L_11 = L_10->___hasTextChanged_8;
		if (!L_11)
		{
			goto IL_00df;
		}
	}
	{
		// if (copyOfVertices.Length < textInfo.meshInfo.Length)
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_12 = __this->___U3CcopyOfVerticesU3E5__3_4;
		NullCheck(L_12);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_13 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_13);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_14 = L_13->___meshInfo_16;
		NullCheck(L_14);
		if ((((int32_t)((int32_t)(((RuntimeArray*)L_12)->max_length))) >= ((int32_t)((int32_t)(((RuntimeArray*)L_14)->max_length)))))
		{
			goto IL_0091;
		}
	}
	{
		// copyOfVertices = new Vector3[textInfo.meshInfo.Length][];
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_15 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_15);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_16 = L_15->___meshInfo_16;
		NullCheck(L_16);
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_17 = (Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D*)(Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D*)SZArrayNew(Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D_il2cpp_TypeInfo_var, (uint32_t)((int32_t)(((RuntimeArray*)L_16)->max_length)));
		__this->___U3CcopyOfVerticesU3E5__3_4 = L_17;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CcopyOfVerticesU3E5__3_4), (void*)L_17);
	}

IL_0091:
	{
		// for (int i = 0; i < textInfo.meshInfo.Length; i++)
		V_4 = 0;
		goto IL_00c7;
	}

IL_0096:
	{
		// int length = textInfo.meshInfo[i].vertices.Length;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_18 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_18);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_19 = L_18->___meshInfo_16;
		int32_t L_20 = V_4;
		NullCheck(L_19);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_21 = ((L_19)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_20)))->___vertices_6;
		NullCheck(L_21);
		V_5 = ((int32_t)(((RuntimeArray*)L_21)->max_length));
		// copyOfVertices[i] = new Vector3[length];
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_22 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_23 = V_4;
		int32_t L_24 = V_5;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_25 = (Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C*)(Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C*)SZArrayNew(Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C_il2cpp_TypeInfo_var, (uint32_t)L_24);
		NullCheck(L_22);
		ArrayElementTypeCheck (L_22, L_25);
		(L_22)->SetAt(static_cast<il2cpp_array_size_t>(L_23), (Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C*)L_25);
		// for (int i = 0; i < textInfo.meshInfo.Length; i++)
		int32_t L_26 = V_4;
		V_4 = ((int32_t)il2cpp_codegen_add(L_26, 1));
	}

IL_00c7:
	{
		// for (int i = 0; i < textInfo.meshInfo.Length; i++)
		int32_t L_27 = V_4;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_28 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_28);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_29 = L_28->___meshInfo_16;
		NullCheck(L_29);
		if ((((int32_t)L_27) < ((int32_t)((int32_t)(((RuntimeArray*)L_29)->max_length)))))
		{
			goto IL_0096;
		}
	}
	{
		// hasTextChanged = false;
		VertexShakeB_tA3849618A1BE8DCE150A615F38CE2E247FC6F6C8* L_30 = V_1;
		NullCheck(L_30);
		L_30->___hasTextChanged_8 = (bool)0;
	}

IL_00df:
	{
		// int characterCount = textInfo.characterCount;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_31 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_31);
		int32_t L_32 = L_31->___characterCount_3;
		// if (characterCount == 0)
		if (L_32)
		{
			goto IL_0111;
		}
	}
	{
		// yield return new WaitForSeconds(0.25f);
		WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3* L_33 = (WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3*)il2cpp_codegen_object_new(WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		NullCheck(L_33);
		WaitForSeconds__ctor_m579F95BADEDBAB4B3A7E302C6EE3995926EF2EFC(L_33, (0.25f), NULL);
		__this->___U3CU3E2__current_1 = L_33;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_33);
		__this->___U3CU3E1__state_0 = 1;
		return (bool)1;
	}

IL_0105:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// continue;
		goto IL_005a;
	}

IL_0111:
	{
		// int lineCount = textInfo.lineCount;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_34 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_34);
		int32_t L_35 = L_34->___lineCount_8;
		V_3 = L_35;
		// for (int i = 0; i < lineCount; i++)
		V_6 = 0;
		goto IL_0625;
	}

IL_0125:
	{
		// int first = textInfo.lineInfo[i].firstCharacterIndex;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_36 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_36);
		TMP_LineInfoU5BU5D_tE485ECF6A7A96441C72B53D75E7A5A5461A2CA0E* L_37 = L_36->___lineInfo_14;
		int32_t L_38 = V_6;
		NullCheck(L_37);
		int32_t L_39 = ((L_37)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_38)))->___firstCharacterIndex_5;
		V_7 = L_39;
		// int last = textInfo.lineInfo[i].lastCharacterIndex;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_40 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_40);
		TMP_LineInfoU5BU5D_tE485ECF6A7A96441C72B53D75E7A5A5461A2CA0E* L_41 = L_40->___lineInfo_14;
		int32_t L_42 = V_6;
		NullCheck(L_41);
		int32_t L_43 = ((L_41)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_42)))->___lastCharacterIndex_7;
		V_8 = L_43;
		// Vector3 centerOfLine = (textInfo.characterInfo[first].bottomLeft + textInfo.characterInfo[last].topRight) / 2;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_44 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_44);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_45 = L_44->___characterInfo_11;
		int32_t L_46 = V_7;
		NullCheck(L_45);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_47 = ((L_45)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_46)))->___bottomLeft_20;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_48 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_48);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_49 = L_48->___characterInfo_11;
		int32_t L_50 = V_8;
		NullCheck(L_49);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_51 = ((L_49)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_50)))->___topRight_21;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_52;
		L_52 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_47, L_51, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_53;
		L_53 = Vector3_op_Division_mD7200D6D432BAFC4135C5B17A0B0A812203B0270_inline(L_52, (2.0f), NULL);
		V_9 = L_53;
		// Quaternion rotation = Quaternion.Euler(0, 0, Random.Range(-0.25f, 0.25f));
		float L_54;
		L_54 = Random_Range_mF26F26EB446B76823B4815C91FA0907B484DF02B((-0.25f), (0.25f), NULL);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_55;
		L_55 = Quaternion_Euler_mD4601D966F1F58F3FCA01B3FC19A12D0AD0396DD_inline((0.0f), (0.0f), L_54, NULL);
		V_10 = L_55;
		// for (int j = first; j <= last; j++)
		int32_t L_56 = V_7;
		V_11 = L_56;
		goto IL_0616;
	}

IL_01bf:
	{
		// if (!textInfo.characterInfo[j].isVisible)
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_57 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_57);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_58 = L_57->___characterInfo_11;
		int32_t L_59 = V_11;
		NullCheck(L_58);
		bool L_60 = ((L_58)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_59)))->___isVisible_40;
		if (!L_60)
		{
			goto IL_0610;
		}
	}
	{
		// int materialIndex = textInfo.characterInfo[j].materialReferenceIndex;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_61 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_61);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_62 = L_61->___characterInfo_11;
		int32_t L_63 = V_11;
		NullCheck(L_62);
		int32_t L_64 = ((L_62)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_63)))->___materialReferenceIndex_9;
		V_12 = L_64;
		// int vertexIndex = textInfo.characterInfo[j].vertexIndex;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_65 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_65);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_66 = L_65->___characterInfo_11;
		int32_t L_67 = V_11;
		NullCheck(L_66);
		int32_t L_68 = ((L_66)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_67)))->___vertexIndex_14;
		V_13 = L_68;
		// Vector3[] sourceVertices = textInfo.meshInfo[materialIndex].vertices;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_69 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_69);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_70 = L_69->___meshInfo_16;
		int32_t L_71 = V_12;
		NullCheck(L_70);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_72 = ((L_70)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_71)))->___vertices_6;
		V_14 = L_72;
		// Vector3 charCenter = (sourceVertices[vertexIndex + 0] + sourceVertices[vertexIndex + 2]) / 2;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_73 = V_14;
		int32_t L_74 = V_13;
		NullCheck(L_73);
		int32_t L_75 = L_74;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_76 = (L_73)->GetAt(static_cast<il2cpp_array_size_t>(L_75));
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_77 = V_14;
		int32_t L_78 = V_13;
		NullCheck(L_77);
		int32_t L_79 = ((int32_t)il2cpp_codegen_add(L_78, 2));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_80 = (L_77)->GetAt(static_cast<il2cpp_array_size_t>(L_79));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_81;
		L_81 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_76, L_80, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_82;
		L_82 = Vector3_op_Division_mD7200D6D432BAFC4135C5B17A0B0A812203B0270_inline(L_81, (2.0f), NULL);
		V_15 = L_82;
		// copyOfVertices[materialIndex][vertexIndex + 0] = sourceVertices[vertexIndex + 0] - charCenter;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_83 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_84 = V_12;
		NullCheck(L_83);
		int32_t L_85 = L_84;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_86 = (L_83)->GetAt(static_cast<il2cpp_array_size_t>(L_85));
		int32_t L_87 = V_13;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_88 = V_14;
		int32_t L_89 = V_13;
		NullCheck(L_88);
		int32_t L_90 = L_89;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_91 = (L_88)->GetAt(static_cast<il2cpp_array_size_t>(L_90));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_92 = V_15;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_93;
		L_93 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_91, L_92, NULL);
		NullCheck(L_86);
		(L_86)->SetAt(static_cast<il2cpp_array_size_t>(L_87), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_93);
		// copyOfVertices[materialIndex][vertexIndex + 1] = sourceVertices[vertexIndex + 1] - charCenter;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_94 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_95 = V_12;
		NullCheck(L_94);
		int32_t L_96 = L_95;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_97 = (L_94)->GetAt(static_cast<il2cpp_array_size_t>(L_96));
		int32_t L_98 = V_13;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_99 = V_14;
		int32_t L_100 = V_13;
		NullCheck(L_99);
		int32_t L_101 = ((int32_t)il2cpp_codegen_add(L_100, 1));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_102 = (L_99)->GetAt(static_cast<il2cpp_array_size_t>(L_101));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_103 = V_15;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_104;
		L_104 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_102, L_103, NULL);
		NullCheck(L_97);
		(L_97)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_98, 1))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_104);
		// copyOfVertices[materialIndex][vertexIndex + 2] = sourceVertices[vertexIndex + 2] - charCenter;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_105 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_106 = V_12;
		NullCheck(L_105);
		int32_t L_107 = L_106;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_108 = (L_105)->GetAt(static_cast<il2cpp_array_size_t>(L_107));
		int32_t L_109 = V_13;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_110 = V_14;
		int32_t L_111 = V_13;
		NullCheck(L_110);
		int32_t L_112 = ((int32_t)il2cpp_codegen_add(L_111, 2));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_113 = (L_110)->GetAt(static_cast<il2cpp_array_size_t>(L_112));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_114 = V_15;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_115;
		L_115 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_113, L_114, NULL);
		NullCheck(L_108);
		(L_108)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_109, 2))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_115);
		// copyOfVertices[materialIndex][vertexIndex + 3] = sourceVertices[vertexIndex + 3] - charCenter;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_116 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_117 = V_12;
		NullCheck(L_116);
		int32_t L_118 = L_117;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_119 = (L_116)->GetAt(static_cast<il2cpp_array_size_t>(L_118));
		int32_t L_120 = V_13;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_121 = V_14;
		int32_t L_122 = V_13;
		NullCheck(L_121);
		int32_t L_123 = ((int32_t)il2cpp_codegen_add(L_122, 3));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_124 = (L_121)->GetAt(static_cast<il2cpp_array_size_t>(L_123));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_125 = V_15;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_126;
		L_126 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_124, L_125, NULL);
		NullCheck(L_119);
		(L_119)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_120, 3))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_126);
		// float randomScale = Random.Range(0.95f, 1.05f);
		float L_127;
		L_127 = Random_Range_mF26F26EB446B76823B4815C91FA0907B484DF02B((0.949999988f), (1.04999995f), NULL);
		V_16 = L_127;
		// matrix = Matrix4x4.TRS(Vector3.one, Quaternion.identity, Vector3.one * randomScale);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_128;
		L_128 = Vector3_get_one_mE6A2D5C6578E94268024613B596BF09F990B1260_inline(NULL);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_129;
		L_129 = Quaternion_get_identity_mB9CAEEB21BC81352CBF32DB9664BFC06FA7EA27B_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_130;
		L_130 = Vector3_get_one_mE6A2D5C6578E94268024613B596BF09F990B1260_inline(NULL);
		float L_131 = V_16;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_132;
		L_132 = Vector3_op_Multiply_m516FE285F5342F922C6EB3FCB33197E9017FF484_inline(L_130, L_131, NULL);
		Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 L_133;
		L_133 = Matrix4x4_TRS_mFEBA6926DB0044B96EF0CE98F30FEE7596820680(L_128, L_129, L_132, NULL);
		V_2 = L_133;
		// copyOfVertices[materialIndex][vertexIndex + 0] = matrix.MultiplyPoint3x4(copyOfVertices[materialIndex][vertexIndex + 0]);
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_134 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_135 = V_12;
		NullCheck(L_134);
		int32_t L_136 = L_135;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_137 = (L_134)->GetAt(static_cast<il2cpp_array_size_t>(L_136));
		int32_t L_138 = V_13;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_139 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_140 = V_12;
		NullCheck(L_139);
		int32_t L_141 = L_140;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_142 = (L_139)->GetAt(static_cast<il2cpp_array_size_t>(L_141));
		int32_t L_143 = V_13;
		NullCheck(L_142);
		int32_t L_144 = L_143;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_145 = (L_142)->GetAt(static_cast<il2cpp_array_size_t>(L_144));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_146;
		L_146 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_2), L_145, NULL);
		NullCheck(L_137);
		(L_137)->SetAt(static_cast<il2cpp_array_size_t>(L_138), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_146);
		// copyOfVertices[materialIndex][vertexIndex + 1] = matrix.MultiplyPoint3x4(copyOfVertices[materialIndex][vertexIndex + 1]);
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_147 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_148 = V_12;
		NullCheck(L_147);
		int32_t L_149 = L_148;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_150 = (L_147)->GetAt(static_cast<il2cpp_array_size_t>(L_149));
		int32_t L_151 = V_13;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_152 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_153 = V_12;
		NullCheck(L_152);
		int32_t L_154 = L_153;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_155 = (L_152)->GetAt(static_cast<il2cpp_array_size_t>(L_154));
		int32_t L_156 = V_13;
		NullCheck(L_155);
		int32_t L_157 = ((int32_t)il2cpp_codegen_add(L_156, 1));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_158 = (L_155)->GetAt(static_cast<il2cpp_array_size_t>(L_157));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_159;
		L_159 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_2), L_158, NULL);
		NullCheck(L_150);
		(L_150)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_151, 1))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_159);
		// copyOfVertices[materialIndex][vertexIndex + 2] = matrix.MultiplyPoint3x4(copyOfVertices[materialIndex][vertexIndex + 2]);
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_160 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_161 = V_12;
		NullCheck(L_160);
		int32_t L_162 = L_161;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_163 = (L_160)->GetAt(static_cast<il2cpp_array_size_t>(L_162));
		int32_t L_164 = V_13;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_165 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_166 = V_12;
		NullCheck(L_165);
		int32_t L_167 = L_166;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_168 = (L_165)->GetAt(static_cast<il2cpp_array_size_t>(L_167));
		int32_t L_169 = V_13;
		NullCheck(L_168);
		int32_t L_170 = ((int32_t)il2cpp_codegen_add(L_169, 2));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_171 = (L_168)->GetAt(static_cast<il2cpp_array_size_t>(L_170));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_172;
		L_172 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_2), L_171, NULL);
		NullCheck(L_163);
		(L_163)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_164, 2))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_172);
		// copyOfVertices[materialIndex][vertexIndex + 3] = matrix.MultiplyPoint3x4(copyOfVertices[materialIndex][vertexIndex + 3]);
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_173 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_174 = V_12;
		NullCheck(L_173);
		int32_t L_175 = L_174;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_176 = (L_173)->GetAt(static_cast<il2cpp_array_size_t>(L_175));
		int32_t L_177 = V_13;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_178 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_179 = V_12;
		NullCheck(L_178);
		int32_t L_180 = L_179;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_181 = (L_178)->GetAt(static_cast<il2cpp_array_size_t>(L_180));
		int32_t L_182 = V_13;
		NullCheck(L_181);
		int32_t L_183 = ((int32_t)il2cpp_codegen_add(L_182, 3));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_184 = (L_181)->GetAt(static_cast<il2cpp_array_size_t>(L_183));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_185;
		L_185 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_2), L_184, NULL);
		NullCheck(L_176);
		(L_176)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_177, 3))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_185);
		// copyOfVertices[materialIndex][vertexIndex + 0] += charCenter;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_186 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_187 = V_12;
		NullCheck(L_186);
		int32_t L_188 = L_187;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_189 = (L_186)->GetAt(static_cast<il2cpp_array_size_t>(L_188));
		int32_t L_190 = V_13;
		NullCheck(L_189);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_191 = ((L_189)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_190)));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_192 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_191);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_193 = V_15;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_194;
		L_194 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_192, L_193, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_191 = L_194;
		// copyOfVertices[materialIndex][vertexIndex + 1] += charCenter;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_195 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_196 = V_12;
		NullCheck(L_195);
		int32_t L_197 = L_196;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_198 = (L_195)->GetAt(static_cast<il2cpp_array_size_t>(L_197));
		int32_t L_199 = V_13;
		NullCheck(L_198);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_200 = ((L_198)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_199, 1)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_201 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_200);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_202 = V_15;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_203;
		L_203 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_201, L_202, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_200 = L_203;
		// copyOfVertices[materialIndex][vertexIndex + 2] += charCenter;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_204 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_205 = V_12;
		NullCheck(L_204);
		int32_t L_206 = L_205;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_207 = (L_204)->GetAt(static_cast<il2cpp_array_size_t>(L_206));
		int32_t L_208 = V_13;
		NullCheck(L_207);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_209 = ((L_207)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_208, 2)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_210 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_209);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_211 = V_15;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_212;
		L_212 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_210, L_211, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_209 = L_212;
		// copyOfVertices[materialIndex][vertexIndex + 3] += charCenter;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_213 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_214 = V_12;
		NullCheck(L_213);
		int32_t L_215 = L_214;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_216 = (L_213)->GetAt(static_cast<il2cpp_array_size_t>(L_215));
		int32_t L_217 = V_13;
		NullCheck(L_216);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_218 = ((L_216)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_217, 3)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_219 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_218);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_220 = V_15;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_221;
		L_221 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_219, L_220, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_218 = L_221;
		// copyOfVertices[materialIndex][vertexIndex + 0] -= centerOfLine;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_222 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_223 = V_12;
		NullCheck(L_222);
		int32_t L_224 = L_223;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_225 = (L_222)->GetAt(static_cast<il2cpp_array_size_t>(L_224));
		int32_t L_226 = V_13;
		NullCheck(L_225);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_227 = ((L_225)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_226)));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_228 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_227);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_229 = V_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_230;
		L_230 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_228, L_229, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_227 = L_230;
		// copyOfVertices[materialIndex][vertexIndex + 1] -= centerOfLine;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_231 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_232 = V_12;
		NullCheck(L_231);
		int32_t L_233 = L_232;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_234 = (L_231)->GetAt(static_cast<il2cpp_array_size_t>(L_233));
		int32_t L_235 = V_13;
		NullCheck(L_234);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_236 = ((L_234)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_235, 1)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_237 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_236);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_238 = V_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_239;
		L_239 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_237, L_238, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_236 = L_239;
		// copyOfVertices[materialIndex][vertexIndex + 2] -= centerOfLine;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_240 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_241 = V_12;
		NullCheck(L_240);
		int32_t L_242 = L_241;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_243 = (L_240)->GetAt(static_cast<il2cpp_array_size_t>(L_242));
		int32_t L_244 = V_13;
		NullCheck(L_243);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_245 = ((L_243)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_244, 2)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_246 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_245);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_247 = V_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_248;
		L_248 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_246, L_247, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_245 = L_248;
		// copyOfVertices[materialIndex][vertexIndex + 3] -= centerOfLine;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_249 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_250 = V_12;
		NullCheck(L_249);
		int32_t L_251 = L_250;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_252 = (L_249)->GetAt(static_cast<il2cpp_array_size_t>(L_251));
		int32_t L_253 = V_13;
		NullCheck(L_252);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_254 = ((L_252)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_253, 3)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_255 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_254);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_256 = V_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_257;
		L_257 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_255, L_256, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_254 = L_257;
		// matrix = Matrix4x4.TRS(Vector3.one, rotation, Vector3.one);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_258;
		L_258 = Vector3_get_one_mE6A2D5C6578E94268024613B596BF09F990B1260_inline(NULL);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_259 = V_10;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_260;
		L_260 = Vector3_get_one_mE6A2D5C6578E94268024613B596BF09F990B1260_inline(NULL);
		Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 L_261;
		L_261 = Matrix4x4_TRS_mFEBA6926DB0044B96EF0CE98F30FEE7596820680(L_258, L_259, L_260, NULL);
		V_2 = L_261;
		// copyOfVertices[materialIndex][vertexIndex + 0] = matrix.MultiplyPoint3x4(copyOfVertices[materialIndex][vertexIndex + 0]);
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_262 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_263 = V_12;
		NullCheck(L_262);
		int32_t L_264 = L_263;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_265 = (L_262)->GetAt(static_cast<il2cpp_array_size_t>(L_264));
		int32_t L_266 = V_13;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_267 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_268 = V_12;
		NullCheck(L_267);
		int32_t L_269 = L_268;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_270 = (L_267)->GetAt(static_cast<il2cpp_array_size_t>(L_269));
		int32_t L_271 = V_13;
		NullCheck(L_270);
		int32_t L_272 = L_271;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_273 = (L_270)->GetAt(static_cast<il2cpp_array_size_t>(L_272));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_274;
		L_274 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_2), L_273, NULL);
		NullCheck(L_265);
		(L_265)->SetAt(static_cast<il2cpp_array_size_t>(L_266), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_274);
		// copyOfVertices[materialIndex][vertexIndex + 1] = matrix.MultiplyPoint3x4(copyOfVertices[materialIndex][vertexIndex + 1]);
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_275 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_276 = V_12;
		NullCheck(L_275);
		int32_t L_277 = L_276;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_278 = (L_275)->GetAt(static_cast<il2cpp_array_size_t>(L_277));
		int32_t L_279 = V_13;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_280 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_281 = V_12;
		NullCheck(L_280);
		int32_t L_282 = L_281;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_283 = (L_280)->GetAt(static_cast<il2cpp_array_size_t>(L_282));
		int32_t L_284 = V_13;
		NullCheck(L_283);
		int32_t L_285 = ((int32_t)il2cpp_codegen_add(L_284, 1));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_286 = (L_283)->GetAt(static_cast<il2cpp_array_size_t>(L_285));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_287;
		L_287 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_2), L_286, NULL);
		NullCheck(L_278);
		(L_278)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_279, 1))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_287);
		// copyOfVertices[materialIndex][vertexIndex + 2] = matrix.MultiplyPoint3x4(copyOfVertices[materialIndex][vertexIndex + 2]);
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_288 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_289 = V_12;
		NullCheck(L_288);
		int32_t L_290 = L_289;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_291 = (L_288)->GetAt(static_cast<il2cpp_array_size_t>(L_290));
		int32_t L_292 = V_13;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_293 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_294 = V_12;
		NullCheck(L_293);
		int32_t L_295 = L_294;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_296 = (L_293)->GetAt(static_cast<il2cpp_array_size_t>(L_295));
		int32_t L_297 = V_13;
		NullCheck(L_296);
		int32_t L_298 = ((int32_t)il2cpp_codegen_add(L_297, 2));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_299 = (L_296)->GetAt(static_cast<il2cpp_array_size_t>(L_298));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_300;
		L_300 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_2), L_299, NULL);
		NullCheck(L_291);
		(L_291)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_292, 2))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_300);
		// copyOfVertices[materialIndex][vertexIndex + 3] = matrix.MultiplyPoint3x4(copyOfVertices[materialIndex][vertexIndex + 3]);
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_301 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_302 = V_12;
		NullCheck(L_301);
		int32_t L_303 = L_302;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_304 = (L_301)->GetAt(static_cast<il2cpp_array_size_t>(L_303));
		int32_t L_305 = V_13;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_306 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_307 = V_12;
		NullCheck(L_306);
		int32_t L_308 = L_307;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_309 = (L_306)->GetAt(static_cast<il2cpp_array_size_t>(L_308));
		int32_t L_310 = V_13;
		NullCheck(L_309);
		int32_t L_311 = ((int32_t)il2cpp_codegen_add(L_310, 3));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_312 = (L_309)->GetAt(static_cast<il2cpp_array_size_t>(L_311));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_313;
		L_313 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_2), L_312, NULL);
		NullCheck(L_304);
		(L_304)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_305, 3))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_313);
		// copyOfVertices[materialIndex][vertexIndex + 0] += centerOfLine;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_314 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_315 = V_12;
		NullCheck(L_314);
		int32_t L_316 = L_315;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_317 = (L_314)->GetAt(static_cast<il2cpp_array_size_t>(L_316));
		int32_t L_318 = V_13;
		NullCheck(L_317);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_319 = ((L_317)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_318)));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_320 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_319);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_321 = V_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_322;
		L_322 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_320, L_321, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_319 = L_322;
		// copyOfVertices[materialIndex][vertexIndex + 1] += centerOfLine;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_323 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_324 = V_12;
		NullCheck(L_323);
		int32_t L_325 = L_324;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_326 = (L_323)->GetAt(static_cast<il2cpp_array_size_t>(L_325));
		int32_t L_327 = V_13;
		NullCheck(L_326);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_328 = ((L_326)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_327, 1)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_329 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_328);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_330 = V_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_331;
		L_331 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_329, L_330, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_328 = L_331;
		// copyOfVertices[materialIndex][vertexIndex + 2] += centerOfLine;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_332 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_333 = V_12;
		NullCheck(L_332);
		int32_t L_334 = L_333;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_335 = (L_332)->GetAt(static_cast<il2cpp_array_size_t>(L_334));
		int32_t L_336 = V_13;
		NullCheck(L_335);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_337 = ((L_335)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_336, 2)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_338 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_337);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_339 = V_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_340;
		L_340 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_338, L_339, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_337 = L_340;
		// copyOfVertices[materialIndex][vertexIndex + 3] += centerOfLine;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_341 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_342 = V_12;
		NullCheck(L_341);
		int32_t L_343 = L_342;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_344 = (L_341)->GetAt(static_cast<il2cpp_array_size_t>(L_343));
		int32_t L_345 = V_13;
		NullCheck(L_344);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_346 = ((L_344)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_345, 3)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_347 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_346);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_348 = V_9;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_349;
		L_349 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_347, L_348, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_346 = L_349;
	}

IL_0610:
	{
		// for (int j = first; j <= last; j++)
		int32_t L_350 = V_11;
		V_11 = ((int32_t)il2cpp_codegen_add(L_350, 1));
	}

IL_0616:
	{
		// for (int j = first; j <= last; j++)
		int32_t L_351 = V_11;
		int32_t L_352 = V_8;
		if ((((int32_t)L_351) <= ((int32_t)L_352)))
		{
			goto IL_01bf;
		}
	}
	{
		// for (int i = 0; i < lineCount; i++)
		int32_t L_353 = V_6;
		V_6 = ((int32_t)il2cpp_codegen_add(L_353, 1));
	}

IL_0625:
	{
		// for (int i = 0; i < lineCount; i++)
		int32_t L_354 = V_6;
		int32_t L_355 = V_3;
		if ((((int32_t)L_354) < ((int32_t)L_355)))
		{
			goto IL_0125;
		}
	}
	{
		// for (int i = 0; i < textInfo.meshInfo.Length; i++)
		V_17 = 0;
		goto IL_0681;
	}

IL_0632:
	{
		// textInfo.meshInfo[i].mesh.vertices = copyOfVertices[i];
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_356 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_356);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_357 = L_356->___meshInfo_16;
		int32_t L_358 = V_17;
		NullCheck(L_357);
		Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* L_359 = ((L_357)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_358)))->___mesh_4;
		Vector3U5BU5DU5BU5D_t9E2E40AB6AB9079C8F16A0B6410FF6CF2EE8B53D* L_360 = __this->___U3CcopyOfVerticesU3E5__3_4;
		int32_t L_361 = V_17;
		NullCheck(L_360);
		int32_t L_362 = L_361;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_363 = (L_360)->GetAt(static_cast<il2cpp_array_size_t>(L_362));
		NullCheck(L_359);
		Mesh_set_vertices_m5BB814D89E9ACA00DBF19F7D8E22CB73AC73FE5C(L_359, L_363, NULL);
		// m_TextComponent.UpdateGeometry(textInfo.meshInfo[i].mesh, i);
		VertexShakeB_tA3849618A1BE8DCE150A615F38CE2E247FC6F6C8* L_364 = V_1;
		NullCheck(L_364);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_365 = L_364->___m_TextComponent_7;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_366 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_366);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_367 = L_366->___meshInfo_16;
		int32_t L_368 = V_17;
		NullCheck(L_367);
		Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* L_369 = ((L_367)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_368)))->___mesh_4;
		int32_t L_370 = V_17;
		NullCheck(L_365);
		VirtualActionInvoker2< Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4*, int32_t >::Invoke(107 /* System.Void TMPro.TMP_Text::UpdateGeometry(UnityEngine.Mesh,System.Int32) */, L_365, L_369, L_370);
		// for (int i = 0; i < textInfo.meshInfo.Length; i++)
		int32_t L_371 = V_17;
		V_17 = ((int32_t)il2cpp_codegen_add(L_371, 1));
	}

IL_0681:
	{
		// for (int i = 0; i < textInfo.meshInfo.Length; i++)
		int32_t L_372 = V_17;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_373 = __this->___U3CtextInfoU3E5__2_3;
		NullCheck(L_373);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_374 = L_373->___meshInfo_16;
		NullCheck(L_374);
		if ((((int32_t)L_372) < ((int32_t)((int32_t)(((RuntimeArray*)L_374)->max_length)))))
		{
			goto IL_0632;
		}
	}
	{
		// yield return new WaitForSeconds(0.1f);
		WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3* L_375 = (WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3*)il2cpp_codegen_object_new(WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		NullCheck(L_375);
		WaitForSeconds__ctor_m579F95BADEDBAB4B3A7E302C6EE3995926EF2EFC(L_375, (0.100000001f), NULL);
		__this->___U3CU3E2__current_1 = L_375;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_375);
		__this->___U3CU3E1__state_0 = 2;
		return (bool)1;
	}

IL_06ab:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// while (true)
		goto IL_005a;
	}
}
// System.Object TMPro.Examples.VertexShakeB/<AnimateVertexColors>d__10::System.Collections.Generic.IEnumerator<System.Object>.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CAnimateVertexColorsU3Ed__10_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_m250CC96EC17E74D79536FDA4EB6F5B5F985C0845 (U3CAnimateVertexColorsU3Ed__10_tD6C6C3147726423C8C82952A638432E12AA2C91E* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
// System.Void TMPro.Examples.VertexShakeB/<AnimateVertexColors>d__10::System.Collections.IEnumerator.Reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CAnimateVertexColorsU3Ed__10_System_Collections_IEnumerator_Reset_m5A5869FEFA67D5E9659F1145B83581D954550C1A (U3CAnimateVertexColorsU3Ed__10_tD6C6C3147726423C8C82952A638432E12AA2C91E* __this, const RuntimeMethod* method) 
{
	{
		NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A* L_0 = (NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A_il2cpp_TypeInfo_var)));
		NullCheck(L_0);
		NotSupportedException__ctor_m1398D0CDE19B36AA3DE9392879738C1EA2439CDF(L_0, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_0, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&U3CAnimateVertexColorsU3Ed__10_System_Collections_IEnumerator_Reset_m5A5869FEFA67D5E9659F1145B83581D954550C1A_RuntimeMethod_var)));
	}
}
// System.Object TMPro.Examples.VertexShakeB/<AnimateVertexColors>d__10::System.Collections.IEnumerator.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CAnimateVertexColorsU3Ed__10_System_Collections_IEnumerator_get_Current_m496F1BFEADA21FFB684F8C1996EAB707CFA1C5F0 (U3CAnimateVertexColorsU3Ed__10_tD6C6C3147726423C8C82952A638432E12AA2C91E* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.VertexZoom::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexZoom_Awake_m29C1DE789B968D726EDD69F605321A223D47C1A0 (VertexZoom_t51F05EB153497034D27896F07590D790A73981A6* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// m_TextComponent = GetComponent<TMP_Text>();
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_0;
		L_0 = Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5(__this, Component_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_m0C4C5268B54C7097888C6B109527A680772EBCB5_RuntimeMethod_var);
		__this->___m_TextComponent_7 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_TextComponent_7), (void*)L_0);
		// }
		return;
	}
}
// System.Void TMPro.Examples.VertexZoom::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexZoom_OnEnable_mE3719F01B6A8590066988F425F8A63103B5A7B47 (VertexZoom_t51F05EB153497034D27896F07590D790A73981A6* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&FastAction_1_Add_m368726E3508DB2176C4F87A79C0C0CC4816176D6_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VertexZoom_ON_TEXT_CHANGED_mFF049D0455A7DD19D6BDACBEEB737B4AAE32DDA7_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// TMPro_EventManager.TEXT_CHANGED_EVENT.Add(ON_TEXT_CHANGED);
		il2cpp_codegen_runtime_class_init_inline(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		FastAction_1_tE50C6A692DF85AB55BE3160B659FA7DF19DFA005* L_0 = ((TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_StaticFields*)il2cpp_codegen_static_fields_for(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var))->___TEXT_CHANGED_EVENT_11;
		Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A* L_1 = (Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A*)il2cpp_codegen_object_new(Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		Action_1__ctor_m95478636F075134CA2998E22B214611472600983(L_1, __this, (intptr_t)((void*)VertexZoom_ON_TEXT_CHANGED_mFF049D0455A7DD19D6BDACBEEB737B4AAE32DDA7_RuntimeMethod_var), NULL);
		NullCheck(L_0);
		FastAction_1_Add_m368726E3508DB2176C4F87A79C0C0CC4816176D6(L_0, L_1, FastAction_1_Add_m368726E3508DB2176C4F87A79C0C0CC4816176D6_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void TMPro.Examples.VertexZoom::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexZoom_OnDisable_mBB91C9EFA049395743D27358A427BB2B05850B47 (VertexZoom_t51F05EB153497034D27896F07590D790A73981A6* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&FastAction_1_Remove_mB29130AC90F5F8967CD89587717469E44E4D186F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VertexZoom_ON_TEXT_CHANGED_mFF049D0455A7DD19D6BDACBEEB737B4AAE32DDA7_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// TMPro_EventManager.TEXT_CHANGED_EVENT.Remove(ON_TEXT_CHANGED);
		il2cpp_codegen_runtime_class_init_inline(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var);
		FastAction_1_tE50C6A692DF85AB55BE3160B659FA7DF19DFA005* L_0 = ((TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_StaticFields*)il2cpp_codegen_static_fields_for(TMPro_EventManager_t0234DB5BF625FC164B395C5C3B6F2CB8C89A3BA9_il2cpp_TypeInfo_var))->___TEXT_CHANGED_EVENT_11;
		Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A* L_1 = (Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A*)il2cpp_codegen_object_new(Action_1_t7F8A08D55E64F30F0E9A4213699C99903459421A_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		Action_1__ctor_m95478636F075134CA2998E22B214611472600983(L_1, __this, (intptr_t)((void*)VertexZoom_ON_TEXT_CHANGED_mFF049D0455A7DD19D6BDACBEEB737B4AAE32DDA7_RuntimeMethod_var), NULL);
		NullCheck(L_0);
		FastAction_1_Remove_mB29130AC90F5F8967CD89587717469E44E4D186F(L_0, L_1, FastAction_1_Remove_mB29130AC90F5F8967CD89587717469E44E4D186F_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void TMPro.Examples.VertexZoom::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexZoom_Start_mB03D03148C98EBC9117D69510D24F21978546FCB (VertexZoom_t51F05EB153497034D27896F07590D790A73981A6* __this, const RuntimeMethod* method) 
{
	{
		// StartCoroutine(AnimateVertexColors());
		RuntimeObject* L_0;
		L_0 = VertexZoom_AnimateVertexColors_m632BD9DC8FB193AF2D5B540524B11AF139FDF5F0(__this, NULL);
		Coroutine_t85EA685566A254C23F3FD77AB5BDFFFF8799596B* L_1;
		L_1 = MonoBehaviour_StartCoroutine_m4CAFF732AA28CD3BDC5363B44A863575530EC812(__this, L_0, NULL);
		// }
		return;
	}
}
// System.Void TMPro.Examples.VertexZoom::ON_TEXT_CHANGED(UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexZoom_ON_TEXT_CHANGED_mFF049D0455A7DD19D6BDACBEEB737B4AAE32DDA7 (VertexZoom_t51F05EB153497034D27896F07590D790A73981A6* __this, Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___obj0, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (obj == m_TextComponent)
		Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* L_0 = ___obj0;
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_1 = __this->___m_TextComponent_7;
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = Object_op_Equality_mD3DB0D72CE0250C84033DC2A90AEF9D59896E536(L_0, L_1, NULL);
		if (!L_2)
		{
			goto IL_0015;
		}
	}
	{
		// hasTextChanged = true;
		__this->___hasTextChanged_8 = (bool)1;
	}

IL_0015:
	{
		// }
		return;
	}
}
// System.Collections.IEnumerator TMPro.Examples.VertexZoom::AnimateVertexColors()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* VertexZoom_AnimateVertexColors_m632BD9DC8FB193AF2D5B540524B11AF139FDF5F0 (VertexZoom_t51F05EB153497034D27896F07590D790A73981A6* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CAnimateVertexColorsU3Ed__10_t2EB585545BBB614E711BE1D5C7BF139053486123_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		U3CAnimateVertexColorsU3Ed__10_t2EB585545BBB614E711BE1D5C7BF139053486123* L_0 = (U3CAnimateVertexColorsU3Ed__10_t2EB585545BBB614E711BE1D5C7BF139053486123*)il2cpp_codegen_object_new(U3CAnimateVertexColorsU3Ed__10_t2EB585545BBB614E711BE1D5C7BF139053486123_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		U3CAnimateVertexColorsU3Ed__10__ctor_m7A5B8E07B89E628DB7119F7F61311165A2DBC4D6(L_0, 0, NULL);
		U3CAnimateVertexColorsU3Ed__10_t2EB585545BBB614E711BE1D5C7BF139053486123* L_1 = L_0;
		NullCheck(L_1);
		L_1->___U3CU3E4__this_2 = __this;
		Il2CppCodeGenWriteBarrier((void**)(&L_1->___U3CU3E4__this_2), (void*)__this);
		return L_1;
	}
}
// System.Void TMPro.Examples.VertexZoom::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VertexZoom__ctor_m454AF80ACB5C555BCB4B5E658A22B5A4FCC39422 (VertexZoom_t51F05EB153497034D27896F07590D790A73981A6* __this, const RuntimeMethod* method) 
{
	{
		// public float AngleMultiplier = 1.0f;
		__this->___AngleMultiplier_4 = (1.0f);
		// public float SpeedMultiplier = 1.0f;
		__this->___SpeedMultiplier_5 = (1.0f);
		// public float CurveScale = 1.0f;
		__this->___CurveScale_6 = (1.0f);
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.VertexZoom/<>c__DisplayClass10_0::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CU3Ec__DisplayClass10_0__ctor_m8C69A89B34AA3D16243E69F1E0015856C791CC8A (U3CU3Ec__DisplayClass10_0_t62C0E1CEED92DDFC3DD4C58EC8806FC7D82A7FB7* __this, const RuntimeMethod* method) 
{
	{
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		return;
	}
}
// System.Int32 TMPro.Examples.VertexZoom/<>c__DisplayClass10_0::<AnimateVertexColors>b__0(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t U3CU3Ec__DisplayClass10_0_U3CAnimateVertexColorsU3Eb__0_m8E51A05E012CCFA439DCF10A8B5C4FA196E4344A (U3CU3Ec__DisplayClass10_0_t62C0E1CEED92DDFC3DD4C58EC8806FC7D82A7FB7* __this, int32_t ___a0, int32_t ___b1, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_mFE556F47C4CD09EAC6C898EF39D4A8EC112CFC50_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// scaleSortingOrder.Sort((a, b) => modifiedCharScale[a].CompareTo(modifiedCharScale[b]));
		List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918* L_0 = __this->___modifiedCharScale_0;
		int32_t L_1 = ___a0;
		NullCheck(L_0);
		float L_2;
		L_2 = List_1_get_Item_mFE556F47C4CD09EAC6C898EF39D4A8EC112CFC50(L_0, L_1, List_1_get_Item_mFE556F47C4CD09EAC6C898EF39D4A8EC112CFC50_RuntimeMethod_var);
		V_0 = L_2;
		List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918* L_3 = __this->___modifiedCharScale_0;
		int32_t L_4 = ___b1;
		NullCheck(L_3);
		float L_5;
		L_5 = List_1_get_Item_mFE556F47C4CD09EAC6C898EF39D4A8EC112CFC50(L_3, L_4, List_1_get_Item_mFE556F47C4CD09EAC6C898EF39D4A8EC112CFC50_RuntimeMethod_var);
		int32_t L_6;
		L_6 = Single_CompareTo_m06F7868162EB392D3E99103D1A0BD27463C9E66F((&V_0), L_5, NULL);
		return L_6;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.VertexZoom/<AnimateVertexColors>d__10::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CAnimateVertexColorsU3Ed__10__ctor_m7A5B8E07B89E628DB7119F7F61311165A2DBC4D6 (U3CAnimateVertexColorsU3Ed__10_t2EB585545BBB614E711BE1D5C7BF139053486123* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) 
{
	{
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		int32_t L_0 = ___U3CU3E1__state0;
		__this->___U3CU3E1__state_0 = L_0;
		return;
	}
}
// System.Void TMPro.Examples.VertexZoom/<AnimateVertexColors>d__10::System.IDisposable.Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CAnimateVertexColorsU3Ed__10_System_IDisposable_Dispose_m974E92A444C6343E94C76BB6CC6508F7AE4FD36E (U3CAnimateVertexColorsU3Ed__10_t2EB585545BBB614E711BE1D5C7BF139053486123* __this, const RuntimeMethod* method) 
{
	{
		return;
	}
}
// System.Boolean TMPro.Examples.VertexZoom/<AnimateVertexColors>d__10::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool U3CAnimateVertexColorsU3Ed__10_MoveNext_m6DBC52A95A92A54A1801DC4CEE548FA568251D5E (U3CAnimateVertexColorsU3Ed__10_t2EB585545BBB614E711BE1D5C7BF139053486123* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Comparison_1_tB7DE1436CB53924C2FC41FF926D074C1ACC14D89_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_Add_m0248A96C5334E9A93E6994B7780478BCD994EA3D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_Add_m2F86E252D086E288E02FA1C830B7E86C0A431E51_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_Clear_m6CD2E5AAE6552A27AECCC57936767B4DCFC902B1_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_Clear_mF6795DE5F49C1D0B91D6A0955F448B22970D67A9_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_Sort_m90CDC07AEBE737318A490F4C2BC6F2955443EDA4_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1__ctor_m17F501B5A5C289ECE1B4F3D6EBF05DFA421433F8_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1__ctor_mC29D3D824786832A31096310B3B3016B8B42B802_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m545762F67009314D9C63DD209B42FFF950569B05_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CU3Ec__DisplayClass10_0_U3CAnimateVertexColorsU3Eb__0_m8E51A05E012CCFA439DCF10A8B5C4FA196E4344A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CU3Ec__DisplayClass10_0_t62C0E1CEED92DDFC3DD4C58EC8806FC7D82A7FB7_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	VertexZoom_t51F05EB153497034D27896F07590D790A73981A6* V_1 = NULL;
	Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 V_2;
	memset((&V_2), 0, sizeof(V_2));
	int32_t V_3 = 0;
	int32_t V_4 = 0;
	int32_t V_5 = 0;
	int32_t V_6 = 0;
	Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* V_7 = NULL;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_8;
	memset((&V_8), 0, sizeof(V_8));
	Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* V_9 = NULL;
	float V_10 = 0.0f;
	Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* V_11 = NULL;
	Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* V_12 = NULL;
	int32_t V_13 = 0;
	Comparison_1_tB7DE1436CB53924C2FC41FF926D074C1ACC14D89* V_14 = NULL;
	Comparison_1_tB7DE1436CB53924C2FC41FF926D074C1ACC14D89* G_B16_0 = NULL;
	List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73* G_B16_1 = NULL;
	Comparison_1_tB7DE1436CB53924C2FC41FF926D074C1ACC14D89* G_B15_0 = NULL;
	List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73* G_B15_1 = NULL;
	{
		int32_t L_0 = __this->___U3CU3E1__state_0;
		V_0 = L_0;
		VertexZoom_t51F05EB153497034D27896F07590D790A73981A6* L_1 = __this->___U3CU3E4__this_2;
		V_1 = L_1;
		int32_t L_2 = V_0;
		switch (L_2)
		{
			case 0:
			{
				goto IL_0022;
			}
			case 1:
			{
				goto IL_00cd;
			}
			case 2:
			{
				goto IL_05b2;
			}
		}
	}
	{
		return (bool)0;
	}

IL_0022:
	{
		__this->___U3CU3E1__state_0 = (-1);
		U3CU3Ec__DisplayClass10_0_t62C0E1CEED92DDFC3DD4C58EC8806FC7D82A7FB7* L_3 = (U3CU3Ec__DisplayClass10_0_t62C0E1CEED92DDFC3DD4C58EC8806FC7D82A7FB7*)il2cpp_codegen_object_new(U3CU3Ec__DisplayClass10_0_t62C0E1CEED92DDFC3DD4C58EC8806FC7D82A7FB7_il2cpp_TypeInfo_var);
		NullCheck(L_3);
		U3CU3Ec__DisplayClass10_0__ctor_m8C69A89B34AA3D16243E69F1E0015856C791CC8A(L_3, NULL);
		__this->___U3CU3E8__1_3 = L_3;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E8__1_3), (void*)L_3);
		// m_TextComponent.ForceMeshUpdate();
		VertexZoom_t51F05EB153497034D27896F07590D790A73981A6* L_4 = V_1;
		NullCheck(L_4);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_5 = L_4->___m_TextComponent_7;
		NullCheck(L_5);
		VirtualActionInvoker2< bool, bool >::Invoke(106 /* System.Void TMPro.TMP_Text::ForceMeshUpdate(System.Boolean,System.Boolean) */, L_5, (bool)0, (bool)0);
		// TMP_TextInfo textInfo = m_TextComponent.textInfo;
		VertexZoom_t51F05EB153497034D27896F07590D790A73981A6* L_6 = V_1;
		NullCheck(L_6);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_7 = L_6->___m_TextComponent_7;
		NullCheck(L_7);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_8;
		L_8 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_7, NULL);
		__this->___U3CtextInfoU3E5__2_4 = L_8;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CtextInfoU3E5__2_4), (void*)L_8);
		// TMP_MeshInfo[] cachedMeshInfoVertexData = textInfo.CopyMeshInfoVertexData();
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_9 = __this->___U3CtextInfoU3E5__2_4;
		NullCheck(L_9);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_10;
		L_10 = TMP_TextInfo_CopyMeshInfoVertexData_mF66E2F8821470E68D95FEB53D456CFA86241C0CA(L_9, NULL);
		__this->___U3CcachedMeshInfoVertexDataU3E5__3_5 = L_10;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CcachedMeshInfoVertexDataU3E5__3_5), (void*)L_10);
		// List<float> modifiedCharScale = new List<float>();
		U3CU3Ec__DisplayClass10_0_t62C0E1CEED92DDFC3DD4C58EC8806FC7D82A7FB7* L_11 = __this->___U3CU3E8__1_3;
		List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918* L_12 = (List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918*)il2cpp_codegen_object_new(List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918_il2cpp_TypeInfo_var);
		NullCheck(L_12);
		List_1__ctor_mC29D3D824786832A31096310B3B3016B8B42B802(L_12, List_1__ctor_mC29D3D824786832A31096310B3B3016B8B42B802_RuntimeMethod_var);
		NullCheck(L_11);
		L_11->___modifiedCharScale_0 = L_12;
		Il2CppCodeGenWriteBarrier((void**)(&L_11->___modifiedCharScale_0), (void*)L_12);
		// List<int> scaleSortingOrder = new List<int>();
		List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73* L_13 = (List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73*)il2cpp_codegen_object_new(List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73_il2cpp_TypeInfo_var);
		NullCheck(L_13);
		List_1__ctor_m17F501B5A5C289ECE1B4F3D6EBF05DFA421433F8(L_13, List_1__ctor_m17F501B5A5C289ECE1B4F3D6EBF05DFA421433F8_RuntimeMethod_var);
		__this->___U3CscaleSortingOrderU3E5__4_6 = L_13;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CscaleSortingOrderU3E5__4_6), (void*)L_13);
		// hasTextChanged = true;
		VertexZoom_t51F05EB153497034D27896F07590D790A73981A6* L_14 = V_1;
		NullCheck(L_14);
		L_14->___hasTextChanged_8 = (bool)1;
	}

IL_0085:
	{
		// if (hasTextChanged)
		VertexZoom_t51F05EB153497034D27896F07590D790A73981A6* L_15 = V_1;
		NullCheck(L_15);
		bool L_16 = L_15->___hasTextChanged_8;
		if (!L_16)
		{
			goto IL_00a5;
		}
	}
	{
		// cachedMeshInfoVertexData = textInfo.CopyMeshInfoVertexData();
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_17 = __this->___U3CtextInfoU3E5__2_4;
		NullCheck(L_17);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_18;
		L_18 = TMP_TextInfo_CopyMeshInfoVertexData_mF66E2F8821470E68D95FEB53D456CFA86241C0CA(L_17, NULL);
		__this->___U3CcachedMeshInfoVertexDataU3E5__3_5 = L_18;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CcachedMeshInfoVertexDataU3E5__3_5), (void*)L_18);
		// hasTextChanged = false;
		VertexZoom_t51F05EB153497034D27896F07590D790A73981A6* L_19 = V_1;
		NullCheck(L_19);
		L_19->___hasTextChanged_8 = (bool)0;
	}

IL_00a5:
	{
		// int characterCount = textInfo.characterCount;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_20 = __this->___U3CtextInfoU3E5__2_4;
		NullCheck(L_20);
		int32_t L_21 = L_20->___characterCount_3;
		V_3 = L_21;
		// if (characterCount == 0)
		int32_t L_22 = V_3;
		if (L_22)
		{
			goto IL_00d6;
		}
	}
	{
		// yield return new WaitForSeconds(0.25f);
		WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3* L_23 = (WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3*)il2cpp_codegen_object_new(WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		NullCheck(L_23);
		WaitForSeconds__ctor_m579F95BADEDBAB4B3A7E302C6EE3995926EF2EFC(L_23, (0.25f), NULL);
		__this->___U3CU3E2__current_1 = L_23;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_23);
		__this->___U3CU3E1__state_0 = 1;
		return (bool)1;
	}

IL_00cd:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// continue;
		goto IL_0085;
	}

IL_00d6:
	{
		// modifiedCharScale.Clear();
		U3CU3Ec__DisplayClass10_0_t62C0E1CEED92DDFC3DD4C58EC8806FC7D82A7FB7* L_24 = __this->___U3CU3E8__1_3;
		NullCheck(L_24);
		List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918* L_25 = L_24->___modifiedCharScale_0;
		NullCheck(L_25);
		List_1_Clear_m6CD2E5AAE6552A27AECCC57936767B4DCFC902B1_inline(L_25, List_1_Clear_m6CD2E5AAE6552A27AECCC57936767B4DCFC902B1_RuntimeMethod_var);
		// scaleSortingOrder.Clear();
		List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73* L_26 = __this->___U3CscaleSortingOrderU3E5__4_6;
		NullCheck(L_26);
		List_1_Clear_mF6795DE5F49C1D0B91D6A0955F448B22970D67A9_inline(L_26, List_1_Clear_mF6795DE5F49C1D0B91D6A0955F448B22970D67A9_RuntimeMethod_var);
		// for (int i = 0; i < characterCount; i++)
		V_4 = 0;
		goto IL_045a;
	}

IL_00f9:
	{
		// TMP_CharacterInfo charInfo = textInfo.characterInfo[i];
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_27 = __this->___U3CtextInfoU3E5__2_4;
		NullCheck(L_27);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_28 = L_27->___characterInfo_11;
		int32_t L_29 = V_4;
		NullCheck(L_28);
		int32_t L_30 = L_29;
		TMP_CharacterInfo_t8B8FF32D6AACE251F2E7835AA5BC6608D535D9F8 L_31 = (L_28)->GetAt(static_cast<il2cpp_array_size_t>(L_30));
		// if (!charInfo.isVisible)
		bool L_32 = L_31.___isVisible_40;
		if (!L_32)
		{
			goto IL_0454;
		}
	}
	{
		// int materialIndex = textInfo.characterInfo[i].materialReferenceIndex;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_33 = __this->___U3CtextInfoU3E5__2_4;
		NullCheck(L_33);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_34 = L_33->___characterInfo_11;
		int32_t L_35 = V_4;
		NullCheck(L_34);
		int32_t L_36 = ((L_34)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_35)))->___materialReferenceIndex_9;
		V_5 = L_36;
		// int vertexIndex = textInfo.characterInfo[i].vertexIndex;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_37 = __this->___U3CtextInfoU3E5__2_4;
		NullCheck(L_37);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_38 = L_37->___characterInfo_11;
		int32_t L_39 = V_4;
		NullCheck(L_38);
		int32_t L_40 = ((L_38)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_39)))->___vertexIndex_14;
		V_6 = L_40;
		// Vector3[] sourceVertices = cachedMeshInfoVertexData[materialIndex].vertices;
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_41 = __this->___U3CcachedMeshInfoVertexDataU3E5__3_5;
		int32_t L_42 = V_5;
		NullCheck(L_41);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_43 = ((L_41)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_42)))->___vertices_6;
		V_7 = L_43;
		// Vector2 charMidBasline = (sourceVertices[vertexIndex + 0] + sourceVertices[vertexIndex + 2]) / 2;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_44 = V_7;
		int32_t L_45 = V_6;
		NullCheck(L_44);
		int32_t L_46 = L_45;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_47 = (L_44)->GetAt(static_cast<il2cpp_array_size_t>(L_46));
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_48 = V_7;
		int32_t L_49 = V_6;
		NullCheck(L_48);
		int32_t L_50 = ((int32_t)il2cpp_codegen_add(L_49, 2));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_51 = (L_48)->GetAt(static_cast<il2cpp_array_size_t>(L_50));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_52;
		L_52 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_47, L_51, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_53;
		L_53 = Vector3_op_Division_mD7200D6D432BAFC4135C5B17A0B0A812203B0270_inline(L_52, (2.0f), NULL);
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_54;
		L_54 = Vector2_op_Implicit_m8F73B300CB4E6F9B4EB5FB6130363D76CEAA230B_inline(L_53, NULL);
		// Vector3 offset = charMidBasline;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_55;
		L_55 = Vector2_op_Implicit_mCD214B04BC52AED3C89C3BEF664B6247E5F8954A_inline(L_54, NULL);
		V_8 = L_55;
		// Vector3[] destinationVertices = textInfo.meshInfo[materialIndex].vertices;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_56 = __this->___U3CtextInfoU3E5__2_4;
		NullCheck(L_56);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_57 = L_56->___meshInfo_16;
		int32_t L_58 = V_5;
		NullCheck(L_57);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_59 = ((L_57)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_58)))->___vertices_6;
		V_9 = L_59;
		// destinationVertices[vertexIndex + 0] = sourceVertices[vertexIndex + 0] - offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_60 = V_9;
		int32_t L_61 = V_6;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_62 = V_7;
		int32_t L_63 = V_6;
		NullCheck(L_62);
		int32_t L_64 = L_63;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_65 = (L_62)->GetAt(static_cast<il2cpp_array_size_t>(L_64));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_66 = V_8;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_67;
		L_67 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_65, L_66, NULL);
		NullCheck(L_60);
		(L_60)->SetAt(static_cast<il2cpp_array_size_t>(L_61), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_67);
		// destinationVertices[vertexIndex + 1] = sourceVertices[vertexIndex + 1] - offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_68 = V_9;
		int32_t L_69 = V_6;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_70 = V_7;
		int32_t L_71 = V_6;
		NullCheck(L_70);
		int32_t L_72 = ((int32_t)il2cpp_codegen_add(L_71, 1));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_73 = (L_70)->GetAt(static_cast<il2cpp_array_size_t>(L_72));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_74 = V_8;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_75;
		L_75 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_73, L_74, NULL);
		NullCheck(L_68);
		(L_68)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_69, 1))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_75);
		// destinationVertices[vertexIndex + 2] = sourceVertices[vertexIndex + 2] - offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_76 = V_9;
		int32_t L_77 = V_6;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_78 = V_7;
		int32_t L_79 = V_6;
		NullCheck(L_78);
		int32_t L_80 = ((int32_t)il2cpp_codegen_add(L_79, 2));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_81 = (L_78)->GetAt(static_cast<il2cpp_array_size_t>(L_80));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_82 = V_8;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_83;
		L_83 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_81, L_82, NULL);
		NullCheck(L_76);
		(L_76)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_77, 2))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_83);
		// destinationVertices[vertexIndex + 3] = sourceVertices[vertexIndex + 3] - offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_84 = V_9;
		int32_t L_85 = V_6;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_86 = V_7;
		int32_t L_87 = V_6;
		NullCheck(L_86);
		int32_t L_88 = ((int32_t)il2cpp_codegen_add(L_87, 3));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_89 = (L_86)->GetAt(static_cast<il2cpp_array_size_t>(L_88));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_90 = V_8;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_91;
		L_91 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_89, L_90, NULL);
		NullCheck(L_84);
		(L_84)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_85, 3))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_91);
		// float randomScale = Random.Range(1f, 1.5f);
		float L_92;
		L_92 = Random_Range_mF26F26EB446B76823B4815C91FA0907B484DF02B((1.0f), (1.5f), NULL);
		V_10 = L_92;
		// modifiedCharScale.Add(randomScale);
		U3CU3Ec__DisplayClass10_0_t62C0E1CEED92DDFC3DD4C58EC8806FC7D82A7FB7* L_93 = __this->___U3CU3E8__1_3;
		NullCheck(L_93);
		List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918* L_94 = L_93->___modifiedCharScale_0;
		float L_95 = V_10;
		NullCheck(L_94);
		List_1_Add_m2F86E252D086E288E02FA1C830B7E86C0A431E51_inline(L_94, L_95, List_1_Add_m2F86E252D086E288E02FA1C830B7E86C0A431E51_RuntimeMethod_var);
		// scaleSortingOrder.Add(modifiedCharScale.Count - 1);
		List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73* L_96 = __this->___U3CscaleSortingOrderU3E5__4_6;
		U3CU3Ec__DisplayClass10_0_t62C0E1CEED92DDFC3DD4C58EC8806FC7D82A7FB7* L_97 = __this->___U3CU3E8__1_3;
		NullCheck(L_97);
		List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918* L_98 = L_97->___modifiedCharScale_0;
		NullCheck(L_98);
		int32_t L_99;
		L_99 = List_1_get_Count_m545762F67009314D9C63DD209B42FFF950569B05_inline(L_98, List_1_get_Count_m545762F67009314D9C63DD209B42FFF950569B05_RuntimeMethod_var);
		NullCheck(L_96);
		List_1_Add_m0248A96C5334E9A93E6994B7780478BCD994EA3D_inline(L_96, ((int32_t)il2cpp_codegen_subtract(L_99, 1)), List_1_Add_m0248A96C5334E9A93E6994B7780478BCD994EA3D_RuntimeMethod_var);
		// matrix = Matrix4x4.TRS(new Vector3(0, 0, 0), Quaternion.identity, Vector3.one * randomScale);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_100;
		memset((&L_100), 0, sizeof(L_100));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_100), (0.0f), (0.0f), (0.0f), /*hidden argument*/NULL);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_101;
		L_101 = Quaternion_get_identity_mB9CAEEB21BC81352CBF32DB9664BFC06FA7EA27B_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_102;
		L_102 = Vector3_get_one_mE6A2D5C6578E94268024613B596BF09F990B1260_inline(NULL);
		float L_103 = V_10;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_104;
		L_104 = Vector3_op_Multiply_m516FE285F5342F922C6EB3FCB33197E9017FF484_inline(L_102, L_103, NULL);
		Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 L_105;
		L_105 = Matrix4x4_TRS_mFEBA6926DB0044B96EF0CE98F30FEE7596820680(L_100, L_101, L_104, NULL);
		V_2 = L_105;
		// destinationVertices[vertexIndex + 0] = matrix.MultiplyPoint3x4(destinationVertices[vertexIndex + 0]);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_106 = V_9;
		int32_t L_107 = V_6;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_108 = V_9;
		int32_t L_109 = V_6;
		NullCheck(L_108);
		int32_t L_110 = L_109;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_111 = (L_108)->GetAt(static_cast<il2cpp_array_size_t>(L_110));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_112;
		L_112 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_2), L_111, NULL);
		NullCheck(L_106);
		(L_106)->SetAt(static_cast<il2cpp_array_size_t>(L_107), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_112);
		// destinationVertices[vertexIndex + 1] = matrix.MultiplyPoint3x4(destinationVertices[vertexIndex + 1]);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_113 = V_9;
		int32_t L_114 = V_6;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_115 = V_9;
		int32_t L_116 = V_6;
		NullCheck(L_115);
		int32_t L_117 = ((int32_t)il2cpp_codegen_add(L_116, 1));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_118 = (L_115)->GetAt(static_cast<il2cpp_array_size_t>(L_117));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_119;
		L_119 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_2), L_118, NULL);
		NullCheck(L_113);
		(L_113)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_114, 1))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_119);
		// destinationVertices[vertexIndex + 2] = matrix.MultiplyPoint3x4(destinationVertices[vertexIndex + 2]);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_120 = V_9;
		int32_t L_121 = V_6;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_122 = V_9;
		int32_t L_123 = V_6;
		NullCheck(L_122);
		int32_t L_124 = ((int32_t)il2cpp_codegen_add(L_123, 2));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_125 = (L_122)->GetAt(static_cast<il2cpp_array_size_t>(L_124));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_126;
		L_126 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_2), L_125, NULL);
		NullCheck(L_120);
		(L_120)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_121, 2))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_126);
		// destinationVertices[vertexIndex + 3] = matrix.MultiplyPoint3x4(destinationVertices[vertexIndex + 3]);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_127 = V_9;
		int32_t L_128 = V_6;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_129 = V_9;
		int32_t L_130 = V_6;
		NullCheck(L_129);
		int32_t L_131 = ((int32_t)il2cpp_codegen_add(L_130, 3));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_132 = (L_129)->GetAt(static_cast<il2cpp_array_size_t>(L_131));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_133;
		L_133 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_2), L_132, NULL);
		NullCheck(L_127);
		(L_127)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_128, 3))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_133);
		// destinationVertices[vertexIndex + 0] += offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_134 = V_9;
		int32_t L_135 = V_6;
		NullCheck(L_134);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_136 = ((L_134)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_135)));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_137 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_136);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_138 = V_8;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_139;
		L_139 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_137, L_138, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_136 = L_139;
		// destinationVertices[vertexIndex + 1] += offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_140 = V_9;
		int32_t L_141 = V_6;
		NullCheck(L_140);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_142 = ((L_140)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_141, 1)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_143 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_142);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_144 = V_8;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_145;
		L_145 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_143, L_144, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_142 = L_145;
		// destinationVertices[vertexIndex + 2] += offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_146 = V_9;
		int32_t L_147 = V_6;
		NullCheck(L_146);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_148 = ((L_146)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_147, 2)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_149 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_148);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_150 = V_8;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_151;
		L_151 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_149, L_150, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_148 = L_151;
		// destinationVertices[vertexIndex + 3] += offset;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_152 = V_9;
		int32_t L_153 = V_6;
		NullCheck(L_152);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_154 = ((L_152)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_153, 3)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_155 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_154);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_156 = V_8;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_157;
		L_157 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_155, L_156, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_154 = L_157;
		// Vector2[] sourceUVs0 = cachedMeshInfoVertexData[materialIndex].uvs0;
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_158 = __this->___U3CcachedMeshInfoVertexDataU3E5__3_5;
		int32_t L_159 = V_5;
		NullCheck(L_158);
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_160 = ((L_158)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_159)))->___uvs0_9;
		V_11 = L_160;
		// Vector2[] destinationUVs0 = textInfo.meshInfo[materialIndex].uvs0;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_161 = __this->___U3CtextInfoU3E5__2_4;
		NullCheck(L_161);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_162 = L_161->___meshInfo_16;
		int32_t L_163 = V_5;
		NullCheck(L_162);
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_164 = ((L_162)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_163)))->___uvs0_9;
		// destinationUVs0[vertexIndex + 0] = sourceUVs0[vertexIndex + 0];
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_165 = L_164;
		int32_t L_166 = V_6;
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_167 = V_11;
		int32_t L_168 = V_6;
		NullCheck(L_167);
		int32_t L_169 = L_168;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_170 = (L_167)->GetAt(static_cast<il2cpp_array_size_t>(L_169));
		NullCheck(L_165);
		(L_165)->SetAt(static_cast<il2cpp_array_size_t>(L_166), (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7)L_170);
		// destinationUVs0[vertexIndex + 1] = sourceUVs0[vertexIndex + 1];
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_171 = L_165;
		int32_t L_172 = V_6;
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_173 = V_11;
		int32_t L_174 = V_6;
		NullCheck(L_173);
		int32_t L_175 = ((int32_t)il2cpp_codegen_add(L_174, 1));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_176 = (L_173)->GetAt(static_cast<il2cpp_array_size_t>(L_175));
		NullCheck(L_171);
		(L_171)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_172, 1))), (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7)L_176);
		// destinationUVs0[vertexIndex + 2] = sourceUVs0[vertexIndex + 2];
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_177 = L_171;
		int32_t L_178 = V_6;
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_179 = V_11;
		int32_t L_180 = V_6;
		NullCheck(L_179);
		int32_t L_181 = ((int32_t)il2cpp_codegen_add(L_180, 2));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_182 = (L_179)->GetAt(static_cast<il2cpp_array_size_t>(L_181));
		NullCheck(L_177);
		(L_177)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_178, 2))), (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7)L_182);
		// destinationUVs0[vertexIndex + 3] = sourceUVs0[vertexIndex + 3];
		int32_t L_183 = V_6;
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_184 = V_11;
		int32_t L_185 = V_6;
		NullCheck(L_184);
		int32_t L_186 = ((int32_t)il2cpp_codegen_add(L_185, 3));
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_187 = (L_184)->GetAt(static_cast<il2cpp_array_size_t>(L_186));
		NullCheck(L_177);
		(L_177)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_183, 3))), (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7)L_187);
		// Color32[] sourceColors32 = cachedMeshInfoVertexData[materialIndex].colors32;
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_188 = __this->___U3CcachedMeshInfoVertexDataU3E5__3_5;
		int32_t L_189 = V_5;
		NullCheck(L_188);
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_190 = ((L_188)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_189)))->___colors32_11;
		V_12 = L_190;
		// Color32[] destinationColors32 = textInfo.meshInfo[materialIndex].colors32;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_191 = __this->___U3CtextInfoU3E5__2_4;
		NullCheck(L_191);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_192 = L_191->___meshInfo_16;
		int32_t L_193 = V_5;
		NullCheck(L_192);
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_194 = ((L_192)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_193)))->___colors32_11;
		// destinationColors32[vertexIndex + 0] = sourceColors32[vertexIndex + 0];
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_195 = L_194;
		int32_t L_196 = V_6;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_197 = V_12;
		int32_t L_198 = V_6;
		NullCheck(L_197);
		int32_t L_199 = L_198;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_200 = (L_197)->GetAt(static_cast<il2cpp_array_size_t>(L_199));
		NullCheck(L_195);
		(L_195)->SetAt(static_cast<il2cpp_array_size_t>(L_196), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_200);
		// destinationColors32[vertexIndex + 1] = sourceColors32[vertexIndex + 1];
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_201 = L_195;
		int32_t L_202 = V_6;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_203 = V_12;
		int32_t L_204 = V_6;
		NullCheck(L_203);
		int32_t L_205 = ((int32_t)il2cpp_codegen_add(L_204, 1));
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_206 = (L_203)->GetAt(static_cast<il2cpp_array_size_t>(L_205));
		NullCheck(L_201);
		(L_201)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_202, 1))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_206);
		// destinationColors32[vertexIndex + 2] = sourceColors32[vertexIndex + 2];
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_207 = L_201;
		int32_t L_208 = V_6;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_209 = V_12;
		int32_t L_210 = V_6;
		NullCheck(L_209);
		int32_t L_211 = ((int32_t)il2cpp_codegen_add(L_210, 2));
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_212 = (L_209)->GetAt(static_cast<il2cpp_array_size_t>(L_211));
		NullCheck(L_207);
		(L_207)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_208, 2))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_212);
		// destinationColors32[vertexIndex + 3] = sourceColors32[vertexIndex + 3];
		int32_t L_213 = V_6;
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_214 = V_12;
		int32_t L_215 = V_6;
		NullCheck(L_214);
		int32_t L_216 = ((int32_t)il2cpp_codegen_add(L_215, 3));
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_217 = (L_214)->GetAt(static_cast<il2cpp_array_size_t>(L_216));
		NullCheck(L_207);
		(L_207)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_213, 3))), (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B)L_217);
	}

IL_0454:
	{
		// for (int i = 0; i < characterCount; i++)
		int32_t L_218 = V_4;
		V_4 = ((int32_t)il2cpp_codegen_add(L_218, 1));
	}

IL_045a:
	{
		// for (int i = 0; i < characterCount; i++)
		int32_t L_219 = V_4;
		int32_t L_220 = V_3;
		if ((((int32_t)L_219) < ((int32_t)L_220)))
		{
			goto IL_00f9;
		}
	}
	{
		// for (int i = 0; i < textInfo.meshInfo.Length; i++)
		V_13 = 0;
		goto IL_0585;
	}

IL_046a:
	{
		// scaleSortingOrder.Sort((a, b) => modifiedCharScale[a].CompareTo(modifiedCharScale[b]));
		List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73* L_221 = __this->___U3CscaleSortingOrderU3E5__4_6;
		U3CU3Ec__DisplayClass10_0_t62C0E1CEED92DDFC3DD4C58EC8806FC7D82A7FB7* L_222 = __this->___U3CU3E8__1_3;
		NullCheck(L_222);
		Comparison_1_tB7DE1436CB53924C2FC41FF926D074C1ACC14D89* L_223 = L_222->___U3CU3E9__0_1;
		Comparison_1_tB7DE1436CB53924C2FC41FF926D074C1ACC14D89* L_224 = L_223;
		G_B15_0 = L_224;
		G_B15_1 = L_221;
		if (L_224)
		{
			G_B16_0 = L_224;
			G_B16_1 = L_221;
			goto IL_04a0;
		}
	}
	{
		U3CU3Ec__DisplayClass10_0_t62C0E1CEED92DDFC3DD4C58EC8806FC7D82A7FB7* L_225 = __this->___U3CU3E8__1_3;
		U3CU3Ec__DisplayClass10_0_t62C0E1CEED92DDFC3DD4C58EC8806FC7D82A7FB7* L_226 = __this->___U3CU3E8__1_3;
		Comparison_1_tB7DE1436CB53924C2FC41FF926D074C1ACC14D89* L_227 = (Comparison_1_tB7DE1436CB53924C2FC41FF926D074C1ACC14D89*)il2cpp_codegen_object_new(Comparison_1_tB7DE1436CB53924C2FC41FF926D074C1ACC14D89_il2cpp_TypeInfo_var);
		NullCheck(L_227);
		Comparison_1__ctor_m7E05FE21370A028EA8A2792D028FFDAD83F24F6C(L_227, L_226, (intptr_t)((void*)U3CU3Ec__DisplayClass10_0_U3CAnimateVertexColorsU3Eb__0_m8E51A05E012CCFA439DCF10A8B5C4FA196E4344A_RuntimeMethod_var), NULL);
		Comparison_1_tB7DE1436CB53924C2FC41FF926D074C1ACC14D89* L_228 = L_227;
		V_14 = L_228;
		NullCheck(L_225);
		L_225->___U3CU3E9__0_1 = L_228;
		Il2CppCodeGenWriteBarrier((void**)(&L_225->___U3CU3E9__0_1), (void*)L_228);
		Comparison_1_tB7DE1436CB53924C2FC41FF926D074C1ACC14D89* L_229 = V_14;
		G_B16_0 = L_229;
		G_B16_1 = G_B15_1;
	}

IL_04a0:
	{
		NullCheck(G_B16_1);
		List_1_Sort_m90CDC07AEBE737318A490F4C2BC6F2955443EDA4(G_B16_1, G_B16_0, List_1_Sort_m90CDC07AEBE737318A490F4C2BC6F2955443EDA4_RuntimeMethod_var);
		// textInfo.meshInfo[i].SortGeometry(scaleSortingOrder);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_230 = __this->___U3CtextInfoU3E5__2_4;
		NullCheck(L_230);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_231 = L_230->___meshInfo_16;
		int32_t L_232 = V_13;
		NullCheck(L_231);
		List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73* L_233 = __this->___U3CscaleSortingOrderU3E5__4_6;
		TMP_MeshInfo_SortGeometry_m74ED0FE2065414A659EE9A9C809E1B0B4A8A7734(((L_231)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_232))), L_233, NULL);
		// textInfo.meshInfo[i].mesh.vertices = textInfo.meshInfo[i].vertices;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_234 = __this->___U3CtextInfoU3E5__2_4;
		NullCheck(L_234);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_235 = L_234->___meshInfo_16;
		int32_t L_236 = V_13;
		NullCheck(L_235);
		Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* L_237 = ((L_235)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_236)))->___mesh_4;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_238 = __this->___U3CtextInfoU3E5__2_4;
		NullCheck(L_238);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_239 = L_238->___meshInfo_16;
		int32_t L_240 = V_13;
		NullCheck(L_239);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_241 = ((L_239)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_240)))->___vertices_6;
		NullCheck(L_237);
		Mesh_set_vertices_m5BB814D89E9ACA00DBF19F7D8E22CB73AC73FE5C(L_237, L_241, NULL);
		// textInfo.meshInfo[i].mesh.uv = textInfo.meshInfo[i].uvs0;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_242 = __this->___U3CtextInfoU3E5__2_4;
		NullCheck(L_242);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_243 = L_242->___meshInfo_16;
		int32_t L_244 = V_13;
		NullCheck(L_243);
		Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* L_245 = ((L_243)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_244)))->___mesh_4;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_246 = __this->___U3CtextInfoU3E5__2_4;
		NullCheck(L_246);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_247 = L_246->___meshInfo_16;
		int32_t L_248 = V_13;
		NullCheck(L_247);
		Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* L_249 = ((L_247)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_248)))->___uvs0_9;
		NullCheck(L_245);
		Mesh_set_uv_m6ED9C50E0DA8166DD48AC40FD6C828B9AD2E9617(L_245, L_249, NULL);
		// textInfo.meshInfo[i].mesh.colors32 = textInfo.meshInfo[i].colors32;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_250 = __this->___U3CtextInfoU3E5__2_4;
		NullCheck(L_250);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_251 = L_250->___meshInfo_16;
		int32_t L_252 = V_13;
		NullCheck(L_251);
		Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* L_253 = ((L_251)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_252)))->___mesh_4;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_254 = __this->___U3CtextInfoU3E5__2_4;
		NullCheck(L_254);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_255 = L_254->___meshInfo_16;
		int32_t L_256 = V_13;
		NullCheck(L_255);
		Color32U5BU5D_t38116C3E91765C4C5726CE12C77FAD7F9F737259* L_257 = ((L_255)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_256)))->___colors32_11;
		NullCheck(L_253);
		Mesh_set_colors32_m0E4462B7A1D613E6FB15DD7584BCE5491C17820F(L_253, L_257, NULL);
		// m_TextComponent.UpdateGeometry(textInfo.meshInfo[i].mesh, i);
		VertexZoom_t51F05EB153497034D27896F07590D790A73981A6* L_258 = V_1;
		NullCheck(L_258);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_259 = L_258->___m_TextComponent_7;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_260 = __this->___U3CtextInfoU3E5__2_4;
		NullCheck(L_260);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_261 = L_260->___meshInfo_16;
		int32_t L_262 = V_13;
		NullCheck(L_261);
		Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* L_263 = ((L_261)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_262)))->___mesh_4;
		int32_t L_264 = V_13;
		NullCheck(L_259);
		VirtualActionInvoker2< Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4*, int32_t >::Invoke(107 /* System.Void TMPro.TMP_Text::UpdateGeometry(UnityEngine.Mesh,System.Int32) */, L_259, L_263, L_264);
		// for (int i = 0; i < textInfo.meshInfo.Length; i++)
		int32_t L_265 = V_13;
		V_13 = ((int32_t)il2cpp_codegen_add(L_265, 1));
	}

IL_0585:
	{
		// for (int i = 0; i < textInfo.meshInfo.Length; i++)
		int32_t L_266 = V_13;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_267 = __this->___U3CtextInfoU3E5__2_4;
		NullCheck(L_267);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_268 = L_267->___meshInfo_16;
		NullCheck(L_268);
		if ((((int32_t)L_266) < ((int32_t)((int32_t)(((RuntimeArray*)L_268)->max_length)))))
		{
			goto IL_046a;
		}
	}
	{
		// yield return new WaitForSeconds(0.1f);
		WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3* L_269 = (WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3*)il2cpp_codegen_object_new(WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		NullCheck(L_269);
		WaitForSeconds__ctor_m579F95BADEDBAB4B3A7E302C6EE3995926EF2EFC(L_269, (0.100000001f), NULL);
		__this->___U3CU3E2__current_1 = L_269;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_269);
		__this->___U3CU3E1__state_0 = 2;
		return (bool)1;
	}

IL_05b2:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// while (true)
		goto IL_0085;
	}
}
// System.Object TMPro.Examples.VertexZoom/<AnimateVertexColors>d__10::System.Collections.Generic.IEnumerator<System.Object>.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CAnimateVertexColorsU3Ed__10_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_m110CD16E89E725B1484D24FFB1753768F78A988B (U3CAnimateVertexColorsU3Ed__10_t2EB585545BBB614E711BE1D5C7BF139053486123* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
// System.Void TMPro.Examples.VertexZoom/<AnimateVertexColors>d__10::System.Collections.IEnumerator.Reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CAnimateVertexColorsU3Ed__10_System_Collections_IEnumerator_Reset_mDE5E71C88F5096FD70EB061287ADF0B847732821 (U3CAnimateVertexColorsU3Ed__10_t2EB585545BBB614E711BE1D5C7BF139053486123* __this, const RuntimeMethod* method) 
{
	{
		NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A* L_0 = (NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A_il2cpp_TypeInfo_var)));
		NullCheck(L_0);
		NotSupportedException__ctor_m1398D0CDE19B36AA3DE9392879738C1EA2439CDF(L_0, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_0, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&U3CAnimateVertexColorsU3Ed__10_System_Collections_IEnumerator_Reset_mDE5E71C88F5096FD70EB061287ADF0B847732821_RuntimeMethod_var)));
	}
}
// System.Object TMPro.Examples.VertexZoom/<AnimateVertexColors>d__10::System.Collections.IEnumerator.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CAnimateVertexColorsU3Ed__10_System_Collections_IEnumerator_get_Current_m14B89756695EE73AEBB6F3A613F65E1343A8CC2C (U3CAnimateVertexColorsU3Ed__10_t2EB585545BBB614E711BE1D5C7BF139053486123* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.WarpTextExample::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void WarpTextExample_Awake_m92842E51B4DBB2E4341ACB179468049FAB23949F (WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_mA59A63181077B821132B53D44724D7F86C6FECB3_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// m_TextComponent = gameObject.GetComponent<TMP_Text>();
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_0;
		L_0 = Component_get_gameObject_m57AEFBB14DB39EC476F740BA000E170355DE691B(__this, NULL);
		NullCheck(L_0);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_1;
		L_1 = GameObject_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_mA59A63181077B821132B53D44724D7F86C6FECB3(L_0, GameObject_GetComponent_TisTMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9_mA59A63181077B821132B53D44724D7F86C6FECB3_RuntimeMethod_var);
		__this->___m_TextComponent_4 = L_1;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_TextComponent_4), (void*)L_1);
		// }
		return;
	}
}
// System.Void TMPro.Examples.WarpTextExample::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void WarpTextExample_Start_m3339EDC03B6FC498916520CBCCDB5F9FA090F809 (WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* __this, const RuntimeMethod* method) 
{
	{
		// StartCoroutine(WarpText());
		RuntimeObject* L_0;
		L_0 = WarpTextExample_WarpText_mBE4B6E5B6D8AAE9340CD59B1FA9DFE9A34665E98(__this, NULL);
		Coroutine_t85EA685566A254C23F3FD77AB5BDFFFF8799596B* L_1;
		L_1 = MonoBehaviour_StartCoroutine_m4CAFF732AA28CD3BDC5363B44A863575530EC812(__this, L_0, NULL);
		// }
		return;
	}
}
// UnityEngine.AnimationCurve TMPro.Examples.WarpTextExample::CopyAnimationCurve(UnityEngine.AnimationCurve)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* WarpTextExample_CopyAnimationCurve_m65A93388CC2CF58CD2E08CC8EF682A2C97C558FF (WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* __this, AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* ___curve0, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// AnimationCurve newCurve = new AnimationCurve();
		AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* L_0 = (AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354*)il2cpp_codegen_object_new(AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		AnimationCurve__ctor_m0D976567166F92383307DC8EB8D7082CD34E226F(L_0, NULL);
		// newCurve.keys = curve.keys;
		AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* L_1 = L_0;
		AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* L_2 = ___curve0;
		NullCheck(L_2);
		KeyframeU5BU5D_t63250A46914A6A07B2A6689850D47D7D19D80BA3* L_3;
		L_3 = AnimationCurve_get_keys_m34452C69464AB459C04BFFEA4F541F06B419AC4E(L_2, NULL);
		NullCheck(L_1);
		AnimationCurve_set_keys_mBE1284B44CDBB1D8381177A3D581A6E71467F95C(L_1, L_3, NULL);
		// return newCurve;
		return L_1;
	}
}
// System.Collections.IEnumerator TMPro.Examples.WarpTextExample::WarpText()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* WarpTextExample_WarpText_mBE4B6E5B6D8AAE9340CD59B1FA9DFE9A34665E98 (WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CWarpTextU3Ed__8_tF1A14DF86D48AE9144155D4BF8E31E63471F358E_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		U3CWarpTextU3Ed__8_tF1A14DF86D48AE9144155D4BF8E31E63471F358E* L_0 = (U3CWarpTextU3Ed__8_tF1A14DF86D48AE9144155D4BF8E31E63471F358E*)il2cpp_codegen_object_new(U3CWarpTextU3Ed__8_tF1A14DF86D48AE9144155D4BF8E31E63471F358E_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		U3CWarpTextU3Ed__8__ctor_m1943C34BBEAF121203BA8C5D725E991283A4A3BB(L_0, 0, NULL);
		U3CWarpTextU3Ed__8_tF1A14DF86D48AE9144155D4BF8E31E63471F358E* L_1 = L_0;
		NullCheck(L_1);
		L_1->___U3CU3E4__this_2 = __this;
		Il2CppCodeGenWriteBarrier((void**)(&L_1->___U3CU3E4__this_2), (void*)__this);
		return L_1;
	}
}
// System.Void TMPro.Examples.WarpTextExample::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void WarpTextExample__ctor_mBD48A5403123F25C45B5E60C19E1EA397FBA1795 (WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&KeyframeU5BU5D_t63250A46914A6A07B2A6689850D47D7D19D80BA3_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public AnimationCurve VertexCurve = new AnimationCurve(new Keyframe(0, 0), new Keyframe(0.25f, 2.0f), new Keyframe(0.5f, 0), new Keyframe(0.75f, 2.0f), new Keyframe(1, 0f));
		KeyframeU5BU5D_t63250A46914A6A07B2A6689850D47D7D19D80BA3* L_0 = (KeyframeU5BU5D_t63250A46914A6A07B2A6689850D47D7D19D80BA3*)(KeyframeU5BU5D_t63250A46914A6A07B2A6689850D47D7D19D80BA3*)SZArrayNew(KeyframeU5BU5D_t63250A46914A6A07B2A6689850D47D7D19D80BA3_il2cpp_TypeInfo_var, (uint32_t)5);
		KeyframeU5BU5D_t63250A46914A6A07B2A6689850D47D7D19D80BA3* L_1 = L_0;
		Keyframe_tB9C67DCBFE10C0AE9C52CB5C66E944255C9254F0 L_2;
		memset((&L_2), 0, sizeof(L_2));
		Keyframe__ctor_mECF144086B28785BE911A22C06194A9E0FBF3C34((&L_2), (0.0f), (0.0f), /*hidden argument*/NULL);
		NullCheck(L_1);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (Keyframe_tB9C67DCBFE10C0AE9C52CB5C66E944255C9254F0)L_2);
		KeyframeU5BU5D_t63250A46914A6A07B2A6689850D47D7D19D80BA3* L_3 = L_1;
		Keyframe_tB9C67DCBFE10C0AE9C52CB5C66E944255C9254F0 L_4;
		memset((&L_4), 0, sizeof(L_4));
		Keyframe__ctor_mECF144086B28785BE911A22C06194A9E0FBF3C34((&L_4), (0.25f), (2.0f), /*hidden argument*/NULL);
		NullCheck(L_3);
		(L_3)->SetAt(static_cast<il2cpp_array_size_t>(1), (Keyframe_tB9C67DCBFE10C0AE9C52CB5C66E944255C9254F0)L_4);
		KeyframeU5BU5D_t63250A46914A6A07B2A6689850D47D7D19D80BA3* L_5 = L_3;
		Keyframe_tB9C67DCBFE10C0AE9C52CB5C66E944255C9254F0 L_6;
		memset((&L_6), 0, sizeof(L_6));
		Keyframe__ctor_mECF144086B28785BE911A22C06194A9E0FBF3C34((&L_6), (0.5f), (0.0f), /*hidden argument*/NULL);
		NullCheck(L_5);
		(L_5)->SetAt(static_cast<il2cpp_array_size_t>(2), (Keyframe_tB9C67DCBFE10C0AE9C52CB5C66E944255C9254F0)L_6);
		KeyframeU5BU5D_t63250A46914A6A07B2A6689850D47D7D19D80BA3* L_7 = L_5;
		Keyframe_tB9C67DCBFE10C0AE9C52CB5C66E944255C9254F0 L_8;
		memset((&L_8), 0, sizeof(L_8));
		Keyframe__ctor_mECF144086B28785BE911A22C06194A9E0FBF3C34((&L_8), (0.75f), (2.0f), /*hidden argument*/NULL);
		NullCheck(L_7);
		(L_7)->SetAt(static_cast<il2cpp_array_size_t>(3), (Keyframe_tB9C67DCBFE10C0AE9C52CB5C66E944255C9254F0)L_8);
		KeyframeU5BU5D_t63250A46914A6A07B2A6689850D47D7D19D80BA3* L_9 = L_7;
		Keyframe_tB9C67DCBFE10C0AE9C52CB5C66E944255C9254F0 L_10;
		memset((&L_10), 0, sizeof(L_10));
		Keyframe__ctor_mECF144086B28785BE911A22C06194A9E0FBF3C34((&L_10), (1.0f), (0.0f), /*hidden argument*/NULL);
		NullCheck(L_9);
		(L_9)->SetAt(static_cast<il2cpp_array_size_t>(4), (Keyframe_tB9C67DCBFE10C0AE9C52CB5C66E944255C9254F0)L_10);
		AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* L_11 = (AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354*)il2cpp_codegen_object_new(AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354_il2cpp_TypeInfo_var);
		NullCheck(L_11);
		AnimationCurve__ctor_mEABC98C03805713354D61E50D9340766BD5B717E(L_11, L_9, NULL);
		__this->___VertexCurve_5 = L_11;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___VertexCurve_5), (void*)L_11);
		// public float AngleMultiplier = 1.0f;
		__this->___AngleMultiplier_6 = (1.0f);
		// public float SpeedMultiplier = 1.0f;
		__this->___SpeedMultiplier_7 = (1.0f);
		// public float CurveScale = 1.0f;
		__this->___CurveScale_8 = (1.0f);
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void TMPro.Examples.WarpTextExample/<WarpText>d__8::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CWarpTextU3Ed__8__ctor_m1943C34BBEAF121203BA8C5D725E991283A4A3BB (U3CWarpTextU3Ed__8_tF1A14DF86D48AE9144155D4BF8E31E63471F358E* __this, int32_t ___U3CU3E1__state0, const RuntimeMethod* method) 
{
	{
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		int32_t L_0 = ___U3CU3E1__state0;
		__this->___U3CU3E1__state_0 = L_0;
		return;
	}
}
// System.Void TMPro.Examples.WarpTextExample/<WarpText>d__8::System.IDisposable.Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CWarpTextU3Ed__8_System_IDisposable_Dispose_m145D2DA1026419984AD79D5D62FBC38C9441AB53 (U3CWarpTextU3Ed__8_tF1A14DF86D48AE9144155D4BF8E31E63471F358E* __this, const RuntimeMethod* method) 
{
	{
		return;
	}
}
// System.Boolean TMPro.Examples.WarpTextExample/<WarpText>d__8::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool U3CWarpTextU3Ed__8_MoveNext_mCE7A826C5E4854C2C509C77BD18F5A9B6D691B02 (U3CWarpTextU3Ed__8_tF1A14DF86D48AE9144155D4BF8E31E63471F358E* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* V_1 = NULL;
	Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* V_2 = NULL;
	Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 V_3;
	memset((&V_3), 0, sizeof(V_3));
	TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* V_4 = NULL;
	int32_t V_5 = 0;
	float V_6 = 0.0f;
	float V_7 = 0.0f;
	Bounds_t367E830C64BBF235ED8C3B2F8CF6254FDCAD39C3 V_8;
	memset((&V_8), 0, sizeof(V_8));
	int32_t V_9 = 0;
	int32_t V_10 = 0;
	int32_t V_11 = 0;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_12;
	memset((&V_12), 0, sizeof(V_12));
	float V_13 = 0.0f;
	float V_14 = 0.0f;
	float V_15 = 0.0f;
	float V_16 = 0.0f;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_17;
	memset((&V_17), 0, sizeof(V_17));
	float V_18 = 0.0f;
	float V_19 = 0.0f;
	float G_B14_0 = 0.0f;
	{
		int32_t L_0 = __this->___U3CU3E1__state_0;
		V_0 = L_0;
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_1 = __this->___U3CU3E4__this_2;
		V_1 = L_1;
		int32_t L_2 = V_0;
		switch (L_2)
		{
			case 0:
			{
				goto IL_0022;
			}
			case 1:
			{
				goto IL_00d6;
			}
			case 2:
			{
				goto IL_0473;
			}
		}
	}
	{
		return (bool)0;
	}

IL_0022:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// VertexCurve.preWrapMode = WrapMode.Clamp;
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_3 = V_1;
		NullCheck(L_3);
		AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* L_4 = L_3->___VertexCurve_5;
		NullCheck(L_4);
		AnimationCurve_set_preWrapMode_mA618E67F536483FA5F3507A2D97C045E089D1B2D(L_4, 1, NULL);
		// VertexCurve.postWrapMode = WrapMode.Clamp;
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_5 = V_1;
		NullCheck(L_5);
		AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* L_6 = L_5->___VertexCurve_5;
		NullCheck(L_6);
		AnimationCurve_set_postWrapMode_m39A4758ABD5D2AEE475940829352792FE7E9CBA9(L_6, 1, NULL);
		// m_TextComponent.havePropertiesChanged = true; // Need to force the TextMeshPro Object to be updated.
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_7 = V_1;
		NullCheck(L_7);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_8 = L_7->___m_TextComponent_4;
		NullCheck(L_8);
		TMP_Text_set_havePropertiesChanged_mA38D7BC9E260BF29450738B827F2220A05662B31(L_8, (bool)1, NULL);
		// CurveScale *= 10;
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_9 = V_1;
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_10 = V_1;
		NullCheck(L_10);
		float L_11 = L_10->___CurveScale_8;
		NullCheck(L_9);
		L_9->___CurveScale_8 = ((float)il2cpp_codegen_multiply(L_11, (10.0f)));
		// float old_CurveScale = CurveScale;
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_12 = V_1;
		NullCheck(L_12);
		float L_13 = L_12->___CurveScale_8;
		__this->___U3Cold_CurveScaleU3E5__2_3 = L_13;
		// AnimationCurve old_curve = CopyAnimationCurve(VertexCurve);
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_14 = V_1;
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_15 = V_1;
		NullCheck(L_15);
		AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* L_16 = L_15->___VertexCurve_5;
		NullCheck(L_14);
		AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* L_17;
		L_17 = WarpTextExample_CopyAnimationCurve_m65A93388CC2CF58CD2E08CC8EF682A2C97C558FF(L_14, L_16, NULL);
		__this->___U3Cold_curveU3E5__3_4 = L_17;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3Cold_curveU3E5__3_4), (void*)L_17);
	}

IL_007d:
	{
		// if (!m_TextComponent.havePropertiesChanged && old_CurveScale == CurveScale && old_curve.keys[1].value == VertexCurve.keys[1].value)
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_18 = V_1;
		NullCheck(L_18);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_19 = L_18->___m_TextComponent_4;
		NullCheck(L_19);
		bool L_20;
		L_20 = TMP_Text_get_havePropertiesChanged_m42ECC7D1CA0DF6E59ACF761EB20635E81FCB8EFF_inline(L_19, NULL);
		if (L_20)
		{
			goto IL_00df;
		}
	}
	{
		float L_21 = __this->___U3Cold_CurveScaleU3E5__2_3;
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_22 = V_1;
		NullCheck(L_22);
		float L_23 = L_22->___CurveScale_8;
		if ((!(((float)L_21) == ((float)L_23))))
		{
			goto IL_00df;
		}
	}
	{
		AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* L_24 = __this->___U3Cold_curveU3E5__3_4;
		NullCheck(L_24);
		KeyframeU5BU5D_t63250A46914A6A07B2A6689850D47D7D19D80BA3* L_25;
		L_25 = AnimationCurve_get_keys_m34452C69464AB459C04BFFEA4F541F06B419AC4E(L_24, NULL);
		NullCheck(L_25);
		float L_26;
		L_26 = Keyframe_get_value_m53E6B7609086AAAA46E24BAF734EF08E16A3FD6C(((L_25)->GetAddressAt(static_cast<il2cpp_array_size_t>(1))), NULL);
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_27 = V_1;
		NullCheck(L_27);
		AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* L_28 = L_27->___VertexCurve_5;
		NullCheck(L_28);
		KeyframeU5BU5D_t63250A46914A6A07B2A6689850D47D7D19D80BA3* L_29;
		L_29 = AnimationCurve_get_keys_m34452C69464AB459C04BFFEA4F541F06B419AC4E(L_28, NULL);
		NullCheck(L_29);
		float L_30;
		L_30 = Keyframe_get_value_m53E6B7609086AAAA46E24BAF734EF08E16A3FD6C(((L_29)->GetAddressAt(static_cast<il2cpp_array_size_t>(1))), NULL);
		if ((!(((float)L_26) == ((float)L_30))))
		{
			goto IL_00df;
		}
	}
	{
		// yield return null;
		__this->___U3CU3E2__current_1 = NULL;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)NULL);
		__this->___U3CU3E1__state_0 = 1;
		return (bool)1;
	}

IL_00d6:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// continue;
		goto IL_007d;
	}

IL_00df:
	{
		// old_CurveScale = CurveScale;
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_31 = V_1;
		NullCheck(L_31);
		float L_32 = L_31->___CurveScale_8;
		__this->___U3Cold_CurveScaleU3E5__2_3 = L_32;
		// old_curve = CopyAnimationCurve(VertexCurve);
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_33 = V_1;
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_34 = V_1;
		NullCheck(L_34);
		AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* L_35 = L_34->___VertexCurve_5;
		NullCheck(L_33);
		AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* L_36;
		L_36 = WarpTextExample_CopyAnimationCurve_m65A93388CC2CF58CD2E08CC8EF682A2C97C558FF(L_33, L_35, NULL);
		__this->___U3Cold_curveU3E5__3_4 = L_36;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3Cold_curveU3E5__3_4), (void*)L_36);
		// m_TextComponent.ForceMeshUpdate(); // Generate the mesh and populate the textInfo with data we can use and manipulate.
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_37 = V_1;
		NullCheck(L_37);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_38 = L_37->___m_TextComponent_4;
		NullCheck(L_38);
		VirtualActionInvoker2< bool, bool >::Invoke(106 /* System.Void TMPro.TMP_Text::ForceMeshUpdate(System.Boolean,System.Boolean) */, L_38, (bool)0, (bool)0);
		// TMP_TextInfo textInfo = m_TextComponent.textInfo;
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_39 = V_1;
		NullCheck(L_39);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_40 = L_39->___m_TextComponent_4;
		NullCheck(L_40);
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_41;
		L_41 = TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline(L_40, NULL);
		V_4 = L_41;
		// int characterCount = textInfo.characterCount;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_42 = V_4;
		NullCheck(L_42);
		int32_t L_43 = L_42->___characterCount_3;
		V_5 = L_43;
		// if (characterCount == 0) continue;
		int32_t L_44 = V_5;
		if (!L_44)
		{
			goto IL_007d;
		}
	}
	{
		// float boundsMinX = m_TextComponent.bounds.min.x;  //textInfo.meshInfo[0].mesh.bounds.min.x;
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_45 = V_1;
		NullCheck(L_45);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_46 = L_45->___m_TextComponent_4;
		NullCheck(L_46);
		Bounds_t367E830C64BBF235ED8C3B2F8CF6254FDCAD39C3 L_47;
		L_47 = TMP_Text_get_bounds_mAEE407DE6CA2E1D1180868C03A3F0A3B6E455189(L_46, NULL);
		V_8 = L_47;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_48;
		L_48 = Bounds_get_min_m465AC9BBE1DE5D8E8AD95AC19B9899068FEEBB13((&V_8), NULL);
		float L_49 = L_48.___x_2;
		V_6 = L_49;
		// float boundsMaxX = m_TextComponent.bounds.max.x;  //textInfo.meshInfo[0].mesh.bounds.max.x;
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_50 = V_1;
		NullCheck(L_50);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_51 = L_50->___m_TextComponent_4;
		NullCheck(L_51);
		Bounds_t367E830C64BBF235ED8C3B2F8CF6254FDCAD39C3 L_52;
		L_52 = TMP_Text_get_bounds_mAEE407DE6CA2E1D1180868C03A3F0A3B6E455189(L_51, NULL);
		V_8 = L_52;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_53;
		L_53 = Bounds_get_max_m6446F2AB97C1E57CA89467B9DE52D4EB61F1CB09((&V_8), NULL);
		float L_54 = L_53.___x_2;
		V_7 = L_54;
		// for (int i = 0; i < characterCount; i++)
		V_9 = 0;
		goto IL_0446;
	}

IL_0165:
	{
		// if (!textInfo.characterInfo[i].isVisible)
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_55 = V_4;
		NullCheck(L_55);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_56 = L_55->___characterInfo_11;
		int32_t L_57 = V_9;
		NullCheck(L_56);
		bool L_58 = ((L_56)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_57)))->___isVisible_40;
		if (!L_58)
		{
			goto IL_0440;
		}
	}
	{
		// int vertexIndex = textInfo.characterInfo[i].vertexIndex;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_59 = V_4;
		NullCheck(L_59);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_60 = L_59->___characterInfo_11;
		int32_t L_61 = V_9;
		NullCheck(L_60);
		int32_t L_62 = ((L_60)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_61)))->___vertexIndex_14;
		V_10 = L_62;
		// int materialIndex = textInfo.characterInfo[i].materialReferenceIndex;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_63 = V_4;
		NullCheck(L_63);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_64 = L_63->___characterInfo_11;
		int32_t L_65 = V_9;
		NullCheck(L_64);
		int32_t L_66 = ((L_64)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_65)))->___materialReferenceIndex_9;
		V_11 = L_66;
		// vertices = textInfo.meshInfo[materialIndex].vertices;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_67 = V_4;
		NullCheck(L_67);
		TMP_MeshInfoU5BU5D_t3549EA3B9F542558E0DB1EDFAB98C612FE4231D7* L_68 = L_67->___meshInfo_16;
		int32_t L_69 = V_11;
		NullCheck(L_68);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_70 = ((L_68)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_69)))->___vertices_6;
		V_2 = L_70;
		// Vector3 offsetToMidBaseline = new Vector2((vertices[vertexIndex + 0].x + vertices[vertexIndex + 2].x) / 2, textInfo.characterInfo[i].baseLine);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_71 = V_2;
		int32_t L_72 = V_10;
		NullCheck(L_71);
		float L_73 = ((L_71)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_72)))->___x_2;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_74 = V_2;
		int32_t L_75 = V_10;
		NullCheck(L_74);
		float L_76 = ((L_74)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_75, 2)))))->___x_2;
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_77 = V_4;
		NullCheck(L_77);
		TMP_CharacterInfoU5BU5D_t297D56FCF66DAA99D8FEA7C30F9F3926902C5B99* L_78 = L_77->___characterInfo_11;
		int32_t L_79 = V_9;
		NullCheck(L_78);
		float L_80 = ((L_78)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_79)))->___baseLine_26;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_81;
		memset((&L_81), 0, sizeof(L_81));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_81), ((float)(((float)il2cpp_codegen_add(L_73, L_76))/(2.0f))), L_80, /*hidden argument*/NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_82;
		L_82 = Vector2_op_Implicit_mCD214B04BC52AED3C89C3BEF664B6247E5F8954A_inline(L_81, NULL);
		V_12 = L_82;
		// vertices[vertexIndex + 0] += -offsetToMidBaseline;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_83 = V_2;
		int32_t L_84 = V_10;
		NullCheck(L_83);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_85 = ((L_83)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_84)));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_86 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_85);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_87 = V_12;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_88;
		L_88 = Vector3_op_UnaryNegation_m3AC523A7BED6E843165BDF598690F0560D8CAA63_inline(L_87, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_89;
		L_89 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_86, L_88, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_85 = L_89;
		// vertices[vertexIndex + 1] += -offsetToMidBaseline;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_90 = V_2;
		int32_t L_91 = V_10;
		NullCheck(L_90);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_92 = ((L_90)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_91, 1)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_93 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_92);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_94 = V_12;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_95;
		L_95 = Vector3_op_UnaryNegation_m3AC523A7BED6E843165BDF598690F0560D8CAA63_inline(L_94, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_96;
		L_96 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_93, L_95, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_92 = L_96;
		// vertices[vertexIndex + 2] += -offsetToMidBaseline;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_97 = V_2;
		int32_t L_98 = V_10;
		NullCheck(L_97);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_99 = ((L_97)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_98, 2)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_100 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_99);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_101 = V_12;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_102;
		L_102 = Vector3_op_UnaryNegation_m3AC523A7BED6E843165BDF598690F0560D8CAA63_inline(L_101, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_103;
		L_103 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_100, L_102, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_99 = L_103;
		// vertices[vertexIndex + 3] += -offsetToMidBaseline;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_104 = V_2;
		int32_t L_105 = V_10;
		NullCheck(L_104);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_106 = ((L_104)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_105, 3)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_107 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_106);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_108 = V_12;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_109;
		L_109 = Vector3_op_UnaryNegation_m3AC523A7BED6E843165BDF598690F0560D8CAA63_inline(L_108, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_110;
		L_110 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_107, L_109, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_106 = L_110;
		// float x0 = (offsetToMidBaseline.x - boundsMinX) / (boundsMaxX - boundsMinX); // Character's position relative to the bounds of the mesh.
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_111 = V_12;
		float L_112 = L_111.___x_2;
		float L_113 = V_6;
		float L_114 = V_7;
		float L_115 = V_6;
		V_13 = ((float)(((float)il2cpp_codegen_subtract(L_112, L_113))/((float)il2cpp_codegen_subtract(L_114, L_115))));
		// float x1 = x0 + 0.0001f;
		float L_116 = V_13;
		V_14 = ((float)il2cpp_codegen_add(L_116, (9.99999975E-05f)));
		// float y0 = VertexCurve.Evaluate(x0) * CurveScale;
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_117 = V_1;
		NullCheck(L_117);
		AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* L_118 = L_117->___VertexCurve_5;
		float L_119 = V_13;
		NullCheck(L_118);
		float L_120;
		L_120 = AnimationCurve_Evaluate_m50B857043DE251A186032ADBCBB4CEF817F4EE3C(L_118, L_119, NULL);
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_121 = V_1;
		NullCheck(L_121);
		float L_122 = L_121->___CurveScale_8;
		V_15 = ((float)il2cpp_codegen_multiply(L_120, L_122));
		// float y1 = VertexCurve.Evaluate(x1) * CurveScale;
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_123 = V_1;
		NullCheck(L_123);
		AnimationCurve_tCBFFAAD05CEBB35EF8D8631BD99914BE1A6BB354* L_124 = L_123->___VertexCurve_5;
		float L_125 = V_14;
		NullCheck(L_124);
		float L_126;
		L_126 = AnimationCurve_Evaluate_m50B857043DE251A186032ADBCBB4CEF817F4EE3C(L_124, L_125, NULL);
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_127 = V_1;
		NullCheck(L_127);
		float L_128 = L_127->___CurveScale_8;
		V_16 = ((float)il2cpp_codegen_multiply(L_126, L_128));
		// Vector3 horizontal = new Vector3(1, 0, 0);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_129;
		memset((&L_129), 0, sizeof(L_129));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_129), (1.0f), (0.0f), (0.0f), /*hidden argument*/NULL);
		// Vector3 tangent = new Vector3(x1 * (boundsMaxX - boundsMinX) + boundsMinX, y1) - new Vector3(offsetToMidBaseline.x, y0);
		float L_130 = V_14;
		float L_131 = V_7;
		float L_132 = V_6;
		float L_133 = V_6;
		float L_134 = V_16;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_135;
		memset((&L_135), 0, sizeof(L_135));
		Vector3__ctor_m5F87930F9B0828E5652E2D9D01ED907C01122C86_inline((&L_135), ((float)il2cpp_codegen_add(((float)il2cpp_codegen_multiply(L_130, ((float)il2cpp_codegen_subtract(L_131, L_132)))), L_133)), L_134, /*hidden argument*/NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_136 = V_12;
		float L_137 = L_136.___x_2;
		float L_138 = V_15;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_139;
		memset((&L_139), 0, sizeof(L_139));
		Vector3__ctor_m5F87930F9B0828E5652E2D9D01ED907C01122C86_inline((&L_139), L_137, L_138, /*hidden argument*/NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_140;
		L_140 = Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline(L_135, L_139, NULL);
		V_17 = L_140;
		// float dot = Mathf.Acos(Vector3.Dot(horizontal, tangent.normalized)) * 57.2957795f;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_141 = L_129;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_142;
		L_142 = Vector3_get_normalized_m736BBF65D5CDA7A18414370D15B4DFCC1E466F07_inline((&V_17), NULL);
		float L_143;
		L_143 = Vector3_Dot_m4688A1A524306675DBDB1E6D483F35E85E3CE6D8_inline(L_141, L_142, NULL);
		float L_144;
		L_144 = acosf(L_143);
		V_18 = ((float)il2cpp_codegen_multiply(L_144, (57.2957802f)));
		// Vector3 cross = Vector3.Cross(horizontal, tangent);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_145 = V_17;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_146;
		L_146 = Vector3_Cross_m77F64620D73934C56BEE37A64016DBDCB9D21DB8_inline(L_141, L_145, NULL);
		// float angle = cross.z > 0 ? dot : 360 - dot;
		float L_147 = L_146.___z_4;
		if ((((float)L_147) > ((float)(0.0f))))
		{
			goto IL_0339;
		}
	}
	{
		float L_148 = V_18;
		G_B14_0 = ((float)il2cpp_codegen_subtract((360.0f), L_148));
		goto IL_033b;
	}

IL_0339:
	{
		float L_149 = V_18;
		G_B14_0 = L_149;
	}

IL_033b:
	{
		V_19 = G_B14_0;
		// matrix = Matrix4x4.TRS(new Vector3(0, y0, 0), Quaternion.Euler(0, 0, angle), Vector3.one);
		float L_150 = V_15;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_151;
		memset((&L_151), 0, sizeof(L_151));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_151), (0.0f), L_150, (0.0f), /*hidden argument*/NULL);
		float L_152 = V_19;
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_153;
		L_153 = Quaternion_Euler_mD4601D966F1F58F3FCA01B3FC19A12D0AD0396DD_inline((0.0f), (0.0f), L_152, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_154;
		L_154 = Vector3_get_one_mE6A2D5C6578E94268024613B596BF09F990B1260_inline(NULL);
		Matrix4x4_tDB70CF134A14BA38190C59AA700BCE10E2AED3E6 L_155;
		L_155 = Matrix4x4_TRS_mFEBA6926DB0044B96EF0CE98F30FEE7596820680(L_151, L_153, L_154, NULL);
		V_3 = L_155;
		// vertices[vertexIndex + 0] = matrix.MultiplyPoint3x4(vertices[vertexIndex + 0]);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_156 = V_2;
		int32_t L_157 = V_10;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_158 = V_2;
		int32_t L_159 = V_10;
		NullCheck(L_158);
		int32_t L_160 = L_159;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_161 = (L_158)->GetAt(static_cast<il2cpp_array_size_t>(L_160));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_162;
		L_162 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_3), L_161, NULL);
		NullCheck(L_156);
		(L_156)->SetAt(static_cast<il2cpp_array_size_t>(L_157), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_162);
		// vertices[vertexIndex + 1] = matrix.MultiplyPoint3x4(vertices[vertexIndex + 1]);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_163 = V_2;
		int32_t L_164 = V_10;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_165 = V_2;
		int32_t L_166 = V_10;
		NullCheck(L_165);
		int32_t L_167 = ((int32_t)il2cpp_codegen_add(L_166, 1));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_168 = (L_165)->GetAt(static_cast<il2cpp_array_size_t>(L_167));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_169;
		L_169 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_3), L_168, NULL);
		NullCheck(L_163);
		(L_163)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_164, 1))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_169);
		// vertices[vertexIndex + 2] = matrix.MultiplyPoint3x4(vertices[vertexIndex + 2]);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_170 = V_2;
		int32_t L_171 = V_10;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_172 = V_2;
		int32_t L_173 = V_10;
		NullCheck(L_172);
		int32_t L_174 = ((int32_t)il2cpp_codegen_add(L_173, 2));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_175 = (L_172)->GetAt(static_cast<il2cpp_array_size_t>(L_174));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_176;
		L_176 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_3), L_175, NULL);
		NullCheck(L_170);
		(L_170)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_171, 2))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_176);
		// vertices[vertexIndex + 3] = matrix.MultiplyPoint3x4(vertices[vertexIndex + 3]);
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_177 = V_2;
		int32_t L_178 = V_10;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_179 = V_2;
		int32_t L_180 = V_10;
		NullCheck(L_179);
		int32_t L_181 = ((int32_t)il2cpp_codegen_add(L_180, 3));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_182 = (L_179)->GetAt(static_cast<il2cpp_array_size_t>(L_181));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_183;
		L_183 = Matrix4x4_MultiplyPoint3x4_mACCBD70AFA82C63DA88555780B7B6B01281AB814((&V_3), L_182, NULL);
		NullCheck(L_177);
		(L_177)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_178, 3))), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_183);
		// vertices[vertexIndex + 0] += offsetToMidBaseline;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_184 = V_2;
		int32_t L_185 = V_10;
		NullCheck(L_184);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_186 = ((L_184)->GetAddressAt(static_cast<il2cpp_array_size_t>(L_185)));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_187 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_186);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_188 = V_12;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_189;
		L_189 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_187, L_188, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_186 = L_189;
		// vertices[vertexIndex + 1] += offsetToMidBaseline;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_190 = V_2;
		int32_t L_191 = V_10;
		NullCheck(L_190);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_192 = ((L_190)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_191, 1)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_193 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_192);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_194 = V_12;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_195;
		L_195 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_193, L_194, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_192 = L_195;
		// vertices[vertexIndex + 2] += offsetToMidBaseline;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_196 = V_2;
		int32_t L_197 = V_10;
		NullCheck(L_196);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_198 = ((L_196)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_197, 2)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_199 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_198);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_200 = V_12;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_201;
		L_201 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_199, L_200, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_198 = L_201;
		// vertices[vertexIndex + 3] += offsetToMidBaseline;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_202 = V_2;
		int32_t L_203 = V_10;
		NullCheck(L_202);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* L_204 = ((L_202)->GetAddressAt(static_cast<il2cpp_array_size_t>(((int32_t)il2cpp_codegen_add(L_203, 3)))));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_205 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_204);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_206 = V_12;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_207;
		L_207 = Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline(L_205, L_206, NULL);
		*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)L_204 = L_207;
	}

IL_0440:
	{
		// for (int i = 0; i < characterCount; i++)
		int32_t L_208 = V_9;
		V_9 = ((int32_t)il2cpp_codegen_add(L_208, 1));
	}

IL_0446:
	{
		// for (int i = 0; i < characterCount; i++)
		int32_t L_209 = V_9;
		int32_t L_210 = V_5;
		if ((((int32_t)L_209) < ((int32_t)L_210)))
		{
			goto IL_0165;
		}
	}
	{
		// m_TextComponent.UpdateVertexData();
		WarpTextExample_tB54C406E58B9D90FC49CD73B5FBF7FAFCCD3CD7E* L_211 = V_1;
		NullCheck(L_211);
		TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* L_212 = L_211->___m_TextComponent_4;
		NullCheck(L_212);
		VirtualActionInvoker0::Invoke(109 /* System.Void TMPro.TMP_Text::UpdateVertexData() */, L_212);
		// yield return new WaitForSeconds(0.025f);
		WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3* L_213 = (WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3*)il2cpp_codegen_object_new(WaitForSeconds_tF179DF251655B8DF044952E70A60DF4B358A3DD3_il2cpp_TypeInfo_var);
		NullCheck(L_213);
		WaitForSeconds__ctor_m579F95BADEDBAB4B3A7E302C6EE3995926EF2EFC(L_213, (0.0250000004f), NULL);
		__this->___U3CU3E2__current_1 = L_213;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CU3E2__current_1), (void*)L_213);
		__this->___U3CU3E1__state_0 = 2;
		return (bool)1;
	}

IL_0473:
	{
		__this->___U3CU3E1__state_0 = (-1);
		// while (true)
		goto IL_007d;
	}
}
// System.Object TMPro.Examples.WarpTextExample/<WarpText>d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CWarpTextU3Ed__8_System_Collections_Generic_IEnumeratorU3CSystem_ObjectU3E_get_Current_mD80368E9B7E259311C03E406B75161ED6F7618E3 (U3CWarpTextU3Ed__8_tF1A14DF86D48AE9144155D4BF8E31E63471F358E* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
// System.Void TMPro.Examples.WarpTextExample/<WarpText>d__8::System.Collections.IEnumerator.Reset()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CWarpTextU3Ed__8_System_Collections_IEnumerator_Reset_m07746C332D2D8CE5DEA59873C26F2FAD4B369B42 (U3CWarpTextU3Ed__8_tF1A14DF86D48AE9144155D4BF8E31E63471F358E* __this, const RuntimeMethod* method) 
{
	{
		NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A* L_0 = (NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&NotSupportedException_t1429765983D409BD2986508963C98D214E4EBF4A_il2cpp_TypeInfo_var)));
		NullCheck(L_0);
		NotSupportedException__ctor_m1398D0CDE19B36AA3DE9392879738C1EA2439CDF(L_0, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_0, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&U3CWarpTextU3Ed__8_System_Collections_IEnumerator_Reset_m07746C332D2D8CE5DEA59873C26F2FAD4B369B42_RuntimeMethod_var)));
	}
}
// System.Object TMPro.Examples.WarpTextExample/<WarpText>d__8::System.Collections.IEnumerator.get_Current()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* U3CWarpTextU3Ed__8_System_Collections_IEnumerator_get_Current_m71D7F84D9DEF63BEC6B44866515DDCF35B142A19 (U3CWarpTextU3Ed__8_tF1A14DF86D48AE9144155D4BF8E31E63471F358E* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = __this->___U3CU3E2__current_1;
		return L_0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void DyiPinchGrab.DyiHandManipulation::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DyiHandManipulation__ctor_m437B15EA9DF2AB301F07DB4902D06F9EF78D3238 (DyiHandManipulation_t160359CE7BE193C1B024ED59838120193F7F1DE9* __this, const RuntimeMethod* method) 
{
	{
		// private TrackedHandJoint trackedHandJoint = TrackedHandJoint.IndexMiddleJoint;
		__this->___trackedHandJoint_4 = ((int32_t)9);
		// private float grabDistance = 0.1f;
		__this->___grabDistance_5 = (0.100000001f);
		// private Handedness trackedHand = Handedness.Both;
		__this->___trackedHand_6 = 3;
		// private bool trackPinch = true;
		__this->___trackPinch_7 = (bool)1;
		// private bool trackGrab = true;
		__this->___trackGrab_8 = (bool)1;
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.IntPtr OpenCvSharp.NativeMethods::dlib_shapePredictor_new()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_dlib_shapePredictor_new_m52E0E75FE290096299DAB2B74ACBF0EC24677C2C (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "dlib_shapePredictor_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(dlib_shapePredictor_new)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::dlib_shapePredictor_loadData(System.IntPtr,System.Byte[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_dlib_shapePredictor_loadData_mA64EAF9E87C8D65BFBCB69A613160D4584866103 (intptr_t ___predictor0, ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___data1, int32_t ___dataSize2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, uint8_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "dlib_shapePredictor_loadData", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___data1' to native representation
	uint8_t* ____data1_marshaled = NULL;
	if (___data1 != NULL)
	{
		____data1_marshaled = reinterpret_cast<uint8_t*>((___data1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(dlib_shapePredictor_loadData)(___predictor0, ____data1_marshaled, ___dataSize2);
	#else
	il2cppPInvokeFunc(___predictor0, ____data1_marshaled, ___dataSize2);
	#endif

}
// System.Boolean OpenCvSharp.NativeMethods::dlib_shapePredictor_detectLandmarks(System.IntPtr,System.IntPtr,OpenCvSharp.Rect,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_dlib_shapePredictor_detectLandmarks_m6885E92081C5E28D5D1AB69DDC3961105DBAB5B5 (intptr_t ___predictor0, intptr_t ___image1, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___roi2, intptr_t* ___landmarks3, const RuntimeMethod* method) 
{
	typedef int8_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "dlib_shapePredictor_detectLandmarks", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int8_t returnValue = reinterpret_cast<PInvokeFunc>(dlib_shapePredictor_detectLandmarks)(___predictor0, ___image1, ___roi2, ___landmarks3);
	#else
	int8_t returnValue = il2cppPInvokeFunc(___predictor0, ___image1, ___roi2, ___landmarks3);
	#endif

	return static_cast<bool>(returnValue);
}
// System.Void OpenCvSharp.NativeMethods::dlib_shapePredictor_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_dlib_shapePredictor_delete_m8D370A9E4C98C68DB99E6FA30FDBE2B48DA6BD12 (intptr_t ___instance0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "dlib_shapePredictor_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(dlib_shapePredictor_delete)(___instance0);
	#else
	il2cppPInvokeFunc(___instance0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_Rodrigues(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_Rodrigues_m33FD25B23CF1A949694F8C5160B837A9DC900732 (intptr_t ___src0, intptr_t ___dst1, intptr_t ___jacobian2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_Rodrigues", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_Rodrigues)(___src0, ___dst1, ___jacobian2);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___jacobian2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_Rodrigues_VecToMat(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_Rodrigues_VecToMat_mA9DEECF1EBF38EDB3B3CF63B008FE755B4BD3D53 (intptr_t ___vector0, intptr_t ___matrix1, intptr_t ___jacobian2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_Rodrigues_VecToMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_Rodrigues_VecToMat)(___vector0, ___matrix1, ___jacobian2);
	#else
	il2cppPInvokeFunc(___vector0, ___matrix1, ___jacobian2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_Rodrigues_MatToVec(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_Rodrigues_MatToVec_m562C6222797F6D4CE1F6CD5BBCF4BF5F1669708B (intptr_t ___vector0, intptr_t ___matrix1, intptr_t ___jacobian2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_Rodrigues_MatToVec", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_Rodrigues_MatToVec)(___vector0, ___matrix1, ___jacobian2);
	#else
	il2cppPInvokeFunc(___vector0, ___matrix1, ___jacobian2);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::calib3d_findHomography_InputArray(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_calib3d_findHomography_InputArray_mC682D38BBB1DC8C0C1D86E7AD96921ACEC8319DE (intptr_t ___srcPoints0, intptr_t ___dstPoints1, int32_t ___method2, double ___ransacReprojThreshold3, intptr_t ___mask4, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_findHomography_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_findHomography_InputArray)(___srcPoints0, ___dstPoints1, ___method2, ___ransacReprojThreshold3, ___mask4);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___srcPoints0, ___dstPoints1, ___method2, ___ransacReprojThreshold3, ___mask4);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::calib3d_findHomography_vector(OpenCvSharp.Point2d[],System.Int32,OpenCvSharp.Point2d[],System.Int32,System.Int32,System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_calib3d_findHomography_vector_m5B3D33ADE318944B59BE18ABFBDBC3A77390C704 (Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___srcPoints0, int32_t ___srcPointsLength1, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___dstPoints2, int32_t ___dstPointsLength3, int32_t ___method4, double ___ransacReprojThreshold5, intptr_t ___mask6, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, int32_t, double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_findHomography_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___srcPoints0' to native representation
	Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* ____srcPoints0_marshaled = NULL;
	if (___srcPoints0 != NULL)
	{
		____srcPoints0_marshaled = reinterpret_cast<Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*>((___srcPoints0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___dstPoints2' to native representation
	Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* ____dstPoints2_marshaled = NULL;
	if (___dstPoints2 != NULL)
	{
		____dstPoints2_marshaled = reinterpret_cast<Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*>((___dstPoints2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_findHomography_vector)(____srcPoints0_marshaled, ___srcPointsLength1, ____dstPoints2_marshaled, ___dstPointsLength3, ___method4, ___ransacReprojThreshold5, ___mask6);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____srcPoints0_marshaled, ___srcPointsLength1, ____dstPoints2_marshaled, ___dstPointsLength3, ___method4, ___ransacReprojThreshold5, ___mask6);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_RQDecomp3x3_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Vec3d&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_RQDecomp3x3_InputArray_mC437A8626FC4AA6342CC5687184E225D2F3981A3 (intptr_t ___src0, intptr_t ___mtxR1, intptr_t ___mtxQ2, intptr_t ___qx3, intptr_t ___qy4, intptr_t ___qz5, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* ___outVal6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_RQDecomp3x3_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_RQDecomp3x3_InputArray)(___src0, ___mtxR1, ___mtxQ2, ___qx3, ___qy4, ___qz5, ___outVal6);
	#else
	il2cppPInvokeFunc(___src0, ___mtxR1, ___mtxQ2, ___qx3, ___qy4, ___qz5, ___outVal6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_RQDecomp3x3_Mat(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Vec3d&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_RQDecomp3x3_Mat_m9A92D73A556C4C67073AA5EE08F49EF9FEE58E8F (intptr_t ___src0, intptr_t ___mtxR1, intptr_t ___mtxQ2, intptr_t ___qx3, intptr_t ___qy4, intptr_t ___qz5, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* ___outVal6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_RQDecomp3x3_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_RQDecomp3x3_Mat)(___src0, ___mtxR1, ___mtxQ2, ___qx3, ___qy4, ___qz5, ___outVal6);
	#else
	il2cppPInvokeFunc(___src0, ___mtxR1, ___mtxQ2, ___qx3, ___qy4, ___qz5, ___outVal6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_decomposeProjectionMatrix_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_decomposeProjectionMatrix_InputArray_mD0BD64BC22D3F0DC22013036E0F1996B22990A41 (intptr_t ___projMatrix0, intptr_t ___cameraMatrix1, intptr_t ___rotMatrix2, intptr_t ___transVect3, intptr_t ___rotMatrixX4, intptr_t ___rotMatrixY5, intptr_t ___rotMatrixZ6, intptr_t ___eulerAngles7, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_decomposeProjectionMatrix_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_decomposeProjectionMatrix_InputArray)(___projMatrix0, ___cameraMatrix1, ___rotMatrix2, ___transVect3, ___rotMatrixX4, ___rotMatrixY5, ___rotMatrixZ6, ___eulerAngles7);
	#else
	il2cppPInvokeFunc(___projMatrix0, ___cameraMatrix1, ___rotMatrix2, ___transVect3, ___rotMatrixX4, ___rotMatrixY5, ___rotMatrixZ6, ___eulerAngles7);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_decomposeProjectionMatrix_Mat(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_decomposeProjectionMatrix_Mat_m590E9F774DBC82E3D73418FE4C7A4A97CB9393F6 (intptr_t ___projMatrix0, intptr_t ___cameraMatrix1, intptr_t ___rotMatrix2, intptr_t ___transVect3, intptr_t ___rotMatrixX4, intptr_t ___rotMatrixY5, intptr_t ___rotMatrixZ6, intptr_t ___eulerAngles7, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_decomposeProjectionMatrix_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_decomposeProjectionMatrix_Mat)(___projMatrix0, ___cameraMatrix1, ___rotMatrix2, ___transVect3, ___rotMatrixX4, ___rotMatrixY5, ___rotMatrixZ6, ___eulerAngles7);
	#else
	il2cppPInvokeFunc(___projMatrix0, ___cameraMatrix1, ___rotMatrix2, ___transVect3, ___rotMatrixX4, ___rotMatrixY5, ___rotMatrixZ6, ___eulerAngles7);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_matMulDeriv(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_matMulDeriv_mABC66F1224C362D8A4D8B233DCD860E122EBC0E9 (intptr_t ___a0, intptr_t ___b1, intptr_t ___dABdA2, intptr_t ___dABdB3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_matMulDeriv", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_matMulDeriv)(___a0, ___b1, ___dABdA2, ___dABdB3);
	#else
	il2cppPInvokeFunc(___a0, ___b1, ___dABdA2, ___dABdB3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_composeRT_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_composeRT_InputArray_m6D42A32800F27A1FA2780B91FDEB2E240C957D85 (intptr_t ___rvec10, intptr_t ___tvec11, intptr_t ___rvec22, intptr_t ___tvec23, intptr_t ___rvec34, intptr_t ___tvec35, intptr_t ___dr3dr16, intptr_t ___dr3dt17, intptr_t ___dr3dr28, intptr_t ___dr3dt29, intptr_t ___dt3dr110, intptr_t ___dt3dt111, intptr_t ___dt3dr212, intptr_t ___dt3dt213, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_composeRT_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_composeRT_InputArray)(___rvec10, ___tvec11, ___rvec22, ___tvec23, ___rvec34, ___tvec35, ___dr3dr16, ___dr3dt17, ___dr3dr28, ___dr3dt29, ___dt3dr110, ___dt3dt111, ___dt3dr212, ___dt3dt213);
	#else
	il2cppPInvokeFunc(___rvec10, ___tvec11, ___rvec22, ___tvec23, ___rvec34, ___tvec35, ___dr3dr16, ___dr3dt17, ___dr3dr28, ___dr3dt29, ___dt3dr110, ___dt3dt111, ___dt3dr212, ___dt3dt213);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_composeRT_Mat(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_composeRT_Mat_mF07A294A538BAA6BBDEBBAB645EE725944C82691 (intptr_t ___rvec10, intptr_t ___tvec11, intptr_t ___rvec22, intptr_t ___tvec23, intptr_t ___rvec34, intptr_t ___tvec35, intptr_t ___dr3dr16, intptr_t ___dr3dt17, intptr_t ___dr3dr28, intptr_t ___dr3dt29, intptr_t ___dt3dr110, intptr_t ___dt3dt111, intptr_t ___dt3dr212, intptr_t ___dt3dt213, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_composeRT_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_composeRT_Mat)(___rvec10, ___tvec11, ___rvec22, ___tvec23, ___rvec34, ___tvec35, ___dr3dr16, ___dr3dt17, ___dr3dr28, ___dr3dt29, ___dt3dr110, ___dt3dt111, ___dt3dr212, ___dt3dt213);
	#else
	il2cppPInvokeFunc(___rvec10, ___tvec11, ___rvec22, ___tvec23, ___rvec34, ___tvec35, ___dr3dr16, ___dr3dt17, ___dr3dr28, ___dr3dt29, ___dt3dr110, ___dt3dt111, ___dt3dr212, ___dt3dt213);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_projectPoints_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_projectPoints_InputArray_m2C5C288F9C3EC3A6436E0024128BCAF24E38A2D7 (intptr_t ___objectPoints0, intptr_t ___rvec1, intptr_t ___tvec2, intptr_t ___cameraMatrix3, intptr_t ___distCoeffs4, intptr_t ___imagePoints5, intptr_t ___jacobian6, double ___aspectRatio7, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_projectPoints_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_projectPoints_InputArray)(___objectPoints0, ___rvec1, ___tvec2, ___cameraMatrix3, ___distCoeffs4, ___imagePoints5, ___jacobian6, ___aspectRatio7);
	#else
	il2cppPInvokeFunc(___objectPoints0, ___rvec1, ___tvec2, ___cameraMatrix3, ___distCoeffs4, ___imagePoints5, ___jacobian6, ___aspectRatio7);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_projectPoints_Mat(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_projectPoints_Mat_m83B80CB89E5221AA5A07B28AFF91E7B6B67F4A74 (intptr_t ___objectPoints0, intptr_t ___rvec1, intptr_t ___tvec2, intptr_t ___cameraMatrix3, intptr_t ___distCoeffs4, intptr_t ___imagePoints5, intptr_t ___jacobian6, double ___aspectRatio7, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_projectPoints_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_projectPoints_Mat)(___objectPoints0, ___rvec1, ___tvec2, ___cameraMatrix3, ___distCoeffs4, ___imagePoints5, ___jacobian6, ___aspectRatio7);
	#else
	il2cppPInvokeFunc(___objectPoints0, ___rvec1, ___tvec2, ___cameraMatrix3, ___distCoeffs4, ___imagePoints5, ___jacobian6, ___aspectRatio7);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_solvePnP_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_solvePnP_InputArray_mA258EB029AA4224E959336CB30007A9E0E391ED2 (intptr_t ___selfectPoints0, intptr_t ___imagePoints1, intptr_t ___cameraMatrix2, intptr_t ___distCoeffs3, intptr_t ___rvec4, intptr_t ___tvec5, int32_t ___useExtrinsicGuess6, int32_t ___flags7, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_solvePnP_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_solvePnP_InputArray)(___selfectPoints0, ___imagePoints1, ___cameraMatrix2, ___distCoeffs3, ___rvec4, ___tvec5, ___useExtrinsicGuess6, ___flags7);
	#else
	il2cppPInvokeFunc(___selfectPoints0, ___imagePoints1, ___cameraMatrix2, ___distCoeffs3, ___rvec4, ___tvec5, ___useExtrinsicGuess6, ___flags7);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_solvePnP_vector(OpenCvSharp.Point3f[],System.Int32,OpenCvSharp.Point2f[],System.Int32,System.IntPtr,System.Double[],System.Int32,System.Double[],System.Double[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_solvePnP_vector_m46E31C8512BF9CFB8B5C3A3D1EA53AA68B8AF882 (Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2* ___objectPoints0, int32_t ___objectPointsLength1, Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___imagePoints2, int32_t ___imagePointsLength3, intptr_t ___cameraMatrix4, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___distCoeffs5, int32_t ___distCoeffsLength6, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___rvec7, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___tvec8, int32_t ___useExtrinsicGuess9, int32_t ___flags10, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t, double*, int32_t, double*, double*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_solvePnP_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___objectPoints0' to native representation
	Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* ____objectPoints0_marshaled = NULL;
	if (___objectPoints0 != NULL)
	{
		____objectPoints0_marshaled = reinterpret_cast<Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*>((___objectPoints0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___imagePoints2' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____imagePoints2_marshaled = NULL;
	if (___imagePoints2 != NULL)
	{
		____imagePoints2_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___imagePoints2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___distCoeffs5' to native representation
	double* ____distCoeffs5_marshaled = NULL;
	if (___distCoeffs5 != NULL)
	{
		____distCoeffs5_marshaled = reinterpret_cast<double*>((___distCoeffs5)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___rvec7' to native representation
	double* ____rvec7_marshaled = NULL;
	if (___rvec7 != NULL)
	{
		il2cpp_array_size_t ____rvec7_Length = (___rvec7)->max_length;
		____rvec7_marshaled = il2cpp_codegen_marshal_allocate_array<double>(____rvec7_Length);
		memset(____rvec7_marshaled, 0, ____rvec7_Length * sizeof(double));
	}

	// Marshaling of parameter '___tvec8' to native representation
	double* ____tvec8_marshaled = NULL;
	if (___tvec8 != NULL)
	{
		il2cpp_array_size_t ____tvec8_Length = (___tvec8)->max_length;
		____tvec8_marshaled = il2cpp_codegen_marshal_allocate_array<double>(____tvec8_Length);
		memset(____tvec8_marshaled, 0, ____tvec8_Length * sizeof(double));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_solvePnP_vector)(____objectPoints0_marshaled, ___objectPointsLength1, ____imagePoints2_marshaled, ___imagePointsLength3, ___cameraMatrix4, ____distCoeffs5_marshaled, ___distCoeffsLength6, ____rvec7_marshaled, ____tvec8_marshaled, ___useExtrinsicGuess9, ___flags10);
	#else
	il2cppPInvokeFunc(____objectPoints0_marshaled, ___objectPointsLength1, ____imagePoints2_marshaled, ___imagePointsLength3, ___cameraMatrix4, ____distCoeffs5_marshaled, ___distCoeffsLength6, ____rvec7_marshaled, ____tvec8_marshaled, ___useExtrinsicGuess9, ___flags10);
	#endif

	// Marshaling of parameter '___rvec7' back from native representation
	if (____rvec7_marshaled != NULL)
	{
		il2cpp_array_size_t ____rvec7_Length = (___rvec7)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____rvec7_Length); i++)
		{
			(___rvec7)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____rvec7_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___rvec7' native representation
	il2cpp_codegen_marshal_free(____rvec7_marshaled);
	____rvec7_marshaled = NULL;

	// Marshaling of parameter '___tvec8' back from native representation
	if (____tvec8_marshaled != NULL)
	{
		il2cpp_array_size_t ____tvec8_Length = (___tvec8)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____tvec8_Length); i++)
		{
			(___tvec8)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____tvec8_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___tvec8' native representation
	il2cpp_codegen_marshal_free(____tvec8_marshaled);
	____tvec8_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::calib3d_solvePnPRansac_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Single,System.Double,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_solvePnPRansac_InputArray_mAAE91D2B7DE090DF69E2179EB408A30BEB0D5557 (intptr_t ___objectPoints0, intptr_t ___imagePoints1, intptr_t ___cameraMatrix2, intptr_t ___distCoeffs3, intptr_t ___rvec4, intptr_t ___tvec5, int32_t ___useExtrinsicGuess6, int32_t ___iterationsCount7, float ___reprojectionError8, double ___confidence9, intptr_t ___inliers10, int32_t ___flags11, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, int32_t, float, double, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(float) + sizeof(double) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_solvePnPRansac_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_solvePnPRansac_InputArray)(___objectPoints0, ___imagePoints1, ___cameraMatrix2, ___distCoeffs3, ___rvec4, ___tvec5, ___useExtrinsicGuess6, ___iterationsCount7, ___reprojectionError8, ___confidence9, ___inliers10, ___flags11);
	#else
	il2cppPInvokeFunc(___objectPoints0, ___imagePoints1, ___cameraMatrix2, ___distCoeffs3, ___rvec4, ___tvec5, ___useExtrinsicGuess6, ___iterationsCount7, ___reprojectionError8, ___confidence9, ___inliers10, ___flags11);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_solvePnPRansac_vector(OpenCvSharp.Point3f[],System.Int32,OpenCvSharp.Point2f[],System.Int32,System.IntPtr,System.Double[],System.Int32,System.Double[],System.Double[],System.Int32,System.Int32,System.Single,System.Double,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_solvePnPRansac_vector_m714B8B470911A04AA85493F803C770718B5A25BB (Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2* ___objectPoints0, int32_t ___objectPointsLength1, Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___imagePoints2, int32_t ___imagePointsLength3, intptr_t ___cameraMatrix4, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___distCoeffs5, int32_t ___distCoeffsLength6, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___rvec7, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___tvec8, int32_t ___useExtrinsicGuess9, int32_t ___iterationsCount10, float ___reprojectionError11, double ___confidence12, intptr_t ___inliers13, int32_t ___flags14, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t, double*, int32_t, double*, double*, int32_t, int32_t, float, double, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(float) + sizeof(double) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_solvePnPRansac_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___objectPoints0' to native representation
	Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* ____objectPoints0_marshaled = NULL;
	if (___objectPoints0 != NULL)
	{
		____objectPoints0_marshaled = reinterpret_cast<Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*>((___objectPoints0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___imagePoints2' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____imagePoints2_marshaled = NULL;
	if (___imagePoints2 != NULL)
	{
		____imagePoints2_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___imagePoints2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___distCoeffs5' to native representation
	double* ____distCoeffs5_marshaled = NULL;
	if (___distCoeffs5 != NULL)
	{
		____distCoeffs5_marshaled = reinterpret_cast<double*>((___distCoeffs5)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___rvec7' to native representation
	double* ____rvec7_marshaled = NULL;
	if (___rvec7 != NULL)
	{
		il2cpp_array_size_t ____rvec7_Length = (___rvec7)->max_length;
		____rvec7_marshaled = il2cpp_codegen_marshal_allocate_array<double>(____rvec7_Length);
		memset(____rvec7_marshaled, 0, ____rvec7_Length * sizeof(double));
	}

	// Marshaling of parameter '___tvec8' to native representation
	double* ____tvec8_marshaled = NULL;
	if (___tvec8 != NULL)
	{
		il2cpp_array_size_t ____tvec8_Length = (___tvec8)->max_length;
		____tvec8_marshaled = il2cpp_codegen_marshal_allocate_array<double>(____tvec8_Length);
		memset(____tvec8_marshaled, 0, ____tvec8_Length * sizeof(double));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_solvePnPRansac_vector)(____objectPoints0_marshaled, ___objectPointsLength1, ____imagePoints2_marshaled, ___imagePointsLength3, ___cameraMatrix4, ____distCoeffs5_marshaled, ___distCoeffsLength6, ____rvec7_marshaled, ____tvec8_marshaled, ___useExtrinsicGuess9, ___iterationsCount10, ___reprojectionError11, ___confidence12, ___inliers13, ___flags14);
	#else
	il2cppPInvokeFunc(____objectPoints0_marshaled, ___objectPointsLength1, ____imagePoints2_marshaled, ___imagePointsLength3, ___cameraMatrix4, ____distCoeffs5_marshaled, ___distCoeffsLength6, ____rvec7_marshaled, ____tvec8_marshaled, ___useExtrinsicGuess9, ___iterationsCount10, ___reprojectionError11, ___confidence12, ___inliers13, ___flags14);
	#endif

	// Marshaling of parameter '___rvec7' back from native representation
	if (____rvec7_marshaled != NULL)
	{
		il2cpp_array_size_t ____rvec7_Length = (___rvec7)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____rvec7_Length); i++)
		{
			(___rvec7)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____rvec7_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___rvec7' native representation
	il2cpp_codegen_marshal_free(____rvec7_marshaled);
	____rvec7_marshaled = NULL;

	// Marshaling of parameter '___tvec8' back from native representation
	if (____tvec8_marshaled != NULL)
	{
		il2cpp_array_size_t ____tvec8_Length = (___tvec8)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____tvec8_Length); i++)
		{
			(___tvec8)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____tvec8_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___tvec8' native representation
	il2cpp_codegen_marshal_free(____tvec8_marshaled);
	____tvec8_marshaled = NULL;

}
// System.IntPtr OpenCvSharp.NativeMethods::calib3d_initCameraMatrix2D_Mat(System.IntPtr[],System.Int32,System.IntPtr[],System.Int32,OpenCvSharp.Size,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_calib3d_initCameraMatrix2D_Mat_mF4B649A68C58C137B8519D1EF5E9154BCE655E69 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___objectPoints0, int32_t ___objectPointsLength1, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___imagePoints2, int32_t ___imagePointsLength3, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___imageSize4, double ___aspectRatio5, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t*, int32_t, intptr_t*, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_initCameraMatrix2D_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___objectPoints0' to native representation
	intptr_t* ____objectPoints0_marshaled = NULL;
	if (___objectPoints0 != NULL)
	{
		____objectPoints0_marshaled = reinterpret_cast<intptr_t*>((___objectPoints0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___imagePoints2' to native representation
	intptr_t* ____imagePoints2_marshaled = NULL;
	if (___imagePoints2 != NULL)
	{
		____imagePoints2_marshaled = reinterpret_cast<intptr_t*>((___imagePoints2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_initCameraMatrix2D_Mat)(____objectPoints0_marshaled, ___objectPointsLength1, ____imagePoints2_marshaled, ___imagePointsLength3, ___imageSize4, ___aspectRatio5);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____objectPoints0_marshaled, ___objectPointsLength1, ____imagePoints2_marshaled, ___imagePointsLength3, ___imageSize4, ___aspectRatio5);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::calib3d_initCameraMatrix2D_array(System.IntPtr[],System.Int32,System.Int32[],System.IntPtr[],System.Int32,System.Int32[],OpenCvSharp.Size,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_calib3d_initCameraMatrix2D_array_m96FCA2495BD404A2434D1D1F0991BCD96893B9AB (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___objectPoints0, int32_t ___opSize11, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___opSize22, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___imagePoints3, int32_t ___ipSize14, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___ipSize25, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___imageSize6, double ___aspectRatio7, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t*, int32_t, int32_t*, intptr_t*, int32_t, int32_t*, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_initCameraMatrix2D_array", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___objectPoints0' to native representation
	intptr_t* ____objectPoints0_marshaled = NULL;
	if (___objectPoints0 != NULL)
	{
		____objectPoints0_marshaled = reinterpret_cast<intptr_t*>((___objectPoints0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___opSize22' to native representation
	int32_t* ____opSize22_marshaled = NULL;
	if (___opSize22 != NULL)
	{
		____opSize22_marshaled = reinterpret_cast<int32_t*>((___opSize22)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___imagePoints3' to native representation
	intptr_t* ____imagePoints3_marshaled = NULL;
	if (___imagePoints3 != NULL)
	{
		____imagePoints3_marshaled = reinterpret_cast<intptr_t*>((___imagePoints3)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___ipSize25' to native representation
	int32_t* ____ipSize25_marshaled = NULL;
	if (___ipSize25 != NULL)
	{
		____ipSize25_marshaled = reinterpret_cast<int32_t*>((___ipSize25)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_initCameraMatrix2D_array)(____objectPoints0_marshaled, ___opSize11, ____opSize22_marshaled, ____imagePoints3_marshaled, ___ipSize14, ____ipSize25_marshaled, ___imageSize6, ___aspectRatio7);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____objectPoints0_marshaled, ___opSize11, ____opSize22_marshaled, ____imagePoints3_marshaled, ___ipSize14, ____ipSize25_marshaled, ___imageSize6, ___aspectRatio7);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_findChessboardCorners_InputArray(System.IntPtr,OpenCvSharp.Size,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_findChessboardCorners_InputArray_mFADAE2FDC33B084E18947FE3BAAC9E55EC738651 (intptr_t ___image0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___patternSize1, intptr_t ___corners2, int32_t ___flags3, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_findChessboardCorners_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_findChessboardCorners_InputArray)(___image0, ___patternSize1, ___corners2, ___flags3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___image0, ___patternSize1, ___corners2, ___flags3);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_findChessboardCorners_vector(System.IntPtr,OpenCvSharp.Size,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_findChessboardCorners_vector_mAEBBB4C3684A78D173C6A7D3AC6824E9BC447EBA (intptr_t ___image0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___patternSize1, intptr_t ___corners2, int32_t ___flags3, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_findChessboardCorners_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_findChessboardCorners_vector)(___image0, ___patternSize1, ___corners2, ___flags3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___image0, ___patternSize1, ___corners2, ___flags3);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_find4QuadCornerSubpix_InputArray(System.IntPtr,System.IntPtr,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_find4QuadCornerSubpix_InputArray_m94B7340CA4F22967331B13FF6A4DF3918D82C783 (intptr_t ___img0, intptr_t ___corners1, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___regionSize2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_find4QuadCornerSubpix_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_find4QuadCornerSubpix_InputArray)(___img0, ___corners1, ___regionSize2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___img0, ___corners1, ___regionSize2);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_find4QuadCornerSubpix_vector(System.IntPtr,System.IntPtr,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_find4QuadCornerSubpix_vector_mF5B110DF78E2ECB45936F821CAFEFF84F4BB8EE4 (intptr_t ___img0, intptr_t ___corners1, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___regionSize2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_find4QuadCornerSubpix_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_find4QuadCornerSubpix_vector)(___img0, ___corners1, ___regionSize2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___img0, ___corners1, ___regionSize2);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_drawChessboardCorners_InputArray(System.IntPtr,OpenCvSharp.Size,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_drawChessboardCorners_InputArray_m0BE683CAF317800366780591C9AF4F072543505A (intptr_t ___image0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___patternSize1, intptr_t ___corners2, int32_t ___patternWasFound3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_drawChessboardCorners_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_drawChessboardCorners_InputArray)(___image0, ___patternSize1, ___corners2, ___patternWasFound3);
	#else
	il2cppPInvokeFunc(___image0, ___patternSize1, ___corners2, ___patternWasFound3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_drawChessboardCorners_array(System.IntPtr,OpenCvSharp.Size,OpenCvSharp.Point2f[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_drawChessboardCorners_array_m37C907983259F3C31B2F7F9EF247C6ADE86F608A (intptr_t ___image0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___patternSize1, Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___corners2, int32_t ___cornersLength3, int32_t ___patternWasFound4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_drawChessboardCorners_array", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___corners2' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____corners2_marshaled = NULL;
	if (___corners2 != NULL)
	{
		____corners2_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___corners2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_drawChessboardCorners_array)(___image0, ___patternSize1, ____corners2_marshaled, ___cornersLength3, ___patternWasFound4);
	#else
	il2cppPInvokeFunc(___image0, ___patternSize1, ____corners2_marshaled, ___cornersLength3, ___patternWasFound4);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_findCirclesGrid_InputArray(System.IntPtr,OpenCvSharp.Size,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_findCirclesGrid_InputArray_m895484F177232E9689A51C47B219D1AAC6781A69 (intptr_t ___image0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___patternSize1, intptr_t ___centers2, int32_t ___flags3, intptr_t ___blobDetector4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_findCirclesGrid_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_findCirclesGrid_InputArray)(___image0, ___patternSize1, ___centers2, ___flags3, ___blobDetector4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___image0, ___patternSize1, ___centers2, ___flags3, ___blobDetector4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_findCirclesGrid_vector(System.IntPtr,OpenCvSharp.Size,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_findCirclesGrid_vector_mAB1059B28EA400782393B2215840ABAAD84CA0BB (intptr_t ___image0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___patternSize1, intptr_t ___centers2, int32_t ___flags3, intptr_t ___blobDetector4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_findCirclesGrid_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_findCirclesGrid_vector)(___image0, ___patternSize1, ___centers2, ___flags3, ___blobDetector4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___image0, ___patternSize1, ___centers2, ___flags3, ___blobDetector4);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::calib3d_calibrateCamera_InputArray(System.IntPtr[],System.Int32,System.IntPtr[],System.Int32,OpenCvSharp.Size,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_calib3d_calibrateCamera_InputArray_m45C1F35F70486EA8ABB2A3FC0E107A10D12EFBCF (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___objectPoints0, int32_t ___objectPointsSize1, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___imagePoints2, int32_t ___imagePointsSize3, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___imageSize4, intptr_t ___cameraMatrix5, intptr_t ___distCoeffs6, intptr_t ___rvecs7, intptr_t ___tvecs8, int32_t ___flags9, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___criteria10, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t*, int32_t, intptr_t*, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_calibrateCamera_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___objectPoints0' to native representation
	intptr_t* ____objectPoints0_marshaled = NULL;
	if (___objectPoints0 != NULL)
	{
		____objectPoints0_marshaled = reinterpret_cast<intptr_t*>((___objectPoints0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___imagePoints2' to native representation
	intptr_t* ____imagePoints2_marshaled = NULL;
	if (___imagePoints2 != NULL)
	{
		____imagePoints2_marshaled = reinterpret_cast<intptr_t*>((___imagePoints2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(calib3d_calibrateCamera_InputArray)(____objectPoints0_marshaled, ___objectPointsSize1, ____imagePoints2_marshaled, ___imagePointsSize3, ___imageSize4, ___cameraMatrix5, ___distCoeffs6, ___rvecs7, ___tvecs8, ___flags9, ___criteria10);
	#else
	double returnValue = il2cppPInvokeFunc(____objectPoints0_marshaled, ___objectPointsSize1, ____imagePoints2_marshaled, ___imagePointsSize3, ___imageSize4, ___cameraMatrix5, ___distCoeffs6, ___rvecs7, ___tvecs8, ___flags9, ___criteria10);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::calib3d_calibrateCamera_vector(System.IntPtr[],System.Int32,System.Int32[],System.IntPtr[],System.Int32,System.Int32[],OpenCvSharp.Size,System.Double[,],System.Double[],System.Int32,System.IntPtr,System.IntPtr,System.Int32,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_calib3d_calibrateCamera_vector_mE30CB082D915B91EA3F56F1DA33F2FDE1FD055C5 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___objectPoints0, int32_t ___opSize11, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___opSize22, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___imagePoints3, int32_t ___ipSize14, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___ipSize25, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___imageSize6, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___cameraMatrix7, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___distCoeffs8, int32_t ___distCoeffsSize9, intptr_t ___rvecs10, intptr_t ___tvecs11, int32_t ___flags12, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___criteria13, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Void OpenCvSharp.NativeMethods::calib3d_calibrationMatrixValues_InputArray(System.IntPtr,OpenCvSharp.Size,System.Double,System.Double,System.Double&,System.Double&,System.Double&,OpenCvSharp.Point2d&,System.Double&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_calibrationMatrixValues_InputArray_mAD9620D0E8CC3C45862662903BBC3693D38E89C4 (intptr_t ___cameraMatrix0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___imageSize1, double ___apertureWidth2, double ___apertureHeight3, double* ___fovx4, double* ___fovy5, double* ___focalLength6, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* ___principalPoint7, double* ___aspectRatio8, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, double*, double*, double*, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, double*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(double) + sizeof(double) + sizeof(double*) + sizeof(double*) + sizeof(double*) + sizeof(Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*) + sizeof(double*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_calibrationMatrixValues_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_calibrationMatrixValues_InputArray)(___cameraMatrix0, ___imageSize1, ___apertureWidth2, ___apertureHeight3, ___fovx4, ___fovy5, ___focalLength6, ___principalPoint7, ___aspectRatio8);
	#else
	il2cppPInvokeFunc(___cameraMatrix0, ___imageSize1, ___apertureWidth2, ___apertureHeight3, ___fovx4, ___fovy5, ___focalLength6, ___principalPoint7, ___aspectRatio8);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_calibrationMatrixValues_array(System.Double[,],OpenCvSharp.Size,System.Double,System.Double,System.Double&,System.Double&,System.Double&,OpenCvSharp.Point2d&,System.Double&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_calibrationMatrixValues_array_mB0B2B51E5C34CC310649E59ED7A93D416D0900AB (DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___cameraMatrix0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___imageSize1, double ___apertureWidth2, double ___apertureHeight3, double* ___fovx4, double* ___fovy5, double* ___focalLength6, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* ___principalPoint7, double* ___aspectRatio8, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Double OpenCvSharp.NativeMethods::calib3d_stereoCalibrate_InputArray(System.IntPtr[],System.Int32,System.IntPtr[],System.Int32,System.IntPtr[],System.Int32,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_calib3d_stereoCalibrate_InputArray_m891863E0F2C917B8AE99D127C82CEE8D3397F3B3 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___objectPoints0, int32_t ___opSize1, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___imagePoints12, int32_t ___ip1Size3, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___imagePoints24, int32_t ___ip2Size5, intptr_t ___cameraMatrix16, intptr_t ___distCoeffs17, intptr_t ___cameraMatrix28, intptr_t ___distCoeffs29, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___imageSize10, intptr_t ___R11, intptr_t ___T12, intptr_t ___E13, intptr_t ___F14, int32_t ___flags15, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___criteria16, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t*, int32_t, intptr_t*, int32_t, intptr_t*, int32_t, intptr_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_stereoCalibrate_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___objectPoints0' to native representation
	intptr_t* ____objectPoints0_marshaled = NULL;
	if (___objectPoints0 != NULL)
	{
		____objectPoints0_marshaled = reinterpret_cast<intptr_t*>((___objectPoints0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___imagePoints12' to native representation
	intptr_t* ____imagePoints12_marshaled = NULL;
	if (___imagePoints12 != NULL)
	{
		____imagePoints12_marshaled = reinterpret_cast<intptr_t*>((___imagePoints12)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___imagePoints24' to native representation
	intptr_t* ____imagePoints24_marshaled = NULL;
	if (___imagePoints24 != NULL)
	{
		____imagePoints24_marshaled = reinterpret_cast<intptr_t*>((___imagePoints24)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(calib3d_stereoCalibrate_InputArray)(____objectPoints0_marshaled, ___opSize1, ____imagePoints12_marshaled, ___ip1Size3, ____imagePoints24_marshaled, ___ip2Size5, ___cameraMatrix16, ___distCoeffs17, ___cameraMatrix28, ___distCoeffs29, ___imageSize10, ___R11, ___T12, ___E13, ___F14, ___flags15, ___criteria16);
	#else
	double returnValue = il2cppPInvokeFunc(____objectPoints0_marshaled, ___opSize1, ____imagePoints12_marshaled, ___ip1Size3, ____imagePoints24_marshaled, ___ip2Size5, ___cameraMatrix16, ___distCoeffs17, ___cameraMatrix28, ___distCoeffs29, ___imageSize10, ___R11, ___T12, ___E13, ___F14, ___flags15, ___criteria16);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::calib3d_stereoCalibrate_array(System.IntPtr[],System.Int32,System.Int32[],System.IntPtr[],System.Int32,System.Int32[],System.IntPtr[],System.Int32,System.Int32[],System.Double[,],System.Double[],System.Int32,System.Double[,],System.Double[],System.Int32,OpenCvSharp.Size,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_calib3d_stereoCalibrate_array_m5AB59F6DFC9D874AC03EAB2AB18114A9C644A9AC (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___objectPoints0, int32_t ___opSize11, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___opSizes22, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___imagePoints13, int32_t ___ip1Size14, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___ip1Sizes25, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___imagePoints26, int32_t ___ip2Size17, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___ip2Sizes28, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___cameraMatrix19, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___distCoeffs110, int32_t ___dc1Size11, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___cameraMatrix212, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___distCoeffs213, int32_t ___dc2Size14, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___imageSize15, intptr_t ___R16, intptr_t ___T17, intptr_t ___E18, intptr_t ___F19, int32_t ___flags20, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___criteria21, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Void OpenCvSharp.NativeMethods::calib3d_stereoRectify_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Double,OpenCvSharp.Size,OpenCvSharp.Rect&,OpenCvSharp.Rect&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_stereoRectify_InputArray_m88175CF176A3318980F36AE5BED9DD9A3FF7ACE1 (intptr_t ___cameraMatrix10, intptr_t ___distCoeffs11, intptr_t ___cameraMatrix22, intptr_t ___distCoeffs23, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___imageSize4, intptr_t ___R5, intptr_t ___T6, intptr_t ___R17, intptr_t ___R28, intptr_t ___P19, intptr_t ___P210, intptr_t ___Q11, int32_t ___flags12, double ___alpha13, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___newImageSize14, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___validPixROI115, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___validPixROI216, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_stereoRectify_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_stereoRectify_InputArray)(___cameraMatrix10, ___distCoeffs11, ___cameraMatrix22, ___distCoeffs23, ___imageSize4, ___R5, ___T6, ___R17, ___R28, ___P19, ___P210, ___Q11, ___flags12, ___alpha13, ___newImageSize14, ___validPixROI115, ___validPixROI216);
	#else
	il2cppPInvokeFunc(___cameraMatrix10, ___distCoeffs11, ___cameraMatrix22, ___distCoeffs23, ___imageSize4, ___R5, ___T6, ___R17, ___R28, ___P19, ___P210, ___Q11, ___flags12, ___alpha13, ___newImageSize14, ___validPixROI115, ___validPixROI216);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_stereoRectify_array(System.Double[,],System.Double[],System.Int32,System.Double[,],System.Double[],System.Int32,OpenCvSharp.Size,System.Double[,],System.Double[],System.Double[,],System.Double[,],System.Double[,],System.Double[,],System.Double[,],System.Int32,System.Double,OpenCvSharp.Size,OpenCvSharp.Rect&,OpenCvSharp.Rect&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_stereoRectify_array_m16C347DA47A3D903666F4CC0F8B049163287E7F3 (DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___cameraMatrix10, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___distCoeffs11, int32_t ___dc1Size2, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___cameraMatrix23, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___distCoeffs24, int32_t ___dc2Size5, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___imageSize6, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___R7, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___T8, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___R19, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___R210, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___P111, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___P212, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___Q13, int32_t ___flags14, double ___alpha15, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___newImageSize16, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___validPixROI117, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___validPixROI218, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_stereoRectifyUncalibrated_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.IntPtr,System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_stereoRectifyUncalibrated_InputArray_mBD3C093F57C538861193B317B5E79BF312E9817F (intptr_t ___points10, intptr_t ___points21, intptr_t ___F2, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___imgSize3, intptr_t ___H14, intptr_t ___H25, double ___threshold6, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_stereoRectifyUncalibrated_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_stereoRectifyUncalibrated_InputArray)(___points10, ___points21, ___F2, ___imgSize3, ___H14, ___H25, ___threshold6);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___points10, ___points21, ___F2, ___imgSize3, ___H14, ___H25, ___threshold6);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_stereoRectifyUncalibrated_array(OpenCvSharp.Point2d[],System.Int32,OpenCvSharp.Point2d[],System.Int32,System.Double[,],OpenCvSharp.Size,System.Double[,],System.Double[,],System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_stereoRectifyUncalibrated_array_m66C5C2C8F6CADA78831C6F762DF18CEEA6F35A5C (Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___points10, int32_t ___points1Size1, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___points22, int32_t ___points2Size3, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___F4, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___imgSize5, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___H16, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___H27, double ___threshold8, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Single OpenCvSharp.NativeMethods::calib3d_rectify3Collinear_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr[],System.Int32,System.IntPtr[],System.Int32,OpenCvSharp.Size,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,OpenCvSharp.Size,OpenCvSharp.Rect&,OpenCvSharp.Rect&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_calib3d_rectify3Collinear_InputArray_mF06BEEFE6DE24B45A823A1FAD650D59221D5EAEC (intptr_t ___cameraMatrix10, intptr_t ___distCoeffs11, intptr_t ___cameraMatrix22, intptr_t ___distCoeffs23, intptr_t ___cameraMatrix34, intptr_t ___distCoeffs35, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___imgpt16, int32_t ___imgpt1Size7, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___imgpt38, int32_t ___imgpt3Size9, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___imageSize10, intptr_t ___R1211, intptr_t ___T1212, intptr_t ___R1313, intptr_t ___T1314, intptr_t ___R115, intptr_t ___R216, intptr_t ___R317, intptr_t ___P118, intptr_t ___P219, intptr_t ___P320, intptr_t ___Q21, double ___alpha22, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___newImgSize23, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___roi124, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___roi225, int32_t ___flags26, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t*, int32_t, intptr_t*, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_rectify3Collinear_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___imgpt16' to native representation
	intptr_t* ____imgpt16_marshaled = NULL;
	if (___imgpt16 != NULL)
	{
		____imgpt16_marshaled = reinterpret_cast<intptr_t*>((___imgpt16)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___imgpt38' to native representation
	intptr_t* ____imgpt38_marshaled = NULL;
	if (___imgpt38 != NULL)
	{
		____imgpt38_marshaled = reinterpret_cast<intptr_t*>((___imgpt38)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(calib3d_rectify3Collinear_InputArray)(___cameraMatrix10, ___distCoeffs11, ___cameraMatrix22, ___distCoeffs23, ___cameraMatrix34, ___distCoeffs35, ____imgpt16_marshaled, ___imgpt1Size7, ____imgpt38_marshaled, ___imgpt3Size9, ___imageSize10, ___R1211, ___T1212, ___R1313, ___T1314, ___R115, ___R216, ___R317, ___P118, ___P219, ___P320, ___Q21, ___alpha22, ___newImgSize23, ___roi124, ___roi225, ___flags26);
	#else
	float returnValue = il2cppPInvokeFunc(___cameraMatrix10, ___distCoeffs11, ___cameraMatrix22, ___distCoeffs23, ___cameraMatrix34, ___distCoeffs35, ____imgpt16_marshaled, ___imgpt1Size7, ____imgpt38_marshaled, ___imgpt3Size9, ___imageSize10, ___R1211, ___T1212, ___R1313, ___T1314, ___R115, ___R216, ___R317, ___P118, ___P219, ___P320, ___Q21, ___alpha22, ___newImgSize23, ___roi124, ___roi225, ___flags26);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::calib3d_getOptimalNewCameraMatrix_InputArray(System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Double,OpenCvSharp.Size,OpenCvSharp.Rect&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_calib3d_getOptimalNewCameraMatrix_InputArray_mAECA12F53161327E0C8DEEB4B74D4F8B4DFB8487 (intptr_t ___cameraMatrix0, intptr_t ___distCoeffs1, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___imageSize2, double ___alpha3, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___newImgSize4, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___validPixROI5, int32_t ___centerPrincipalPoint6, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(double) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_getOptimalNewCameraMatrix_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_getOptimalNewCameraMatrix_InputArray)(___cameraMatrix0, ___distCoeffs1, ___imageSize2, ___alpha3, ___newImgSize4, ___validPixROI5, ___centerPrincipalPoint6);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___cameraMatrix0, ___distCoeffs1, ___imageSize2, ___alpha3, ___newImgSize4, ___validPixROI5, ___centerPrincipalPoint6);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_getOptimalNewCameraMatrix_array(System.Double[,],System.Double[],System.Int32,OpenCvSharp.Size,System.Double,OpenCvSharp.Size,OpenCvSharp.Rect&,System.Int32,System.Double[,])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_getOptimalNewCameraMatrix_array_m4E2538F294B7DC4548904D5D2176A5956E404575 (DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___cameraMatrix0, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___distCoeffs1, int32_t ___distCoeffsSize2, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___imageSize3, double ___alpha4, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___newImgSize5, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___validPixROI6, int32_t ___centerPrincipalPoint7, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___outValues8, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Void OpenCvSharp.NativeMethods::calib3d_convertPointsToHomogeneous_InputArray(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_convertPointsToHomogeneous_InputArray_m8CE8FA21CDF39488A0CCD111A67ED3C545C36472 (intptr_t ___src0, intptr_t ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_convertPointsToHomogeneous_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_convertPointsToHomogeneous_InputArray)(___src0, ___dst1);
	#else
	il2cppPInvokeFunc(___src0, ___dst1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_convertPointsToHomogeneous_array1(OpenCvSharp.Vec2f[],OpenCvSharp.Vec3f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_convertPointsToHomogeneous_array1_mE6C485EF3528157C3B1F235E6BAED873C09D5EC2 (Vec2fU5BU5D_t605FE443F498ED80B628FC0E98240C847D9C22FF* ___src0, Vec3fU5BU5D_tED5C8EB686AD5A75ACA66EC986897DE59ABF6C4D* ___dst1, int32_t ___length2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_convertPointsToHomogeneous_array1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___src0' to native representation
	Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E* ____src0_marshaled = NULL;
	if (___src0 != NULL)
	{
		____src0_marshaled = reinterpret_cast<Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*>((___src0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___dst1' to native representation
	Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* ____dst1_marshaled = NULL;
	if (___dst1 != NULL)
	{
		____dst1_marshaled = reinterpret_cast<Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*>((___dst1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_convertPointsToHomogeneous_array1)(____src0_marshaled, ____dst1_marshaled, ___length2);
	#else
	il2cppPInvokeFunc(____src0_marshaled, ____dst1_marshaled, ___length2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_convertPointsToHomogeneous_array2(OpenCvSharp.Vec3f[],OpenCvSharp.Vec4f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_convertPointsToHomogeneous_array2_m229BE35ABDA6A2BBEC01CCA49E7A25BB39C96B9A (Vec3fU5BU5D_tED5C8EB686AD5A75ACA66EC986897DE59ABF6C4D* ___src0, Vec4fU5BU5D_t3B2FBCD7291E3C966FB625B86393DC5CDB180A64* ___dst1, int32_t ___length2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_convertPointsToHomogeneous_array2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___src0' to native representation
	Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* ____src0_marshaled = NULL;
	if (___src0 != NULL)
	{
		____src0_marshaled = reinterpret_cast<Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*>((___src0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___dst1' to native representation
	Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* ____dst1_marshaled = NULL;
	if (___dst1 != NULL)
	{
		____dst1_marshaled = reinterpret_cast<Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*>((___dst1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_convertPointsToHomogeneous_array2)(____src0_marshaled, ____dst1_marshaled, ___length2);
	#else
	il2cppPInvokeFunc(____src0_marshaled, ____dst1_marshaled, ___length2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_convertPointsFromHomogeneous_InputArray(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_convertPointsFromHomogeneous_InputArray_m83CB62D1EA5BD2B19652868297E65E1AE7E9B674 (intptr_t ___src0, intptr_t ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_convertPointsFromHomogeneous_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_convertPointsFromHomogeneous_InputArray)(___src0, ___dst1);
	#else
	il2cppPInvokeFunc(___src0, ___dst1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_convertPointsFromHomogeneous_array1(OpenCvSharp.Vec3f[],OpenCvSharp.Vec2f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_convertPointsFromHomogeneous_array1_m8B034FE444CC11892FD946F751735459B6084DAC (Vec3fU5BU5D_tED5C8EB686AD5A75ACA66EC986897DE59ABF6C4D* ___src0, Vec2fU5BU5D_t605FE443F498ED80B628FC0E98240C847D9C22FF* ___dst1, int32_t ___length2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_convertPointsFromHomogeneous_array1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___src0' to native representation
	Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* ____src0_marshaled = NULL;
	if (___src0 != NULL)
	{
		____src0_marshaled = reinterpret_cast<Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*>((___src0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___dst1' to native representation
	Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E* ____dst1_marshaled = NULL;
	if (___dst1 != NULL)
	{
		____dst1_marshaled = reinterpret_cast<Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*>((___dst1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_convertPointsFromHomogeneous_array1)(____src0_marshaled, ____dst1_marshaled, ___length2);
	#else
	il2cppPInvokeFunc(____src0_marshaled, ____dst1_marshaled, ___length2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_convertPointsFromHomogeneous_array2(OpenCvSharp.Vec4f[],OpenCvSharp.Vec3f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_convertPointsFromHomogeneous_array2_m3311C0699AB94CC90AE9ED0E8408CA71B706A361 (Vec4fU5BU5D_t3B2FBCD7291E3C966FB625B86393DC5CDB180A64* ___src0, Vec3fU5BU5D_tED5C8EB686AD5A75ACA66EC986897DE59ABF6C4D* ___dst1, int32_t ___length2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_convertPointsFromHomogeneous_array2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___src0' to native representation
	Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* ____src0_marshaled = NULL;
	if (___src0 != NULL)
	{
		____src0_marshaled = reinterpret_cast<Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*>((___src0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___dst1' to native representation
	Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* ____dst1_marshaled = NULL;
	if (___dst1 != NULL)
	{
		____dst1_marshaled = reinterpret_cast<Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*>((___dst1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_convertPointsFromHomogeneous_array2)(____src0_marshaled, ____dst1_marshaled, ___length2);
	#else
	il2cppPInvokeFunc(____src0_marshaled, ____dst1_marshaled, ___length2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_convertPointsHomogeneous(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_convertPointsHomogeneous_m6C2D6C7E5EF42150767B9C3B04F8AA5F5F647425 (intptr_t ___src0, intptr_t ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_convertPointsHomogeneous", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_convertPointsHomogeneous)(___src0, ___dst1);
	#else
	il2cppPInvokeFunc(___src0, ___dst1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::calib3d_findFundamentalMat_InputArray(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_calib3d_findFundamentalMat_InputArray_m000FACDF3931EFC33D5662E82B4E9A2446956B2A (intptr_t ___points10, intptr_t ___points21, int32_t ___method2, double ___param13, double ___param24, intptr_t ___mask5, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double, double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_findFundamentalMat_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_findFundamentalMat_InputArray)(___points10, ___points21, ___method2, ___param13, ___param24, ___mask5);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___points10, ___points21, ___method2, ___param13, ___param24, ___mask5);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::calib3d_findFundamentalMat_array(OpenCvSharp.Point2d[],System.Int32,OpenCvSharp.Point2d[],System.Int32,System.Int32,System.Double,System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_calib3d_findFundamentalMat_array_m72A29E1F4E892A587313CBD1FC1068C644A0FC2F (Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___points10, int32_t ___points1Size1, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___points22, int32_t ___points2Size3, int32_t ___method4, double ___param15, double ___param26, intptr_t ___mask7, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, int32_t, double, double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_findFundamentalMat_array", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___points10' to native representation
	Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* ____points10_marshaled = NULL;
	if (___points10 != NULL)
	{
		____points10_marshaled = reinterpret_cast<Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*>((___points10)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___points22' to native representation
	Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* ____points22_marshaled = NULL;
	if (___points22 != NULL)
	{
		____points22_marshaled = reinterpret_cast<Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*>((___points22)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_findFundamentalMat_array)(____points10_marshaled, ___points1Size1, ____points22_marshaled, ___points2Size3, ___method4, ___param15, ___param26, ___mask7);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____points10_marshaled, ___points1Size1, ____points22_marshaled, ___points2Size3, ___method4, ___param15, ___param26, ___mask7);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_computeCorrespondEpilines_InputArray(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_computeCorrespondEpilines_InputArray_m150A19650B0019E6655C6D8546F54464EA60A9BA (intptr_t ___points0, int32_t ___whichImage1, intptr_t ___F2, intptr_t ___lines3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_computeCorrespondEpilines_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_computeCorrespondEpilines_InputArray)(___points0, ___whichImage1, ___F2, ___lines3);
	#else
	il2cppPInvokeFunc(___points0, ___whichImage1, ___F2, ___lines3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_computeCorrespondEpilines_array2d(OpenCvSharp.Point2d[],System.Int32,System.Int32,System.Double[,],OpenCvSharp.Point3f[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_computeCorrespondEpilines_array2d_m6ED28918BD6E8D32ACCFDEA2158FCE58483377BE (Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___points0, int32_t ___pointsSize1, int32_t ___whichImage2, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___F3, Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2* ___lines4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Void OpenCvSharp.NativeMethods::calib3d_computeCorrespondEpilines_array3d(OpenCvSharp.Point3d[],System.Int32,System.Int32,System.Double[,],OpenCvSharp.Point3f[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_computeCorrespondEpilines_array3d_m091C6ABAA1C4525F2578189BCC40D967630CD6EC (Point3dU5BU5D_tCFCFAEE9362D1E9BA210F2CBFABAEC68D052F43D* ___points0, int32_t ___pointsSize1, int32_t ___whichImage2, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___F3, Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2* ___lines4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Void OpenCvSharp.NativeMethods::calib3d_triangulatePoints_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_triangulatePoints_InputArray_m2CA7485D8596EDA61D3F1243E5D03FAE6C9B14D2 (intptr_t ___projMatr10, intptr_t ___projMatr21, intptr_t ___projPoints12, intptr_t ___projPoints23, intptr_t ___points4D4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_triangulatePoints_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_triangulatePoints_InputArray)(___projMatr10, ___projMatr21, ___projPoints12, ___projPoints23, ___points4D4);
	#else
	il2cppPInvokeFunc(___projMatr10, ___projMatr21, ___projPoints12, ___projPoints23, ___points4D4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_triangulatePoints_array(System.Double[,],System.Double[,],OpenCvSharp.Point2d[],System.Int32,OpenCvSharp.Point2d[],System.Int32,OpenCvSharp.Vec4d[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_triangulatePoints_array_m899E2B8440B18C0BA4CC2FC05F8B5C4F5CA87589 (DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___projMatr10, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___projMatr21, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___projPoints12, int32_t ___projPoints1Size3, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___projPoints24, int32_t ___projPoints2Size5, Vec4dU5BU5D_t4CD1D642D7FE8D7D780F5089E9047773F65F29E7* ___points4D6, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Void OpenCvSharp.NativeMethods::calib3d_correctMatches_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_correctMatches_InputArray_m6D9A48BF70ACEE4978176C1E650319001828D313 (intptr_t ___F0, intptr_t ___points11, intptr_t ___points22, intptr_t ___newPoints13, intptr_t ___newPoints24, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_correctMatches_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_correctMatches_InputArray)(___F0, ___points11, ___points22, ___newPoints13, ___newPoints24);
	#else
	il2cppPInvokeFunc(___F0, ___points11, ___points22, ___newPoints13, ___newPoints24);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_correctMatches_array(System.Double[,],OpenCvSharp.Point2d[],System.Int32,OpenCvSharp.Point2d[],System.Int32,OpenCvSharp.Point2d[],OpenCvSharp.Point2d[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_correctMatches_array_m3CCBF6041754699B1566F99E8BA575430BADD63B (DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___F0, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___points11, int32_t ___points1Size2, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___points23, int32_t ___points2Size4, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___newPoints15, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___newPoints26, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Void OpenCvSharp.NativeMethods::calib3d_filterSpeckles(System.IntPtr,System.Double,System.Int32,System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_filterSpeckles_m34F004A71CF24EABE13844D055E4F3286FB24B33 (intptr_t ___img0, double ___newVal1, int32_t ___maxSpeckleSize2, double ___maxDiff3, intptr_t ___buf4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double, int32_t, double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double) + sizeof(int32_t) + sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_filterSpeckles", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_filterSpeckles)(___img0, ___newVal1, ___maxSpeckleSize2, ___maxDiff3, ___buf4);
	#else
	il2cppPInvokeFunc(___img0, ___newVal1, ___maxSpeckleSize2, ___maxDiff3, ___buf4);
	#endif

}
// OpenCvSharp.Rect OpenCvSharp.NativeMethods::calib3d_getValidDisparityROI(OpenCvSharp.Rect,OpenCvSharp.Rect,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A NativeMethods_calib3d_getValidDisparityROI_m4D1CE2AFFB34B7D164091CE60D124387B58E30C4 (Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___roi10, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___roi21, int32_t ___minDisparity2, int32_t ___numberOfDisparities3, int32_t ___SADWindowSize4, const RuntimeMethod* method) 
{
	typedef Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A (CDECL *PInvokeFunc) (Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_getValidDisparityROI", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = reinterpret_cast<PInvokeFunc>(calib3d_getValidDisparityROI)(___roi10, ___roi21, ___minDisparity2, ___numberOfDisparities3, ___SADWindowSize4);
	#else
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = il2cppPInvokeFunc(___roi10, ___roi21, ___minDisparity2, ___numberOfDisparities3, ___SADWindowSize4);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_validateDisparity(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_validateDisparity_m2DE76D6AC1CB3A4CC4F644DE7716FD5D4204B642 (intptr_t ___disparity0, intptr_t ___cost1, int32_t ___minDisparity2, int32_t ___numberOfDisparities3, int32_t ___disp12MaxDisp4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_validateDisparity", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_validateDisparity)(___disparity0, ___cost1, ___minDisparity2, ___numberOfDisparities3, ___disp12MaxDisp4);
	#else
	il2cppPInvokeFunc(___disparity0, ___cost1, ___minDisparity2, ___numberOfDisparities3, ___disp12MaxDisp4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_reprojectImageTo3D(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_reprojectImageTo3D_mB50A0ACE89A65517BFD3C6EAFE0E3382A23CF098 (intptr_t ___disparity0, intptr_t ____3dImage1, intptr_t ___Q2, int32_t ___handleMissingValues3, int32_t ___ddepth4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_reprojectImageTo3D", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_reprojectImageTo3D)(___disparity0, ____3dImage1, ___Q2, ___handleMissingValues3, ___ddepth4);
	#else
	il2cppPInvokeFunc(___disparity0, ____3dImage1, ___Q2, ___handleMissingValues3, ___ddepth4);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_estimateAffine3D(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_estimateAffine3D_m50B41B7A7E32B1F135424B9A03457A04C7351398 (intptr_t ___src0, intptr_t ___dst1, intptr_t ___outVal2, intptr_t ___inliers3, double ___ransacThreshold4, double ___confidence5, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_estimateAffine3D", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_estimateAffine3D)(___src0, ___dst1, ___outVal2, ___inliers3, ___ransacThreshold4, ___confidence5);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___src0, ___dst1, ___outVal2, ___inliers3, ___ransacThreshold4, ___confidence5);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoMatcher_compute(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoMatcher_compute_m961D3ADBBAF4789C54F0E277B03BF8476D908DB1 (intptr_t ___obj0, intptr_t ___left1, intptr_t ___right2, intptr_t ___disparity3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_compute", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_compute)(___obj0, ___left1, ___right2, ___disparity3);
	#else
	il2cppPInvokeFunc(___obj0, ___left1, ___right2, ___disparity3);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoMatcher_getMinDisparity(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoMatcher_getMinDisparity_m4B9F77A078ED27DD7FE4477CE966A8B78AD5745A (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_getMinDisparity", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_getMinDisparity)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoMatcher_setMinDisparity(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoMatcher_setMinDisparity_m1FEA57A1CDF8CE1DE0E81559D9526EE770504047 (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_setMinDisparity", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_setMinDisparity)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoMatcher_getNumDisparities(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoMatcher_getNumDisparities_m4F81135C20C10F1C4E2F85A5B9BC5D207234CC53 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_getNumDisparities", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_getNumDisparities)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoMatcher_setNumDisparities(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoMatcher_setNumDisparities_m83DEF0EFD435FAE03746D86644441A45A7356A54 (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_setNumDisparities", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_setNumDisparities)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoMatcher_getBlockSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoMatcher_getBlockSize_m8EB710ABF2C09530AE4D9765FA27D520FC67532C (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_getBlockSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_getBlockSize)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoMatcher_setBlockSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoMatcher_setBlockSize_mC054B6A1D634F9BD318D4876DF0AB05CADB5277F (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_setBlockSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_setBlockSize)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoMatcher_getSpeckleWindowSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoMatcher_getSpeckleWindowSize_m19D51C8A4BCBCE0E8A57C4D602F43867EFD32F6C (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_getSpeckleWindowSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_getSpeckleWindowSize)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoMatcher_setSpeckleWindowSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoMatcher_setSpeckleWindowSize_m4EF65B6605FBE7882FA62A8E0CC1A3C73127EBE6 (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_setSpeckleWindowSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_setSpeckleWindowSize)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoMatcher_getSpeckleRange(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoMatcher_getSpeckleRange_m6187C931092D08E104956FFC83134CEE759C4327 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_getSpeckleRange", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_getSpeckleRange)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoMatcher_setSpeckleRange(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoMatcher_setSpeckleRange_mED6C0CB654B04D6C006B88F79F74C9F7398FEBDD (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_setSpeckleRange", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_setSpeckleRange)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoMatcher_getDisp12MaxDiff(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoMatcher_getDisp12MaxDiff_m9D2D78648EE9A3D0F4CAD52B3E232103E038A84A (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_getDisp12MaxDiff", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_getDisp12MaxDiff)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoMatcher_setDisp12MaxDiff(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoMatcher_setDisp12MaxDiff_m7F7C7E93DB0BF03349F6197F578CD8102C7F353F (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_setDisp12MaxDiff", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_setDisp12MaxDiff)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_Ptr_StereoBM_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_Ptr_StereoBM_delete_m4A49F778039CABCBB659EF796DD40E56A50E5905 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_Ptr_StereoBM_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_Ptr_StereoBM_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::calib3d_StereoBM_create(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_calib3d_StereoBM_create_m225F632A7A19CB09105B36B4CBD9345F2D523DE1 (int32_t ___numDisparities0, int32_t ___blockSize1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_create)(___numDisparities0, ___blockSize1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___numDisparities0, ___blockSize1);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoBM_getPreFilterType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoBM_getPreFilterType_m6CF212AA40BEF3952D7854408015F678BCAED990 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_getPreFilterType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_getPreFilterType)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setPreFilterType(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setPreFilterType_m67E95B1485C1C47E39EF68B51F2A54CAF659AD08 (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_setPreFilterType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_setPreFilterType)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoBM_getPreFilterSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoBM_getPreFilterSize_m443666DA760DAD8E4780AD85B258F4C719776423 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_getPreFilterSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_getPreFilterSize)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setPreFilterSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setPreFilterSize_m229A7061261F51084A9B58CBE2F39B4B211481BE (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_setPreFilterSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_setPreFilterSize)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoBM_getPreFilterCap(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoBM_getPreFilterCap_m409E49A36697798A05B1E157F606111366D84B8E (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_getPreFilterCap", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_getPreFilterCap)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setPreFilterCap(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setPreFilterCap_mD237A82E1C52DA31071AFBF7C28CE41DED7BB88E (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_setPreFilterCap", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_setPreFilterCap)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoBM_getTextureThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoBM_getTextureThreshold_m6C87B6F124428FEBE006A4128448C5A5987AB4DE (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_getTextureThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_getTextureThreshold)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setTextureThreshold(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setTextureThreshold_mD132F73AE2F3A33CDE204E98EC0CAB9B26D23A56 (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_setTextureThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_setTextureThreshold)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoBM_getUniquenessRatio(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoBM_getUniquenessRatio_m24C0FEA3729B96F232D9B2F6E4336E7311289511 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_getUniquenessRatio", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_getUniquenessRatio)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setUniquenessRatio(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setUniquenessRatio_mFD8C30437EE81C03D40460C192699B880719DC4A (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_setUniquenessRatio", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_setUniquenessRatio)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoBM_getSmallerBlockSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoBM_getSmallerBlockSize_mF15BE4E062E8515FEA9F0167B306F95784D29EE0 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_getSmallerBlockSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_getSmallerBlockSize)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setSmallerBlockSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setSmallerBlockSize_m351A1F2B1F7F945309ABCDC8983E2992600441E3 (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_setSmallerBlockSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_setSmallerBlockSize)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// OpenCvSharp.Rect OpenCvSharp.NativeMethods::calib3d_StereoBM_getROI1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A NativeMethods_calib3d_StereoBM_getROI1_mC46DD31DA351FB2BB441E2B21174FB82389EFCF0 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_getROI1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_getROI1)(___obj0);
	#else
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setROI1(System.IntPtr,OpenCvSharp.Rect)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setROI1_mEB7023DBEB91B577432CB07DC72F68767D5A48D3 (intptr_t ___obj0, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_setROI1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_setROI1)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// OpenCvSharp.Rect OpenCvSharp.NativeMethods::calib3d_StereoBM_getROI2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A NativeMethods_calib3d_StereoBM_getROI2_m3253CB2354A995B3F641FA95EC44BD78987D9FC8 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_getROI2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_getROI2)(___obj0);
	#else
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setROI2(System.IntPtr,OpenCvSharp.Rect)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setROI2_mE1F0F35B182BD9DA69BFBEEE90A68C3A9022E2F0 (intptr_t ___obj0, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_setROI2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_setROI2)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_Ptr_StereoSGBM_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_Ptr_StereoSGBM_delete_mAF8EB127B8B4A2C0E618968D26E4B2792B4C0808 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_Ptr_StereoSGBM_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_Ptr_StereoSGBM_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::calib3d_StereoSGBM_create(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_calib3d_StereoSGBM_create_mF42BB831DEE7064CA753DC9E351C021B1775D3B1 (int32_t ___minDisparity0, int32_t ___numDisparities1, int32_t ___blockSize2, int32_t ___P13, int32_t ___P24, int32_t ___disp12MaxDiff5, int32_t ___preFilterCap6, int32_t ___uniquenessRatio7, int32_t ___speckleWindowSize8, int32_t ___speckleRange9, int32_t ___mode10, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_create)(___minDisparity0, ___numDisparities1, ___blockSize2, ___P13, ___P24, ___disp12MaxDiff5, ___preFilterCap6, ___uniquenessRatio7, ___speckleWindowSize8, ___speckleRange9, ___mode10);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___minDisparity0, ___numDisparities1, ___blockSize2, ___P13, ___P24, ___disp12MaxDiff5, ___preFilterCap6, ___uniquenessRatio7, ___speckleWindowSize8, ___speckleRange9, ___mode10);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoSGBM_getPreFilterCap(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoSGBM_getPreFilterCap_mB81B0C1B37FD711FF99DDE06FEFA9005015FFE4A (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_getPreFilterCap", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_getPreFilterCap)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoSGBM_setPreFilterCap(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoSGBM_setPreFilterCap_mD51C336F8E011F758B17B35A854AF2BCCBA0B2F5 (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_setPreFilterCap", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_setPreFilterCap)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoSGBM_getUniquenessRatio(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoSGBM_getUniquenessRatio_m1D5BCD13E43E8DCCF504386C2227DDCF854421A5 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_getUniquenessRatio", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_getUniquenessRatio)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoSGBM_setUniquenessRatio(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoSGBM_setUniquenessRatio_mDC50720DA218609419538C1CFEDD2CB4A904781C (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_setUniquenessRatio", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_setUniquenessRatio)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoSGBM_getP1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoSGBM_getP1_m34EE257DC69AF7FB0FFA7671F819B5CB495317DE (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_getP1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_getP1)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoSGBM_setP1(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoSGBM_setP1_m2F72E38C96F534DA10FEB50E1C2FFEC7517321D7 (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_setP1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_setP1)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoSGBM_getP2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoSGBM_getP2_m36F4CD8199C8DF6C147612CF7E79AB0B30189E16 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_getP2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_getP2)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoSGBM_setP2(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoSGBM_setP2_m49D2A03922CF5687951FABAB446CEE5AA6CE551D (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_setP2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_setP2)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoSGBM_getMode(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoSGBM_getMode_m4877DC6FB757895ADBC5F063EDC974DB75790FE2 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_getMode", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_getMode)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoSGBM_setMode(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoSGBM_setMode_m5AE2DB3D51EDCDCCD73479B23673FBA7F5812763 (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_setMode", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_setMode)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_setNumThreads(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_setNumThreads_m2C2F7CA35ECA50F6E2A2F22EF4B1D6ECB4DFD9E3 (int32_t ___nthreads0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_setNumThreads", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_setNumThreads)(___nthreads0);
	#else
	il2cppPInvokeFunc(___nthreads0);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::core_getNumThreads()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_getNumThreads_m140AEE50A6F72945B2780EFFE0AEB5D797CAF55A (const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_getNumThreads", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_getNumThreads)();
	#else
	int32_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_getThreadNum()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_getThreadNum_mC383C98297A86D27AC424729B8C1A6AB25FC03CC (const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_getThreadNum", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_getThreadNum)();
	#else
	int32_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_getBuildInformation(System.Text.StringBuilder,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_getBuildInformation_mBC0436473E3940E081EFABE2119BCF7AF0337140 (StringBuilder_t* ___buf0, int32_t ___maxLength1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_getBuildInformation", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___buf0' to native representation
	char* ____buf0_marshaled = NULL;
	____buf0_marshaled = il2cpp_codegen_marshal_string_builder(___buf0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_getBuildInformation)(____buf0_marshaled, ___maxLength1);
	#else
	il2cppPInvokeFunc(____buf0_marshaled, ___maxLength1);
	#endif

	// Marshaling of parameter '___buf0' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___buf0, ____buf0_marshaled);

	// Marshaling cleanup of parameter '___buf0' native representation
	il2cpp_codegen_marshal_free(____buf0_marshaled);
	____buf0_marshaled = NULL;

}
// System.Int32 OpenCvSharp.NativeMethods::core_getBuildInformation_length()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_getBuildInformation_length_m3D848A70859A87C5F33474FA7753AF52031F63E6 (const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_getBuildInformation_length", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_getBuildInformation_length)();
	#else
	int32_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Int64 OpenCvSharp.NativeMethods::core_getTickCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int64_t NativeMethods_core_getTickCount_m3D6ED15F132A7A7B029F44D17574884E69828A0C (const RuntimeMethod* method) 
{
	typedef int64_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_getTickCount", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int64_t returnValue = reinterpret_cast<PInvokeFunc>(core_getTickCount)();
	#else
	int64_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::core_getTickFrequency()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_getTickFrequency_mE91DC352758250A7F44D67C86D689E535C5273CC (const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_getTickFrequency", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_getTickFrequency)();
	#else
	double returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Int64 OpenCvSharp.NativeMethods::core_getCPUTickCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int64_t NativeMethods_core_getCPUTickCount_mDB772CF3AF754B5C0B57D05120279D731927171F (const RuntimeMethod* method) 
{
	typedef int64_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_getCPUTickCount", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int64_t returnValue = reinterpret_cast<PInvokeFunc>(core_getCPUTickCount)();
	#else
	int64_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_checkHardwareSupport(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_checkHardwareSupport_m09E4982F1F517A6FDDBADE0E6ABC7439E4D88808 (int32_t ___feature0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_checkHardwareSupport", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_checkHardwareSupport)(___feature0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___feature0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_getNumberOfCPUs()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_getNumberOfCPUs_m508323436FC314EE8E61A4334E92FD5FB1988AE0 (const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_getNumberOfCPUs", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_getNumberOfCPUs)();
	#else
	int32_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_fastMalloc(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_fastMalloc_m4ECD274BACD065647BCF2220A41E08170A5A6623 (intptr_t ___bufSize0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_fastMalloc", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_fastMalloc)(___bufSize0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___bufSize0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_fastFree(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_fastFree_m411D99853F90E277151AF50B6AA2E0089EFD628B (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_fastFree", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_fastFree)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_setUseOptimized(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_setUseOptimized_m8AC8403ECC8175083C6FB405A717F454783CF34D (int32_t ___onoff0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_setUseOptimized", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_setUseOptimized)(___onoff0);
	#else
	il2cppPInvokeFunc(___onoff0);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::core_useOptimized()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_useOptimized_m54BA463427A06C7034A98DEB87AFD36DD1D7857F (const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_useOptimized", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_useOptimized)();
	#else
	int32_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::redirectError(OpenCvSharp.CvErrorCallback,System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_redirectError_m06C82E765CF74E3834D98EF8F7CAB1CCA6440233 (CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* ___errCallback0, intptr_t ___userdata1, intptr_t* ___prevUserdata2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Il2CppMethodPointer, intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "redirectError", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___errCallback0' to native representation
	Il2CppMethodPointer ____errCallback0_marshaled = NULL;
	____errCallback0_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___errCallback0));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(redirectError)(____errCallback0_marshaled, ___userdata1, ___prevUserdata2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____errCallback0_marshaled, ___userdata1, ___prevUserdata2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_cvarrToMat(System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_cvarrToMat_mE9771BA4E9CE6469CBC239B66A611F6E1BC70F57 (intptr_t ___arr0, int32_t ___copyData1, int32_t ___allowND2, int32_t ___coiMode3, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_cvarrToMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_cvarrToMat)(___arr0, ___copyData1, ___allowND2, ___coiMode3);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___arr0, ___copyData1, ___allowND2, ___coiMode3);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_extractImageCOI(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_extractImageCOI_m81143B19F0F38DB84538F2EA83FB63BBB4F5E4B3 (intptr_t ___arr0, intptr_t ___coiimg1, int32_t ___coi2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_extractImageCOI", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_extractImageCOI)(___arr0, ___coiimg1, ___coi2);
	#else
	il2cppPInvokeFunc(___arr0, ___coiimg1, ___coi2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_insertImageCOI(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_insertImageCOI_m232E2757AA300D1B09F176EDA187846C6CAD94C8 (intptr_t ___coiimg0, intptr_t ___arr1, int32_t ___coi2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_insertImageCOI", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_insertImageCOI)(___coiimg0, ___arr1, ___coi2);
	#else
	il2cppPInvokeFunc(___coiimg0, ___arr1, ___coi2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_add(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_add_m58BD59AC8ABC1F7BF0A3B37EEAF6FA048B09D68C (intptr_t ___src10, intptr_t ___src21, intptr_t ___dst2, intptr_t ___mask3, int32_t ___dtype4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_add", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_add)(___src10, ___src21, ___dst2, ___mask3, ___dtype4);
	#else
	il2cppPInvokeFunc(___src10, ___src21, ___dst2, ___mask3, ___dtype4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_subtract(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_subtract_mF7EE612DCE61D900D244FA9E2ACC77F3E423E761 (intptr_t ___src10, intptr_t ___src21, intptr_t ___dst2, intptr_t ___mask3, int32_t ___dtype4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_subtract", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_subtract)(___src10, ___src21, ___dst2, ___mask3, ___dtype4);
	#else
	il2cppPInvokeFunc(___src10, ___src21, ___dst2, ___mask3, ___dtype4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_multiply(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_multiply_mAB717E98F27DB4138E74E6D7A8DF864F64AD4ED8 (intptr_t ___src10, intptr_t ___src21, intptr_t ___dst2, double ___scale3, int32_t ___dtype4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_multiply", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_multiply)(___src10, ___src21, ___dst2, ___scale3, ___dtype4);
	#else
	il2cppPInvokeFunc(___src10, ___src21, ___dst2, ___scale3, ___dtype4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_divide(System.Double,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_divide_m81D44545E44CD59AA5147EC49050C891722922DA (double ___scale0, intptr_t ___src21, intptr_t ___dst2, int32_t ___dtype3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (double, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_divide1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_divide1)(___scale0, ___src21, ___dst2, ___dtype3);
	#else
	il2cppPInvokeFunc(___scale0, ___src21, ___dst2, ___dtype3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_divide(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_divide_m205F96DAA9A4DC24A3CB1C449E2361E6B02F677C (intptr_t ___src10, intptr_t ___src21, intptr_t ___dst2, double ___scale3, int32_t ___dtype4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_divide2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_divide2)(___src10, ___src21, ___dst2, ___scale3, ___dtype4);
	#else
	il2cppPInvokeFunc(___src10, ___src21, ___dst2, ___scale3, ___dtype4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_scaleAdd(System.IntPtr,System.Double,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_scaleAdd_m2DB9C744FF014BF4C9F74970D57B60060785AE25 (intptr_t ___src10, double ___alpha1, intptr_t ___src22, intptr_t ___dst3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_scaleAdd", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_scaleAdd)(___src10, ___alpha1, ___src22, ___dst3);
	#else
	il2cppPInvokeFunc(___src10, ___alpha1, ___src22, ___dst3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_addWeighted(System.IntPtr,System.Double,System.IntPtr,System.Double,System.Double,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_addWeighted_m7F36F9B48C6B2CF086EC7550B2632C80318D8B81 (intptr_t ___src10, double ___alpha1, intptr_t ___src22, double ___beta3, double ___gamma4, intptr_t ___dst5, int32_t ___dtype6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double, intptr_t, double, double, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double) + sizeof(intptr_t) + sizeof(double) + sizeof(double) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_addWeighted", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_addWeighted)(___src10, ___alpha1, ___src22, ___beta3, ___gamma4, ___dst5, ___dtype6);
	#else
	il2cppPInvokeFunc(___src10, ___alpha1, ___src22, ___beta3, ___gamma4, ___dst5, ___dtype6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_convertScaleAbs(System.IntPtr,System.IntPtr,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_convertScaleAbs_mE63029AC6B8D87024E9B56BC1C4D4982615AFA51 (intptr_t ___src0, intptr_t ___dst1, double ___alpha2, double ___beta3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_convertScaleAbs", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_convertScaleAbs)(___src0, ___dst1, ___alpha2, ___beta3);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___alpha2, ___beta3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_LUT(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_LUT_mDC9F8E4245F1FD6A831182398781C1FB29299394 (intptr_t ___src0, intptr_t ___lut1, intptr_t ___dst2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_LUT", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_LUT)(___src0, ___lut1, ___dst2);
	#else
	il2cppPInvokeFunc(___src0, ___lut1, ___dst2);
	#endif

}
// OpenCvSharp.Scalar OpenCvSharp.NativeMethods::core_sum(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 NativeMethods_core_sum_mEC0767340945F524914BC68B1162F9BBC5A9C2F7 (intptr_t ___src0, const RuntimeMethod* method) 
{
	typedef Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_sum", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 returnValue = reinterpret_cast<PInvokeFunc>(core_sum)(___src0);
	#else
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 returnValue = il2cppPInvokeFunc(___src0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_countNonZero(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_countNonZero_m1A2D5AE2C764F90FFF1DF65CABB03C70581BDB7C (intptr_t ___src0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_countNonZero", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_countNonZero)(___src0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___src0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_findNonZero(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_findNonZero_m95BDBC8BF22E18664C4DB492D65B42D32CC9A4C3 (intptr_t ___src0, intptr_t ___idx1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_findNonZero", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_findNonZero)(___src0, ___idx1);
	#else
	il2cppPInvokeFunc(___src0, ___idx1);
	#endif

}
// OpenCvSharp.Scalar OpenCvSharp.NativeMethods::core_mean(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 NativeMethods_core_mean_m6E95E01C33F908BDA92BADE1FDE6175FFA6A29D2 (intptr_t ___src0, intptr_t ___mask1, const RuntimeMethod* method) 
{
	typedef Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_mean", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 returnValue = reinterpret_cast<PInvokeFunc>(core_mean)(___src0, ___mask1);
	#else
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 returnValue = il2cppPInvokeFunc(___src0, ___mask1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_meanStdDev_OutputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_meanStdDev_OutputArray_mC8CC0E43D967AB0C1665425EF1C668D8652DF2C9 (intptr_t ___src0, intptr_t ___mean1, intptr_t ___stddev2, intptr_t ___mask3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_meanStdDev_OutputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_meanStdDev_OutputArray)(___src0, ___mean1, ___stddev2, ___mask3);
	#else
	il2cppPInvokeFunc(___src0, ___mean1, ___stddev2, ___mask3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_meanStdDev_Scalar(System.IntPtr,OpenCvSharp.Scalar&,OpenCvSharp.Scalar&,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_meanStdDev_Scalar_mF6C8D2E3C069EE6A345EFB60DE14D13E17CB13F0 (intptr_t ___src0, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3* ___mean1, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3* ___stddev2, intptr_t ___mask3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3*, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3*) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_meanStdDev_Scalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_meanStdDev_Scalar)(___src0, ___mean1, ___stddev2, ___mask3);
	#else
	il2cppPInvokeFunc(___src0, ___mean1, ___stddev2, ___mask3);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::core_norm(System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_norm_m86755F0EB4FF64155CC9F4E097498F41A758AB6E (intptr_t ___src10, int32_t ___normType1, intptr_t ___mask2, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_norm1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_norm1)(___src10, ___normType1, ___mask2);
	#else
	double returnValue = il2cppPInvokeFunc(___src10, ___normType1, ___mask2);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::core_norm(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_norm_mB752B5E34E116A81CE9EC91A4C74A441DB835B4A (intptr_t ___src10, intptr_t ___src21, int32_t ___normType2, intptr_t ___mask3, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_norm2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_norm2)(___src10, ___src21, ___normType2, ___mask3);
	#else
	double returnValue = il2cppPInvokeFunc(___src10, ___src21, ___normType2, ___mask3);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_batchDistance(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_batchDistance_m6C1CC239B88704B09F63EE629347DB7CE9FCB245 (intptr_t ___src10, intptr_t ___src21, intptr_t ___dist2, int32_t ___dtype3, intptr_t ___nidx4, int32_t ___normType5, int32_t ___k6, intptr_t ___mask7, int32_t ___update8, int32_t ___crosscheck9, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, intptr_t, int32_t, int32_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_batchDistance", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_batchDistance)(___src10, ___src21, ___dist2, ___dtype3, ___nidx4, ___normType5, ___k6, ___mask7, ___update8, ___crosscheck9);
	#else
	il2cppPInvokeFunc(___src10, ___src21, ___dist2, ___dtype3, ___nidx4, ___normType5, ___k6, ___mask7, ___update8, ___crosscheck9);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_normalize(System.IntPtr,System.IntPtr,System.Double,System.Double,System.Int32,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_normalize_m310344D9E20FA12FC7D1DA3E437F37EB0C33EACC (intptr_t ___src0, intptr_t ___dst1, double ___alpha2, double ___beta3, int32_t ___normType4, int32_t ___dtype5, intptr_t ___mask6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, double, int32_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_normalize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_normalize)(___src0, ___dst1, ___alpha2, ___beta3, ___normType4, ___dtype5, ___mask6);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___alpha2, ___beta3, ___normType4, ___dtype5, ___mask6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_minMaxLoc(System.IntPtr,System.Double&,System.Double&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_minMaxLoc_m6C0E3CE882019FD3B02271F69B6754F91B39A179 (intptr_t ___src0, double* ___minVal1, double* ___maxVal2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double*, double*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double*) + sizeof(double*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_minMaxLoc1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_minMaxLoc1)(___src0, ___minVal1, ___maxVal2);
	#else
	il2cppPInvokeFunc(___src0, ___minVal1, ___maxVal2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_minMaxLoc(System.IntPtr,System.Double&,System.Double&,OpenCvSharp.Point&,OpenCvSharp.Point&,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_minMaxLoc_mCBDE8586D2B3548F6CE10D17702BC8E0338D2936 (intptr_t ___src0, double* ___minVal1, double* ___maxVal2, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ___minLoc3, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ___maxLoc4, intptr_t ___mask5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double*, double*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double*) + sizeof(double*) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_minMaxLoc2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_minMaxLoc2)(___src0, ___minVal1, ___maxVal2, ___minLoc3, ___maxLoc4, ___mask5);
	#else
	il2cppPInvokeFunc(___src0, ___minVal1, ___maxVal2, ___minLoc3, ___maxLoc4, ___mask5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_minMaxIdx(System.IntPtr,System.Double&,System.Double&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_minMaxIdx_m6DEBE2BCF48E932CB857304B321A6D0350E2B346 (intptr_t ___src0, double* ___minVal1, double* ___maxVal2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double*, double*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double*) + sizeof(double*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_minMaxIdx1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_minMaxIdx1)(___src0, ___minVal1, ___maxVal2);
	#else
	il2cppPInvokeFunc(___src0, ___minVal1, ___maxVal2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_minMaxIdx(System.IntPtr,System.Double&,System.Double&,System.Int32&,System.Int32&,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_minMaxIdx_m12548A33B394A2725FECB571E11D3CE8643EB9A7 (intptr_t ___src0, double* ___minVal1, double* ___maxVal2, int32_t* ___minIdx3, int32_t* ___maxIdx4, intptr_t ___mask5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double*, double*, int32_t*, int32_t*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double*) + sizeof(double*) + sizeof(int32_t*) + sizeof(int32_t*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_minMaxIdx2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_minMaxIdx2)(___src0, ___minVal1, ___maxVal2, ___minIdx3, ___maxIdx4, ___mask5);
	#else
	il2cppPInvokeFunc(___src0, ___minVal1, ___maxVal2, ___minIdx3, ___maxIdx4, ___mask5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_reduce(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_reduce_mDB6151AE3E3B0C824AC617620AB2F0851CA1A1A3 (intptr_t ___src0, intptr_t ___dst1, int32_t ___dim2, int32_t ___rtype3, int32_t ___dtype4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_reduce", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_reduce)(___src0, ___dst1, ___dim2, ___rtype3, ___dtype4);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___dim2, ___rtype3, ___dtype4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_merge(System.IntPtr[],System.UInt32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_merge_m4B878108EEA1D30AA1B4A75116F396B1AB0996E0 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___mv0, uint32_t ___count1, intptr_t ___dst2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, uint32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(uint32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_merge", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___mv0' to native representation
	intptr_t* ____mv0_marshaled = NULL;
	if (___mv0 != NULL)
	{
		____mv0_marshaled = reinterpret_cast<intptr_t*>((___mv0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_merge)(____mv0_marshaled, ___count1, ___dst2);
	#else
	il2cppPInvokeFunc(____mv0_marshaled, ___count1, ___dst2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_split(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_split_mDAD12E80B66A515458EAF06BFA3CB59A3EED37D6 (intptr_t ___src0, intptr_t* ___mv1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_split", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_split)(___src0, ___mv1);
	#else
	il2cppPInvokeFunc(___src0, ___mv1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_mixChannels(System.IntPtr[],System.UInt32,System.IntPtr[],System.UInt32,System.Int32[],System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_mixChannels_mE596887B07107F22D4BD2F20F6D952EB87A7C8B2 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___src0, uint32_t ___nsrcs1, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___dst2, uint32_t ___ndsts3, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___fromTo4, uint32_t ___npairs5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, uint32_t, intptr_t*, uint32_t, int32_t*, uint32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(uint32_t) + sizeof(void*) + sizeof(uint32_t) + sizeof(void*) + sizeof(uint32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_mixChannels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___src0' to native representation
	intptr_t* ____src0_marshaled = NULL;
	if (___src0 != NULL)
	{
		____src0_marshaled = reinterpret_cast<intptr_t*>((___src0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___dst2' to native representation
	intptr_t* ____dst2_marshaled = NULL;
	if (___dst2 != NULL)
	{
		____dst2_marshaled = reinterpret_cast<intptr_t*>((___dst2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___fromTo4' to native representation
	int32_t* ____fromTo4_marshaled = NULL;
	if (___fromTo4 != NULL)
	{
		____fromTo4_marshaled = reinterpret_cast<int32_t*>((___fromTo4)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_mixChannels)(____src0_marshaled, ___nsrcs1, ____dst2_marshaled, ___ndsts3, ____fromTo4_marshaled, ___npairs5);
	#else
	il2cppPInvokeFunc(____src0_marshaled, ___nsrcs1, ____dst2_marshaled, ___ndsts3, ____fromTo4_marshaled, ___npairs5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_extractChannel(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_extractChannel_m3A37E519250C6C8D260FCC47992F1B0D6CE0133D (intptr_t ___src0, intptr_t ___dst1, int32_t ___coi2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_extractChannel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_extractChannel)(___src0, ___dst1, ___coi2);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___coi2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_insertChannel(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_insertChannel_mE00D11B39D086C2497CEF24ACCE1892C68D23D4D (intptr_t ___src0, intptr_t ___dst1, int32_t ___coi2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_insertChannel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_insertChannel)(___src0, ___dst1, ___coi2);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___coi2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_flip(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_flip_mDB12B7DFA752E2096ED7CC184257C07DBDD91091 (intptr_t ___src0, intptr_t ___dst1, int32_t ___flipCode2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_flip", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_flip)(___src0, ___dst1, ___flipCode2);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___flipCode2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_rotate(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_rotate_mE0A8E8CAF6501D7259A35E80557E9AD49BC3D1C0 (intptr_t ___src0, intptr_t ___dst1, int32_t ___code2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_rotate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_rotate)(___src0, ___dst1, ___code2);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___code2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_repeat(System.IntPtr,System.Int32,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_repeat_m6CA4D2C29B3C4127F2B59F50C9407BEB0DABCEFC (intptr_t ___src0, int32_t ___ny1, int32_t ___nx2, intptr_t ___dst3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_repeat1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_repeat1)(___src0, ___ny1, ___nx2, ___dst3);
	#else
	il2cppPInvokeFunc(___src0, ___ny1, ___nx2, ___dst3);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_repeat(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_repeat_m83790DF2AE03151B01161439044F67D17BFCF86C (intptr_t ___src0, int32_t ___ny1, int32_t ___nx2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_repeat2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_repeat2)(___src0, ___ny1, ___nx2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___src0, ___ny1, ___nx2);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_hconcat(System.IntPtr[],System.UInt32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_hconcat_m968C38D1CE00717FB1160555A05F7A186AE26C7E (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___src0, uint32_t ___nsrc1, intptr_t ___dst2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, uint32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(uint32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_hconcat1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___src0' to native representation
	intptr_t* ____src0_marshaled = NULL;
	if (___src0 != NULL)
	{
		____src0_marshaled = reinterpret_cast<intptr_t*>((___src0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_hconcat1)(____src0_marshaled, ___nsrc1, ___dst2);
	#else
	il2cppPInvokeFunc(____src0_marshaled, ___nsrc1, ___dst2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_hconcat(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_hconcat_m76BD3A806FC65BD2647FE2339039EC97506B00A3 (intptr_t ___src10, intptr_t ___src21, intptr_t ___dst2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_hconcat2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_hconcat2)(___src10, ___src21, ___dst2);
	#else
	il2cppPInvokeFunc(___src10, ___src21, ___dst2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_vconcat(System.IntPtr[],System.UInt32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_vconcat_mF6A49177DC71841A361B0412B1B1F8B232009DBE (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___src0, uint32_t ___nsrc1, intptr_t ___dst2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, uint32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(uint32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_vconcat1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___src0' to native representation
	intptr_t* ____src0_marshaled = NULL;
	if (___src0 != NULL)
	{
		____src0_marshaled = reinterpret_cast<intptr_t*>((___src0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_vconcat1)(____src0_marshaled, ___nsrc1, ___dst2);
	#else
	il2cppPInvokeFunc(____src0_marshaled, ___nsrc1, ___dst2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_vconcat(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_vconcat_m7A3150A1D0BACCBB0D131383E806015CE24B756E (intptr_t ___src10, intptr_t ___src21, intptr_t ___dst2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_vconcat2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_vconcat2)(___src10, ___src21, ___dst2);
	#else
	il2cppPInvokeFunc(___src10, ___src21, ___dst2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_bitwise_and(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_bitwise_and_mB79EBF0DBD9B4F1C0A147D530A0B918140F2C620 (intptr_t ___src10, intptr_t ___src21, intptr_t ___dst2, intptr_t ___mask3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_bitwise_and", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_bitwise_and)(___src10, ___src21, ___dst2, ___mask3);
	#else
	il2cppPInvokeFunc(___src10, ___src21, ___dst2, ___mask3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_bitwise_or(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_bitwise_or_mDB81A7D3E8E90CA391AB25123E03B4BB887E8B92 (intptr_t ___src10, intptr_t ___src21, intptr_t ___dst2, intptr_t ___mask3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_bitwise_or", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_bitwise_or)(___src10, ___src21, ___dst2, ___mask3);
	#else
	il2cppPInvokeFunc(___src10, ___src21, ___dst2, ___mask3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_bitwise_xor(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_bitwise_xor_m4A24B8DD059573C05EF29262D7C45E5FDC38C42F (intptr_t ___src10, intptr_t ___src21, intptr_t ___dst2, intptr_t ___mask3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_bitwise_xor", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_bitwise_xor)(___src10, ___src21, ___dst2, ___mask3);
	#else
	il2cppPInvokeFunc(___src10, ___src21, ___dst2, ___mask3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_bitwise_not(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_bitwise_not_m133686E7609EA0C39CCB19727E0E34D1D3498657 (intptr_t ___src0, intptr_t ___dst1, intptr_t ___mask2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_bitwise_not", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_bitwise_not)(___src0, ___dst1, ___mask2);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___mask2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_absdiff(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_absdiff_mBB4555D4182E9707076351FBA501B87F8087C93A (intptr_t ___src10, intptr_t ___src21, intptr_t ___dst2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_absdiff", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_absdiff)(___src10, ___src21, ___dst2);
	#else
	il2cppPInvokeFunc(___src10, ___src21, ___dst2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_inRange(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_inRange_m55FB3ED2E60BA4BA29AE3553E3B4546468395538 (intptr_t ___src0, intptr_t ___lowerb1, intptr_t ___upperb2, intptr_t ___dst3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_inRange_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_inRange_InputArray)(___src0, ___lowerb1, ___upperb2, ___dst3);
	#else
	il2cppPInvokeFunc(___src0, ___lowerb1, ___upperb2, ___dst3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_inRange(System.IntPtr,OpenCvSharp.Scalar,OpenCvSharp.Scalar,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_inRange_m7A6914FE1C35E3F4334E60ADE6E7371154166A52 (intptr_t ___src0, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___lowerb1, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___upperb2, intptr_t ___dst3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_inRange_Scalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_inRange_Scalar)(___src0, ___lowerb1, ___upperb2, ___dst3);
	#else
	il2cppPInvokeFunc(___src0, ___lowerb1, ___upperb2, ___dst3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_compare(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_compare_m6C36B9ED38F6D96FD5918150ABA48FCEC94B5B9D (intptr_t ___src10, intptr_t ___src21, intptr_t ___dst2, int32_t ___cmpop3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_compare", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_compare)(___src10, ___src21, ___dst2, ___cmpop3);
	#else
	il2cppPInvokeFunc(___src10, ___src21, ___dst2, ___cmpop3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_min1(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_min1_m276555DFA11B56186B1A03BCA7450B6E53B8B16D (intptr_t ___src10, intptr_t ___src21, intptr_t ___dst2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_min1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_min1)(___src10, ___src21, ___dst2);
	#else
	il2cppPInvokeFunc(___src10, ___src21, ___dst2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_max1(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_max1_mBB9D5A307F173796C025B58C1E818B3EECE71DAC (intptr_t ___src10, intptr_t ___src21, intptr_t ___dst2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_max1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_max1)(___src10, ___src21, ___dst2);
	#else
	il2cppPInvokeFunc(___src10, ___src21, ___dst2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_min_MatMat(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_min_MatMat_m1242A141AB6D0819420B99F78E38C4107B9A25D8 (intptr_t ___src10, intptr_t ___src21, intptr_t ___dst2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_min_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_min_MatMat)(___src10, ___src21, ___dst2);
	#else
	il2cppPInvokeFunc(___src10, ___src21, ___dst2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_min_MatDouble(System.IntPtr,System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_min_MatDouble_m94E1D1A75F471C4FA8FFD0FCA247DA1B835057C9 (intptr_t ___src10, double ___src21, intptr_t ___dst2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_min_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_min_MatDouble)(___src10, ___src21, ___dst2);
	#else
	il2cppPInvokeFunc(___src10, ___src21, ___dst2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_max_MatMat(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_max_MatMat_mF8441EDF595ACC2BE95BD0DAA49E22C01693A8ED (intptr_t ___src10, intptr_t ___src21, intptr_t ___dst2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_max_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_max_MatMat)(___src10, ___src21, ___dst2);
	#else
	il2cppPInvokeFunc(___src10, ___src21, ___dst2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_max_MatDouble(System.IntPtr,System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_max_MatDouble_m610BF75D96039D4A7DA43DFF45A0FE4B62F21CEA (intptr_t ___src10, double ___src21, intptr_t ___dst2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_max_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_max_MatDouble)(___src10, ___src21, ___dst2);
	#else
	il2cppPInvokeFunc(___src10, ___src21, ___dst2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_sqrt(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_sqrt_m60800399D0FAF71F7A27D35B1090B9E70753E4F0 (intptr_t ___src0, intptr_t ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_sqrt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_sqrt)(___src0, ___dst1);
	#else
	il2cppPInvokeFunc(___src0, ___dst1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_pow_Mat(System.IntPtr,System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_pow_Mat_mF69D47597F1848A8890FA225F41709EC1802AB34 (intptr_t ___src0, double ___power1, intptr_t ___dst2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_pow_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_pow_Mat)(___src0, ___power1, ___dst2);
	#else
	il2cppPInvokeFunc(___src0, ___power1, ___dst2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_exp_Mat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_exp_Mat_m51B4D5517D8BEC4EFCB0C3ECC85475C2B57DEB2E (intptr_t ___src0, intptr_t ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_exp_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_exp_Mat)(___src0, ___dst1);
	#else
	il2cppPInvokeFunc(___src0, ___dst1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_log_Mat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_log_Mat_mB6617DC55B9E5C3D3C325899696FFC99461643FE (intptr_t ___src0, intptr_t ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_log_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_log_Mat)(___src0, ___dst1);
	#else
	il2cppPInvokeFunc(___src0, ___dst1);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::core_cubeRoot(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_core_cubeRoot_m865874ADBAB3942E8320409C14C909AA8431559C (float ___val0, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_cubeRoot", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(core_cubeRoot)(___val0);
	#else
	float returnValue = il2cppPInvokeFunc(___val0);
	#endif

	return returnValue;
}
// System.Single OpenCvSharp.NativeMethods::core_fastAtan2(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_core_fastAtan2_mF4E8D50F53A7DF7DFDC0166CC57C16B55609C5E9 (float ___y0, float ___x1, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (float, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_fastAtan2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(core_fastAtan2)(___y0, ___x1);
	#else
	float returnValue = il2cppPInvokeFunc(___y0, ___x1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_polarToCart(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_polarToCart_m21455650CA895AADB1070C24CB310F470DD735CC (intptr_t ___magnitude0, intptr_t ___angle1, intptr_t ___x2, intptr_t ___y3, int32_t ___angleInDegrees4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_polarToCart", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_polarToCart)(___magnitude0, ___angle1, ___x2, ___y3, ___angleInDegrees4);
	#else
	il2cppPInvokeFunc(___magnitude0, ___angle1, ___x2, ___y3, ___angleInDegrees4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_cartToPolar(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_cartToPolar_m53BA1C6A15E74A1666B080AD934CA06B545FA5F1 (intptr_t ___x0, intptr_t ___y1, intptr_t ___magnitude2, intptr_t ___angle3, int32_t ___angleInDegrees4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_cartToPolar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_cartToPolar)(___x0, ___y1, ___magnitude2, ___angle3, ___angleInDegrees4);
	#else
	il2cppPInvokeFunc(___x0, ___y1, ___magnitude2, ___angle3, ___angleInDegrees4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_phase(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_phase_mB2D6D3B4E4321BBA3CBBD91D162FCE10E8C51BD0 (intptr_t ___x0, intptr_t ___y1, intptr_t ___angle2, int32_t ___angleInDegrees3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_phase", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_phase)(___x0, ___y1, ___angle2, ___angleInDegrees3);
	#else
	il2cppPInvokeFunc(___x0, ___y1, ___angle2, ___angleInDegrees3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_magnitude_Mat(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_magnitude_Mat_m2D5EB3DAE386900D1F1CCF4EA620949E180D066F (intptr_t ___x0, intptr_t ___y1, intptr_t ___magnitude2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_magnitude_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_magnitude_Mat)(___x0, ___y1, ___magnitude2);
	#else
	il2cppPInvokeFunc(___x0, ___y1, ___magnitude2);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::core_checkRange(System.IntPtr,System.Int32,OpenCvSharp.Point&,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_checkRange_m44E9AAFD29A1AB488C9C0FB4903E12F567B9A061 (intptr_t ___a0, int32_t ___quiet1, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ___pos2, double ___minVal3, double ___maxVal4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_checkRange", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_checkRange)(___a0, ___quiet1, ___pos2, ___minVal3, ___maxVal4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___a0, ___quiet1, ___pos2, ___minVal3, ___maxVal4);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_patchNaNs(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_patchNaNs_m9EFD7DA373A5C70052850F37D45A694A46BCB54D (intptr_t ___a0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_patchNaNs", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_patchNaNs)(___a0, ___val1);
	#else
	il2cppPInvokeFunc(___a0, ___val1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_gemm(System.IntPtr,System.IntPtr,System.Double,System.IntPtr,System.Double,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_gemm_m0A847B2B4DA8F223557862D311292DC319010168 (intptr_t ___src10, intptr_t ___src21, double ___alpha2, intptr_t ___src33, double ___gamma4, intptr_t ___dst5, int32_t ___flags6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, intptr_t, double, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(intptr_t) + sizeof(double) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_gemm", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_gemm)(___src10, ___src21, ___alpha2, ___src33, ___gamma4, ___dst5, ___flags6);
	#else
	il2cppPInvokeFunc(___src10, ___src21, ___alpha2, ___src33, ___gamma4, ___dst5, ___flags6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_mulTransposed(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_mulTransposed_m568E1E5ED91913CACFF8721B3ABCB6AC727B2C92 (intptr_t ___src0, intptr_t ___dst1, int32_t ___aTa2, intptr_t ___delta3, double ___scale4, int32_t ___dtype5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_mulTransposed", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_mulTransposed)(___src0, ___dst1, ___aTa2, ___delta3, ___scale4, ___dtype5);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___aTa2, ___delta3, ___scale4, ___dtype5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_transpose(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_transpose_m6604A735C8E7410577E1CB12C1FAF0502165DE9F (intptr_t ___src0, intptr_t ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_transpose", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_transpose)(___src0, ___dst1);
	#else
	il2cppPInvokeFunc(___src0, ___dst1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_transform(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_transform_m419616AA2865BD67E2BD7D2130D73FE84E607FB9 (intptr_t ___src0, intptr_t ___dst1, intptr_t ___m2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_transform", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_transform)(___src0, ___dst1, ___m2);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___m2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_perspectiveTransform(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_perspectiveTransform_m80A198D28B906301430B5743C5D7F1215DD4C75E (intptr_t ___src0, intptr_t ___dst1, intptr_t ___m2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_perspectiveTransform", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_perspectiveTransform)(___src0, ___dst1, ___m2);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___m2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_perspectiveTransform_Mat(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_perspectiveTransform_Mat_mEDDD1C0149FB6B4DCFFA7FEE67E1C4FEDEECAFD8 (intptr_t ___src0, intptr_t ___dst1, intptr_t ___m2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_perspectiveTransform_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_perspectiveTransform_Mat)(___src0, ___dst1, ___m2);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___m2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_perspectiveTransform_Point2f(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_perspectiveTransform_Point2f_mFE9809EB91F15D3079AAC5DB1B05EA3024949531 (intptr_t ___src0, int32_t ___srcLength1, intptr_t ___dst2, int32_t ___dstLength3, intptr_t ___m4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_perspectiveTransform_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_perspectiveTransform_Point2f)(___src0, ___srcLength1, ___dst2, ___dstLength3, ___m4);
	#else
	il2cppPInvokeFunc(___src0, ___srcLength1, ___dst2, ___dstLength3, ___m4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_perspectiveTransform_Point2d(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_perspectiveTransform_Point2d_m32264A9377A129E79A0A67E5810C221A39985727 (intptr_t ___src0, int32_t ___srcLength1, intptr_t ___dst2, int32_t ___dstLength3, intptr_t ___m4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_perspectiveTransform_Point2d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_perspectiveTransform_Point2d)(___src0, ___srcLength1, ___dst2, ___dstLength3, ___m4);
	#else
	il2cppPInvokeFunc(___src0, ___srcLength1, ___dst2, ___dstLength3, ___m4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_perspectiveTransform_Point3f(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_perspectiveTransform_Point3f_m596CD8670CDF80153A23464405ED339C0887A8A9 (intptr_t ___src0, int32_t ___srcLength1, intptr_t ___dst2, int32_t ___dstLength3, intptr_t ___m4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_perspectiveTransform_Point3f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_perspectiveTransform_Point3f)(___src0, ___srcLength1, ___dst2, ___dstLength3, ___m4);
	#else
	il2cppPInvokeFunc(___src0, ___srcLength1, ___dst2, ___dstLength3, ___m4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_perspectiveTransform_Point3d(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_perspectiveTransform_Point3d_m787BCB7CD478292D7A08F00AB3682D84D7CA4A9B (intptr_t ___src0, int32_t ___srcLength1, intptr_t ___dst2, int32_t ___dstLength3, intptr_t ___m4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_perspectiveTransform_Point3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_perspectiveTransform_Point3d)(___src0, ___srcLength1, ___dst2, ___dstLength3, ___m4);
	#else
	il2cppPInvokeFunc(___src0, ___srcLength1, ___dst2, ___dstLength3, ___m4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_completeSymm(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_completeSymm_mCFA5C863B5A836B8BB1F1EFCD8275E33AE258555 (intptr_t ___mtx0, int32_t ___lowerToUpper1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_completeSymm", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_completeSymm)(___mtx0, ___lowerToUpper1);
	#else
	il2cppPInvokeFunc(___mtx0, ___lowerToUpper1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_setIdentity(System.IntPtr,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_setIdentity_mECBF884795BC1B96081EB4921D94227A63BC463A (intptr_t ___mtx0, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___s1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_setIdentity", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_setIdentity)(___mtx0, ___s1);
	#else
	il2cppPInvokeFunc(___mtx0, ___s1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::core_determinant(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_determinant_m9081C4B114F2E9F52078329B0ED140ECB495FF8E (intptr_t ___mtx0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_determinant", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_determinant)(___mtx0);
	#else
	double returnValue = il2cppPInvokeFunc(___mtx0);
	#endif

	return returnValue;
}
// OpenCvSharp.Scalar OpenCvSharp.NativeMethods::core_trace(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 NativeMethods_core_trace_mA309EA5E73EC4065B4203EAA1F63A2F96E21B869 (intptr_t ___mtx0, const RuntimeMethod* method) 
{
	typedef Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_trace", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 returnValue = reinterpret_cast<PInvokeFunc>(core_trace)(___mtx0);
	#else
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 returnValue = il2cppPInvokeFunc(___mtx0);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::core_invert(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_invert_m38576ECDA50F093FF97645361F0C5280B1CF7B24 (intptr_t ___src0, intptr_t ___dst1, int32_t ___flags2, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_invert", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_invert)(___src0, ___dst1, ___flags2);
	#else
	double returnValue = il2cppPInvokeFunc(___src0, ___dst1, ___flags2);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_solve(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_solve_m44D6290BF3A121969FD6168F49AAB7FF4250C688 (intptr_t ___src10, intptr_t ___src21, intptr_t ___dst2, int32_t ___flags3, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_solve", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_solve)(___src10, ___src21, ___dst2, ___flags3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___src10, ___src21, ___dst2, ___flags3);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_sort(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_sort_m59F22202B27AD847516CAD4222401720B49CB2D1 (intptr_t ___src0, intptr_t ___dst1, int32_t ___flags2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_sort", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_sort)(___src0, ___dst1, ___flags2);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___flags2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_sortIdx(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_sortIdx_mE3E0DB925EC9F7C87F8C1ABC4340D25E2C564C8E (intptr_t ___src0, intptr_t ___dst1, int32_t ___flags2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_sortIdx", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_sortIdx)(___src0, ___dst1, ___flags2);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___flags2);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::core_solveCubic(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_solveCubic_mCF7B89008D26C8F3C9D053EEE58D4FD11137BE83 (intptr_t ___coeffs0, intptr_t ___roots1, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_solveCubic", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_solveCubic)(___coeffs0, ___roots1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___coeffs0, ___roots1);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::core_solvePoly(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_solvePoly_m97457C9A88EB94E8EB3F7D5C125FE975E03144DA (intptr_t ___coeffs0, intptr_t ___roots1, int32_t ___maxIters2, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_solvePoly", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_solvePoly)(___coeffs0, ___roots1, ___maxIters2);
	#else
	double returnValue = il2cppPInvokeFunc(___coeffs0, ___roots1, ___maxIters2);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_eigen(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_eigen_m8C483351DD5D2FB700EA6AD340A63CDC0A533691 (intptr_t ___src0, intptr_t ___eigenvalues1, intptr_t ___eigenvectors2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_eigen", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_eigen)(___src0, ___eigenvalues1, ___eigenvectors2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___src0, ___eigenvalues1, ___eigenvectors2);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_calcCovarMatrix_Mat(System.IntPtr[],System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_calcCovarMatrix_Mat_m6EA2DA99F325C18119FB875B014878075F5805FB (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___samples0, int32_t ___nsamples1, intptr_t ___covar2, intptr_t ___mean3, int32_t ___flags4, int32_t ___ctype5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, int32_t, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_calcCovarMatrix_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___samples0' to native representation
	intptr_t* ____samples0_marshaled = NULL;
	if (___samples0 != NULL)
	{
		____samples0_marshaled = reinterpret_cast<intptr_t*>((___samples0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_calcCovarMatrix_Mat)(____samples0_marshaled, ___nsamples1, ___covar2, ___mean3, ___flags4, ___ctype5);
	#else
	il2cppPInvokeFunc(____samples0_marshaled, ___nsamples1, ___covar2, ___mean3, ___flags4, ___ctype5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_calcCovarMatrix_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_calcCovarMatrix_InputArray_m45EFA7B065DCA671D3D10F043135E81710240535 (intptr_t ___samples0, intptr_t ___covar1, intptr_t ___mean2, int32_t ___flags3, int32_t ___ctype4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_calcCovarMatrix_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_calcCovarMatrix_InputArray)(___samples0, ___covar1, ___mean2, ___flags3, ___ctype4);
	#else
	il2cppPInvokeFunc(___samples0, ___covar1, ___mean2, ___flags3, ___ctype4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_PCACompute(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_PCACompute_m61960F5A963D7746A4AC964F9A6771DFD75BB6C9 (intptr_t ___data0, intptr_t ___mean1, intptr_t ___eigenvectors2, int32_t ___maxComponents3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCACompute", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_PCACompute)(___data0, ___mean1, ___eigenvectors2, ___maxComponents3);
	#else
	il2cppPInvokeFunc(___data0, ___mean1, ___eigenvectors2, ___maxComponents3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_PCAComputeVar(System.IntPtr,System.IntPtr,System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_PCAComputeVar_m322E83499DC113F2C78C2DA7905CA02015240735 (intptr_t ___data0, intptr_t ___mean1, intptr_t ___eigenvectors2, double ___retainedVariance3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCAComputeVar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_PCAComputeVar)(___data0, ___mean1, ___eigenvectors2, ___retainedVariance3);
	#else
	il2cppPInvokeFunc(___data0, ___mean1, ___eigenvectors2, ___retainedVariance3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_PCAProject(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_PCAProject_m4301D62FD9B3B64A71249B4D38E2628F7687E7B1 (intptr_t ___data0, intptr_t ___mean1, intptr_t ___eigenvectors2, intptr_t ___result3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCAProject", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_PCAProject)(___data0, ___mean1, ___eigenvectors2, ___result3);
	#else
	il2cppPInvokeFunc(___data0, ___mean1, ___eigenvectors2, ___result3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_PCABackProject(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_PCABackProject_m51B83C1CFC632E380DB00CB66FBEE7920F5565C6 (intptr_t ___data0, intptr_t ___mean1, intptr_t ___eigenvectors2, intptr_t ___result3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCABackProject", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_PCABackProject)(___data0, ___mean1, ___eigenvectors2, ___result3);
	#else
	il2cppPInvokeFunc(___data0, ___mean1, ___eigenvectors2, ___result3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SVDecomp(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SVDecomp_m9CF9AB12108EAC8A51945AAC4B286E6742F0E3F0 (intptr_t ___src0, intptr_t ___w1, intptr_t ___u2, intptr_t ___vt3, int32_t ___flags4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVDecomp", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SVDecomp)(___src0, ___w1, ___u2, ___vt3, ___flags4);
	#else
	il2cppPInvokeFunc(___src0, ___w1, ___u2, ___vt3, ___flags4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SVBackSubst(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SVBackSubst_m25BFCEDA8C6C46DD096909ED098D67089F5CD350 (intptr_t ___w0, intptr_t ___u1, intptr_t ___vt2, intptr_t ___rhs3, intptr_t ___dst4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVBackSubst", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SVBackSubst)(___w0, ___u1, ___vt2, ___rhs3, ___dst4);
	#else
	il2cppPInvokeFunc(___w0, ___u1, ___vt2, ___rhs3, ___dst4);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::core_Mahalanobis(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_Mahalanobis_mACC565B9C5F2036908D44E83665D58D1317FDDE9 (intptr_t ___v10, intptr_t ___v21, intptr_t ___icovar2, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mahalanobis", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_Mahalanobis)(___v10, ___v21, ___icovar2);
	#else
	double returnValue = il2cppPInvokeFunc(___v10, ___v21, ___icovar2);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_dft(System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_dft_m5F30EFA8D9308B8049AC5C1EB92212530224B23D (intptr_t ___src0, intptr_t ___dst1, int32_t ___flags2, int32_t ___nonzeroRows3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_dft", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_dft)(___src0, ___dst1, ___flags2, ___nonzeroRows3);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___flags2, ___nonzeroRows3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_idft(System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_idft_m2EB928B1123E75000DAEB4C8A7FAA5009ACB114E (intptr_t ___src0, intptr_t ___dst1, int32_t ___flags2, int32_t ___nonzeroRows3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_idft", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_idft)(___src0, ___dst1, ___flags2, ___nonzeroRows3);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___flags2, ___nonzeroRows3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_dct(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_dct_m71DB1BF180476BA494DF999D652141BB511EF913 (intptr_t ___src0, intptr_t ___dst1, int32_t ___flags2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_dct", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_dct)(___src0, ___dst1, ___flags2);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___flags2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_idct(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_idct_m7E8A617EC5D8F0EED81F8EC454844A95E4924D16 (intptr_t ___src0, intptr_t ___dst1, int32_t ___flags2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_idct", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_idct)(___src0, ___dst1, ___flags2);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___flags2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_mulSpectrums(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_mulSpectrums_mDBF170A53C1FDCB34D1C41E3C68CD197B05891E8 (intptr_t ___a0, intptr_t ___b1, intptr_t ___c2, int32_t ___flags3, int32_t ___conjB4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_mulSpectrums", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_mulSpectrums)(___a0, ___b1, ___c2, ___flags3, ___conjB4);
	#else
	il2cppPInvokeFunc(___a0, ___b1, ___c2, ___flags3, ___conjB4);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::core_getOptimalDFTSize(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_getOptimalDFTSize_m4738EA8C5990368F6D8E765D22E4A68B2D57AE24 (int32_t ___vecsize0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_getOptimalDFTSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_getOptimalDFTSize)(___vecsize0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___vecsize0);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::core_kmeans(System.IntPtr,System.Int32,System.IntPtr,OpenCvSharp.TermCriteria,System.Int32,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_kmeans_m202E7CAFA74805F536B0F6DDE0829DF9BE0FEBDB (intptr_t ___data0, int32_t ___k1, intptr_t ___bestLabels2, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___criteria3, int32_t ___attempts4, int32_t ___flags5, intptr_t ___centers6, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, int32_t, intptr_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4, int32_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_kmeans", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_kmeans)(___data0, ___k1, ___bestLabels2, ___criteria3, ___attempts4, ___flags5, ___centers6);
	#else
	double returnValue = il2cppPInvokeFunc(___data0, ___k1, ___bestLabels2, ___criteria3, ___attempts4, ___flags5, ___centers6);
	#endif

	return returnValue;
}
// System.UInt64 OpenCvSharp.NativeMethods::core_theRNG()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t NativeMethods_core_theRNG_m455F5E099D4487D1C5BF2B66ED16B4FEB1AB718C (const RuntimeMethod* method) 
{
	typedef uint64_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_theRNG", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	uint64_t returnValue = reinterpret_cast<PInvokeFunc>(core_theRNG)();
	#else
	uint64_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_randu_InputArray(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_randu_InputArray_mE0F86E17B7878C4A690E653DB1DEF6DC4915A084 (intptr_t ___dst0, intptr_t ___low1, intptr_t ___high2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_randu_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_randu_InputArray)(___dst0, ___low1, ___high2);
	#else
	il2cppPInvokeFunc(___dst0, ___low1, ___high2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_randu_Scalar(System.IntPtr,OpenCvSharp.Scalar,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_randu_Scalar_m1D95145B00DA67F14263B1E6BC3B29E82D679829 (intptr_t ___dst0, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___low1, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___high2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_randu_Scalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_randu_Scalar)(___dst0, ___low1, ___high2);
	#else
	il2cppPInvokeFunc(___dst0, ___low1, ___high2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_randn_InputArray(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_randn_InputArray_m04CEAFD89217CDF621B03E5EA583C03C59649904 (intptr_t ___dst0, intptr_t ___mean1, intptr_t ___stddev2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_randn_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_randn_InputArray)(___dst0, ___mean1, ___stddev2);
	#else
	il2cppPInvokeFunc(___dst0, ___mean1, ___stddev2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_randn_Scalar(System.IntPtr,OpenCvSharp.Scalar,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_randn_Scalar_mE392A111DE67E2727BDEA7543A24945A94E377B4 (intptr_t ___dst0, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___mean1, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___stddev2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_randn_Scalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_randn_Scalar)(___dst0, ___mean1, ___stddev2);
	#else
	il2cppPInvokeFunc(___dst0, ___mean1, ___stddev2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_randShuffle(System.IntPtr,System.Double,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_randShuffle_m8CD5B4BA34977882A1B556B7953E808387537321 (intptr_t ___dst0, double ___iterFactor1, uint64_t* ___rng2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double, uint64_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double) + sizeof(uint64_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_randShuffle", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_randShuffle)(___dst0, ___iterFactor1, ___rng2);
	#else
	il2cppPInvokeFunc(___dst0, ___iterFactor1, ___rng2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_randShuffle(System.IntPtr,System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_randShuffle_m3EA676BD88BD1BD7A0F17ECAF5B6832DF476D166 (intptr_t ___dst0, double ___iterFactor1, intptr_t ___rng2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_randShuffle", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_randShuffle)(___dst0, ___iterFactor1, ___rng2);
	#else
	il2cppPInvokeFunc(___dst0, ___iterFactor1, ___rng2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Algorithm_write(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Algorithm_write_m31C4E5A766AEBFCE6D74A59608F54BA71FDD7DC8 (intptr_t ___obj0, intptr_t ___fs1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Algorithm_write", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Algorithm_write)(___obj0, ___fs1);
	#else
	il2cppPInvokeFunc(___obj0, ___fs1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Algorithm_read(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Algorithm_read_mFBC632DF42C082ED637E4B321FF7FF6957C75946 (intptr_t ___obj0, intptr_t ___fn1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Algorithm_read", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Algorithm_read)(___obj0, ___fn1);
	#else
	il2cppPInvokeFunc(___obj0, ___fn1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::core_Algorithm_empty(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Algorithm_empty_m959DA27DE4BB9AD89BEFC7E476D5DCFFE1B28D0E (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Algorithm_empty", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Algorithm_empty)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_Algorithm_save(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Algorithm_save_mA7877424BD28BE39A142B82E795C9F6EEB3B48DE (intptr_t ___obj0, String_t* ___filename1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Algorithm_save", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___filename1' to native representation
	char* ____filename1_marshaled = NULL;
	____filename1_marshaled = il2cpp_codegen_marshal_string(___filename1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Algorithm_save)(___obj0, ____filename1_marshaled);
	#else
	il2cppPInvokeFunc(___obj0, ____filename1_marshaled);
	#endif

	// Marshaling cleanup of parameter '___filename1' native representation
	il2cpp_codegen_marshal_free(____filename1_marshaled);
	____filename1_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_Algorithm_getDefaultName(System.IntPtr,System.Text.StringBuilder,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Algorithm_getDefaultName_m2E70BF10846A3BFB3B29168564DC62BBB2F56AA3 (intptr_t ___obj0, StringBuilder_t* ___buf1, int32_t ___bufLength2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Algorithm_getDefaultName", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___buf1' to native representation
	char* ____buf1_marshaled = NULL;
	____buf1_marshaled = il2cpp_codegen_marshal_string_builder(___buf1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Algorithm_getDefaultName)(___obj0, ____buf1_marshaled, ___bufLength2);
	#else
	il2cppPInvokeFunc(___obj0, ____buf1_marshaled, ___bufLength2);
	#endif

	// Marshaling of parameter '___buf1' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___buf1, ____buf1_marshaled);

	// Marshaling cleanup of parameter '___buf1' native representation
	il2cpp_codegen_marshal_free(____buf1_marshaled);
	____buf1_marshaled = NULL;

}
// System.IntPtr OpenCvSharp.NativeMethods::core_InputArray_new_byMat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_InputArray_new_byMat_mA93C42919FA22ADF463DFD2AD8145F9CB12433E2 (intptr_t ___mat0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_InputArray_new_byMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_InputArray_new_byMat)(___mat0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___mat0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_InputArray_new_byMatExpr(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_InputArray_new_byMatExpr_m9FEB2D96DAB6A381370229AEAE25C10157D24EBF (intptr_t ___mat0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_InputArray_new_byMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_InputArray_new_byMatExpr)(___mat0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___mat0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_InputArray_new_byScalar(OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_InputArray_new_byScalar_m20A623BE5C0FF2C87948C70847708DECEEC5C29E (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___val0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_InputArray_new_byScalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_InputArray_new_byScalar)(___val0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___val0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_InputArray_new_byDouble(System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_InputArray_new_byDouble_m582AD3DADDBF0691561F1910AA2FE9C701AED527 (double ___val0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_InputArray_new_byDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_InputArray_new_byDouble)(___val0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___val0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_InputArray_new_byGpuMat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_InputArray_new_byGpuMat_mDFC45F0868CDCBF4A2B5018F5875871D4C8ED5D1 (intptr_t ___mat0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_InputArray_new_byGpuMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_InputArray_new_byGpuMat)(___mat0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___mat0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_InputArray_new_byVectorOfMat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_InputArray_new_byVectorOfMat_m476CEC921C2D234250667024012E5D5F805F5465 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_InputArray_new_byVectorOfMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_InputArray_new_byVectorOfMat)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_InputArray_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_InputArray_delete_m5F5EA7F4EC7D1346E28B686C3D02898FE95DFCE1 (intptr_t ___ia0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_InputArray_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_InputArray_delete)(___ia0);
	#else
	il2cppPInvokeFunc(___ia0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_OutputArray_new_byMat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_OutputArray_new_byMat_mD0221A49984FF8F0F19330F15940CB2824C7CEE7 (intptr_t ___mat0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_OutputArray_new_byMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_OutputArray_new_byMat)(___mat0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___mat0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_OutputArray_new_byGpuMat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_OutputArray_new_byGpuMat_m11379312E454C17FC3E60CCB47EDAED47A719389 (intptr_t ___mat0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_OutputArray_new_byGpuMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_OutputArray_new_byGpuMat)(___mat0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___mat0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_OutputArray_new_byScalar(OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_OutputArray_new_byScalar_mDD3DDBC6D6F185DA15AAC1EED046CC9E4BD09008 (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___val0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_OutputArray_new_byScalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_OutputArray_new_byScalar)(___val0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___val0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_OutputArray_new_byVectorOfMat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_OutputArray_new_byVectorOfMat_m22851E5D76ECBFD33DD6126D81D36CA5EDC96953 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_OutputArray_new_byVectorOfMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_OutputArray_new_byVectorOfMat)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_OutputArray_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_OutputArray_delete_mABE6834816CCDB747EF78B1FE1184FB0FDB149EF (intptr_t ___oa0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_OutputArray_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_OutputArray_delete)(___oa0);
	#else
	il2cppPInvokeFunc(___oa0);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::core_InputArray_kind(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_InputArray_kind_m12ABD4EE53EDCFA9AAF496209BF10135C1FCB5B5 (intptr_t ___ia0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_InputArray_kind", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_InputArray_kind)(___ia0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___ia0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_OutputArray_getMat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_OutputArray_getMat_m790B4FCE04606AB4F4A978D71395F0696E90BC1C (intptr_t ___oa0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_OutputArray_getMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_OutputArray_getMat)(___oa0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___oa0);
	#endif

	return returnValue;
}
// OpenCvSharp.Scalar OpenCvSharp.NativeMethods::core_OutputArray_getScalar(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 NativeMethods_core_OutputArray_getScalar_m39FF4E17737F88EDDEC723F8479AD5438FE1B744 (intptr_t ___oa0, const RuntimeMethod* method) 
{
	typedef Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_OutputArray_getScalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 returnValue = reinterpret_cast<PInvokeFunc>(core_OutputArray_getScalar)(___oa0);
	#else
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 returnValue = il2cppPInvokeFunc(___oa0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_OutputArray_getVectorOfMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_OutputArray_getVectorOfMat_m2C16FD577523675ABE3A65BA137F554F1045CE99 (intptr_t ___oa0, intptr_t ___vector1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_OutputArray_getVectorOfMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_OutputArray_getVectorOfMat)(___oa0, ___vector1);
	#else
	il2cppPInvokeFunc(___oa0, ___vector1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_new1_mD8DC948848734F562312F8DE09556ABC6B5B87C7 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_new2(System.String,System.Int32,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_new2_m4B8D409B7E367988B494E38C6C89352C7F4B542B (String_t* ___source0, int32_t ___flags1, String_t* ___encoding2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*, int32_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(int32_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___source0' to native representation
	char* ____source0_marshaled = NULL;
	____source0_marshaled = il2cpp_codegen_marshal_string(___source0);

	// Marshaling of parameter '___encoding2' to native representation
	char* ____encoding2_marshaled = NULL;
	____encoding2_marshaled = il2cpp_codegen_marshal_string(___encoding2);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_new2)(____source0_marshaled, ___flags1, ____encoding2_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____source0_marshaled, ___flags1, ____encoding2_marshaled);
	#endif

	// Marshaling cleanup of parameter '___source0' native representation
	il2cpp_codegen_marshal_free(____source0_marshaled);
	____source0_marshaled = NULL;

	// Marshaling cleanup of parameter '___encoding2' native representation
	il2cpp_codegen_marshal_free(____encoding2_marshaled);
	____encoding2_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_newFromLegacy(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_newFromLegacy_m58A555FC68CDC5BF0EC51B68278B6CF3AB2339A5 (intptr_t ___fs0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_newFromLegacy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_newFromLegacy)(___fs0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___fs0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_delete_m66CCF0A06F9B048F889C2A7E3E1A81204AF6D2DD (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::core_FileStorage_open(System.IntPtr,System.String,System.Int32,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileStorage_open_m2B47414ECDDBA7AB13E8B8ED50439EF945509E67 (intptr_t ___obj0, String_t* ___filename1, int32_t ___flags2, String_t* ___encoding3, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, char*, int32_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(int32_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_open", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___filename1' to native representation
	char* ____filename1_marshaled = NULL;
	____filename1_marshaled = il2cpp_codegen_marshal_string(___filename1);

	// Marshaling of parameter '___encoding3' to native representation
	char* ____encoding3_marshaled = NULL;
	____encoding3_marshaled = il2cpp_codegen_marshal_string(___encoding3);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_open)(___obj0, ____filename1_marshaled, ___flags2, ____encoding3_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ____filename1_marshaled, ___flags2, ____encoding3_marshaled);
	#endif

	// Marshaling cleanup of parameter '___filename1' native representation
	il2cpp_codegen_marshal_free(____filename1_marshaled);
	____filename1_marshaled = NULL;

	// Marshaling cleanup of parameter '___encoding3' native representation
	il2cpp_codegen_marshal_free(____encoding3_marshaled);
	____encoding3_marshaled = NULL;

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileStorage_isOpened(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileStorage_isOpened_mF6FE13CFD662DD33EFCC697EABEBEB3D75EA2783 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_isOpened", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_isOpened)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_release(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_release_m51EA2D27C45A83CF359B6F7C9E857F3C601812AD (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_release", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_release)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_releaseAndGetString(System.IntPtr,System.Text.StringBuilder,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_releaseAndGetString_m88B6506DC70956D5D34E1723C9EFDE82C00C4EEC (intptr_t ___obj0, StringBuilder_t* ___buf1, int32_t ___bufLength2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_releaseAndGetString", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___buf1' to native representation
	char* ____buf1_marshaled = NULL;
	____buf1_marshaled = il2cpp_codegen_marshal_string_builder(___buf1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_releaseAndGetString)(___obj0, ____buf1_marshaled, ___bufLength2);
	#else
	il2cppPInvokeFunc(___obj0, ____buf1_marshaled, ___bufLength2);
	#endif

	// Marshaling of parameter '___buf1' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___buf1, ____buf1_marshaled);

	// Marshaling cleanup of parameter '___buf1' native representation
	il2cpp_codegen_marshal_free(____buf1_marshaled);
	____buf1_marshaled = NULL;

}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_getFirstTopLevelNode(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_getFirstTopLevelNode_m4C12219A5155A1DA451B16BE3F2C737C78000EB5 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_getFirstTopLevelNode", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_getFirstTopLevelNode)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_root(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_root_m681D8140C0A9C18F6A42D077A46F514E796F8BE5 (intptr_t ___obj0, int32_t ___streamIdx1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_root", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_root)(___obj0, ___streamIdx1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ___streamIdx1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_indexer(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_indexer_m52CF0BE078CBDF9220ED8558C37E5E260FCB08CD (intptr_t ___obj0, String_t* ___nodeName1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_indexer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___nodeName1' to native representation
	char* ____nodeName1_marshaled = NULL;
	____nodeName1_marshaled = il2cpp_codegen_marshal_string(___nodeName1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_indexer)(___obj0, ____nodeName1_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ____nodeName1_marshaled);
	#endif

	// Marshaling cleanup of parameter '___nodeName1' native representation
	il2cpp_codegen_marshal_free(____nodeName1_marshaled);
	____nodeName1_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_toLegacy(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_toLegacy_m14029815386F102A798FC633F600511B64045514 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_toLegacy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_toLegacy)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_writeRaw(System.IntPtr,System.String,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_writeRaw_m244092750907B29476200B36A3DDD7A2016D37DF (intptr_t ___obj0, String_t* ___fmt1, intptr_t ___vec2, intptr_t ___len3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_writeRaw", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___fmt1' to native representation
	char* ____fmt1_marshaled = NULL;
	____fmt1_marshaled = il2cpp_codegen_marshal_string(___fmt1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_writeRaw)(___obj0, ____fmt1_marshaled, ___vec2, ___len3);
	#else
	il2cppPInvokeFunc(___obj0, ____fmt1_marshaled, ___vec2, ___len3);
	#endif

	// Marshaling cleanup of parameter '___fmt1' native representation
	il2cpp_codegen_marshal_free(____fmt1_marshaled);
	____fmt1_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_writeObj(System.IntPtr,System.String,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_writeObj_m4F369E9C120715B48A10E467CBCB6F5F6622C540 (intptr_t ___obj0, String_t* ___name1, intptr_t ___value2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_writeObj", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___name1' to native representation
	char* ____name1_marshaled = NULL;
	____name1_marshaled = il2cpp_codegen_marshal_string(___name1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_writeObj)(___obj0, ____name1_marshaled, ___value2);
	#else
	il2cppPInvokeFunc(___obj0, ____name1_marshaled, ___value2);
	#endif

	// Marshaling cleanup of parameter '___name1' native representation
	il2cpp_codegen_marshal_free(____name1_marshaled);
	____name1_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_getDefaultObjectName(System.String,System.Text.StringBuilder,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_getDefaultObjectName_m08FEECF2A4F783F4FDCE6460D9022F162AA76F9B (String_t* ___filename0, StringBuilder_t* ___buf1, int32_t ___bufLength2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_getDefaultObjectName", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___filename0' to native representation
	char* ____filename0_marshaled = NULL;
	____filename0_marshaled = il2cpp_codegen_marshal_string(___filename0);

	// Marshaling of parameter '___buf1' to native representation
	char* ____buf1_marshaled = NULL;
	____buf1_marshaled = il2cpp_codegen_marshal_string_builder(___buf1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_getDefaultObjectName)(____filename0_marshaled, ____buf1_marshaled, ___bufLength2);
	#else
	il2cppPInvokeFunc(____filename0_marshaled, ____buf1_marshaled, ___bufLength2);
	#endif

	// Marshaling cleanup of parameter '___filename0' native representation
	il2cpp_codegen_marshal_free(____filename0_marshaled);
	____filename0_marshaled = NULL;

	// Marshaling of parameter '___buf1' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___buf1, ____buf1_marshaled);

	// Marshaling cleanup of parameter '___buf1' native representation
	il2cpp_codegen_marshal_free(____buf1_marshaled);
	____buf1_marshaled = NULL;

}
// System.SByte* OpenCvSharp.NativeMethods::core_FileStorage_elname(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int8_t* NativeMethods_core_FileStorage_elname_mE212884D390601349D6E15072B85306B567B6E8B (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int8_t* (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_elname", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int8_t* returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_elname)(___obj0);
	#else
	int8_t* returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_structs(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_structs_mB08778EF66F1F0EC1F96B93E01CF145FB2FDC84D (intptr_t ___obj0, intptr_t* ___resultLength1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_structs", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_structs)(___obj0, ___resultLength1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ___resultLength1);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileStorage_state(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileStorage_state_m9DA74493415601B319A5C68F6F06583B167758C1 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_state", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_state)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_int(System.IntPtr,System.String,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_int_mF247FECA7ECF96CA0A82715E1604FFD095793200 (intptr_t ___fs0, String_t* ___name1, int32_t ___value2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_write_int", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___name1' to native representation
	char* ____name1_marshaled = NULL;
	____name1_marshaled = il2cpp_codegen_marshal_string(___name1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_write_int)(___fs0, ____name1_marshaled, ___value2);
	#else
	il2cppPInvokeFunc(___fs0, ____name1_marshaled, ___value2);
	#endif

	// Marshaling cleanup of parameter '___name1' native representation
	il2cpp_codegen_marshal_free(____name1_marshaled);
	____name1_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_float(System.IntPtr,System.String,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_float_m02DED3F791F386FF07E271A3767D3701E42117BB (intptr_t ___fs0, String_t* ___name1, float ___value2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_write_float", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___name1' to native representation
	char* ____name1_marshaled = NULL;
	____name1_marshaled = il2cpp_codegen_marshal_string(___name1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_write_float)(___fs0, ____name1_marshaled, ___value2);
	#else
	il2cppPInvokeFunc(___fs0, ____name1_marshaled, ___value2);
	#endif

	// Marshaling cleanup of parameter '___name1' native representation
	il2cpp_codegen_marshal_free(____name1_marshaled);
	____name1_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_double(System.IntPtr,System.String,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_double_mBFC2BB4CA07537AFFE0A25FD1130C8302D62FFA2 (intptr_t ___fs0, String_t* ___name1, double ___value2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_write_double", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___name1' to native representation
	char* ____name1_marshaled = NULL;
	____name1_marshaled = il2cpp_codegen_marshal_string(___name1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_write_double)(___fs0, ____name1_marshaled, ___value2);
	#else
	il2cppPInvokeFunc(___fs0, ____name1_marshaled, ___value2);
	#endif

	// Marshaling cleanup of parameter '___name1' native representation
	il2cpp_codegen_marshal_free(____name1_marshaled);
	____name1_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_String(System.IntPtr,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_String_m864D2186511C4047D5A3947D161F7B0EA7098D3C (intptr_t ___fs0, String_t* ___name1, String_t* ___value2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_write_String", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___name1' to native representation
	char* ____name1_marshaled = NULL;
	____name1_marshaled = il2cpp_codegen_marshal_string(___name1);

	// Marshaling of parameter '___value2' to native representation
	char* ____value2_marshaled = NULL;
	____value2_marshaled = il2cpp_codegen_marshal_string(___value2);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_write_String)(___fs0, ____name1_marshaled, ____value2_marshaled);
	#else
	il2cppPInvokeFunc(___fs0, ____name1_marshaled, ____value2_marshaled);
	#endif

	// Marshaling cleanup of parameter '___name1' native representation
	il2cpp_codegen_marshal_free(____name1_marshaled);
	____name1_marshaled = NULL;

	// Marshaling cleanup of parameter '___value2' native representation
	il2cpp_codegen_marshal_free(____value2_marshaled);
	____value2_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_Mat(System.IntPtr,System.String,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_Mat_m567F6EC5D7B8CB71CB33A6E9BAD0262048438BD3 (intptr_t ___fs0, String_t* ___name1, intptr_t ___value2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_write_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___name1' to native representation
	char* ____name1_marshaled = NULL;
	____name1_marshaled = il2cpp_codegen_marshal_string(___name1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_write_Mat)(___fs0, ____name1_marshaled, ___value2);
	#else
	il2cppPInvokeFunc(___fs0, ____name1_marshaled, ___value2);
	#endif

	// Marshaling cleanup of parameter '___name1' native representation
	il2cpp_codegen_marshal_free(____name1_marshaled);
	____name1_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_SparseMat(System.IntPtr,System.String,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_SparseMat_m7C3CFB5BA6A9AE63F3C04173679742695BAEC951 (intptr_t ___fs0, String_t* ___name1, intptr_t ___value2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_write_SparseMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___name1' to native representation
	char* ____name1_marshaled = NULL;
	____name1_marshaled = il2cpp_codegen_marshal_string(___name1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_write_SparseMat)(___fs0, ____name1_marshaled, ___value2);
	#else
	il2cppPInvokeFunc(___fs0, ____name1_marshaled, ___value2);
	#endif

	// Marshaling cleanup of parameter '___name1' native representation
	il2cpp_codegen_marshal_free(____name1_marshaled);
	____name1_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_vectorOfKeyPoint(System.IntPtr,System.String,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_vectorOfKeyPoint_m0F9F6558D4208431CC11BA608812308A9685A0E8 (intptr_t ___fs0, String_t* ___name1, intptr_t ___value2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_write_vectorOfKeyPoint", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___name1' to native representation
	char* ____name1_marshaled = NULL;
	____name1_marshaled = il2cpp_codegen_marshal_string(___name1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_write_vectorOfKeyPoint)(___fs0, ____name1_marshaled, ___value2);
	#else
	il2cppPInvokeFunc(___fs0, ____name1_marshaled, ___value2);
	#endif

	// Marshaling cleanup of parameter '___name1' native representation
	il2cpp_codegen_marshal_free(____name1_marshaled);
	____name1_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_vectorOfDMatch(System.IntPtr,System.String,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_vectorOfDMatch_mEF7C7DC211527C741307D4055DF6C2DC0EBB1C43 (intptr_t ___fs0, String_t* ___name1, intptr_t ___value2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_write_vectorOfDMatch", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___name1' to native representation
	char* ____name1_marshaled = NULL;
	____name1_marshaled = il2cpp_codegen_marshal_string(___name1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_write_vectorOfDMatch)(___fs0, ____name1_marshaled, ___value2);
	#else
	il2cppPInvokeFunc(___fs0, ____name1_marshaled, ___value2);
	#endif

	// Marshaling cleanup of parameter '___name1' native representation
	il2cpp_codegen_marshal_free(____name1_marshaled);
	____name1_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_writeScalar_int(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_writeScalar_int_m8D745CD824CF96DA3E8435B800A8F102D273E040 (intptr_t ___fs0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_writeScalar_int", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_writeScalar_int)(___fs0, ___value1);
	#else
	il2cppPInvokeFunc(___fs0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_writeScalar_float(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_writeScalar_float_m3968752CFD0232D9BB0D1B1C198A6D225DCE306D (intptr_t ___fs0, float ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_writeScalar_float", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_writeScalar_float)(___fs0, ___value1);
	#else
	il2cppPInvokeFunc(___fs0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_writeScalar_double(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_writeScalar_double_m6EFB889374D5CAE455769F17A8A76326A3D254F0 (intptr_t ___fs0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_writeScalar_double", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_writeScalar_double)(___fs0, ___value1);
	#else
	il2cppPInvokeFunc(___fs0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_writeScalar_String(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_writeScalar_String_mA01D675C6059590CA7029790920A96E04B826AAB (intptr_t ___fs0, String_t* ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_writeScalar_String", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___value1' to native representation
	char* ____value1_marshaled = NULL;
	____value1_marshaled = il2cpp_codegen_marshal_string(___value1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_writeScalar_String)(___fs0, ____value1_marshaled);
	#else
	il2cppPInvokeFunc(___fs0, ____value1_marshaled);
	#endif

	// Marshaling cleanup of parameter '___value1' native representation
	il2cpp_codegen_marshal_free(____value1_marshaled);
	____value1_marshaled = NULL;

}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileNode_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileNode_new1_m55C08618BC2537F0FE7EE74DF104AE44DFCC7833 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileNode_new2(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileNode_new2_m8FDEBC4DE9BC05C6365EEAD9EF13E29DC2EA3C85 (intptr_t ___fs0, intptr_t ___node1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_new2)(___fs0, ___node1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___fs0, ___node1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileNode_new3(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileNode_new3_m01DEE942A10430812A84484FE79C3203D947CDA3 (intptr_t ___node0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_new3)(___node0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___node0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_delete_m52448C7CE8E949C62D9002C700EC1BD650B4DB89 (intptr_t ___node0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_delete)(___node0);
	#else
	il2cppPInvokeFunc(___node0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileNode_operatorThis_byString(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileNode_operatorThis_byString_m43B714322C5E1E3D6CA7D5079FB47D8E922F2164 (intptr_t ___obj0, String_t* ___nodeName1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_operatorThis_byString", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___nodeName1' to native representation
	char* ____nodeName1_marshaled = NULL;
	____nodeName1_marshaled = il2cpp_codegen_marshal_string(___nodeName1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_operatorThis_byString)(___obj0, ____nodeName1_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ____nodeName1_marshaled);
	#endif

	// Marshaling cleanup of parameter '___nodeName1' native representation
	il2cpp_codegen_marshal_free(____nodeName1_marshaled);
	____nodeName1_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileNode_operatorThis_byInt(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileNode_operatorThis_byInt_mDDA23F3EB31EB1A03361508E4DF023DCAFD5796C (intptr_t ___obj0, int32_t ___i1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_operatorThis_byInt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_operatorThis_byInt)(___obj0, ___i1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ___i1);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_type(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_type_m8BE7C3F217CF55425C8B6751A7AFC9D86EBC5CF5 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_type", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_type)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_empty(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_empty_m7C4D31845EE562A9E86681907210FADCBBC57147 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_empty", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_empty)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_isNone(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_isNone_m4DBC2BC257F44E70007045D0072A7F91E66C2EF5 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_isNone", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_isNone)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_isSeq(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_isSeq_mAE31BA6099B77526C79A85A4CBCE6FC93DDBBCE9 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_isSeq", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_isSeq)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_isMap(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_isMap_m35BF7101DD3E11E7782AE9BE5777B1C3674F1F72 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_isMap", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_isMap)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_isInt(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_isInt_m8E24911FBF0C91033F5CFDDD9CE1D77AACAAF42D (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_isInt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_isInt)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_isReal(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_isReal_m8C806916C6058B68605BBF2A6DC1218F7801A92B (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_isReal", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_isReal)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_isString(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_isString_m9D944E84AD0918C9BCC20E2FC2EF3822FE576BFA (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_isString", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_isString)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_isNamed(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_isNamed_m7676D96EB353CFC5C935A6E8AFFD6899AB1A2F49 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_isNamed", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_isNamed)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_name(System.IntPtr,System.Text.StringBuilder,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_name_mB353E38C6E4154EFF1BA8D7B6566E649577838B4 (intptr_t ___obj0, StringBuilder_t* ___buf1, int32_t ___bufLength2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_name", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___buf1' to native representation
	char* ____buf1_marshaled = NULL;
	____buf1_marshaled = il2cpp_codegen_marshal_string_builder(___buf1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_name)(___obj0, ____buf1_marshaled, ___bufLength2);
	#else
	il2cppPInvokeFunc(___obj0, ____buf1_marshaled, ___bufLength2);
	#endif

	// Marshaling of parameter '___buf1' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___buf1, ____buf1_marshaled);

	// Marshaling cleanup of parameter '___buf1' native representation
	il2cpp_codegen_marshal_free(____buf1_marshaled);
	____buf1_marshaled = NULL;

}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileNode_size(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileNode_size_mACCEC24DA62F0C76EF0A9E2558D7CAE8435B5F1F (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_size", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_size)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_toInt(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_toInt_mBF85EF1446C85083387C6A9827E2EBF7820CD382 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_toInt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_toInt)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Single OpenCvSharp.NativeMethods::core_FileNode_toFloat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_core_FileNode_toFloat_m5E959791BE6A3F03D927311C482663B1DC869900 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_toFloat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_toFloat)(___obj0);
	#else
	float returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::core_FileNode_toDouble(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_FileNode_toDouble_mA9FD91BB81F3C48A5E293D98772843413FB6EC32 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_toDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_toDouble)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_toString(System.IntPtr,System.Text.StringBuilder,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_toString_mDEF89607FEAEAC1C431A3CD9A6D84789CC4D86C2 (intptr_t ___obj0, StringBuilder_t* ___buf1, int32_t ___bufLength2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_toString", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___buf1' to native representation
	char* ____buf1_marshaled = NULL;
	____buf1_marshaled = il2cpp_codegen_marshal_string_builder(___buf1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_toString)(___obj0, ____buf1_marshaled, ___bufLength2);
	#else
	il2cppPInvokeFunc(___obj0, ____buf1_marshaled, ___bufLength2);
	#endif

	// Marshaling of parameter '___buf1' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___buf1, ____buf1_marshaled);

	// Marshaling cleanup of parameter '___buf1' native representation
	il2cpp_codegen_marshal_free(____buf1_marshaled);
	____buf1_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_toMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_toMat_m1E82633CA5DF49B99BDF44810C911B4E8ECF7606 (intptr_t ___obj0, intptr_t ___m1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_toMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_toMat)(___obj0, ___m1);
	#else
	il2cppPInvokeFunc(___obj0, ___m1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_readRaw(System.IntPtr,System.String,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_readRaw_m720A6B7F045D20F08F071A5ABA86F7B008164A0F (intptr_t ___obj0, String_t* ___fmt1, intptr_t ___vec2, intptr_t ___len3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_readRaw", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___fmt1' to native representation
	char* ____fmt1_marshaled = NULL;
	____fmt1_marshaled = il2cpp_codegen_marshal_string(___fmt1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_readRaw)(___obj0, ____fmt1_marshaled, ___vec2, ___len3);
	#else
	il2cppPInvokeFunc(___obj0, ____fmt1_marshaled, ___vec2, ___len3);
	#endif

	// Marshaling cleanup of parameter '___fmt1' native representation
	il2cpp_codegen_marshal_free(____fmt1_marshaled);
	____fmt1_marshaled = NULL;

}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileNode_readObj(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileNode_readObj_mFFFFC73765C5389F1A2CD5337F8C60CDC6CD3183 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_readObj", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_readObj)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_int(System.IntPtr,System.Int32&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_int_m3BB70283879CFAE342D5A626AE35898AF6CC16B4 (intptr_t ___node0, int32_t* ___value1, int32_t ___defaultValue2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_read_int", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_read_int)(___node0, ___value1, ___defaultValue2);
	#else
	il2cppPInvokeFunc(___node0, ___value1, ___defaultValue2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_float(System.IntPtr,System.Single&,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_float_mA8793A4C113F8395B26E1AFEC1A32FAE76223702 (intptr_t ___node0, float* ___value1, float ___defaultValue2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float*, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_read_float", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_read_float)(___node0, ___value1, ___defaultValue2);
	#else
	il2cppPInvokeFunc(___node0, ___value1, ___defaultValue2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_double(System.IntPtr,System.Double&,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_double_mD649149E1A3E5A5C8DA3F70DCE4083D4DF5EAF2A (intptr_t ___node0, double* ___value1, double ___defaultValue2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double*, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double*) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_read_double", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_read_double)(___node0, ___value1, ___defaultValue2);
	#else
	il2cppPInvokeFunc(___node0, ___value1, ___defaultValue2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_String(System.IntPtr,System.Text.StringBuilder,System.Int32,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_String_mCCC88088E8C25ECEB4147E766794F6A790E8C5AD (intptr_t ___node0, StringBuilder_t* ___value1, int32_t ___valueCapacity2, String_t* ___defaultValue3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, int32_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_read_String", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___value1' to native representation
	char* ____value1_marshaled = NULL;
	____value1_marshaled = il2cpp_codegen_marshal_string_builder(___value1);

	// Marshaling of parameter '___defaultValue3' to native representation
	char* ____defaultValue3_marshaled = NULL;
	____defaultValue3_marshaled = il2cpp_codegen_marshal_string(___defaultValue3);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_read_String)(___node0, ____value1_marshaled, ___valueCapacity2, ____defaultValue3_marshaled);
	#else
	il2cppPInvokeFunc(___node0, ____value1_marshaled, ___valueCapacity2, ____defaultValue3_marshaled);
	#endif

	// Marshaling of parameter '___value1' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___value1, ____value1_marshaled);

	// Marshaling cleanup of parameter '___value1' native representation
	il2cpp_codegen_marshal_free(____value1_marshaled);
	____value1_marshaled = NULL;

	// Marshaling cleanup of parameter '___defaultValue3' native representation
	il2cpp_codegen_marshal_free(____defaultValue3_marshaled);
	____defaultValue3_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_Mat(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_Mat_m7FD57FBCFAB62711830000BF8BBD23ACF5197C5E (intptr_t ___node0, intptr_t ___mat1, intptr_t ___defaultMat2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_read_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_read_Mat)(___node0, ___mat1, ___defaultMat2);
	#else
	il2cppPInvokeFunc(___node0, ___mat1, ___defaultMat2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_SparseMat(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_SparseMat_m2844960D9CC7B4F0EF5A18C1EF966C7A64920EE6 (intptr_t ___node0, intptr_t ___mat1, intptr_t ___defaultMat2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_read_SparseMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_read_SparseMat)(___node0, ___mat1, ___defaultMat2);
	#else
	il2cppPInvokeFunc(___node0, ___mat1, ___defaultMat2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_vectorOfKeyPoint(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_vectorOfKeyPoint_m26EC62F4ADF605099E9D97AEC13E84E5F11607ED (intptr_t ___node0, intptr_t ___keypoints1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_read_vectorOfKeyPoint", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_read_vectorOfKeyPoint)(___node0, ___keypoints1);
	#else
	il2cppPInvokeFunc(___node0, ___keypoints1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_vectorOfDMatch(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_vectorOfDMatch_mFA0206769EC393E0DCE29F38381934E0D8F8B171 (intptr_t ___node0, intptr_t ___matches1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_read_vectorOfDMatch", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_read_vectorOfDMatch)(___node0, ___matches1);
	#else
	il2cppPInvokeFunc(___node0, ___matches1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_PCA_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_PCA_new1_m996661E06008011AB834B8F4B60C0BA8A4F17BC6 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_PCA_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_PCA_new2(System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_PCA_new2_m407A4EFAA94AC4E8C150882729B75C593B142FFE (intptr_t ___data0, intptr_t ___mean1, int32_t ___flags2, int32_t ___maxComponents3, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_PCA_new2)(___data0, ___mean1, ___flags2, ___maxComponents3);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___data0, ___mean1, ___flags2, ___maxComponents3);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_PCA_new3(System.IntPtr,System.IntPtr,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_PCA_new3_m9AB56010E6BD5E36BF0634134841453770E291E8 (intptr_t ___data0, intptr_t ___mean1, int32_t ___flags2, double ___retainedVariance3, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_PCA_new3)(___data0, ___mean1, ___flags2, ___retainedVariance3);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___data0, ___mean1, ___flags2, ___retainedVariance3);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_PCA_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_PCA_delete_m22D20A37B0DC5F9821476D367F40C54707D52766 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_PCA_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_PCA_operatorThis(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_PCA_operatorThis_m83BADAF675D5AF5306D284A0D18E6236D0DBA999 (intptr_t ___obj0, intptr_t ___data1, intptr_t ___mean2, int32_t ___flags3, int32_t ___maxComponents4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_operatorThis", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_PCA_operatorThis)(___obj0, ___data1, ___mean2, ___flags3, ___maxComponents4);
	#else
	il2cppPInvokeFunc(___obj0, ___data1, ___mean2, ___flags3, ___maxComponents4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_PCA_computeVar(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_PCA_computeVar_m2949E04C77DD7ABA1EC040A21ECCD6F1F2772416 (intptr_t ___obj0, intptr_t ___data1, intptr_t ___mean2, int32_t ___flags3, double ___retainedVariance4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_computeVar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_PCA_computeVar)(___obj0, ___data1, ___mean2, ___flags3, ___retainedVariance4);
	#else
	il2cppPInvokeFunc(___obj0, ___data1, ___mean2, ___flags3, ___retainedVariance4);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_PCA_project(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_PCA_project_m7000ED685CA934076AEC4D2850445732C0FEF4A5 (intptr_t ___obj0, intptr_t ___vec1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_project1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_PCA_project1)(___obj0, ___vec1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ___vec1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_PCA_project(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_PCA_project_m75296D01F75F86D62D526D68E86CDB0C7FFA9279 (intptr_t ___obj0, intptr_t ___vec1, intptr_t ___result2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_project2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_PCA_project2)(___obj0, ___vec1, ___result2);
	#else
	il2cppPInvokeFunc(___obj0, ___vec1, ___result2);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_PCA_backProject(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_PCA_backProject_m245935412E637DED4A0F7F88F5BBD0E3CD0E9602 (intptr_t ___obj0, intptr_t ___vec1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_backProject1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_PCA_backProject1)(___obj0, ___vec1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ___vec1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_PCA_backProject(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_PCA_backProject_mCACF67E9D9C3C6E8A1D21B345E3F0047B95CCAD5 (intptr_t ___obj0, intptr_t ___vec1, intptr_t ___result2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_backProject2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_PCA_backProject2)(___obj0, ___vec1, ___result2);
	#else
	il2cppPInvokeFunc(___obj0, ___vec1, ___result2);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_PCA_eigenvectors(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_PCA_eigenvectors_mAE5E79A847E0B23E77166DB333D9921633EDEA5C (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_eigenvectors", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_PCA_eigenvectors)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_PCA_eigenvalues(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_PCA_eigenvalues_mFA1ECDB5282D05F5A1DCB1D928D836F14BF9938D (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_eigenvalues", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_PCA_eigenvalues)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_PCA_mean(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_PCA_mean_mC0C4A40632CCD50084E3B10924FB92D3AE49EEDD (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_mean", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_PCA_mean)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_RNG_fill(System.UInt64&,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_RNG_fill_m4AC2EB54DBDE4902E094B94CE57B895421236911 (uint64_t* ___state0, intptr_t ___mat1, int32_t ___distType2, intptr_t ___a3, intptr_t ___b4, int32_t ___saturateRange5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (uint64_t*, intptr_t, int32_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(uint64_t*) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_RNG_fill", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_RNG_fill)(___state0, ___mat1, ___distType2, ___a3, ___b4, ___saturateRange5);
	#else
	il2cppPInvokeFunc(___state0, ___mat1, ___distType2, ___a3, ___b4, ___saturateRange5);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::core_RNG_gaussian(System.UInt64&,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_RNG_gaussian_mB834C365DC6EF13B81160E280039502C527FDE16 (uint64_t* ___state0, double ___sigma1, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (uint64_t*, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(uint64_t*) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_RNG_gaussian", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_RNG_gaussian)(___state0, ___sigma1);
	#else
	double returnValue = il2cppPInvokeFunc(___state0, ___sigma1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SVD_new()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SVD_new_m0191E140FFA6E38E533AD942EBF3899F0072DE6D (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SVD_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SVD_new(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SVD_new_mDD7D861909D1694BB2239F72CC55A6948682ABB8 (intptr_t ___src0, int32_t ___flags1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SVD_new2)(___src0, ___flags1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___src0, ___flags1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_SVD_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SVD_delete_m3D7FE9469FD35B19DD932404D42FA6434198240C (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SVD_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SVD_operatorThis(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SVD_operatorThis_m6FAC051E2F5058F5A81520F5E6D8F79EB3D8BE5D (intptr_t ___obj0, intptr_t ___src1, int32_t ___flags2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_operatorThis", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SVD_operatorThis)(___obj0, ___src1, ___flags2);
	#else
	il2cppPInvokeFunc(___obj0, ___src1, ___flags2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SVD_backSubst(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SVD_backSubst_mC19D42E989E25D2F4606451A5C3726DF3A7DA6D4 (intptr_t ___obj0, intptr_t ___rhs1, intptr_t ___dst2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_backSubst", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SVD_backSubst)(___obj0, ___rhs1, ___dst2);
	#else
	il2cppPInvokeFunc(___obj0, ___rhs1, ___dst2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SVD_static_compute(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SVD_static_compute_mA89276DFE97C25BF60A7524FBF936BC3A99F21D5 (intptr_t ___src0, intptr_t ___w1, intptr_t ___u2, intptr_t ___vt3, int32_t ___flags4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_static_compute1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SVD_static_compute1)(___src0, ___w1, ___u2, ___vt3, ___flags4);
	#else
	il2cppPInvokeFunc(___src0, ___w1, ___u2, ___vt3, ___flags4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SVD_static_compute(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SVD_static_compute_m678DEDC2A09D4246DE598E956D3BF51CE34A5613 (intptr_t ___src0, intptr_t ___w1, int32_t ___flags2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_static_compute2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SVD_static_compute2)(___src0, ___w1, ___flags2);
	#else
	il2cppPInvokeFunc(___src0, ___w1, ___flags2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SVD_static_backSubst(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SVD_static_backSubst_mD6117F58183DB1F02D6B51CB07FBCF5E8D14885E (intptr_t ___w0, intptr_t ___u1, intptr_t ___vt2, intptr_t ___rhs3, intptr_t ___dst4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_static_backSubst", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SVD_static_backSubst)(___w0, ___u1, ___vt2, ___rhs3, ___dst4);
	#else
	il2cppPInvokeFunc(___w0, ___u1, ___vt2, ___rhs3, ___dst4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SVD_static_solveZ(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SVD_static_solveZ_mBE4DC64B27707B50404BE6E55DAFB145761DEA52 (intptr_t ___src0, intptr_t ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_static_solveZ", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SVD_static_solveZ)(___src0, ___dst1);
	#else
	il2cppPInvokeFunc(___src0, ___dst1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_SVD_u(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SVD_u_mF1FA0F5711582908B23B852A1A22C1C56B213EB2 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_u", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SVD_u)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SVD_w(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SVD_w_m0A2A03606C18B590FF7841588C1F7351396D8CA4 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_w", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SVD_w)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SVD_vt(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SVD_vt_m022AFA187ADC4368C4C197E7A0D7F994A0B0D69E (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_vt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SVD_vt)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.UInt64 OpenCvSharp.NativeMethods::core_Mat_sizeof()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t NativeMethods_core_Mat_sizeof_m206DA3A87E0AF7DD8E5AD578B7996420F48D1082 (const RuntimeMethod* method) 
{
	typedef uint64_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_sizeof", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	uint64_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_sizeof)();
	#else
	uint64_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new1_mE055EE97972F80F254A7D342B93A417B8395CB70 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new2(System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new2_mB5AAE95DB41891FBFE73812D596FB89B2F130026 (int32_t ___rows0, int32_t ___cols1, int32_t ___type2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new2)(___rows0, ___cols1, ___type2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___rows0, ___cols1, ___type2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new3(System.Int32,System.Int32,System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new3_m9A0AA79706D0560A64434B6F109575598E29ACC3 (int32_t ___rows0, int32_t ___cols1, int32_t ___type2, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___scalar3, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new3)(___rows0, ___cols1, ___type2, ___scalar3);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___rows0, ___cols1, ___type2, ___scalar3);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new4(System.IntPtr,OpenCvSharp.Range,OpenCvSharp.Range)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new4_m11DFF32260CA05E00A7D75E359DA65207A5A76AC (intptr_t ___mat0, Range_t981FA0C4141FE7585A1C292A250B431019099C09 ___rowRange1, Range_t981FA0C4141FE7585A1C292A250B431019099C09 ___colRange2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Range_t981FA0C4141FE7585A1C292A250B431019099C09, Range_t981FA0C4141FE7585A1C292A250B431019099C09);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Range_t981FA0C4141FE7585A1C292A250B431019099C09) + sizeof(Range_t981FA0C4141FE7585A1C292A250B431019099C09);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new4", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new4)(___mat0, ___rowRange1, ___colRange2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___mat0, ___rowRange1, ___colRange2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new5(System.IntPtr,OpenCvSharp.Range)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new5_mD4F319A4C5824BEF170ECAF010D330F04D6A10F1 (intptr_t ___mat0, Range_t981FA0C4141FE7585A1C292A250B431019099C09 ___rowRange1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Range_t981FA0C4141FE7585A1C292A250B431019099C09);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Range_t981FA0C4141FE7585A1C292A250B431019099C09);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new5", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new5)(___mat0, ___rowRange1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___mat0, ___rowRange1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new6(System.IntPtr,OpenCvSharp.Range[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new6_m5FA0A7610C699B3916B755D1710335EB8FE8A874 (intptr_t ___mat0, RangeU5BU5D_t7A815EED0DB267C51F9F6C0507B9579B68391756* ___rowRange1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Range_t981FA0C4141FE7585A1C292A250B431019099C09*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new6", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___rowRange1' to native representation
	Range_t981FA0C4141FE7585A1C292A250B431019099C09* ____rowRange1_marshaled = NULL;
	if (___rowRange1 != NULL)
	{
		____rowRange1_marshaled = reinterpret_cast<Range_t981FA0C4141FE7585A1C292A250B431019099C09*>((___rowRange1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new6)(___mat0, ____rowRange1_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___mat0, ____rowRange1_marshaled);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new7(System.IntPtr,OpenCvSharp.Rect)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new7_mD634F3E983C10E1A6DD5614230CCBE2944E71616 (intptr_t ___mat0, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___roi1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new7", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new7)(___mat0, ___roi1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___mat0, ___roi1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new8(System.Int32,System.Int32,System.Int32,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new8_mF018A1D09DE6E46AC42B774FBABE6B445B1FB2B8 (int32_t ___rows0, int32_t ___cols1, int32_t ___type2, intptr_t ___data3, intptr_t ___step4, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new8", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new8)(___rows0, ___cols1, ___type2, ___data3, ___step4);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___rows0, ___cols1, ___type2, ___data3, ___step4);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new9(System.Int32,System.Int32[],System.Int32,System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new9_mD84C9B8DEC803EE1C7DCF513035996CD0960D847 (int32_t ___ndims0, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___sizes1, int32_t ___type2, intptr_t ___data3, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___steps4, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t*, int32_t, intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new9", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___sizes1' to native representation
	int32_t* ____sizes1_marshaled = NULL;
	if (___sizes1 != NULL)
	{
		____sizes1_marshaled = reinterpret_cast<int32_t*>((___sizes1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___steps4' to native representation
	intptr_t* ____steps4_marshaled = NULL;
	if (___steps4 != NULL)
	{
		____steps4_marshaled = reinterpret_cast<intptr_t*>((___steps4)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new9)(___ndims0, ____sizes1_marshaled, ___type2, ___data3, ____steps4_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ndims0, ____sizes1_marshaled, ___type2, ___data3, ____steps4_marshaled);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new9(System.Int32,System.Int32[],System.Int32,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new9_m22E5B5310C56957F84E7DE747E785D506B547C8B (int32_t ___ndims0, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___sizes1, int32_t ___type2, intptr_t ___data3, intptr_t ___steps4, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t*, int32_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new9", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___sizes1' to native representation
	int32_t* ____sizes1_marshaled = NULL;
	if (___sizes1 != NULL)
	{
		____sizes1_marshaled = reinterpret_cast<int32_t*>((___sizes1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new9)(___ndims0, ____sizes1_marshaled, ___type2, ___data3, ___steps4);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ndims0, ____sizes1_marshaled, ___type2, ___data3, ___steps4);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new10(System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new10_m926530958DA53B87F711910B6052BD6877920606 (int32_t ___ndims0, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___sizes1, int32_t ___type2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new10", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___sizes1' to native representation
	int32_t* ____sizes1_marshaled = NULL;
	if (___sizes1 != NULL)
	{
		____sizes1_marshaled = reinterpret_cast<int32_t*>((___sizes1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new10)(___ndims0, ____sizes1_marshaled, ___type2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ndims0, ____sizes1_marshaled, ___type2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new11(System.Int32,System.Int32[],System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new11_m43C9777B6AEE2AD948C01F6E0D3AB9805E5AB614 (int32_t ___ndims0, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___sizes1, int32_t ___type2, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___s3, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t*, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new11", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___sizes1' to native representation
	int32_t* ____sizes1_marshaled = NULL;
	if (___sizes1 != NULL)
	{
		____sizes1_marshaled = reinterpret_cast<int32_t*>((___sizes1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new11)(___ndims0, ____sizes1_marshaled, ___type2, ___s3);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ndims0, ____sizes1_marshaled, ___type2, ___s3);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new_FromIplImage(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new_FromIplImage_m9EC21ABB9F1A7E6FC374A0525153E71487849F5D (intptr_t ___img0, int32_t ___copyData1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new_FromIplImage", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new_FromIplImage)(___img0, ___copyData1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___img0, ___copyData1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new_FromCvMat(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new_FromCvMat_mD0641C6F71A64C9893FCBF1DB5DF8A93E422E0C9 (intptr_t ___mat0, int32_t ___copyData1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new_FromCvMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new_FromCvMat)(___mat0, ___copyData1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___mat0, ___copyData1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_Mat_release(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_release_m322DA86D001F44CB9BAEAF5CDADB3E6CF043B153 (intptr_t ___mat0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_release", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_release)(___mat0);
	#else
	il2cppPInvokeFunc(___mat0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_delete_mFF6D02560A2479D3DE152784BCB8CAB5FE040C76 (intptr_t ___mat0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_delete)(___mat0);
	#else
	il2cppPInvokeFunc(___mat0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_adjustROI(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_adjustROI_m383FEC95644D758E20EF37A7CABA1019B1D47B9D (intptr_t ___nativeObj0, int32_t ___dtop1, int32_t ___dbottom2, int32_t ___dleft3, int32_t ___dright4, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_adjustROI", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_adjustROI)(___nativeObj0, ___dtop1, ___dbottom2, ___dleft3, ___dright4);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___nativeObj0, ___dtop1, ___dbottom2, ___dleft3, ___dright4);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_Mat_assignTo1(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_assignTo1_mDC886A938CD6E968278270C1C1B794975F184756 (intptr_t ___self0, intptr_t ___m1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_assignTo1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_assignTo1)(___self0, ___m1);
	#else
	il2cppPInvokeFunc(___self0, ___m1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_assignTo2(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_assignTo2_mD7C09E2903F29F1292194509888F41E914A75407 (intptr_t ___self0, intptr_t ___m1, int32_t ___type2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_assignTo2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_assignTo2)(___self0, ___m1, ___type2);
	#else
	il2cppPInvokeFunc(___self0, ___m1, ___type2);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_channels(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_channels_mD8D407C5090DE834F54AE953C188DF942C9A0147 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_channels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_channels)(___self0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_checkVector1(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_checkVector1_m164BEFA309463159E4263C865DCE391B3634137B (intptr_t ___self0, int32_t ___elemChannels1, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_checkVector1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_checkVector1)(___self0, ___elemChannels1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___self0, ___elemChannels1);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_checkVector2(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_checkVector2_m6AC8034F0616830003247DA7A32F37F0F3F28F95 (intptr_t ___self0, int32_t ___elemChannels1, int32_t ___depth2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_checkVector2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_checkVector2)(___self0, ___elemChannels1, ___depth2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___self0, ___elemChannels1, ___depth2);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_checkVector3(System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_checkVector3_m20A210E6E7D6E82E6CF9321F66613118971ACC74 (intptr_t ___self0, int32_t ___elemChannels1, int32_t ___depth2, int32_t ___requireContinuous3, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_checkVector3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_checkVector3)(___self0, ___elemChannels1, ___depth2, ___requireContinuous3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___self0, ___elemChannels1, ___depth2, ___requireContinuous3);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_clone(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_clone_m5460E46AD2D712B1AA427EC7D15CCECB601F09C4 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_clone", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_clone)(___self0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_col_toMat(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_col_toMat_mFB4028EFA26AA774AABB4FE7C002417DF9B1EDF6 (intptr_t ___self0, int32_t ___x1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_col_toMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_col_toMat)(___self0, ___x1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___x1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_col_toMatExpr(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_col_toMatExpr_m19C033B66BE116EFF2822462CF35C91E68F8BB64 (intptr_t ___self0, int32_t ___x1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_col_toMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_col_toMatExpr)(___self0, ___x1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___x1);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_cols(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_cols_m9D864E26799D1B377A4252EF3FE5F8EFCDD66609 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_cols", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_cols)(___self0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_colRange_toMat(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_colRange_toMat_mB0432ECF11411446E9C8EDD926AE5AF6FB4FD332 (intptr_t ___self0, int32_t ___startCol1, int32_t ___endCol2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_colRange_toMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_colRange_toMat)(___self0, ___startCol1, ___endCol2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___startCol1, ___endCol2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_colRange_toMatExpr(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_colRange_toMatExpr_m6C47EA7839BF9357257E9CA85D8730A3E5194FB1 (intptr_t ___self0, int32_t ___startCol1, int32_t ___endCol2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_colRange_toMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_colRange_toMatExpr)(___self0, ___startCol1, ___endCol2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___startCol1, ___endCol2);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_dims(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_dims_mF8B0E60835C05A5B4BD7B99F95D86FF29A69C94D (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_dims", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_dims)(___self0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_Mat_convertTo(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_convertTo_mC22A92A37F1084A67ECB30F7E360067CDF1572E8 (intptr_t ___self0, intptr_t ___m1, int32_t ___rtype2, double ___alpha3, double ___beta4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_convertTo", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_convertTo)(___self0, ___m1, ___rtype2, ___alpha3, ___beta4);
	#else
	il2cppPInvokeFunc(___self0, ___m1, ___rtype2, ___alpha3, ___beta4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_copyTo(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_copyTo_m713080CC055EBF038363DEFC97E6D641F6959114 (intptr_t ___self0, intptr_t ___m1, intptr_t ___mask2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_copyTo", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_copyTo)(___self0, ___m1, ___mask2);
	#else
	il2cppPInvokeFunc(___self0, ___m1, ___mask2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_create(System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_create_mC8D81A0B498E8476EA10FCD13CF677721C823D3B (intptr_t ___self0, int32_t ___rows1, int32_t ___cols2, int32_t ___type3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_create1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_create1)(___self0, ___rows1, ___cols2, ___type3);
	#else
	il2cppPInvokeFunc(___self0, ___rows1, ___cols2, ___type3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_create(System.IntPtr,System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_create_m3185B7A9F8C98B921B294D03A0371208560AEF2A (intptr_t ___self0, int32_t ___ndims1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___sizes2, int32_t ___type3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_create2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___sizes2' to native representation
	int32_t* ____sizes2_marshaled = NULL;
	if (___sizes2 != NULL)
	{
		____sizes2_marshaled = reinterpret_cast<int32_t*>((___sizes2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_create2)(___self0, ___ndims1, ____sizes2_marshaled, ___type3);
	#else
	il2cppPInvokeFunc(___self0, ___ndims1, ____sizes2_marshaled, ___type3);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_cross(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_cross_mD7F1645998B433E148E45656AD334CAF77D5CD2E (intptr_t ___self0, intptr_t ___m1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_cross", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_cross)(___self0, ___m1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___m1);
	#endif

	return returnValue;
}
// System.Byte* OpenCvSharp.NativeMethods::core_Mat_data(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint8_t* NativeMethods_core_Mat_data_m29913536B51EDEBAD51F5AE1D8549F4C26FAADB8 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef uint8_t* (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_data", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	uint8_t* returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_data)(___self0);
	#else
	uint8_t* returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_datastart(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_datastart_mA03664A9DA0EF46D4E7D10D53F78220224ECCDEE (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_datastart", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_datastart)(___self0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_dataend(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_dataend_m14EB4C47D5B321915F7DE0D4CCEF830F849BB561 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_dataend", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_dataend)(___self0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_datalimit(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_datalimit_m90575A7542B8717BEEF0934AD07B6289F29CC011 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_datalimit", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_datalimit)(___self0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_depth(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_depth_m1EE6F3A90C147849B0115C7CDDBAAB8D0C2B629F (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_depth", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_depth)(___self0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_diag(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_diag_m53B797925D8C896F49AD60A954C41D1D54946C2D (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_diag1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_diag1)(___self0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_diag(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_diag_mE6EE4E5BAA194D2C0B515B0B2D78104F093DA174 (intptr_t ___self0, int32_t ___d1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_diag2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_diag2)(___self0, ___d1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___d1);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::core_Mat_dot(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_Mat_dot_mF3885AEE0B1F7A18420B3D2C0285EC011937EF88 (intptr_t ___self0, intptr_t ___m1, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_dot", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_dot)(___self0, ___m1);
	#else
	double returnValue = il2cppPInvokeFunc(___self0, ___m1);
	#endif

	return returnValue;
}
// System.UInt64 OpenCvSharp.NativeMethods::core_Mat_elemSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t NativeMethods_core_Mat_elemSize_m1D6DC1E06562906EDF1007B3A0D74838C9ABC837 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef uint64_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_elemSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	uint64_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_elemSize)(___self0);
	#else
	uint64_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.UInt64 OpenCvSharp.NativeMethods::core_Mat_elemSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t NativeMethods_core_Mat_elemSize1_m9F6786DF35E803852D4ADA1F7D6E6F0C2684B558 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef uint64_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_elemSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	uint64_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_elemSize1)(___self0);
	#else
	uint64_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_empty(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_empty_mD15634983496A7FCE849F5BF213E4825985A7169 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_empty", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_empty)(___self0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_eye(System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_eye_mD81DAF8482D42D69FF15A90C15B5064F0E92C78B (int32_t ___rows0, int32_t ___cols1, int32_t ___type2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_eye", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_eye)(___rows0, ___cols1, ___type2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___rows0, ___cols1, ___type2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_inv1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_inv1_m9B1D11F041DD336E3EAA641709D3C48F61B48354 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_inv1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_inv1)(___self0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_inv2(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_inv2_mDF0BDE6CFFA566BF008BC1275F8BE9282A9426C6 (intptr_t ___self0, int32_t ___method1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_inv2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_inv2)(___self0, ___method1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___method1);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_isContinuous(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_isContinuous_m24509635471DEA526BD686D036B3246E6224BE98 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_isContinuous", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_isContinuous)(___self0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_isSubmatrix(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_isSubmatrix_mE4194FC0F1C90BA49E41E86860F0AAA42A54095F (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_isSubmatrix", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_isSubmatrix)(___self0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_Mat_locateROI(System.IntPtr,OpenCvSharp.Size&,OpenCvSharp.Point&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_locateROI_m4A00FFF544CE4D56D4B590A6F251F85CDC8F9D12 (intptr_t ___self0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31* ___wholeSize1, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ___ofs2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31*) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_locateROI", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_locateROI)(___self0, ___wholeSize1, ___ofs2);
	#else
	il2cppPInvokeFunc(___self0, ___wholeSize1, ___ofs2);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_mul1(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_mul1_mDC8CFA0A93A70D6E29AADC4A6C7E2CEF13B13A6C (intptr_t ___self0, intptr_t ___m1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_mul1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_mul1)(___self0, ___m1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___m1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_mul2(System.IntPtr,System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_mul2_m32ACB5693A3F6143036DBD62BDE4D411AC122755 (intptr_t ___self0, intptr_t ___m1, double ___scale2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_mul2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_mul2)(___self0, ___m1, ___scale2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___m1, ___scale2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_ones1(System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_ones1_mCB7561D5166B4160F93463692079927D4594F1FC (int32_t ___rows0, int32_t ___cols1, int32_t ___type2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_ones1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_ones1)(___rows0, ___cols1, ___type2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___rows0, ___cols1, ___type2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_ones2(System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_ones2_mAA1E85AE153438B4859246E5C89D86418356F820 (int32_t ___ndims0, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___sz1, int32_t ___type2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_ones2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___sz1' to native representation
	int32_t* ____sz1_marshaled = NULL;
	if (___sz1 != NULL)
	{
		____sz1_marshaled = reinterpret_cast<int32_t*>((___sz1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_ones2)(___ndims0, ____sz1_marshaled, ___type2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ndims0, ____sz1_marshaled, ___type2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_reshape1(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_reshape1_m75BF74CC96D74E3CC82C6BAB06CB30799D370B80 (intptr_t ___self0, int32_t ___cn1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_reshape1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_reshape1)(___self0, ___cn1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___cn1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_reshape2(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_reshape2_mCF3666089BB3A7E2683F74312050DE80D4A15A42 (intptr_t ___self0, int32_t ___cn1, int32_t ___rows2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_reshape2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_reshape2)(___self0, ___cn1, ___rows2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___cn1, ___rows2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_reshape3(System.IntPtr,System.Int32,System.Int32,System.Int32[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_reshape3_m7CCE7C639DCDDFF868402A4048A8F181D13B4E79 (intptr_t ___self0, int32_t ___cn1, int32_t ___newndims2, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___newsz3, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_reshape3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___newsz3' to native representation
	int32_t* ____newsz3_marshaled = NULL;
	if (___newsz3 != NULL)
	{
		____newsz3_marshaled = reinterpret_cast<int32_t*>((___newsz3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_reshape3)(___self0, ___cn1, ___newndims2, ____newsz3_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___cn1, ___newndims2, ____newsz3_marshaled);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_rows(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_rows_mAA00792C7228D4767F04502C803E8E1698B3221F (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_rows", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_rows)(___self0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_row_toMat(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_row_toMat_m389294A6DAC261AD25C8C8B72DBA5880628AA689 (intptr_t ___self0, int32_t ___y1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_row_toMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_row_toMat)(___self0, ___y1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___y1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_row_toMatExpr(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_row_toMatExpr_m267DC1E866A3A05701EB2898E393889B385C8792 (intptr_t ___self0, int32_t ___y1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_row_toMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_row_toMatExpr)(___self0, ___y1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___y1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_rowRange_toMat(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_rowRange_toMat_m964D09E2D27D1DE0ED2534C723927660390B4AFC (intptr_t ___self0, int32_t ___startRow1, int32_t ___endRow2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_rowRange_toMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_rowRange_toMat)(___self0, ___startRow1, ___endRow2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___startRow1, ___endRow2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_rowRange_toMatExpr(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_rowRange_toMatExpr_m8485D9EC0B4DA76F35BE06C2313BC645AF45424C (intptr_t ___self0, int32_t ___startRow1, int32_t ___endRow2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_rowRange_toMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_rowRange_toMatExpr)(___self0, ___startRow1, ___endRow2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___startRow1, ___endRow2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_setTo_Scalar(System.IntPtr,OpenCvSharp.Scalar,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_setTo_Scalar_m6AF84F5C8F3309D444133E5D34CA056DAF654681 (intptr_t ___self0, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___value1, intptr_t ___mask2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_setTo_Scalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_setTo_Scalar)(___self0, ___value1, ___mask2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___value1, ___mask2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_setTo_InputArray(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_setTo_InputArray_mFE4B33A2378A94C6D04CFA8A4566B6E32E51912F (intptr_t ___self0, intptr_t ___value1, intptr_t ___mask2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_setTo_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_setTo_InputArray)(___self0, ___value1, ___mask2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___value1, ___mask2);
	#endif

	return returnValue;
}
// OpenCvSharp.Size OpenCvSharp.NativeMethods::core_Mat_size(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 NativeMethods_core_Mat_size_m5098C8CE484B9EC8FCDC77E58652343847199518 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_size", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_size)(___self0);
	#else
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_sizeAt(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_sizeAt_mAC2DFE2B9D4CFC48F2D0F03B3D1D5FF7F0A82B79 (intptr_t ___self0, int32_t ___i1, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_sizeAt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_sizeAt)(___self0, ___i1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___self0, ___i1);
	#endif

	return returnValue;
}
// System.UInt64 OpenCvSharp.NativeMethods::core_Mat_step1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t NativeMethods_core_Mat_step1_m0237732BF3E407B3ACF9DC48D86C6063D1199E8E (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef uint64_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_step11", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	uint64_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_step11)(___self0);
	#else
	uint64_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.UInt64 OpenCvSharp.NativeMethods::core_Mat_step1(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t NativeMethods_core_Mat_step1_m008640869816DBE9525C25B65F89E6C862D85C15 (intptr_t ___self0, int32_t ___i1, const RuntimeMethod* method) 
{
	typedef uint64_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_step12", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	uint64_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_step12)(___self0, ___i1);
	#else
	uint64_t returnValue = il2cppPInvokeFunc(___self0, ___i1);
	#endif

	return returnValue;
}
// System.Int64 OpenCvSharp.NativeMethods::core_Mat_step(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int64_t NativeMethods_core_Mat_step_mD132ABE5714AA81C45FBF260A99909AD566A9788 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef int64_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_step", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int64_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_step)(___self0);
	#else
	int64_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.UInt64 OpenCvSharp.NativeMethods::core_Mat_stepAt(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t NativeMethods_core_Mat_stepAt_mA15A663E7E0BD992C60358094A6656F2325F5C89 (intptr_t ___self0, int32_t ___i1, const RuntimeMethod* method) 
{
	typedef uint64_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_stepAt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	uint64_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_stepAt)(___self0, ___i1);
	#else
	uint64_t returnValue = il2cppPInvokeFunc(___self0, ___i1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_subMat1(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_subMat1_m1CB84542CFB902EF01839BE29BB386F8D648E445 (intptr_t ___self0, int32_t ___rowStart1, int32_t ___rowEnd2, int32_t ___colStart3, int32_t ___colEnd4, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_subMat1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_subMat1)(___self0, ___rowStart1, ___rowEnd2, ___colStart3, ___colEnd4);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___rowStart1, ___rowEnd2, ___colStart3, ___colEnd4);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_subMat2(System.IntPtr,System.Int32,OpenCvSharp.Range[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_subMat2_mF85D3109143B07763D10B5A0398FEE076C197DEA (intptr_t ___self0, int32_t ___nRanges1, RangeU5BU5D_t7A815EED0DB267C51F9F6C0507B9579B68391756* ___ranges2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, Range_t981FA0C4141FE7585A1C292A250B431019099C09*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_subMat2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___ranges2' to native representation
	Range_t981FA0C4141FE7585A1C292A250B431019099C09* ____ranges2_marshaled = NULL;
	if (___ranges2 != NULL)
	{
		____ranges2_marshaled = reinterpret_cast<Range_t981FA0C4141FE7585A1C292A250B431019099C09*>((___ranges2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_subMat2)(___self0, ___nRanges1, ____ranges2_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___nRanges1, ____ranges2_marshaled);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_t(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_t_m94753997817004223A71714767396EA5D30AC8B5 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_t", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_t)(___self0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.UInt64 OpenCvSharp.NativeMethods::core_Mat_total(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t NativeMethods_core_Mat_total_m73E8D0ABC828DE6EB09C0E01590991DBCC16DDE4 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef uint64_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_total", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	uint64_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_total)(___self0);
	#else
	uint64_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_type(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_type_m7B1F65E83292898270EA2AF9008EE49C33FB591F (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_type", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_type)(___self0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_zeros1(System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_zeros1_mFE5B63452F73F581D36D73271882D7F28DEC9ACA (int32_t ___rows0, int32_t ___cols1, int32_t ___type2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_zeros1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_zeros1)(___rows0, ___cols1, ___type2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___rows0, ___cols1, ___type2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_zeros2(System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_zeros2_m5BF7DFC132D433F0E158C43D66235FDE79561633 (int32_t ___ndims0, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___sz1, int32_t ___type2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_zeros2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___sz1' to native representation
	int32_t* ____sz1_marshaled = NULL;
	if (___sz1 != NULL)
	{
		____sz1_marshaled = reinterpret_cast<int32_t*>((___sz1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_zeros2)(___ndims0, ____sz1_marshaled, ___type2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ndims0, ____sz1_marshaled, ___type2);
	#endif

	return returnValue;
}
// System.SByte* OpenCvSharp.NativeMethods::core_Mat_dump(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int8_t* NativeMethods_core_Mat_dump_mF2357414026436F1641EC013BDD67303C18683C6 (intptr_t ___self0, String_t* ___format1, const RuntimeMethod* method) 
{
	typedef int8_t* (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_dump", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___format1' to native representation
	char* ____format1_marshaled = NULL;
	____format1_marshaled = il2cpp_codegen_marshal_string(___format1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int8_t* returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_dump)(___self0, ____format1_marshaled);
	#else
	int8_t* returnValue = il2cppPInvokeFunc(___self0, ____format1_marshaled);
	#endif

	// Marshaling cleanup of parameter '___format1' native representation
	il2cpp_codegen_marshal_free(____format1_marshaled);
	____format1_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_Mat_dump_delete(System.SByte*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_dump_delete_m217B480867C81D78C6AB505BCC9DCD11ABF37B1F (int8_t* ___buf0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (int8_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int8_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_dump_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_dump_delete)(___buf0);
	#else
	il2cppPInvokeFunc(___buf0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_ptr1d(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_ptr1d_m1F582FB3F0D51190CF97311325A044E01EF806D5 (intptr_t ___self0, int32_t ___i01, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_ptr1d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_ptr1d)(___self0, ___i01);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___i01);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_ptr2d(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_ptr2d_mCC24B8C69B0191E29ED49B135E76560E623BCB69 (intptr_t ___self0, int32_t ___i01, int32_t ___i12, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_ptr2d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_ptr2d)(___self0, ___i01, ___i12);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___i01, ___i12);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_ptr3d(System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_ptr3d_m3A26E4B9B90E29B70B46954830DAF97EF7025613 (intptr_t ___self0, int32_t ___i01, int32_t ___i12, int32_t ___i23, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_ptr3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_ptr3d)(___self0, ___i01, ___i12, ___i23);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___i01, ___i12, ___i23);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_ptrnd(System.IntPtr,System.Int32[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_ptrnd_mEE2E59FC62EF9B8EEC32E74BE16209D79DC5DBC4 (intptr_t ___self0, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___idx1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_ptrnd", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___idx1' to native representation
	int32_t* ____idx1_marshaled = NULL;
	if (___idx1 != NULL)
	{
		____idx1_marshaled = reinterpret_cast<int32_t*>((___idx1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_ptrnd)(___self0, ____idx1_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ____idx1_marshaled);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_Mat_assignment_FromMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_assignment_FromMat_m8B43B8131B45E4ACA76F97914D58FF604A947016 (intptr_t ___self0, intptr_t ___newMat1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_assignment_FromMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_assignment_FromMat)(___self0, ___newMat1);
	#else
	il2cppPInvokeFunc(___self0, ___newMat1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_assignment_FromMatExpr(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_assignment_FromMatExpr_m41B50FCE18203AC6E789DA125AF80D04500B6F53 (intptr_t ___self0, intptr_t ___newMatExpr1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_assignment_FromMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_assignment_FromMatExpr)(___self0, ___newMatExpr1);
	#else
	il2cppPInvokeFunc(___self0, ___newMatExpr1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_assignment_FromScalar(System.IntPtr,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_assignment_FromScalar_mA7693EC65E3BB6EA03F33975E4B53DF91A760E92 (intptr_t ___self0, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___scalar1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_assignment_FromScalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_assignment_FromScalar)(___self0, ___scalar1);
	#else
	il2cppPInvokeFunc(___self0, ___scalar1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_IplImage(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_IplImage_m280C1DE32AEB9B6F872BD6556987720EC92B832D (intptr_t ___self0, intptr_t ___outImage1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_IplImage", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_IplImage)(___self0, ___outImage1);
	#else
	il2cppPInvokeFunc(___self0, ___outImage1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_IplImage_alignment(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_IplImage_alignment_m21E3CF3D23428F7FCFB148CE13F88FAC8FA79300 (intptr_t ___self0, intptr_t* ___outImage1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_IplImage_alignment", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_IplImage_alignment)(___self0, ___outImage1);
	#else
	il2cppPInvokeFunc(___self0, ___outImage1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_CvMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_CvMat_mA56B13C53392F1C08FB81D19DBA444536A8F5196 (intptr_t ___self0, intptr_t ___outMat1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_CvMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_CvMat)(___self0, ___outMat1);
	#else
	il2cppPInvokeFunc(___self0, ___outMat1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorUnaryMinus(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorUnaryMinus_m91D06BCEE7F371F1AB507DBC48DEA2AA6F2D65D8 (intptr_t ___mat0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorUnaryMinus", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorUnaryMinus)(___mat0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___mat0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorAdd_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorAdd_MatMat_m4A9A86328185696C5F8D35A4A968C90720A0BA9F (intptr_t ___a0, intptr_t ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorAdd_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorAdd_MatMat)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorAdd_MatScalar(System.IntPtr,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorAdd_MatScalar_m34B5FF948B205ADBCF5F99CB902358533AAC6A3C (intptr_t ___a0, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___s1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorAdd_MatScalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorAdd_MatScalar)(___a0, ___s1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___s1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorAdd_ScalarMat(OpenCvSharp.Scalar,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorAdd_ScalarMat_m666467A6374210DB00E3794F2DEE4ACD51DE626C (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___s0, intptr_t ___a1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorAdd_ScalarMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorAdd_ScalarMat)(___s0, ___a1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___s0, ___a1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorMinus_Mat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorMinus_Mat_m23C2A0265273ED4A3E539CE735522BE1223452CC (intptr_t ___a0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorMinus_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorMinus_Mat)(___a0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorSubtract_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorSubtract_MatMat_m46151433646E098DACECA0714C463CA1C1DA243D (intptr_t ___a0, intptr_t ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorSubtract_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorSubtract_MatMat)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorSubtract_MatScalar(System.IntPtr,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorSubtract_MatScalar_m2D6353E279FBBC7CD26CB44EE929CD54345E965A (intptr_t ___a0, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___s1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorSubtract_MatScalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorSubtract_MatScalar)(___a0, ___s1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___s1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorSubtract_ScalarMat(OpenCvSharp.Scalar,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorSubtract_ScalarMat_mB978F6C4E2675F96863884A82B095FB283C871AF (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___s0, intptr_t ___a1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorSubtract_ScalarMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorSubtract_ScalarMat)(___s0, ___a1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___s0, ___a1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorMultiply_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorMultiply_MatMat_mE326F91A292ECF427168D9B123E7F5C2D8C12D85 (intptr_t ___a0, intptr_t ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorMultiply_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorMultiply_MatMat)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorMultiply_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorMultiply_MatDouble_m4ECCB2D123A28FD538EAD194C49F0C559223C637 (intptr_t ___a0, double ___s1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorMultiply_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorMultiply_MatDouble)(___a0, ___s1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___s1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorMultiply_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorMultiply_DoubleMat_m921AA702A8D0F989FD077AD5FE5295D8BA3ABFAE (double ___s0, intptr_t ___a1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorMultiply_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorMultiply_DoubleMat)(___s0, ___a1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___s0, ___a1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorDivide_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorDivide_MatMat_mDD3CC788EB8FF72A3A6E206425F58EBC6D895884 (intptr_t ___a0, intptr_t ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorDivide_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorDivide_MatMat)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorDivide_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorDivide_MatDouble_m67E879826C389164C236D51986D27C19847CCE59 (intptr_t ___a0, double ___s1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorDivide_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorDivide_MatDouble)(___a0, ___s1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___s1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorDivide_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorDivide_DoubleMat_mFAB27D81F84C61FE38146B84FECB31A9E2255459 (double ___s0, intptr_t ___a1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorDivide_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorDivide_DoubleMat)(___s0, ___a1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___s0, ___a1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorAnd_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorAnd_MatMat_mACB0417E2DC27A5C90A0B392579789B81A1FD13D (intptr_t ___a0, intptr_t ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorAnd_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorAnd_MatMat)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorAnd_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorAnd_MatDouble_mA1D0121381925E961F1ACDCB282EB8598F11B110 (intptr_t ___a0, double ___s1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorAnd_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorAnd_MatDouble)(___a0, ___s1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___s1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorAnd_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorAnd_DoubleMat_mEE27F922C7D235F427A08416DF2187644AC35BB8 (double ___s0, intptr_t ___a1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorAnd_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorAnd_DoubleMat)(___s0, ___a1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___s0, ___a1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorOr_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorOr_MatMat_mF082ED54FB9D30DD293C4C457A82AAC7DFE3B0E5 (intptr_t ___a0, intptr_t ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorOr_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorOr_MatMat)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorOr_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorOr_MatDouble_mCC1E02923E8BEC4DAFC4DA559BA5D1695F33AAB3 (intptr_t ___a0, double ___s1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorOr_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorOr_MatDouble)(___a0, ___s1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___s1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorOr_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorOr_DoubleMat_m40097525658185ABA6A30AE395A0A6398DE1450A (double ___s0, intptr_t ___a1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorOr_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorOr_DoubleMat)(___s0, ___a1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___s0, ___a1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorXor_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorXor_MatMat_mD0D4EED159AD8C99F9477E4A8BAF85A4FCC27185 (intptr_t ___a0, intptr_t ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorXor_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorXor_MatMat)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorXor_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorXor_MatDouble_mBCDB0BD7C593CDD65F43140BD47E2AB82D9EE903 (intptr_t ___a0, double ___s1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorXor_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorXor_MatDouble)(___a0, ___s1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___s1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorXor_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorXor_DoubleMat_m7D7017684A6499428CA86B8669CD14A5DFA9B36B (double ___s0, intptr_t ___a1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorXor_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorXor_DoubleMat)(___s0, ___a1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___s0, ___a1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorNot(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorNot_mF443C99C27D7DF06591BEE7F039F593AE1F96EFB (intptr_t ___a0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorNot", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorNot)(___a0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorLT_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorLT_MatMat_m86DE4B725529ADC87C0C1CE51E7C22647C432A09 (intptr_t ___a0, intptr_t ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorLT_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorLT_MatMat)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorLT_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorLT_DoubleMat_m891CF95FE4B3BA337332F423CC15892DAF366DA2 (double ___a0, intptr_t ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorLT_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorLT_DoubleMat)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorLT_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorLT_MatDouble_mCAACEF5F96BCA6A4410AB0C99374F9C5C14E9613 (intptr_t ___a0, double ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorLT_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorLT_MatDouble)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorLE_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorLE_MatMat_m5E8F995A60E6F1E1514207252D4D97EF8F184634 (intptr_t ___a0, intptr_t ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorLE_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorLE_MatMat)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorLE_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorLE_DoubleMat_m284648956F0E47F87AC7DB17FE8BBA97528B2599 (double ___a0, intptr_t ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorLE_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorLE_DoubleMat)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorLE_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorLE_MatDouble_m0D281A8B9D93DBAEB598A24BD323816ABB894572 (intptr_t ___a0, double ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorLE_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorLE_MatDouble)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorGT_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorGT_MatMat_m3F4E6BFF2AEF6F488663DBE55A05637732165B72 (intptr_t ___a0, intptr_t ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorGT_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorGT_MatMat)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorGT_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorGT_DoubleMat_mD8A21E85D3574427EB65FCAD1230340E7364E257 (double ___a0, intptr_t ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorGT_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorGT_DoubleMat)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorGT_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorGT_MatDouble_m9CF19594FBD8CCDF51EA8ADC5E9CA079A9D972AD (intptr_t ___a0, double ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorGT_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorGT_MatDouble)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorGE_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorGE_MatMat_m9629C36D6B8670D462057F32EE3598F41820BECB (intptr_t ___a0, intptr_t ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorGE_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorGE_MatMat)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorGE_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorGE_DoubleMat_mC60BED0015BD9E5396A70927FFFB59B5F8C7E8EE (double ___a0, intptr_t ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorGE_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorGE_DoubleMat)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorGE_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorGE_MatDouble_mBE59AAB326191C75FDFF67EB5FE5DCC5DF26A881 (intptr_t ___a0, double ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorGE_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorGE_MatDouble)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorEQ_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorEQ_MatMat_mC71101F817E1953D101C8C9B4FAEA8E09DC18369 (intptr_t ___a0, intptr_t ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorEQ_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorEQ_MatMat)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorEQ_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorEQ_DoubleMat_m8A6C533C535728738EFD9F275DE8932EFFFB45EA (double ___a0, intptr_t ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorEQ_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorEQ_DoubleMat)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorEQ_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorEQ_MatDouble_m72945D6B3FC6E538578F83F114061D5A18FDC3FC (intptr_t ___a0, double ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorEQ_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorEQ_MatDouble)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorNE_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorNE_MatMat_mF8D09E914908F8393836DA847E91D8A9926D1145 (intptr_t ___a0, intptr_t ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorNE_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorNE_MatMat)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorNE_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorNE_DoubleMat_m97E2DEAAF70E904DE11E70F83E67002CDEAC755A (double ___a0, intptr_t ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorNE_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorNE_DoubleMat)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorNE_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorNE_MatDouble_m03F920784372D9A437723771C9AA1EED3A1CCED0 (intptr_t ___a0, double ___b1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorNE_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorNE_MatDouble)(___a0, ___b1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___a0, ___b1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_abs_Mat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_abs_Mat_mE900CAAC5B7553969E8A81D4E38C2B8ACE89D7A4 (intptr_t ___e0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_abs_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_abs_Mat)(___e0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___e0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetB(System.IntPtr,System.Int32,System.Int32,System.Byte[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetB_m14C732DFF3A8F921BB64375B9E78E2FFAD72FEE9 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, uint8_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetB", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	uint8_t* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<uint8_t*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetB)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetB(System.IntPtr,System.Int32,System.Int32,System.Byte[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetB_m7772121FAC44F2FCD9576E1631BB83EA46F4BAAB (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, ByteU5BU2CU5D_tFF0F8305C018904B90DCD1740962BABBC458B638* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Byte[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetS(System.IntPtr,System.Int32,System.Int32,System.Int16[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetS_m12B9C14D736E637DEE9D216D0B4A59FD6DB7FB66 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Int16U5BU5D_t8175CE8DD9C9F9FB0CF4F58E45BC570575B43CFB* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int16_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetS", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	int16_t* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<int16_t*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetS)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetS(System.IntPtr,System.Int32,System.Int32,System.Int16[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetS_mD23D2819D038F5A0A1E467D1112A1736D4ACE9E2 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Int16U5BU2CU5D_tA1085F28F76441E5B3C4F55200C853889884825E* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Int16[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetS(System.IntPtr,System.Int32,System.Int32,System.UInt16[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetS_m268E2A5F9F3B3F14A3F2A59E4C4F99F3C83D05EF (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, UInt16U5BU5D_tEB7C42D811D999D2AA815BADC3FCCDD9C67B3F83* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, uint16_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetS", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	uint16_t* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<uint16_t*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetS)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetS(System.IntPtr,System.Int32,System.Int32,System.UInt16[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetS_mE002357F4217BF7F526272F900D816C183E817FD (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, UInt16U5BU2CU5D_t2C918D9FF94D8CF06CE395FB8C6B931FA8B8AE1B* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.UInt16[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetI(System.IntPtr,System.Int32,System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetI_m7E6F563D9BA3D5A43305603469B45DD5D2C5B7BF (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetI", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	int32_t* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<int32_t*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetI)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetI(System.IntPtr,System.Int32,System.Int32,System.Int32[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetI_mFADD258DEBB0BA79052C43E32880FC81BEF7AC52 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Int32[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetF(System.IntPtr,System.Int32,System.Int32,System.Single[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetF_m9E6683C69229EB4D001AF6C73C16F8F56272F160 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, float*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetF", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	float* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<float*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetF)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetF(System.IntPtr,System.Int32,System.Int32,System.Single[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetF_m40F679F6BFDA4EB074B26942D6344D19EC56ED0A (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, SingleU5BU2CU5D_t8C95DA2D5056EB0490FC7DCB1ED30E33DE1D53F4* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Single[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetD(System.IntPtr,System.Int32,System.Int32,System.Double[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetD_mDDAFDA4092663EB1B47173081610C610A752F945 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, double*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetD", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	double* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<double*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetD)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetD(System.IntPtr,System.Int32,System.Int32,System.Double[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetD_mDD33A1BD87C96656E7EC584671FC01F2C64DC154 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetVec3b(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec3b[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetVec3b_m0E5174FBFAE442953EF84D388EEB3BE43F31D80A (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Vec3bU5BU5D_t65AD1F336D24EA9AD600B4A6CB27B3B517C138EE* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetVec3b", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetVec3b)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetVec3b(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec3b[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetVec3b_m14D56740C02C887A51C94BF66FB458404A1F9CFA (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Vec3bU5BU2CU5D_tE90BFA4A10C08A985D030E3187325900CBF521B5* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Vec3b[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetVec3d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec3d[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetVec3d_m4EA9CDB20ACC738CED8DB01848E43D835209E798 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Vec3dU5BU5D_t7F6500BD6738D9EF9379BBF49E20270DD8FE005E* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetVec3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetVec3d)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetVec3d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec3d[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetVec3d_mF7FB4B6E0D75835027D2E7CFB38E5B8E5D6CFDB9 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Vec3dU5BU2CU5D_t29CB373947AD17A0ECF7B4EEB20936B21D140804* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Vec3d[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetVec4f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec4f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetVec4f_mAAC077F09EB92A76FF21F5E241F4FB478CEF4437 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Vec4fU5BU5D_t3B2FBCD7291E3C966FB625B86393DC5CDB180A64* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetVec4f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetVec4f)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetVec4f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec4f[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetVec4f_mF0B3FA667F4DF206A7DAF26E4C1504270B2F05A7 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Vec4fU5BU2CU5D_t54D8EA2F459F41BD179635792BF550EB3E317FDF* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Vec4f[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetVec6f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec6f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetVec6f_mE999DC1081F93B1005207068A48D3421899C5C5F (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Vec6fU5BU5D_t592D4E62D13229DBA0A9CD133ADE98A5E27449C3* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetVec6f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetVec6f)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetVec6f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec6f[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetVec6f_mBFDE7EE6727190439572E26D470461CDE2F48EBB (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Vec6fU5BU2CU5D_t7C67D2C5EDBC06D656BC54F1A2409DE9F3334AAE* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Vec6f[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetVec4i(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec4i[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetVec4i_m363578117057904ABF1BD532F9715636EAAD1334 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Vec4iU5BU5D_tA592A0B55AB1329BD078300CADFC474499AA7157* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetVec4i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetVec4i)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetVec4i(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec4i[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetVec4i_m1FC4FE901140EE267FFC4EF5EA67698BB0E9B54A (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Vec4iU5BU2CU5D_t438C08E75365B75E4142B910325D19F21F4C6CD9* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Vec4i[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint_m0437E6EF89E8E7240570831E066E08F2F4306619 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetPoint", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetPoint)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint_m4316E34C64623123095FD6532BD84F9AA02556E1 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, PointU5BU2CU5D_t75336C640C8EF9A5D74131EF2FF56ADE1E04A0A3* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint2f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point2f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint2f_m3D5A5962126878B085B74B2D4600E3739E70E478 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetPoint2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetPoint2f)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint2f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point2f[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint2f_mEC8C34ABA4642A4FE6C300D34CEF2FFD0D301CCA (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Point2fU5BU2CU5D_t534637B478C32FFC446C173967390F3A2A61FBEF* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point2f[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint2d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point2d[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint2d_m7DCFB9BC6048DB93FF922427ABC76D5AB06B517B (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetPoint2d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetPoint2d)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint2d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point2d[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint2d_m4B71BE13C433B339243356D977609E77416E3C85 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Point2dU5BU2CU5D_t7484AAFF04C19494AB4D23D45BE7FB1371C8B4DE* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point2d[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint3i(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3i[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint3i_mE0C7A4E49DB54BD9E0E930A8152CD78E2F51D993 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Point3iU5BU5D_t4ADE5D61157E49120DBB2AC37D0C253B312688EC* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetPoint3i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetPoint3i)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint3i(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3i[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint3i_m6CD92EBA9486CA9C5F435B7973E238B66C639A62 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Point3iU5BU2CU5D_t9D63D6246F01F8C00A5D07420A3EC8F43E7EB075* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point3i[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint3f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint3f_mAF4FAB6FB299371B800F16BDE92F362C6432A047 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetPoint3f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetPoint3f)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint3f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3f[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint3f_m8F93EFF7C463BBD0FCF122B6507A0EF1998609B5 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Point3fU5BU2CU5D_t956F68C0D8D3E941181E3BDAA0CDF49861545B6C* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point3f[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint3d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3d[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint3d_mC994C4676C2D42C6607FC2C66D4708583C086A5D (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Point3dU5BU5D_tCFCFAEE9362D1E9BA210F2CBFABAEC68D052F43D* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetPoint3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetPoint3d)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint3d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3d[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint3d_m9E28D827AEDE0BEA15DC34121F7A61F98CB16EC0 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Point3dU5BU2CU5D_tF448DE8BEF99C9C7200AC09879C34D2B9BB16E43* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point3d[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetRect(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Rect[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetRect_m1F22797FA2DC3192FE9E18E20055483C6C52105A (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, RectU5BU5D_t8D707798510E7E6C5EDA64E457B86964B724B96A* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetRect", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetRect)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetRect(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Rect[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetRect_m70D7DA3FCE7A61BCB488DFAFCC5342D609E30CC2 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, RectU5BU2CU5D_t466728D2C4C1410891B29B2693FA0796C414CC2D* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Rect[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetB(System.IntPtr,System.Int32,System.Int32,System.Byte[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetB_m71A3AE6C9B9CEFE675B70B98829395BE9F68CF6B (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, uint8_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetB", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	uint8_t* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<uint8_t*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetB)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetB(System.IntPtr,System.Int32,System.Int32,System.Byte[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetB_mA5E823582F2CB53A062AD89F4E11AD340404CF75 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, ByteU5BU2CU5D_tFF0F8305C018904B90DCD1740962BABBC458B638* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Byte[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetS(System.IntPtr,System.Int32,System.Int32,System.Int16[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetS_m0AA4E8F1E2E3CA867F3CCD0F98D1EE056F0DD446 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Int16U5BU5D_t8175CE8DD9C9F9FB0CF4F58E45BC570575B43CFB* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int16_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetS", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	int16_t* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<int16_t*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetS)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetS(System.IntPtr,System.Int32,System.Int32,System.Int16[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetS_m911DDD953C4CBF775AFABF28E0900E4D7EE86DA9 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Int16U5BU2CU5D_tA1085F28F76441E5B3C4F55200C853889884825E* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Int16[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetS(System.IntPtr,System.Int32,System.Int32,System.UInt16[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetS_m0171942258A9F761315D6D095FAF35A57718E615 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, UInt16U5BU5D_tEB7C42D811D999D2AA815BADC3FCCDD9C67B3F83* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, uint16_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetS", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	uint16_t* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<uint16_t*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetS)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetS(System.IntPtr,System.Int32,System.Int32,System.UInt16[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetS_m61FFF0E28AAA600648DD710FCFE874D1F3B7E303 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, UInt16U5BU2CU5D_t2C918D9FF94D8CF06CE395FB8C6B931FA8B8AE1B* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.UInt16[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetI(System.IntPtr,System.Int32,System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetI_m32C38671BFFEA4603594C53FB21E10B22AEBAFD6 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetI", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	int32_t* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<int32_t*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetI)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetI(System.IntPtr,System.Int32,System.Int32,System.Int32[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetI_m82B14572925BE6D7D4EADF19B9ACDE2563C3B8C3 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Int32[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetF(System.IntPtr,System.Int32,System.Int32,System.Single[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetF_m38FEE60A8406DDEFFE1DA4EECA66C6EE1E8F9B8B (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, float*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetF", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	float* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<float*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetF)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetF(System.IntPtr,System.Int32,System.Int32,System.Single[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetF_mAB70086FBA0AAB92E8FAEA252FC7416ED05BD989 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, SingleU5BU2CU5D_t8C95DA2D5056EB0490FC7DCB1ED30E33DE1D53F4* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Single[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetD(System.IntPtr,System.Int32,System.Int32,System.Double[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetD_m4DA3B93D6D2F9807DD11AA71BD2CAD53254D9C98 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, double*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetD", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	double* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<double*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetD)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetD(System.IntPtr,System.Int32,System.Int32,System.Double[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetD_m3B9C5566E5A1B004F6116A56AF20230659DD9F46 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetVec3b(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec3b[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetVec3b_mCC1469BB57E9905CF072468FC5985129E8703800 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Vec3bU5BU5D_t65AD1F336D24EA9AD600B4A6CB27B3B517C138EE* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetVec3b", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetVec3b)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetVec3b(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec3b[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetVec3b_m4D04A7D32EC22418FC353A23029E0CD16AC9C855 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Vec3bU5BU2CU5D_tE90BFA4A10C08A985D030E3187325900CBF521B5* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Vec3b[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetVec3d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec3d[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetVec3d_m217EC71D025311CE9411E1D1255FB4CED5C48E32 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Vec3dU5BU5D_t7F6500BD6738D9EF9379BBF49E20270DD8FE005E* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetVec3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetVec3d)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetVec3d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec3d[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetVec3d_mD31372C2F137758B36A39ACB9976A079AA7A9C1F (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Vec3dU5BU2CU5D_t29CB373947AD17A0ECF7B4EEB20936B21D140804* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Vec3d[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetVec4f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec4f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetVec4f_m6341A6AD89D0B53604B57A95608DCAB419A88A0D (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Vec4fU5BU5D_t3B2FBCD7291E3C966FB625B86393DC5CDB180A64* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetVec4f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetVec4f)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetVec4f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec4f[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetVec4f_m66332FBB824D5F7C3A7401E33600F7BC61DD5ACA (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Vec4fU5BU2CU5D_t54D8EA2F459F41BD179635792BF550EB3E317FDF* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Vec4f[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetVec6f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec6f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetVec6f_mF2F86E33A2FAC8D97FDF055767004513EB6609F6 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Vec6fU5BU5D_t592D4E62D13229DBA0A9CD133ADE98A5E27449C3* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetVec6f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetVec6f)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetVec6f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec6f[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetVec6f_mD193AA8220738771FCD3FD30C59930D089F9FDB7 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Vec6fU5BU2CU5D_t7C67D2C5EDBC06D656BC54F1A2409DE9F3334AAE* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Vec6f[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetVec4i(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec4i[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetVec4i_mB329DA2E292C56913BE732BC3B9C61896F6B0E77 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Vec4iU5BU5D_tA592A0B55AB1329BD078300CADFC474499AA7157* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetVec4i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetVec4i)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetVec4i(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec4i[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetVec4i_mBBAD7E1F7DC0A39C2E44A483741580564868BE53 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Vec4iU5BU2CU5D_t438C08E75365B75E4142B910325D19F21F4C6CD9* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Vec4i[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint_m2C528D795473865DF7CB1884A6292504E73AEE90 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetPoint", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetPoint)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint_mDD73DE1CCC9FCD22C78BC3AA623E62187EA880FE (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, PointU5BU2CU5D_t75336C640C8EF9A5D74131EF2FF56ADE1E04A0A3* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint2f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point2f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint2f_mCC72049EEB69DCBE0B6F4EB110054461D0021141 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetPoint2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetPoint2f)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint2f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point2f[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint2f_mF732BB3E28D407424AD0059755DB3175F3035818 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Point2fU5BU2CU5D_t534637B478C32FFC446C173967390F3A2A61FBEF* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point2f[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint2d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point2d[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint2d_m19771BF8164BF71401A963C96E2B4B4B774A7FB6 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetPoint2d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetPoint2d)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint2d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point2d[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint2d_m18C811B7EBEBAAC0C22DC609414BA12184A4C164 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Point2dU5BU2CU5D_t7484AAFF04C19494AB4D23D45BE7FB1371C8B4DE* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point2d[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint3i(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3i[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint3i_mC49ED52289D7E14FB3AF32BC70AF35F7E19B95E5 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Point3iU5BU5D_t4ADE5D61157E49120DBB2AC37D0C253B312688EC* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetPoint3i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetPoint3i)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint3i(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3i[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint3i_m74F43FA429FEDC16C82B221B3E67CB34BD351236 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Point3iU5BU2CU5D_t9D63D6246F01F8C00A5D07420A3EC8F43E7EB075* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point3i[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint3f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint3f_m3ADCEFBC93019B5F9E8E0B3E282CFAB21EC71328 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetPoint3f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetPoint3f)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint3f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3f[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint3f_mD9151565CAE5D1C80651C5E7EBDFF5EA92FEFD30 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Point3fU5BU2CU5D_t956F68C0D8D3E941181E3BDAA0CDF49861545B6C* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point3f[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint3d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3d[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint3d_mE6942CB074EA067A038D7A7D50DF1EBAF4935112 (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Point3dU5BU5D_tCFCFAEE9362D1E9BA210F2CBFABAEC68D052F43D* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetPoint3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetPoint3d)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint3d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3d[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint3d_m71C07A62868499AD3922487A15710D43180EB82F (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, Point3dU5BU2CU5D_tF448DE8BEF99C9C7200AC09879C34D2B9BB16E43* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point3d[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetRect(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Rect[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetRect_mAF30A5D7CA74758956ABB3DA9632FFB3A080EE1A (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, RectU5BU5D_t8D707798510E7E6C5EDA64E457B86964B724B96A* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetRect", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vals3' to native representation
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ____vals3_marshaled = NULL;
	if (___vals3 != NULL)
	{
		____vals3_marshaled = reinterpret_cast<Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*>((___vals3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetRect)(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___row1, ___col2, ____vals3_marshaled, ___valsLength4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetRect(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Rect[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetRect_m0317CA27058D547745259C2E515A47AF7103DBFE (intptr_t ___obj0, int32_t ___row1, int32_t ___col2, RectU5BU2CU5D_t466728D2C4C1410891B29B2693FA0796C414CC2D* ___vals3, int32_t ___valsLength4, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Rect[,]'."), NULL);
}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Mat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Mat_m54ADD86020E4D1B0708B5512AF24E47D8261317B (intptr_t ___self0, intptr_t ___m1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Mat)(___self0, ___m1);
	#else
	il2cppPInvokeFunc(___self0, ___m1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_char(System.IntPtr,System.SByte)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_char_m0BB661A9D544734F1F075E5033494009F1DB2B80 (intptr_t ___self0, int8_t ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int8_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int8_t) + 3;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_char", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_char)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_uchar(System.IntPtr,System.Byte)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_uchar_mFDBB0DDCFFA1C846E763202CE4CAA19EBC2091EE (intptr_t ___self0, uint8_t ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, uint8_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint8_t) + 3;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_uchar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_uchar)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_short(System.IntPtr,System.Int16)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_short_mFD83D55A6FD0E3A2D1FB5F9279A2D4411C047C9B (intptr_t ___self0, int16_t ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int16_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int16_t) + 2;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_short", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_short)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_ushort(System.IntPtr,System.UInt16)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_ushort_mA66633839185349EA65977F2F6B63FED26B25621 (intptr_t ___self0, uint16_t ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, uint16_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint16_t) + 2;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_ushort", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_ushort)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_int(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_int_mE506BFCCF3BB87E5C99149EBC5A492FEAAAC643E (intptr_t ___self0, int32_t ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_int", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_int)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_float(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_float_mCB0B7E97D7D7391A80DCAD45AAE642CCF6490D57 (intptr_t ___self0, float ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_float", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_float)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_double(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_double_mB39FF348BB58B590A999B62D474877697890C157 (intptr_t ___self0, double ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_double", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_double)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec2b(System.IntPtr,OpenCvSharp.Vec2b)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec2b_m15E98D0F2D66CC3D23F78AB8D97525FD3019A8F7 (intptr_t ___self0, Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C) + 2;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec2b", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec2b)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec3b(System.IntPtr,OpenCvSharp.Vec3b)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec3b_m5CC15A450DE20FD9AAF78D28C206CA314B2F98B7 (intptr_t ___self0, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9) + 1;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec3b", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec3b)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec4b(System.IntPtr,OpenCvSharp.Vec4b)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec4b_m5D5C7267E66C4E9381A8E355278F40F9446DE634 (intptr_t ___self0, Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68 ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec4b", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec4b)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec6b(System.IntPtr,OpenCvSharp.Vec6b)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec6b_mB3868358A6134A52B7C41B9FD17705577546980D (intptr_t ___self0, Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C) + 2;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec6b", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec6b)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec2s(System.IntPtr,OpenCvSharp.Vec2s)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec2s_mBCAF9475C81E6502E4A31EE2F5E7814E25EF893D (intptr_t ___self0, Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68 ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec2s", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec2s)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec3s(System.IntPtr,OpenCvSharp.Vec3s)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec3s_mBB1B01DAC1F1CDECEC031C05BC4790DA40A513AC (intptr_t ___self0, Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA) + 2;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec3s", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec3s)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec4s(System.IntPtr,OpenCvSharp.Vec4s)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec4s_m3F3528E17D1A176A0228015AC622098808A45E1D (intptr_t ___self0, Vec4s_t36070B932676A14293929ED30FF39D45635126B5 ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec4s_t36070B932676A14293929ED30FF39D45635126B5);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec4s_t36070B932676A14293929ED30FF39D45635126B5);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec4s", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec4s)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec6s(System.IntPtr,OpenCvSharp.Vec6s)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec6s_m6729640EDB9113877956A5298EB1BBBEA5831344 (intptr_t ___self0, Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec6s", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec6s)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec2w(System.IntPtr,OpenCvSharp.Vec2w)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec2w_mB02860A4F6A23904EBFC747DFFDE437670A335F3 (intptr_t ___self0, Vec2w_tC86992B28B612E016C5DFE0C6AEFB352CA530B97 ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec2w_tC86992B28B612E016C5DFE0C6AEFB352CA530B97);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec2w_tC86992B28B612E016C5DFE0C6AEFB352CA530B97);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec2w", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec2w)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec3w(System.IntPtr,OpenCvSharp.Vec3w)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec3w_mB9743F9245FF6D0206A4670F65840208459948E7 (intptr_t ___self0, Vec3w_t639AB866E901F11C8B2102D9AABF3D326C187343 ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec3w_t639AB866E901F11C8B2102D9AABF3D326C187343);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec3w_t639AB866E901F11C8B2102D9AABF3D326C187343) + 2;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec3w", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec3w)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec4w(System.IntPtr,OpenCvSharp.Vec4w)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec4w_mD36C615AE352C1C4ABD5ABF555ECB0F228554DAE (intptr_t ___self0, Vec4w_tA5261E05040FD831243C9A62E36D8644449ECA63 ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec4w_tA5261E05040FD831243C9A62E36D8644449ECA63);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec4w_tA5261E05040FD831243C9A62E36D8644449ECA63);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec4w", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec4w)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec6w(System.IntPtr,OpenCvSharp.Vec6w)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec6w_m4223C8CC7D2ED114AD83CE62206C739AF53368AC (intptr_t ___self0, Vec6w_tAB37C7CF73E1BD9071AF39DA9F4F30A4A0D667D9 ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec6w_tAB37C7CF73E1BD9071AF39DA9F4F30A4A0D667D9);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec6w_tAB37C7CF73E1BD9071AF39DA9F4F30A4A0D667D9);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec6w", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec6w)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec2i(System.IntPtr,OpenCvSharp.Vec2i)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec2i_m94EEC5786181DAFD9F307EDC1F8724DD932B357E (intptr_t ___self0, Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37 ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec2i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec2i)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec3i(System.IntPtr,OpenCvSharp.Vec3i)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec3i_mE9A3FCF6F0DFD2A67A59E38F130FF1A6BDD68B9B (intptr_t ___self0, Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5 ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec3i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec3i)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec4i(System.IntPtr,OpenCvSharp.Vec4i)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec4i_m33E69EBA1203E5918B7F028F5E649ED8478578CD (intptr_t ___self0, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec4i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec4i)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec6i(System.IntPtr,OpenCvSharp.Vec6i)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec6i_mAD58E5C4E171FC671DCD26C9FA1CA59BCBA52637 (intptr_t ___self0, Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4 ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec6i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec6i)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec2f(System.IntPtr,OpenCvSharp.Vec2f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec2f_m6B47E0991CAF6FBD72BC2B25789F5D12E65984D9 (intptr_t ___self0, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec2f)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec3f(System.IntPtr,OpenCvSharp.Vec3f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec3f_m1609A30F4FAC59939727D2CFAFCF36A8DD3479DB (intptr_t ___self0, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4 ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec3f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec3f)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec4f(System.IntPtr,OpenCvSharp.Vec4f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec4f_m976B7D4C0DBD2C977F0C8E6D8A53D25EB7D46935 (intptr_t ___self0, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec4f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec4f)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec6f(System.IntPtr,OpenCvSharp.Vec6f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec6f_mF517E0BE796D5A1399E9D4C31A0A6C7A8A6B229E (intptr_t ___self0, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec6f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec6f)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec2d(System.IntPtr,OpenCvSharp.Vec2d)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec2d_mFEFB4B6EFBC481E5AEDDB1EB40D00F67FFE5670E (intptr_t ___self0, Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23 ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec2d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec2d)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec3d(System.IntPtr,OpenCvSharp.Vec3d)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec3d_m41D129FC86A8FA67CBA981A35A080D1F76B554AA (intptr_t ___self0, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec3d)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec6d(System.IntPtr,OpenCvSharp.Vec6d)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec6d_mAD2B8C8E121E85E658C496ACA535E4081E10B6C7 (intptr_t ___self0, Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6 ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec6d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec6d)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Point(System.IntPtr,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Point_mD01733A36BC73FD8716F26A3614453918B8A9ED5 (intptr_t ___self0, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Point)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Point2f(System.IntPtr,OpenCvSharp.Point2f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Point2f_m7A88D39D58289FE6FC5DD5247865C7B3785B0578 (intptr_t ___self0, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Point2f)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Point2d(System.IntPtr,OpenCvSharp.Point2d)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Point2d_m91D1F0DD245B4EA0D0A558E13654B2B6126E356A (intptr_t ___self0, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Point2d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Point2d)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Point3i(System.IntPtr,OpenCvSharp.Point3i)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Point3i_m8FC144CA9E957A0009FB14F5541147BB9038F4CE (intptr_t ___self0, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Point3i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Point3i)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Point3f(System.IntPtr,OpenCvSharp.Point3f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Point3f_mDD03D84DC9C176E357DCE86A4F1245FB97974881 (intptr_t ___self0, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Point3f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Point3f)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Point3d(System.IntPtr,OpenCvSharp.Point3d)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Point3d_mC93A13009E989C12A64EB1FB7A261F0DCA8AF9DA (intptr_t ___self0, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Point3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Point3d)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Size(System.IntPtr,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Size_mA2F1BE89C239F07A1AA47E099D7AE7A06AA932A8 (intptr_t ___self0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Size", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Size)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Size2f(System.IntPtr,OpenCvSharp.Size2f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Size2f_m3E9D29F8BD24D1918447807DE574634E2EBA4B3D (intptr_t ___self0, Size2f_tDE98F6BC79C37B2862E0197FB9FB5B739FA3EFF7 ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size2f_tDE98F6BC79C37B2862E0197FB9FB5B739FA3EFF7);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size2f_tDE98F6BC79C37B2862E0197FB9FB5B739FA3EFF7);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Size2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Size2f)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Rect(System.IntPtr,OpenCvSharp.Rect)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Rect_mFA659061F02085417EAFDE8F80E31701A8DA6E5A (intptr_t ___self0, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___v1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Rect", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Rect)(___self0, ___v1);
	#else
	il2cppPInvokeFunc(___self0, ___v1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_reserve(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_reserve_m3918FFF7B2E28B3C176F8D878E8B1848BF7046EA (intptr_t ___obj0, intptr_t ___sz1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_reserve", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_reserve)(___obj0, ___sz1);
	#else
	il2cppPInvokeFunc(___obj0, ___sz1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_resize1(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_resize1_m3B22006AFA79B9B0A0C5AE8CBCACF369DDE08686 (intptr_t ___obj0, intptr_t ___sz1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_resize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_resize1)(___obj0, ___sz1);
	#else
	il2cppPInvokeFunc(___obj0, ___sz1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_resize2(System.IntPtr,System.IntPtr,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_resize2_m6081E718B04ADD16D85C4D56CBCF0B13D7000A54 (intptr_t ___obj0, intptr_t ___sz1, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___s2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_resize2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_resize2)(___obj0, ___sz1, ___s2);
	#else
	il2cppPInvokeFunc(___obj0, ___sz1, ___s2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_pop_back(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_pop_back_m33D6011E9C37FE6C292F71581B498C7FD2F87751 (intptr_t ___obj0, intptr_t ___nelems1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_pop_back", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_pop_back)(___obj0, ___nelems1);
	#else
	il2cppPInvokeFunc(___obj0, ___nelems1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_uchar(System.IntPtr,OpenCvSharp.MatForeachFunctionByte)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_uchar_m11B20E337301A0DC85885371ADED732E348034D4 (intptr_t ___m0, MatForeachFunctionByte_t52C7B3A433F3DF065CEE966CFD028E1464F529E3* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_uchar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_uchar)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec2b(System.IntPtr,OpenCvSharp.MatForeachFunctionVec2b)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec2b_m6A677D283A614BED08A8467DB47E1FF2FA6CDC0B (intptr_t ___m0, MatForeachFunctionVec2b_tCF74100FFE496D5E2545413E6CA03932B0269828* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec2b", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec2b)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec3b(System.IntPtr,OpenCvSharp.MatForeachFunctionVec3b)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec3b_mD9DF128A9FC355A235E6079A2F3F3B8A28688A99 (intptr_t ___m0, MatForeachFunctionVec3b_t2031975BC30858291EFC4F7F2C65874DB23FCFE6* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec3b", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec3b)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec4b(System.IntPtr,OpenCvSharp.MatForeachFunctionVec4b)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec4b_m77453B66D83C8F575057A63E38FC8A34D11CC1FA (intptr_t ___m0, MatForeachFunctionVec4b_tC0FE30A53B19679D93C118745DE736E3EC44EC5A* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec4b", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec4b)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec6b(System.IntPtr,OpenCvSharp.MatForeachFunctionVec6b)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec6b_mB5C2048B1ABAFB7151ADB1E52C78930BFE6C274A (intptr_t ___m0, MatForeachFunctionVec6b_t78482390F33F672897BB7CD1FD2DB5FAE11702F4* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec6b", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec6b)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_short(System.IntPtr,OpenCvSharp.MatForeachFunctionInt16)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_short_m8448C1DFC2F152ADA22F70EBF7306809F01A2151 (intptr_t ___m0, MatForeachFunctionInt16_t0374522FDC4CD56E472D78560D8F1FD39A449FE1* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_short", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_short)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec2s(System.IntPtr,OpenCvSharp.MatForeachFunctionVec2s)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec2s_m40AD77CE76CA59E3D0E2455A812487D6D98A2F46 (intptr_t ___m0, MatForeachFunctionVec2s_tBD0DE263650799DB4E89AE906793FA7095033392* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec2s", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec2s)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec3s(System.IntPtr,OpenCvSharp.MatForeachFunctionVec3s)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec3s_m9B4A3DA0380F2287539F00410B4C21CA3B881082 (intptr_t ___m0, MatForeachFunctionVec3s_t3DB326D6C50ACF576CE95D082A30B15FDE66F42A* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec3s", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec3s)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec4s(System.IntPtr,OpenCvSharp.MatForeachFunctionVec4s)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec4s_mEFE3AA23D7BE7CA4D1E522EDC5BAF84B81936EEE (intptr_t ___m0, MatForeachFunctionVec4s_tD7215B7DB75D388FF85DE10F1C93A5E1312FA613* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec4s", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec4s)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec6s(System.IntPtr,OpenCvSharp.MatForeachFunctionVec6s)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec6s_mD4562374446768493DE64F61A3F3B0E052732A01 (intptr_t ___m0, MatForeachFunctionVec6s_tE4986F3BA0F08AF223FCBEE33726A82C739DCD89* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec6s", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec6s)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_int(System.IntPtr,OpenCvSharp.MatForeachFunctionInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_int_mC2E3D9A3CCFF7992518629A459A142B1EBD3DAA4 (intptr_t ___m0, MatForeachFunctionInt32_tA11F413E4816D4EFA4C297DD08A7F76F9D1707DA* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_int", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_int)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec2i(System.IntPtr,OpenCvSharp.MatForeachFunctionVec2i)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec2i_m3B77A2E913829EF38393EC28038CEE673847E36B (intptr_t ___m0, MatForeachFunctionVec2i_t7565625E15043384966DC1F8D1FC9E30C517B131* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec2i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec2i)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec3i(System.IntPtr,OpenCvSharp.MatForeachFunctionVec3i)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec3i_mB6AF83A6FD584A88DD1567609ED5A215D46A4BFF (intptr_t ___m0, MatForeachFunctionVec3i_tB9D7085FC547C65EFCA6B1497E5BF9CA22C9A593* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec3i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec3i)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec4i(System.IntPtr,OpenCvSharp.MatForeachFunctionVec4i)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec4i_mE35AAA3932D5E0547605B0F41354D711362C16F1 (intptr_t ___m0, MatForeachFunctionVec4i_t5C0E76789E10044BA3866336D8758D103889DBF3* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec4i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec4i)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec6i(System.IntPtr,OpenCvSharp.MatForeachFunctionVec6i)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec6i_mE714CD02B017A6C471C46676B6142D779262BB7C (intptr_t ___m0, MatForeachFunctionVec6i_t19BEECEE67385C47EB2A204AB29CE3182A496D6C* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec6i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec6i)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_float(System.IntPtr,OpenCvSharp.MatForeachFunctionFloat)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_float_m9D60B9C3835CEBE92B565C4F0D098696D6111B58 (intptr_t ___m0, MatForeachFunctionFloat_t38C2418BF9FC6D10EC034037EEDAC2BBB0C4AF6A* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_float", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_float)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec2f(System.IntPtr,OpenCvSharp.MatForeachFunctionVec2f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec2f_mFA0183F39FE6261B034B46F1A832AE1C4B1D33D2 (intptr_t ___m0, MatForeachFunctionVec2f_tB9D8C2EFCC61319FFF721E85B231D2D4B55565E2* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec2f)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec3f(System.IntPtr,OpenCvSharp.MatForeachFunctionVec3f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec3f_mEE62FA57F33C8B6AA19A331C8747F4C1CA3C7705 (intptr_t ___m0, MatForeachFunctionVec3f_t11B96B79774D7E26DE67C65013BDE101110233F2* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec3f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec3f)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec4f(System.IntPtr,OpenCvSharp.MatForeachFunctionVec4f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec4f_m0E6AD42EDD54BBA6E00023D0FB9474F4BBCAE2A8 (intptr_t ___m0, MatForeachFunctionVec4f_t40CF1C2E1E36DFA715D1FC6AC1DF722C6DB3CD29* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec4f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec4f)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec6f(System.IntPtr,OpenCvSharp.MatForeachFunctionVec6f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec6f_m43DC96FE3F1E46994F3F3280A7BE3A71A98C588B (intptr_t ___m0, MatForeachFunctionVec6f_t2B2D96C4B8BDB138726237FF466911814ADE7E52* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec6f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec6f)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_double(System.IntPtr,OpenCvSharp.MatForeachFunctionDouble)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_double_m46B054BE083E21F72DA81DC447639D71EC266152 (intptr_t ___m0, MatForeachFunctionDouble_tCB6307339EB3912EDCF067F2028EED37BA32CC8A* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_double", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_double)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec2d(System.IntPtr,OpenCvSharp.MatForeachFunctionVec2d)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec2d_m5BE2FD4766151491DF215836A9CB255531371135 (intptr_t ___m0, MatForeachFunctionVec2d_t6D8706FAC992DA48312959CD2531779CC37A3F10* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec2d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec2d)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec3d(System.IntPtr,OpenCvSharp.MatForeachFunctionVec3d)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec3d_mE14C6E03DC702069F60D9D1E69852FDF2036CD10 (intptr_t ___m0, MatForeachFunctionVec3d_tFE706CFA749551FE931D7640ADA60D79651814D5* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec3d)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec4d(System.IntPtr,OpenCvSharp.MatForeachFunctionVec4d)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec4d_mDB42C0DF2DB59F4AAB56F2E18FDB1EA38C4C9682 (intptr_t ___m0, MatForeachFunctionVec4d_tD463FA199BE73911A54402FAC92ABD91E8CE2466* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec4d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec4d)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec6d(System.IntPtr,OpenCvSharp.MatForeachFunctionVec6d)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec6d_m37F3BC046538CD99CC755298B83D66C2B37532FF (intptr_t ___m0, MatForeachFunctionVec6d_tA03EFFDD425E1A67808E7DACBBD496DEB341BB46* ___proc1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec6d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___proc1' to native representation
	Il2CppMethodPointer ____proc1_marshaled = NULL;
	____proc1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___proc1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec6d)(___m0, ____proc1_marshaled);
	#else
	il2cppPInvokeFunc(___m0, ____proc1_marshaled);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_new()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_new_mAC194FA11D7232105ABF741B51F885CEC09ADDAA (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_new(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_new_m4501EB08236B70A39DF01EE1B95DE3B257F112A2 (intptr_t ___mat0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_new2)(___mat0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___mat0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_MatExpr_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_MatExpr_delete_m98D1A98DF11733F8A73D4A20AEAC22761CF13BA5 (intptr_t ___expr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_MatExpr_delete)(___expr0);
	#else
	il2cppPInvokeFunc(___expr0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_toMat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_toMat_mCFDF45E1A39BC006E6ABC078CFFCE2A96514DFBA (intptr_t ___expr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_toMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_toMat)(___expr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___expr0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorUnaryMinus_MatExpr(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorUnaryMinus_MatExpr_m086CA19369987587E13179E154CAD8A9AFFA1F4D (intptr_t ___e0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorUnaryMinus_MatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorUnaryMinus_MatExpr)(___e0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___e0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorUnaryNot_MatExpr(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorUnaryNot_MatExpr_m147579FE541130519CC77B6CD747C2BFF6197700 (intptr_t ___e0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorUnaryNot_MatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorUnaryNot_MatExpr)(___e0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___e0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorAdd_MatExprMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorAdd_MatExprMat_m98B038A373085F29A61613830A53BA870B87C207 (intptr_t ___e0, intptr_t ___m1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorAdd_MatExprMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorAdd_MatExprMat)(___e0, ___m1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___e0, ___m1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorAdd_MatMatExpr(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorAdd_MatMatExpr_m577246B0FD160EA6C014778DF677AA427FDFE50C (intptr_t ___m0, intptr_t ___e1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorAdd_MatMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorAdd_MatMatExpr)(___m0, ___e1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___m0, ___e1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorAdd_MatExprScalar(System.IntPtr,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorAdd_MatExprScalar_m963443ED30D5E6F6724889817281326683358005 (intptr_t ___e0, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___s1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorAdd_MatExprScalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorAdd_MatExprScalar)(___e0, ___s1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___e0, ___s1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorAdd_ScalarMatExpr(OpenCvSharp.Scalar,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorAdd_ScalarMatExpr_m1016F3F6ACC58082D0775C42EC8EB9EDB282B611 (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___s0, intptr_t ___e1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorAdd_ScalarMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorAdd_ScalarMatExpr)(___s0, ___e1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___s0, ___e1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorAdd_MatExprMatExpr(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorAdd_MatExprMatExpr_mBD94CDF81644415115231D9AF139F67C6DEE8A6B (intptr_t ___e10, intptr_t ___e21, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorAdd_MatExprMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorAdd_MatExprMatExpr)(___e10, ___e21);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___e10, ___e21);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorSubtract_MatExprMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorSubtract_MatExprMat_mE6F097572DD2CAF2EAE430152FF1E2EB91D4F8CA (intptr_t ___e0, intptr_t ___m1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorSubtract_MatExprMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorSubtract_MatExprMat)(___e0, ___m1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___e0, ___m1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorSubtract_MatMatExpr(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorSubtract_MatMatExpr_m41FD2F5AD6D043BD40AEECD045FB8EB70CA11617 (intptr_t ___m0, intptr_t ___e1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorSubtract_MatMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorSubtract_MatMatExpr)(___m0, ___e1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___m0, ___e1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorSubtract_MatExprScalar(System.IntPtr,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorSubtract_MatExprScalar_m16D5DCBB1DE6D05B5BA1A80C0C9D150DB052A490 (intptr_t ___e0, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___s1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorSubtract_MatExprScalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorSubtract_MatExprScalar)(___e0, ___s1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___e0, ___s1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorSubtract_ScalarMatExpr(OpenCvSharp.Scalar,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorSubtract_ScalarMatExpr_m8D933FAA57689B93513B32BFD09AE5EBA82885B5 (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___s0, intptr_t ___e1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorSubtract_ScalarMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorSubtract_ScalarMatExpr)(___s0, ___e1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___s0, ___e1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorSubtract_MatExprMatExpr(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorSubtract_MatExprMatExpr_m7A40B0778F29427BF8121B507429ECF116270914 (intptr_t ___e10, intptr_t ___e21, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorSubtract_MatExprMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorSubtract_MatExprMatExpr)(___e10, ___e21);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___e10, ___e21);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorMultiply_MatExprMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorMultiply_MatExprMat_m483D1002A3EEAC9A3524E54493C4E834F7C91B7D (intptr_t ___e0, intptr_t ___m1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorMultiply_MatExprMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorMultiply_MatExprMat)(___e0, ___m1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___e0, ___m1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorMultiply_MatMatExpr(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorMultiply_MatMatExpr_m3F6B9003E021A64C04194982BA644121D75905E2 (intptr_t ___m0, intptr_t ___e1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorMultiply_MatMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorMultiply_MatMatExpr)(___m0, ___e1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___m0, ___e1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorMultiply_MatExprDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorMultiply_MatExprDouble_mA9DE9CE095104E545B5279B12434B658ADBD1C0A (intptr_t ___e0, double ___s1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorMultiply_MatExprDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorMultiply_MatExprDouble)(___e0, ___s1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___e0, ___s1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorMultiply_DoubleMatExpr(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorMultiply_DoubleMatExpr_m2AC46FDA46AD9D38F48397174B16C014100F7628 (double ___s0, intptr_t ___e1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorMultiply_DoubleMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorMultiply_DoubleMatExpr)(___s0, ___e1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___s0, ___e1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorMultiply_MatExprMatExpr(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorMultiply_MatExprMatExpr_mEECB62FA65D77870BC976233EE1ED6E17CD78FEE (intptr_t ___e10, intptr_t ___e21, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorMultiply_MatExprMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorMultiply_MatExprMatExpr)(___e10, ___e21);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___e10, ___e21);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorDivide_MatExprMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorDivide_MatExprMat_mB6659BC98BD86EDFF43FCFB12E4BEAB4B36651E4 (intptr_t ___e0, intptr_t ___m1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorDivide_MatExprMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorDivide_MatExprMat)(___e0, ___m1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___e0, ___m1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorDivide_MatMatExpr(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorDivide_MatMatExpr_m4283C74E6E517055453547F94F948DB06DE8D853 (intptr_t ___m0, intptr_t ___e1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorDivide_MatMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorDivide_MatMatExpr)(___m0, ___e1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___m0, ___e1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorDivide_MatExprDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorDivide_MatExprDouble_m94E461629E8FE9F6FC81A71917C1560C67A1227B (intptr_t ___e0, double ___s1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorDivide_MatExprDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorDivide_MatExprDouble)(___e0, ___s1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___e0, ___s1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorDivide_DoubleMatExpr(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorDivide_DoubleMatExpr_m9352B9555FBBAB88206516E6576301029D213DA6 (double ___s0, intptr_t ___e1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorDivide_DoubleMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorDivide_DoubleMatExpr)(___s0, ___e1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___s0, ___e1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorDivide_MatExprMatExpr(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorDivide_MatExprMatExpr_m90EACFD667D47744FEE2A8F8243DB75288E6BB73 (intptr_t ___e10, intptr_t ___e21, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorDivide_MatExprMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorDivide_MatExprMatExpr)(___e10, ___e21);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___e10, ___e21);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_row(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_row_m3CB34F2ED36709514CCBD0265D57A77B9B973353 (intptr_t ___self0, int32_t ___y1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_row", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_row)(___self0, ___y1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___y1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_col(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_col_m7DB92820572F1984C23AB7F45F583F59109DA8F3 (intptr_t ___self0, int32_t ___x1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_col", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_col)(___self0, ___x1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___x1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_diag(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_diag_mC0CA96EC6202304F5847730D0BB4EC6461B6A1EC (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_diag1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_diag1)(___self0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_diag(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_diag_m19A6BFDDE6E8E13CC996ED85F8174FEC324F3D9C (intptr_t ___self0, int32_t ___d1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_diag2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_diag2)(___self0, ___d1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___d1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_submat(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_submat_m63FBB8E4D7BCFAF4F98A39D4DAE01BB33B420FCD (intptr_t ___self0, int32_t ___rowStart1, int32_t ___rowEnd2, int32_t ___colStart3, int32_t ___colEnd4, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_submat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_submat)(___self0, ___rowStart1, ___rowEnd2, ___colStart3, ___colEnd4);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___rowStart1, ___rowEnd2, ___colStart3, ___colEnd4);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_cross(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_cross_mF4FDB54250F8E8333776B73F82E6547B02D034C0 (intptr_t ___self0, intptr_t ___m1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_cross", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_cross)(___self0, ___m1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___m1);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::core_MatExpr_dot(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_MatExpr_dot_mC61E44F7A8A425348CD515742A8D6D650A1A2291 (intptr_t ___self0, intptr_t ___m1, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_dot", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_dot)(___self0, ___m1);
	#else
	double returnValue = il2cppPInvokeFunc(___self0, ___m1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_t(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_t_m010E60C41B05492CC00E593D9EAC57F9A76BCA6A (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_t", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_t)(___self0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_inv(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_inv_m2EDB8862C6745D8B38DE87614A3214B7DC520B93 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_inv1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_inv1)(___self0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_inv(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_inv_mE9696699E0C00C80F9DCF02728F92F1CF3EC76DA (intptr_t ___self0, int32_t ___method1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_inv2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_inv2)(___self0, ___method1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___method1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_mul_toMatExpr(System.IntPtr,System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_mul_toMatExpr_m19B0F096BEF067CCE0265C8AB78333D1A725E825 (intptr_t ___self0, intptr_t ___e1, double ___scale2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_mul_toMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_mul_toMatExpr)(___self0, ___e1, ___scale2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___e1, ___scale2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_mul_toMat(System.IntPtr,System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_mul_toMat_mD0486CD3F35740EB026259AABDC9579CAB4372B7 (intptr_t ___self0, intptr_t ___m1, double ___scale2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_mul_toMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_mul_toMat)(___self0, ___m1, ___scale2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0, ___m1, ___scale2);
	#endif

	return returnValue;
}
// OpenCvSharp.Size OpenCvSharp.NativeMethods::core_MatExpr_size(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 NativeMethods_core_MatExpr_size_m07F5353DEAB472E34F9255C017C8FED0E2CACFD7 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_size", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_size)(___self0);
	#else
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_MatExpr_type(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_MatExpr_type_m3D324E7A7E6D7BEC175BA5E77F64477C0EC09A2A (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_type", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_type)(___self0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_abs_MatExpr(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_abs_MatExpr_m38F4BEE82F216F6FCCC39FE5022AD06C59865729 (intptr_t ___e0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_abs_MatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_abs_MatExpr)(___e0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___e0);
	#endif

	return returnValue;
}
// System.UInt64 OpenCvSharp.NativeMethods::core_SparseMat_sizeof()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t NativeMethods_core_SparseMat_sizeof_m15CFEB6840B9B3E1FF23C8433DD8269DBD3F98A0 (const RuntimeMethod* method) 
{
	typedef uint64_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_sizeof", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	uint64_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_sizeof)();
	#else
	uint64_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_new1_mD0268BF0FCADEA81A960DF9DA97B69639A8A7CA2 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_new2(System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_new2_mEB6969C908AB560A2A94E2900EDE9B5C0966FA8C (int32_t ___dims0, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___sizes1, int32_t ___type2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___sizes1' to native representation
	int32_t* ____sizes1_marshaled = NULL;
	if (___sizes1 != NULL)
	{
		____sizes1_marshaled = reinterpret_cast<int32_t*>((___sizes1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_new2)(___dims0, ____sizes1_marshaled, ___type2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___dims0, ____sizes1_marshaled, ___type2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_new3(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_new3_m0546B531A72FA3552BB50FFB51CA30E4AE19D803 (intptr_t ___m0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_new3)(___m0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___m0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_delete_mC5B642E4F3A47A8FE72BCABEEAD6DC717E849770 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_operatorAssign_SparseMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_operatorAssign_SparseMat_mC7E3EEDD9014CE9DCA4D7195F7ED323B44B1EF00 (intptr_t ___obj0, intptr_t ___m1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_operatorAssign_SparseMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_operatorAssign_SparseMat)(___obj0, ___m1);
	#else
	il2cppPInvokeFunc(___obj0, ___m1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_operatorAssign_Mat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_operatorAssign_Mat_mB82A81EBDF735912226CCDAEB887584F8FCE7BEE (intptr_t ___obj0, intptr_t ___m1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_operatorAssign_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_operatorAssign_Mat)(___obj0, ___m1);
	#else
	il2cppPInvokeFunc(___obj0, ___m1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_clone(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_clone_m463AA52BCC32C5E42195F0670AEE738A302DEA5A (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_clone", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_clone)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_copyTo_SparseMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_copyTo_SparseMat_m41BBC798AC857730F803102AC3DB7AAE2C8090EB (intptr_t ___obj0, intptr_t ___m1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_copyTo_SparseMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_copyTo_SparseMat)(___obj0, ___m1);
	#else
	il2cppPInvokeFunc(___obj0, ___m1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_copyTo_Mat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_copyTo_Mat_m1D13C88A6A6E0B42A17055D457C2B99DAF3327F5 (intptr_t ___obj0, intptr_t ___m1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_copyTo_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_copyTo_Mat)(___obj0, ___m1);
	#else
	il2cppPInvokeFunc(___obj0, ___m1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_convertTo_SparseMat(System.IntPtr,System.IntPtr,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_convertTo_SparseMat_m2E14DBC0F3AF4FD76A8340F70445962E4F70CB20 (intptr_t ___obj0, intptr_t ___m1, int32_t ___rtype2, double ___alpha3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_convertTo_SparseMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_convertTo_SparseMat)(___obj0, ___m1, ___rtype2, ___alpha3);
	#else
	il2cppPInvokeFunc(___obj0, ___m1, ___rtype2, ___alpha3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_convertTo_Mat(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_convertTo_Mat_m49162F2D0D5B9E6D35C0BDF4E6BF289F0601C795 (intptr_t ___obj0, intptr_t ___m1, int32_t ___rtype2, double ___alpha3, double ___beta4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_convertTo_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_convertTo_Mat)(___obj0, ___m1, ___rtype2, ___alpha3, ___beta4);
	#else
	il2cppPInvokeFunc(___obj0, ___m1, ___rtype2, ___alpha3, ___beta4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_assignTo(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_assignTo_m421E2A17A52997097EF0004DC0F94EA4836B2C80 (intptr_t ___obj0, intptr_t ___m1, int32_t ___type2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_assignTo", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_assignTo)(___obj0, ___m1, ___type2);
	#else
	il2cppPInvokeFunc(___obj0, ___m1, ___type2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_create(System.IntPtr,System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_create_mA57049CD8638CDB298AEF4EBEE9A84A532A55A8E (intptr_t ___obj0, int32_t ___dims1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___sizes2, int32_t ___type3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___sizes2' to native representation
	int32_t* ____sizes2_marshaled = NULL;
	if (___sizes2 != NULL)
	{
		____sizes2_marshaled = reinterpret_cast<int32_t*>((___sizes2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_create)(___obj0, ___dims1, ____sizes2_marshaled, ___type3);
	#else
	il2cppPInvokeFunc(___obj0, ___dims1, ____sizes2_marshaled, ___type3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_clear(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_clear_mDE5BC16D1967ACD0CA7B74406661490B65B666E4 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_clear", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_clear)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_addref(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_addref_m223F2EC60DE9DE8430431DFCDBDD882F226B0E8C (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_addref", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_addref)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_release(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_release_mE2708E7093EFB8605017A77F54526792C5EA9303 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_release", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_release)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::core_SparseMat_elemSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_SparseMat_elemSize_mC67F1856BD1949C6604527B5A7898B98620C5B56 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_elemSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_elemSize)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_SparseMat_elemSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_SparseMat_elemSize1_mC6D8C752B3D6C12894019C64D84E5AC719E9B817 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_elemSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_elemSize1)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_SparseMat_type(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_SparseMat_type_mF7798DD80B6D031EF65CBB54B4250B1B21347EBD (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_type", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_type)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_SparseMat_depth(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_SparseMat_depth_m69D0EC800B496DB274218A4FD981E93491233F5E (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_depth", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_depth)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_SparseMat_channels(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_SparseMat_channels_m3FB993BB6CE0A65966FD63BA210FB7BFB868666C (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_channels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_channels)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_size1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_size1_m058BF58CE1272F4A04611A7FF984AAD68D4EEB05 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_size1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_size1)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_SparseMat_size2(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_SparseMat_size2_m84EA63D538E86987A1757CBFCC9D404EF8017D09 (intptr_t ___obj0, int32_t ___i1, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_size2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_size2)(___obj0, ___i1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___i1);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_SparseMat_dims(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_SparseMat_dims_m66B6529B4519ADE0664DF326DD3E33CD849F7353 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_dims", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_dims)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_nzcount(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_nzcount_m3089DADBD2591039B8B806B94A4E50DCB6FB0F39 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_nzcount", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_nzcount)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_hash_1d(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_hash_1d_m8C60631E1A4309DD51A41EBE4C1FD7EF2C905614 (intptr_t ___obj0, int32_t ___i01, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_hash_1d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_hash_1d)(___obj0, ___i01);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ___i01);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_hash_2d(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_hash_2d_m5B80D7771074767DAAFD999B21AD4F3570AC706A (intptr_t ___obj0, int32_t ___i01, int32_t ___i12, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_hash_2d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_hash_2d)(___obj0, ___i01, ___i12);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ___i01, ___i12);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_hash_3d(System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_hash_3d_mD895D9A0C023E9832E5ACB424217EBB89B24DBFB (intptr_t ___obj0, int32_t ___i01, int32_t ___i12, int32_t ___i23, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_hash_3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_hash_3d)(___obj0, ___i01, ___i12, ___i23);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ___i01, ___i12, ___i23);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_hash_nd(System.IntPtr,System.Int32[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_hash_nd_m764DF2EF9C7E91FD34973E1E522ECDB6857439F8 (intptr_t ___obj0, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___idx1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_hash_nd", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___idx1' to native representation
	int32_t* ____idx1_marshaled = NULL;
	if (___idx1 != NULL)
	{
		____idx1_marshaled = reinterpret_cast<int32_t*>((___idx1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_hash_nd)(___obj0, ____idx1_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ____idx1_marshaled);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_ptr_1d(System.IntPtr,System.Int32,System.Int32,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_ptr_1d_m9E7E01FB45042E01843656CB8C193F06E2ACE865 (intptr_t ___obj0, int32_t ___i01, int32_t ___createMissing2, uint64_t* ___hashval3, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, uint64_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(uint64_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_ptr_1d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_ptr_1d)(___obj0, ___i01, ___createMissing2, ___hashval3);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ___i01, ___createMissing2, ___hashval3);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_ptr_1d(System.IntPtr,System.Int32,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_ptr_1d_m5B7323EB35C0E91F679CF997F6BD6A1A6881E787 (intptr_t ___obj0, int32_t ___i01, int32_t ___createMissing2, intptr_t ___hashval3, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_ptr_1d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_ptr_1d)(___obj0, ___i01, ___createMissing2, ___hashval3);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ___i01, ___createMissing2, ___hashval3);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_ptr_2d(System.IntPtr,System.Int32,System.Int32,System.Int32,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_ptr_2d_m96EE8352012EC97578EBFF6B2CED2E1702FC38AF (intptr_t ___obj0, int32_t ___i01, int32_t ___i12, int32_t ___createMissing3, uint64_t* ___hashval4, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t, uint64_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(uint64_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_ptr_2d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_ptr_2d)(___obj0, ___i01, ___i12, ___createMissing3, ___hashval4);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ___i01, ___i12, ___createMissing3, ___hashval4);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_ptr_2d(System.IntPtr,System.Int32,System.Int32,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_ptr_2d_mDDBDB0CA7F925CD5F4E7A454DDC41BD68C23FB68 (intptr_t ___obj0, int32_t ___i01, int32_t ___i12, int32_t ___createMissing3, intptr_t ___hashval4, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_ptr_2d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_ptr_2d)(___obj0, ___i01, ___i12, ___createMissing3, ___hashval4);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ___i01, ___i12, ___createMissing3, ___hashval4);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_ptr_3d(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_ptr_3d_mA96E73A939797B31E19A90302DAB1E4D547AA575 (intptr_t ___obj0, int32_t ___i01, int32_t ___i12, int32_t ___i23, int32_t ___createMissing4, uint64_t* ___hashval5, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t, int32_t, uint64_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(uint64_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_ptr_3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_ptr_3d)(___obj0, ___i01, ___i12, ___i23, ___createMissing4, ___hashval5);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ___i01, ___i12, ___i23, ___createMissing4, ___hashval5);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_ptr_3d(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_ptr_3d_m01744195E10C51169E87C9494E9B362AAD6F1DF6 (intptr_t ___obj0, int32_t ___i01, int32_t ___i12, int32_t ___i23, int32_t ___createMissing4, intptr_t ___hashval5, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_ptr_3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_ptr_3d)(___obj0, ___i01, ___i12, ___i23, ___createMissing4, ___hashval5);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ___i01, ___i12, ___i23, ___createMissing4, ___hashval5);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_ptr_nd(System.IntPtr,System.Int32[],System.Int32,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_ptr_nd_mBD22D6FFA52608F57CBE28C58A52968A037D79A2 (intptr_t ___obj0, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___idx1, int32_t ___createMissing2, uint64_t* ___hashval3, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t*, int32_t, uint64_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(uint64_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_ptr_nd", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___idx1' to native representation
	int32_t* ____idx1_marshaled = NULL;
	if (___idx1 != NULL)
	{
		____idx1_marshaled = reinterpret_cast<int32_t*>((___idx1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_ptr_nd)(___obj0, ____idx1_marshaled, ___createMissing2, ___hashval3);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ____idx1_marshaled, ___createMissing2, ___hashval3);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_ptr_nd(System.IntPtr,System.Int32[],System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_ptr_nd_m3C444BE2492ACE332F78F498A7EC9A1E98083F62 (intptr_t ___obj0, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___idx1, int32_t ___createMissing2, intptr_t ___hashval3, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t*, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_ptr_nd", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___idx1' to native representation
	int32_t* ____idx1_marshaled = NULL;
	if (___idx1 != NULL)
	{
		____idx1_marshaled = reinterpret_cast<int32_t*>((___idx1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_ptr_nd)(___obj0, ____idx1_marshaled, ___createMissing2, ___hashval3);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ____idx1_marshaled, ___createMissing2, ___hashval3);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::face_createEigenFaceRecognizer(System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_face_createEigenFaceRecognizer_m2784844696578CEAC26A31021C82BA375F633C2B (int32_t ___numComponents0, double ___threshold1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_createEigenFaceRecognizer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(face_createEigenFaceRecognizer)(___numComponents0, ___threshold1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___numComponents0, ___threshold1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::face_createFisherFaceRecognizer(System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_face_createFisherFaceRecognizer_m696ABBB29BC3046016FA44ED60E72643C84233A0 (int32_t ___numComponents0, double ___threshold1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_createFisherFaceRecognizer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(face_createFisherFaceRecognizer)(___numComponents0, ___threshold1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___numComponents0, ___threshold1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::face_createLBPHFaceRecognizer(System.Int32,System.Int32,System.Int32,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_face_createLBPHFaceRecognizer_m7B300C70966262C5B180E3115CC3499CF7FBAA88 (int32_t ___radius0, int32_t ___neighbors1, int32_t ___gridX2, int32_t ___gridY3, double ___threshold4, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_createLBPHFaceRecognizer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(face_createLBPHFaceRecognizer)(___radius0, ___neighbors1, ___gridX2, ___gridY3, ___threshold4);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___radius0, ___neighbors1, ___gridX2, ___gridY3, ___threshold4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::face_BasicFaceRecognizer_getNumComponents(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_face_BasicFaceRecognizer_getNumComponents_mD421DE181CAF21DE0556AA818998328C48DDD598 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_BasicFaceRecognizer_getNumComponents", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(face_BasicFaceRecognizer_getNumComponents)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_BasicFaceRecognizer_setNumComponents(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_BasicFaceRecognizer_setNumComponents_m4B7FE77E1FB62D13B8C40BBC0E6367E20D3E5267 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_BasicFaceRecognizer_setNumComponents", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_BasicFaceRecognizer_setNumComponents)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::face_BasicFaceRecognizer_getThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_face_BasicFaceRecognizer_getThreshold_mBFB6DAACFDAFC1113F4F71369B96A62A4AB1F9BE (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_BasicFaceRecognizer_getThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(face_BasicFaceRecognizer_getThreshold)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_BasicFaceRecognizer_setThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_BasicFaceRecognizer_setThreshold_m30935440BCB4D36400604CAC50B915C2878A6B95 (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_BasicFaceRecognizer_setThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_BasicFaceRecognizer_setThreshold)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_BasicFaceRecognizer_getProjections(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_BasicFaceRecognizer_getProjections_m468F6604C123ED32FFB4A381797950F88216E6A3 (intptr_t ___obj0, intptr_t ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_BasicFaceRecognizer_getProjections", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_BasicFaceRecognizer_getProjections)(___obj0, ___dst1);
	#else
	il2cppPInvokeFunc(___obj0, ___dst1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_BasicFaceRecognizer_getLabels(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_BasicFaceRecognizer_getLabels_mBAD84D0DDC87D0FB545626BC4FB07009F7B69DEE (intptr_t ___obj0, intptr_t ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_BasicFaceRecognizer_getLabels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_BasicFaceRecognizer_getLabels)(___obj0, ___dst1);
	#else
	il2cppPInvokeFunc(___obj0, ___dst1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_BasicFaceRecognizer_getEigenValues(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_BasicFaceRecognizer_getEigenValues_mCF9182335DE0472C07112D33EF2645B5CE606A28 (intptr_t ___obj0, intptr_t ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_BasicFaceRecognizer_getEigenValues", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_BasicFaceRecognizer_getEigenValues)(___obj0, ___dst1);
	#else
	il2cppPInvokeFunc(___obj0, ___dst1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_BasicFaceRecognizer_getEigenVectors(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_BasicFaceRecognizer_getEigenVectors_mEBD5BF790217C9EE2F6225F8DDA43E7FF8289088 (intptr_t ___obj0, intptr_t ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_BasicFaceRecognizer_getEigenVectors", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_BasicFaceRecognizer_getEigenVectors)(___obj0, ___dst1);
	#else
	il2cppPInvokeFunc(___obj0, ___dst1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_BasicFaceRecognizer_getMean(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_BasicFaceRecognizer_getMean_m547C72881BD809D75DDC50E9DD433BBD67EA44FE (intptr_t ___obj0, intptr_t ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_BasicFaceRecognizer_getMean", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_BasicFaceRecognizer_getMean)(___obj0, ___dst1);
	#else
	il2cppPInvokeFunc(___obj0, ___dst1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::face_Ptr_BasicFaceRecognizer_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_face_Ptr_BasicFaceRecognizer_get_mC694011BADB6CF389863AC3B5A76CBCB6CF7C98D (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_Ptr_BasicFaceRecognizer_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(face_Ptr_BasicFaceRecognizer_get)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_Ptr_BasicFaceRecognizer_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_Ptr_BasicFaceRecognizer_delete_mC658CE7C461CDA4F20231157C3CC83940AFB4AF2 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_Ptr_BasicFaceRecognizer_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_Ptr_BasicFaceRecognizer_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_train(System.IntPtr,System.IntPtr[],System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_train_m5463FC2576B22B4E0CD80625E0BFDC29B27D5DD8 (intptr_t ___obj0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___src1, int32_t ___srcLength2, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___labels3, int32_t ___labelsLength4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_train", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___src1' to native representation
	intptr_t* ____src1_marshaled = NULL;
	if (___src1 != NULL)
	{
		____src1_marshaled = reinterpret_cast<intptr_t*>((___src1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___labels3' to native representation
	int32_t* ____labels3_marshaled = NULL;
	if (___labels3 != NULL)
	{
		____labels3_marshaled = reinterpret_cast<int32_t*>((___labels3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_train)(___obj0, ____src1_marshaled, ___srcLength2, ____labels3_marshaled, ___labelsLength4);
	#else
	il2cppPInvokeFunc(___obj0, ____src1_marshaled, ___srcLength2, ____labels3_marshaled, ___labelsLength4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_update(System.IntPtr,System.IntPtr[],System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_update_m93496B277E67E4F5C9BE0B3E109D03141521A2A2 (intptr_t ___obj0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___src1, int32_t ___srcLength2, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___labels3, int32_t ___labelsLength4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_update", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___src1' to native representation
	intptr_t* ____src1_marshaled = NULL;
	if (___src1 != NULL)
	{
		____src1_marshaled = reinterpret_cast<intptr_t*>((___src1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___labels3' to native representation
	int32_t* ____labels3_marshaled = NULL;
	if (___labels3 != NULL)
	{
		____labels3_marshaled = reinterpret_cast<int32_t*>((___labels3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_update)(___obj0, ____src1_marshaled, ___srcLength2, ____labels3_marshaled, ___labelsLength4);
	#else
	il2cppPInvokeFunc(___obj0, ____src1_marshaled, ___srcLength2, ____labels3_marshaled, ___labelsLength4);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::face_FaceRecognizer_predict1(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_face_FaceRecognizer_predict1_m000E852C20AF73AC3A66CF8A02C8093B94A23B87 (intptr_t ___obj0, intptr_t ___src1, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_predict1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_predict1)(___obj0, ___src1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___src1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_predict2(System.IntPtr,System.IntPtr,System.Int32&,System.Double&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_predict2_mE2346DAE6F0A3298C3E767D3DACD175914F95A63 (intptr_t ___obj0, intptr_t ___src1, int32_t* ___label2, double* ___confidence3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t*, double*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t*) + sizeof(double*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_predict2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_predict2)(___obj0, ___src1, ___label2, ___confidence3);
	#else
	il2cppPInvokeFunc(___obj0, ___src1, ___label2, ___confidence3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_save1(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_save1_m2D671794FAABE3B79D2A31D2B0A1FCFE025DC5B6 (intptr_t ___obj0, String_t* ___filename1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_save1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___filename1' to native representation
	char* ____filename1_marshaled = NULL;
	____filename1_marshaled = il2cpp_codegen_marshal_string(___filename1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_save1)(___obj0, ____filename1_marshaled);
	#else
	il2cppPInvokeFunc(___obj0, ____filename1_marshaled);
	#endif

	// Marshaling cleanup of parameter '___filename1' native representation
	il2cpp_codegen_marshal_free(____filename1_marshaled);
	____filename1_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_load1(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_load1_m9971C347684B1BF15CB77E32EC0D76C7DABAD842 (intptr_t ___obj0, String_t* ___filename1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_load1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___filename1' to native representation
	char* ____filename1_marshaled = NULL;
	____filename1_marshaled = il2cpp_codegen_marshal_string(___filename1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_load1)(___obj0, ____filename1_marshaled);
	#else
	il2cppPInvokeFunc(___obj0, ____filename1_marshaled);
	#endif

	// Marshaling cleanup of parameter '___filename1' native representation
	il2cpp_codegen_marshal_free(____filename1_marshaled);
	____filename1_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_save2(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_save2_mA8BC12D4BB6EC936EFD9A98C03054709F63B087A (intptr_t ___obj0, intptr_t ___fs1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_save2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_save2)(___obj0, ___fs1);
	#else
	il2cppPInvokeFunc(___obj0, ___fs1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_load2(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_load2_m79230119903783BA6E5D1E24E6E62B4CDC1DB8BF (intptr_t ___obj0, intptr_t ___fs1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_load2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_load2)(___obj0, ___fs1);
	#else
	il2cppPInvokeFunc(___obj0, ___fs1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_setLabelInfo(System.IntPtr,System.Int32,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_setLabelInfo_mEFFA198E9BFA414D170AAA2E324F36B79A283B45 (intptr_t ___obj0, int32_t ___label1, String_t* ___strInfo2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_setLabelInfo", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___strInfo2' to native representation
	char* ____strInfo2_marshaled = NULL;
	____strInfo2_marshaled = il2cpp_codegen_marshal_string(___strInfo2);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_setLabelInfo)(___obj0, ___label1, ____strInfo2_marshaled);
	#else
	il2cppPInvokeFunc(___obj0, ___label1, ____strInfo2_marshaled);
	#endif

	// Marshaling cleanup of parameter '___strInfo2' native representation
	il2cpp_codegen_marshal_free(____strInfo2_marshaled);
	____strInfo2_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_getLabelInfo(System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_getLabelInfo_mA726C9C775F49E3D234E0BE7DEE959C6992676D5 (intptr_t ___obj0, int32_t ___label1, intptr_t ___dst2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_getLabelInfo", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_getLabelInfo)(___obj0, ___label1, ___dst2);
	#else
	il2cppPInvokeFunc(___obj0, ___label1, ___dst2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_getLabelsByString(System.IntPtr,System.String,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_getLabelsByString_mA2154812AFED98E92E30A14017CAA79A4158D003 (intptr_t ___obj0, String_t* ___str1, intptr_t ___dst2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_getLabelsByString", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___str1' to native representation
	char* ____str1_marshaled = NULL;
	____str1_marshaled = il2cpp_codegen_marshal_string(___str1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_getLabelsByString)(___obj0, ____str1_marshaled, ___dst2);
	#else
	il2cppPInvokeFunc(___obj0, ____str1_marshaled, ___dst2);
	#endif

	// Marshaling cleanup of parameter '___str1' native representation
	il2cpp_codegen_marshal_free(____str1_marshaled);
	____str1_marshaled = NULL;

}
// System.Double OpenCvSharp.NativeMethods::face_FaceRecognizer_getThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_face_FaceRecognizer_getThreshold_m08CB23A08A584791BD3CECB1D6C35E631AC695CD (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_getThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_getThreshold)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_setThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_setThreshold_m228686BBC4BD22C624B8A878675A2E8863E6760B (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_setThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_setThreshold)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_getGridX(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_face_LBPHFaceRecognizer_getGridX_m1187C70D9BAD7DD3880A560E32F3D21D10BADEC0 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_getGridX", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_getGridX)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_setGridX(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_LBPHFaceRecognizer_setGridX_mF8C4DEC7B96E1652D977538337AB9D30557C120B (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_setGridX", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_setGridX)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_getGridY(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_face_LBPHFaceRecognizer_getGridY_m2FBE33027BA361FEC64E6ED53E0A3771566CF842 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_getGridY", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_getGridY)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_setGridY(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_LBPHFaceRecognizer_setGridY_m41EFB7A70C6404F3786D3BF33352A0F00AF1FAB8 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_setGridY", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_setGridY)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_getRadius(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_face_LBPHFaceRecognizer_getRadius_m2A0DDDC3B56B33B357FD51EF3E0B6AB5E6329427 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_getRadius", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_getRadius)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_setRadius(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_LBPHFaceRecognizer_setRadius_m20E6D4991386492ECD74A5B4BDC7EEAE600ECF23 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_setRadius", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_setRadius)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_getNeighbors(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_face_LBPHFaceRecognizer_getNeighbors_m70893365D5AD716F06CA179EEAA53DEFAC869282 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_getNeighbors", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_getNeighbors)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_setNeighbors(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_LBPHFaceRecognizer_setNeighbors_mC2914F78EADD2344AAB950805EE77AEEBD144905 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_setNeighbors", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_setNeighbors)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_getThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_face_LBPHFaceRecognizer_getThreshold_m02CF181815EBD2010D561679C6AC777F7E0F31CF (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_getThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_getThreshold)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_setThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_LBPHFaceRecognizer_setThreshold_mE91D5B0A2BFE28017C93D14A3AAAAC734187E54E (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_setThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_setThreshold)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_getHistograms(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_LBPHFaceRecognizer_getHistograms_m6DAF053FE431890F38E32EC82612CF3DFA7E5C65 (intptr_t ___obj0, intptr_t ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_getHistograms", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_getHistograms)(___obj0, ___dst1);
	#else
	il2cppPInvokeFunc(___obj0, ___dst1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_getLabels(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_LBPHFaceRecognizer_getLabels_m527CC2C0195E5AFB40E317D6DC36DD8B3113F890 (intptr_t ___obj0, intptr_t ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_getLabels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_getLabels)(___obj0, ___dst1);
	#else
	il2cppPInvokeFunc(___obj0, ___dst1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::face_Ptr_LBPHFaceRecognizer_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_face_Ptr_LBPHFaceRecognizer_get_mF48218D2919724560CDC34AC4D6595D42133899B (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_Ptr_LBPHFaceRecognizer_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(face_Ptr_LBPHFaceRecognizer_get)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_Ptr_LBPHFaceRecognizer_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_Ptr_LBPHFaceRecognizer_delete_mC32451E5783BF15853832A49C28F6D0C5BC12174 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_Ptr_LBPHFaceRecognizer_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_Ptr_LBPHFaceRecognizer_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_drawKeypoints(System.IntPtr,OpenCvSharp.KeyPoint[],System.Int32,System.IntPtr,OpenCvSharp.Scalar,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_drawKeypoints_mF47DF1304696667363515A9F76859CD17FF20BEE (intptr_t ___image0, KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17* ___keypoints1, int32_t ___keypointsLength2, intptr_t ___outImage3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___color4, int32_t ___flags5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, int32_t, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_drawKeypoints", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___keypoints1' to native representation
	KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA* ____keypoints1_marshaled = NULL;
	if (___keypoints1 != NULL)
	{
		____keypoints1_marshaled = reinterpret_cast<KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*>((___keypoints1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_drawKeypoints)(___image0, ____keypoints1_marshaled, ___keypointsLength2, ___outImage3, ___color4, ___flags5);
	#else
	il2cppPInvokeFunc(___image0, ____keypoints1_marshaled, ___keypointsLength2, ___outImage3, ___color4, ___flags5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_drawMatches1(System.IntPtr,OpenCvSharp.KeyPoint[],System.Int32,System.IntPtr,OpenCvSharp.KeyPoint[],System.Int32,OpenCvSharp.DMatch[],System.Int32,System.IntPtr,OpenCvSharp.Scalar,OpenCvSharp.Scalar,System.Byte[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_drawMatches1_m7239AE1FA4711CEB4006BCC3EBB8C8F979448F44 (intptr_t ___img10, KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17* ___keypoints11, int32_t ___keypoints1Length2, intptr_t ___img23, KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17* ___keypoints24, int32_t ___keypoints2Length5, DMatchU5BU5D_t5146FE58B7CF480941ED1CBE7375F150A69CBD34* ___matches1to26, int32_t ___matches1to2Length7, intptr_t ___outImg8, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___matchColor9, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___singlePointColor10, ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___matchesMask11, int32_t ___matchesMaskLength12, int32_t ___flags13, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, int32_t, intptr_t, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, int32_t, DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A*, int32_t, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, uint8_t*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_drawMatches1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___keypoints11' to native representation
	KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA* ____keypoints11_marshaled = NULL;
	if (___keypoints11 != NULL)
	{
		____keypoints11_marshaled = reinterpret_cast<KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*>((___keypoints11)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___keypoints24' to native representation
	KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA* ____keypoints24_marshaled = NULL;
	if (___keypoints24 != NULL)
	{
		____keypoints24_marshaled = reinterpret_cast<KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*>((___keypoints24)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___matches1to26' to native representation
	DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A* ____matches1to26_marshaled = NULL;
	if (___matches1to26 != NULL)
	{
		____matches1to26_marshaled = reinterpret_cast<DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A*>((___matches1to26)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___matchesMask11' to native representation
	uint8_t* ____matchesMask11_marshaled = NULL;
	if (___matchesMask11 != NULL)
	{
		____matchesMask11_marshaled = reinterpret_cast<uint8_t*>((___matchesMask11)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_drawMatches1)(___img10, ____keypoints11_marshaled, ___keypoints1Length2, ___img23, ____keypoints24_marshaled, ___keypoints2Length5, ____matches1to26_marshaled, ___matches1to2Length7, ___outImg8, ___matchColor9, ___singlePointColor10, ____matchesMask11_marshaled, ___matchesMaskLength12, ___flags13);
	#else
	il2cppPInvokeFunc(___img10, ____keypoints11_marshaled, ___keypoints1Length2, ___img23, ____keypoints24_marshaled, ___keypoints2Length5, ____matches1to26_marshaled, ___matches1to2Length7, ___outImg8, ___matchColor9, ___singlePointColor10, ____matchesMask11_marshaled, ___matchesMaskLength12, ___flags13);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_drawMatches2(System.IntPtr,OpenCvSharp.KeyPoint[],System.Int32,System.IntPtr,OpenCvSharp.KeyPoint[],System.Int32,System.IntPtr[],System.Int32,System.Int32[],System.IntPtr,OpenCvSharp.Scalar,OpenCvSharp.Scalar,System.IntPtr[],System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_drawMatches2_m5310226CB884B867F1644149A029C3957654F8BB (intptr_t ___img10, KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17* ___keypoints11, int32_t ___keypoints1Length2, intptr_t ___img23, KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17* ___keypoints24, int32_t ___keypoints2Length5, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___matches1to26, int32_t ___matches1to2Size17, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___matches1to2Size28, intptr_t ___outImg9, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___matchColor10, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___singlePointColor11, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___matchesMask12, int32_t ___matchesMaskSize113, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___matchesMaskSize214, int32_t ___flags15, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, int32_t, intptr_t, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, int32_t, intptr_t*, int32_t, int32_t*, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t*, int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_drawMatches2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___keypoints11' to native representation
	KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA* ____keypoints11_marshaled = NULL;
	if (___keypoints11 != NULL)
	{
		____keypoints11_marshaled = reinterpret_cast<KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*>((___keypoints11)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___keypoints24' to native representation
	KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA* ____keypoints24_marshaled = NULL;
	if (___keypoints24 != NULL)
	{
		____keypoints24_marshaled = reinterpret_cast<KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*>((___keypoints24)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___matches1to26' to native representation
	intptr_t* ____matches1to26_marshaled = NULL;
	if (___matches1to26 != NULL)
	{
		____matches1to26_marshaled = reinterpret_cast<intptr_t*>((___matches1to26)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___matches1to2Size28' to native representation
	int32_t* ____matches1to2Size28_marshaled = NULL;
	if (___matches1to2Size28 != NULL)
	{
		____matches1to2Size28_marshaled = reinterpret_cast<int32_t*>((___matches1to2Size28)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___matchesMask12' to native representation
	intptr_t* ____matchesMask12_marshaled = NULL;
	if (___matchesMask12 != NULL)
	{
		____matchesMask12_marshaled = reinterpret_cast<intptr_t*>((___matchesMask12)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___matchesMaskSize214' to native representation
	int32_t* ____matchesMaskSize214_marshaled = NULL;
	if (___matchesMaskSize214 != NULL)
	{
		____matchesMaskSize214_marshaled = reinterpret_cast<int32_t*>((___matchesMaskSize214)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_drawMatches2)(___img10, ____keypoints11_marshaled, ___keypoints1Length2, ___img23, ____keypoints24_marshaled, ___keypoints2Length5, ____matches1to26_marshaled, ___matches1to2Size17, ____matches1to2Size28_marshaled, ___outImg9, ___matchColor10, ___singlePointColor11, ____matchesMask12_marshaled, ___matchesMaskSize113, ____matchesMaskSize214_marshaled, ___flags15);
	#else
	il2cppPInvokeFunc(___img10, ____keypoints11_marshaled, ___keypoints1Length2, ___img23, ____keypoints24_marshaled, ___keypoints2Length5, ____matches1to26_marshaled, ___matches1to2Size17, ____matches1to2Size28_marshaled, ___outImg9, ___matchColor10, ___singlePointColor11, ____matchesMask12_marshaled, ___matchesMaskSize113, ____matchesMaskSize214_marshaled, ___flags15);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_evaluateFeatureDetector(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Single&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_evaluateFeatureDetector_mD3024BAE6893B6293D4A61AC636BC503E958404C (intptr_t ___img10, intptr_t ___img21, intptr_t ___H1to22, intptr_t ___keypoints13, intptr_t ___keypoints24, float* ___repeatability5, int32_t* ___correspCount6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, float*, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float*) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_evaluateFeatureDetector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_evaluateFeatureDetector)(___img10, ___img21, ___H1to22, ___keypoints13, ___keypoints24, ___repeatability5, ___correspCount6);
	#else
	il2cppPInvokeFunc(___img10, ___img21, ___H1to22, ___keypoints13, ___keypoints24, ___repeatability5, ___correspCount6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_computeRecallPrecisionCurve(System.IntPtr[],System.Int32,System.Int32[],System.IntPtr[],System.Int32,System.Int32[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_computeRecallPrecisionCurve_mDC8DFC2D164A7306F66794D73F03F7A770D08FBE (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___matches1to20, int32_t ___matches1to2Size11, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___matches1to2Size22, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___correctMatches1to2Mask3, int32_t ___correctMatches1to2MaskSize14, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___correctMatches1to2MaskSize25, intptr_t ___recallPrecisionCurve6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, int32_t, int32_t*, intptr_t*, int32_t, int32_t*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_computeRecallPrecisionCurve", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___matches1to20' to native representation
	intptr_t* ____matches1to20_marshaled = NULL;
	if (___matches1to20 != NULL)
	{
		____matches1to20_marshaled = reinterpret_cast<intptr_t*>((___matches1to20)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___matches1to2Size22' to native representation
	int32_t* ____matches1to2Size22_marshaled = NULL;
	if (___matches1to2Size22 != NULL)
	{
		____matches1to2Size22_marshaled = reinterpret_cast<int32_t*>((___matches1to2Size22)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___correctMatches1to2Mask3' to native representation
	intptr_t* ____correctMatches1to2Mask3_marshaled = NULL;
	if (___correctMatches1to2Mask3 != NULL)
	{
		____correctMatches1to2Mask3_marshaled = reinterpret_cast<intptr_t*>((___correctMatches1to2Mask3)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___correctMatches1to2MaskSize25' to native representation
	int32_t* ____correctMatches1to2MaskSize25_marshaled = NULL;
	if (___correctMatches1to2MaskSize25 != NULL)
	{
		____correctMatches1to2MaskSize25_marshaled = reinterpret_cast<int32_t*>((___correctMatches1to2MaskSize25)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_computeRecallPrecisionCurve)(____matches1to20_marshaled, ___matches1to2Size11, ____matches1to2Size22_marshaled, ____correctMatches1to2Mask3_marshaled, ___correctMatches1to2MaskSize14, ____correctMatches1to2MaskSize25_marshaled, ___recallPrecisionCurve6);
	#else
	il2cppPInvokeFunc(____matches1to20_marshaled, ___matches1to2Size11, ____matches1to2Size22_marshaled, ____correctMatches1to2Mask3_marshaled, ___correctMatches1to2MaskSize14, ____correctMatches1to2MaskSize25_marshaled, ___recallPrecisionCurve6);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::features2d_getRecall(OpenCvSharp.Point2f[],System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_features2d_getRecall_m91C03B817AFFF87592CBE8551E7A379F048299CD (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___recallPrecisionCurve0, int32_t ___recallPrecisionCurveSize1, float ___l_precision2, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_getRecall", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___recallPrecisionCurve0' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____recallPrecisionCurve0_marshaled = NULL;
	if (___recallPrecisionCurve0 != NULL)
	{
		____recallPrecisionCurve0_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___recallPrecisionCurve0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(features2d_getRecall)(____recallPrecisionCurve0_marshaled, ___recallPrecisionCurveSize1, ___l_precision2);
	#else
	float returnValue = il2cppPInvokeFunc(____recallPrecisionCurve0_marshaled, ___recallPrecisionCurveSize1, ___l_precision2);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::features2d_getNearestPoint(OpenCvSharp.Point2f[],System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_getNearestPoint_m820E7F4C3F01360A1B4C355BD4FAE6304D6C21F2 (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___recallPrecisionCurve0, int32_t ___recallPrecisionCurveSize1, float ___l_precision2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_getNearestPoint", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___recallPrecisionCurve0' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____recallPrecisionCurve0_marshaled = NULL;
	if (___recallPrecisionCurve0 != NULL)
	{
		____recallPrecisionCurve0_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___recallPrecisionCurve0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_getNearestPoint)(____recallPrecisionCurve0_marshaled, ___recallPrecisionCurveSize1, ___l_precision2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____recallPrecisionCurve0_marshaled, ___recallPrecisionCurveSize1, ___l_precision2);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AGAST(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AGAST_m96244EEC17727D838EAD78E855F365F0E6DB0387 (intptr_t ___image0, intptr_t ___keypoints1, int32_t ___threshold2, int32_t ___nonmaxSuppression3, int32_t ___type4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AGAST", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AGAST)(___image0, ___keypoints1, ___threshold2, ___nonmaxSuppression3, ___type4);
	#else
	il2cppPInvokeFunc(___image0, ___keypoints1, ___threshold2, ___nonmaxSuppression3, ___type4);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_AgastFeatureDetector_create(System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_AgastFeatureDetector_create_m6F5D95BFFEB1D298DA05FD1E3384BFD56947DFA3 (int32_t ___threshold0, int32_t ___nonmaxSuppression1, int32_t ___type2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AgastFeatureDetector_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AgastFeatureDetector_create)(___threshold0, ___nonmaxSuppression1, ___type2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___threshold0, ___nonmaxSuppression1, ___type2);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_AgastFeatureDetector_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_AgastFeatureDetector_delete_m5BF32CAA5985C8F125C37A5A6B43D74B9E6666E8 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_AgastFeatureDetector_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_AgastFeatureDetector_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_AgastFeatureDetector_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_AgastFeatureDetector_get_mE9D9E93AEFFE635E599EEFB5641AEE849FD6818B (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_AgastFeatureDetector_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_AgastFeatureDetector_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AgastFeatureDetector_setThreshold(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AgastFeatureDetector_setThreshold_mCFDC31F069B17D205CEAE886FC3EC54C4AFD2357 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AgastFeatureDetector_setThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AgastFeatureDetector_setThreshold)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_AgastFeatureDetector_getThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_AgastFeatureDetector_getThreshold_mB51C6F37C1F5AFFF888AFD079DB5384497DC57A6 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AgastFeatureDetector_getThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AgastFeatureDetector_getThreshold)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AgastFeatureDetector_setNonmaxSuppression(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AgastFeatureDetector_setNonmaxSuppression_mB146DA7F5BA4C7CF3164BAD7F177F1E721FCB2B9 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AgastFeatureDetector_setNonmaxSuppression", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AgastFeatureDetector_setNonmaxSuppression)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_AgastFeatureDetector_getNonmaxSuppression(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_AgastFeatureDetector_getNonmaxSuppression_m3835738C1DB6466ADAC13F1D29BA24A01350BA26 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AgastFeatureDetector_getNonmaxSuppression", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AgastFeatureDetector_getNonmaxSuppression)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AgastFeatureDetector_setType(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AgastFeatureDetector_setType_mA40D608D7C81CCBD58CE7811123D80B13D34F076 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AgastFeatureDetector_setType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AgastFeatureDetector_setType)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_AgastFeatureDetector_getType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_AgastFeatureDetector_getType_m73382AFC6CB10F1961256BD5985FB7EACF52B467 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AgastFeatureDetector_getType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AgastFeatureDetector_getType)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_AKAZE_create(System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_AKAZE_create_mAF9C842E0A2E7B81A1C382AA0C23F66609601588 (int32_t ___descriptor_type0, int32_t ___descriptor_size1, int32_t ___descriptor_channels2, float ___threshold3, int32_t ___nOctaves4, int32_t ___nOctaveLayers5, int32_t ___diffusivity6, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t, float, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(float) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AKAZE_create)(___descriptor_type0, ___descriptor_size1, ___descriptor_channels2, ___threshold3, ___nOctaves4, ___nOctaveLayers5, ___diffusivity6);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___descriptor_type0, ___descriptor_size1, ___descriptor_channels2, ___threshold3, ___nOctaves4, ___nOctaveLayers5, ___diffusivity6);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_AKAZE_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_AKAZE_delete_m879E1FE3F2FEF707D24E93B45818DA4AB89AF632 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_AKAZE_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_AKAZE_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_AKAZE_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_AKAZE_get_mD90C24E55EE02835AAB3ECE7B0A1D8F219AA1029 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_AKAZE_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_AKAZE_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AKAZE_setDescriptorType(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AKAZE_setDescriptorType_mD0AE05F1A12492570C957B60D0AD013E4F080DDC (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_setDescriptorType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AKAZE_setDescriptorType)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_AKAZE_getDescriptorType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_AKAZE_getDescriptorType_m1870068FC536C8793F713A28719009C8A82A604F (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_getDescriptorType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AKAZE_getDescriptorType)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AKAZE_setDescriptorSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AKAZE_setDescriptorSize_m71F60E03D77352E3C3410FA8B0656031A7C36EF2 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_setDescriptorSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AKAZE_setDescriptorSize)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_AKAZE_getDescriptorSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_AKAZE_getDescriptorSize_m31AB56487F8861978D26E724B997CA07C8680A63 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_getDescriptorSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AKAZE_getDescriptorSize)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AKAZE_setDescriptorChannels(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AKAZE_setDescriptorChannels_m14A9D883C1218E35CD7F07181579A1EA27EFCAE3 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_setDescriptorChannels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AKAZE_setDescriptorChannels)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_AKAZE_getDescriptorChannels(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_AKAZE_getDescriptorChannels_mDE1905014DE2F044723BD65D42752B222B354355 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_getDescriptorChannels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AKAZE_getDescriptorChannels)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AKAZE_setThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AKAZE_setThreshold_m31F8F569842747ACDF0BFE63E789C5C5D2AD437F (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_setThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AKAZE_setThreshold)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::features2d_AKAZE_getThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_features2d_AKAZE_getThreshold_mE6AD16F0F57681BEA65EB1DB493446D554AA62FB (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_getThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(features2d_AKAZE_getThreshold)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AKAZE_setNOctaves(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AKAZE_setNOctaves_mD6F4CE4BDF512D10B47E3217B5BD0500CBDA549A (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_setNOctaves", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AKAZE_setNOctaves)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_AKAZE_getNOctaves(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_AKAZE_getNOctaves_mACC7EB32658458B4507EBA9E7F8671EFEEE6A228 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_getNOctaves", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AKAZE_getNOctaves)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AKAZE_setNOctaveLayers(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AKAZE_setNOctaveLayers_m52D66D38740AD5E1E7B8ED2DCFD38E335AE3221A (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_setNOctaveLayers", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AKAZE_setNOctaveLayers)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_AKAZE_getNOctaveLayers(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_AKAZE_getNOctaveLayers_m5C603AEA16A4E47A02027180B3FE7EFBAB763992 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_getNOctaveLayers", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AKAZE_getNOctaveLayers)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AKAZE_setDiffusivity(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AKAZE_setDiffusivity_mC8121B69FA09E35E10655C45663D83B4ED3EA51D (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_setDiffusivity", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AKAZE_setDiffusivity)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_AKAZE_getDiffusivity(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_AKAZE_getDiffusivity_mE7024F5234896F1060D50E0ED44A99EC2DEB0C87 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_getDiffusivity", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AKAZE_getDiffusivity)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_BRISK_create1(System.Int32,System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_BRISK_create1_m9598F404D4082752ED67909740BB327EBD563ADA (int32_t ___thresh0, int32_t ___octaves1, float ___patternScale2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_BRISK_create1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_BRISK_create1)(___thresh0, ___octaves1, ___patternScale2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___thresh0, ___octaves1, ___patternScale2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_BRISK_create2(System.Single[],System.Int32,System.Int32[],System.Int32,System.Single,System.Single,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_BRISK_create2_m789F0194D1A8AD631CD054B9244894700D4C7DF3 (SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___radiusList0, int32_t ___radiusListLength1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___numberList2, int32_t ___numberListLength3, float ___dMax4, float ___dMin5, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___indexChange6, int32_t ___indexChangeLength7, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (float*, int32_t, int32_t*, int32_t, float, float, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(float) + sizeof(float) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_BRISK_create2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___radiusList0' to native representation
	float* ____radiusList0_marshaled = NULL;
	if (___radiusList0 != NULL)
	{
		____radiusList0_marshaled = reinterpret_cast<float*>((___radiusList0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___numberList2' to native representation
	int32_t* ____numberList2_marshaled = NULL;
	if (___numberList2 != NULL)
	{
		____numberList2_marshaled = reinterpret_cast<int32_t*>((___numberList2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___indexChange6' to native representation
	int32_t* ____indexChange6_marshaled = NULL;
	if (___indexChange6 != NULL)
	{
		____indexChange6_marshaled = reinterpret_cast<int32_t*>((___indexChange6)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_BRISK_create2)(____radiusList0_marshaled, ___radiusListLength1, ____numberList2_marshaled, ___numberListLength3, ___dMax4, ___dMin5, ____indexChange6_marshaled, ___indexChangeLength7);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____radiusList0_marshaled, ___radiusListLength1, ____numberList2_marshaled, ___numberListLength3, ___dMax4, ___dMin5, ____indexChange6_marshaled, ___indexChangeLength7);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_BRISK_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_BRISK_delete_mBAE465300994006894A7CC29CBDF22039B236EBC (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_BRISK_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_BRISK_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_BRISK_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_BRISK_get_mE94F639617D0FF1407864C2B961480C079001683 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_BRISK_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_BRISK_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_add(System.IntPtr,System.IntPtr[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_DescriptorMatcher_add_m8F5DB8EA50865D52B882B5D4A530DDDD3B73842F (intptr_t ___obj0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___descriptors1, int32_t ___descriptorLength2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_add", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___descriptors1' to native representation
	intptr_t* ____descriptors1_marshaled = NULL;
	if (___descriptors1 != NULL)
	{
		____descriptors1_marshaled = reinterpret_cast<intptr_t*>((___descriptors1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_add)(___obj0, ____descriptors1_marshaled, ___descriptorLength2);
	#else
	il2cppPInvokeFunc(___obj0, ____descriptors1_marshaled, ___descriptorLength2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_getTrainDescriptors(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_DescriptorMatcher_getTrainDescriptors_m962505F252EAAF187512EB8085F589E8C5877D3A (intptr_t ___obj0, intptr_t ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_getTrainDescriptors", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_getTrainDescriptors)(___obj0, ___dst1);
	#else
	il2cppPInvokeFunc(___obj0, ___dst1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_clear(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_DescriptorMatcher_clear_m622CD9DDA99A765FC8C3D251BF8B3F8A77D61844 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_clear", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_clear)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_empty(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_DescriptorMatcher_empty_m03D3B55617EED3C0B2D4B8EECCB0E8818E90D03E (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_empty", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_empty)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_isMaskSupported(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_DescriptorMatcher_isMaskSupported_mF9F8DF8BF920BC8C4CA362D792363DD94B2C6516 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_isMaskSupported", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_isMaskSupported)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_train(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_DescriptorMatcher_train_mC154329286074EDA059C4A70462C1DF94C01F9EB (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_train", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_train)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_match1(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_DescriptorMatcher_match1_mDA536557FA2793619FE96826987BB651F3FC2FA9 (intptr_t ___obj0, intptr_t ___queryDescriptors1, intptr_t ___trainDescriptors2, intptr_t ___matches3, intptr_t ___mask4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_match1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_match1)(___obj0, ___queryDescriptors1, ___trainDescriptors2, ___matches3, ___mask4);
	#else
	il2cppPInvokeFunc(___obj0, ___queryDescriptors1, ___trainDescriptors2, ___matches3, ___mask4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_knnMatch1(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_DescriptorMatcher_knnMatch1_m63CD58274086CED979DED8A610FB2339A49EA8D5 (intptr_t ___obj0, intptr_t ___queryDescriptors1, intptr_t ___trainDescriptors2, intptr_t ___matches3, int32_t ___k4, intptr_t ___mask5, int32_t ___compactResult6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_knnMatch1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_knnMatch1)(___obj0, ___queryDescriptors1, ___trainDescriptors2, ___matches3, ___k4, ___mask5, ___compactResult6);
	#else
	il2cppPInvokeFunc(___obj0, ___queryDescriptors1, ___trainDescriptors2, ___matches3, ___k4, ___mask5, ___compactResult6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_radiusMatch1(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Single,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_DescriptorMatcher_radiusMatch1_m879C4206D1765EF161C18E27654EB585452A023D (intptr_t ___obj0, intptr_t ___queryDescriptors1, intptr_t ___trainDescriptors2, intptr_t ___matches3, float ___maxDistance4, intptr_t ___mask5, int32_t ___compactResult6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, float, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_radiusMatch1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_radiusMatch1)(___obj0, ___queryDescriptors1, ___trainDescriptors2, ___matches3, ___maxDistance4, ___mask5, ___compactResult6);
	#else
	il2cppPInvokeFunc(___obj0, ___queryDescriptors1, ___trainDescriptors2, ___matches3, ___maxDistance4, ___mask5, ___compactResult6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_match2(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_DescriptorMatcher_match2_m7A57B71BB30DAFDA783588A68B5E7D0B54B4CE49 (intptr_t ___obj0, intptr_t ___queryDescriptors1, intptr_t ___matches2, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___masks3, int32_t ___masksSize4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_match2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___masks3' to native representation
	intptr_t* ____masks3_marshaled = NULL;
	if (___masks3 != NULL)
	{
		____masks3_marshaled = reinterpret_cast<intptr_t*>((___masks3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_match2)(___obj0, ___queryDescriptors1, ___matches2, ____masks3_marshaled, ___masksSize4);
	#else
	il2cppPInvokeFunc(___obj0, ___queryDescriptors1, ___matches2, ____masks3_marshaled, ___masksSize4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_knnMatch2(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_DescriptorMatcher_knnMatch2_m302A5AAF9EB61AF321CB77003FC45F4282D82833 (intptr_t ___obj0, intptr_t ___queryDescriptors1, intptr_t ___matches2, int32_t ___k3, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___masks4, int32_t ___masksSize5, int32_t ___compactResult6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, intptr_t*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_knnMatch2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___masks4' to native representation
	intptr_t* ____masks4_marshaled = NULL;
	if (___masks4 != NULL)
	{
		____masks4_marshaled = reinterpret_cast<intptr_t*>((___masks4)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_knnMatch2)(___obj0, ___queryDescriptors1, ___matches2, ___k3, ____masks4_marshaled, ___masksSize5, ___compactResult6);
	#else
	il2cppPInvokeFunc(___obj0, ___queryDescriptors1, ___matches2, ___k3, ____masks4_marshaled, ___masksSize5, ___compactResult6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_radiusMatch2(System.IntPtr,System.IntPtr,System.IntPtr,System.Single,System.IntPtr[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_DescriptorMatcher_radiusMatch2_m0C983142E2C714D41A95EAD70127342A218CB8A3 (intptr_t ___obj0, intptr_t ___queryDescriptors1, intptr_t ___matches2, float ___maxDistance3, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___masks4, int32_t ___masksSize5, int32_t ___compactResult6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, float, intptr_t*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_radiusMatch2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___masks4' to native representation
	intptr_t* ____masks4_marshaled = NULL;
	if (___masks4 != NULL)
	{
		____masks4_marshaled = reinterpret_cast<intptr_t*>((___masks4)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_radiusMatch2)(___obj0, ___queryDescriptors1, ___matches2, ___maxDistance3, ____masks4_marshaled, ___masksSize5, ___compactResult6);
	#else
	il2cppPInvokeFunc(___obj0, ___queryDescriptors1, ___matches2, ___maxDistance3, ____masks4_marshaled, ___masksSize5, ___compactResult6);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_create(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_DescriptorMatcher_create_m0A6449D70E3AC2A657E74CC840DF304FC32C4E91 (String_t* ___descriptorMatcherType0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___descriptorMatcherType0' to native representation
	char* ____descriptorMatcherType0_marshaled = NULL;
	____descriptorMatcherType0_marshaled = il2cpp_codegen_marshal_string(___descriptorMatcherType0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_create)(____descriptorMatcherType0_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____descriptorMatcherType0_marshaled);
	#endif

	// Marshaling cleanup of parameter '___descriptorMatcherType0' native representation
	il2cpp_codegen_marshal_free(____descriptorMatcherType0_marshaled);
	____descriptorMatcherType0_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_DescriptorMatcher_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_DescriptorMatcher_get_mE204C9ED4E4C627E89EB3E363221E360FB26D85D (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_DescriptorMatcher_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_DescriptorMatcher_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_DescriptorMatcher_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_DescriptorMatcher_delete_m341D1B5D7ECC55114D6BD3D5C7006B909CAC2FBF (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_DescriptorMatcher_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_DescriptorMatcher_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_BFMatcher_new(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_BFMatcher_new_m4BE7A858D7B7286F5207D2A4A0E47F065DBA0967 (int32_t ___normType0, int32_t ___crossCheck1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_BFMatcher_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_BFMatcher_new)(___normType0, ___crossCheck1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___normType0, ___crossCheck1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_BFMatcher_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_BFMatcher_delete_m0CE75CC9253CC9C4880E66AA77BF2091EC52AF6B (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_BFMatcher_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_BFMatcher_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_BFMatcher_isMaskSupported(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_BFMatcher_isMaskSupported_m1838DA88C0BD106FF533771CFD3D6DC483DBED2D (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_BFMatcher_isMaskSupported", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_BFMatcher_isMaskSupported)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_BFMatcher_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_BFMatcher_get_m81DA9E7255D5B8F1F28A2CD1C30B84AC1556544B (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_BFMatcher_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_BFMatcher_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_BFMatcher_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_BFMatcher_delete_mF14B7E30D3176BBF5177213EAA54DDB703F87EF1 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_BFMatcher_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_BFMatcher_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_FlannBasedMatcher_new(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_FlannBasedMatcher_new_mD073C8A2B4912E6BC037DFB2475309F71A808464 (intptr_t ___indexParams0, intptr_t ___searchParams1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FlannBasedMatcher_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_FlannBasedMatcher_new)(___indexParams0, ___searchParams1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___indexParams0, ___searchParams1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_FlannBasedMatcher_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_FlannBasedMatcher_delete_m1062DBAE453B082B6B5F3F3AF87E1D7576120217 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FlannBasedMatcher_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_FlannBasedMatcher_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_FlannBasedMatcher_add(System.IntPtr,System.IntPtr[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_FlannBasedMatcher_add_m17C57F8625C75A5F1377A83E2886CC790A048DCC (intptr_t ___obj0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___descriptors1, int32_t ___descriptorsSize2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FlannBasedMatcher_add", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___descriptors1' to native representation
	intptr_t* ____descriptors1_marshaled = NULL;
	if (___descriptors1 != NULL)
	{
		____descriptors1_marshaled = reinterpret_cast<intptr_t*>((___descriptors1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_FlannBasedMatcher_add)(___obj0, ____descriptors1_marshaled, ___descriptorsSize2);
	#else
	il2cppPInvokeFunc(___obj0, ____descriptors1_marshaled, ___descriptorsSize2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_FlannBasedMatcher_clear(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_FlannBasedMatcher_clear_mE12FA6B63C1B4711B250643C975B24A4FA004A85 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FlannBasedMatcher_clear", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_FlannBasedMatcher_clear)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_FlannBasedMatcher_train(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_FlannBasedMatcher_train_mBC4CAFD486C684FF583A879F90AE03134E0AF0E2 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FlannBasedMatcher_train", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_FlannBasedMatcher_train)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_FlannBasedMatcher_isMaskSupported(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_FlannBasedMatcher_isMaskSupported_mBB0C35380A2CE7339B323AA30FC1F083129BE790 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FlannBasedMatcher_isMaskSupported", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_FlannBasedMatcher_isMaskSupported)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_FlannBasedMatcher_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_FlannBasedMatcher_get_m4826BD9804FDB5196E3E7EC38A018E16066C38E5 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_FlannBasedMatcher_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_FlannBasedMatcher_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_FlannBasedMatcher_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_FlannBasedMatcher_delete_m010310321AF9538C0BD54C8213ABE00DA8412816 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_FlannBasedMatcher_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_FlannBasedMatcher_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_FAST1(System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_FAST1_mCBC905216AE06117F96CF7150CF7B2D7061FBF1F (intptr_t ___image0, intptr_t ___keypoints1, int32_t ___threshold2, int32_t ___nonmaxSupression3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FAST1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_FAST1)(___image0, ___keypoints1, ___threshold2, ___nonmaxSupression3);
	#else
	il2cppPInvokeFunc(___image0, ___keypoints1, ___threshold2, ___nonmaxSupression3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_FAST2(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_FAST2_mAB1FEE6497BC8421C395EA91B8CCC2FF14AAA935 (intptr_t ___image0, intptr_t ___keypoints1, int32_t ___threshold2, int32_t ___nonmaxSupression3, int32_t ___type4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FAST2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_FAST2)(___image0, ___keypoints1, ___threshold2, ___nonmaxSupression3, ___type4);
	#else
	il2cppPInvokeFunc(___image0, ___keypoints1, ___threshold2, ___nonmaxSupression3, ___type4);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_FastFeatureDetector_create(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_FastFeatureDetector_create_m14BE4CD060CC518ECE022D7E4D522D6E4B197F50 (int32_t ___threshold0, int32_t ___nonmaxSuppression1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FastFeatureDetector_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_FastFeatureDetector_create)(___threshold0, ___nonmaxSuppression1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___threshold0, ___nonmaxSuppression1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_FastFeatureDetector_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_FastFeatureDetector_delete_m49CE58E0A9922461814BADB7116F63BA03AD380B (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_FastFeatureDetector_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_FastFeatureDetector_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_FastFeatureDetector_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_FastFeatureDetector_get_m066355D126BAC48CF2C6DB837EE980870FAFE722 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_FastFeatureDetector_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_FastFeatureDetector_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_FastFeatureDetector_setThreshold(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_FastFeatureDetector_setThreshold_m2D469A55A1AFB6A26D45682FF27B764F479E8DD9 (intptr_t ___obj0, int32_t ___threshold1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FastFeatureDetector_setThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_FastFeatureDetector_setThreshold)(___obj0, ___threshold1);
	#else
	il2cppPInvokeFunc(___obj0, ___threshold1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_FastFeatureDetector_getThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_FastFeatureDetector_getThreshold_m9A9DF9FC6D00190FDE5CC0BBEEA05E5E4F64395F (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FastFeatureDetector_getThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_FastFeatureDetector_getThreshold)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_FastFeatureDetector_setNonmaxSuppression(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_FastFeatureDetector_setNonmaxSuppression_mC6BC6D9927F378FF411C0510390E49C7299A001F (intptr_t ___obj0, int32_t ___f1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FastFeatureDetector_setNonmaxSuppression", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_FastFeatureDetector_setNonmaxSuppression)(___obj0, ___f1);
	#else
	il2cppPInvokeFunc(___obj0, ___f1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_FastFeatureDetector_getNonmaxSuppression(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_FastFeatureDetector_getNonmaxSuppression_mCCF34157885741FAD984EA2D5C419FCDF0D44327 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FastFeatureDetector_getNonmaxSuppression", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_FastFeatureDetector_getNonmaxSuppression)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_FastFeatureDetector_setType(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_FastFeatureDetector_setType_m3F1BDEDB0A097E2EA7C723C7DF41CDE4943A5E90 (intptr_t ___obj0, int32_t ___type1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FastFeatureDetector_setType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_FastFeatureDetector_setType)(___obj0, ___type1);
	#else
	il2cppPInvokeFunc(___obj0, ___type1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_FastFeatureDetector_getType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_FastFeatureDetector_getType_mB1DA4EBC1C02BC0F55056190A945849AE1D5A994 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FastFeatureDetector_getType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_FastFeatureDetector_getType)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_Feature2D_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_Feature2D_get_mE709827D9BEE31C6F96FFA9CEBAC9ED84329BC7B (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_Feature2D_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_Feature2D_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_Feature2D_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_Feature2D_delete_m983161A0AD224C97B4C59EE2ABB7FB817B018F8C (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_Feature2D_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_Feature2D_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_Feature2D_detect_Mat1(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Feature2D_detect_Mat1_m41DEE05D6FD696098CFE81405F43DCF0897BDBC6 (intptr_t ___detector0, intptr_t ___image1, intptr_t ___keypoints2, intptr_t ___mask3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Feature2D_detect_Mat1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Feature2D_detect_Mat1)(___detector0, ___image1, ___keypoints2, ___mask3);
	#else
	il2cppPInvokeFunc(___detector0, ___image1, ___keypoints2, ___mask3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_Feature2D_detect_Mat2(System.IntPtr,System.IntPtr[],System.Int32,System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Feature2D_detect_Mat2_m7AA0573A8E98FA22BC20320AD684B840544AB7C2 (intptr_t ___detector0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___images1, int32_t ___imageLength2, intptr_t ___keypoints3, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___mask4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Feature2D_detect_Mat2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___images1' to native representation
	intptr_t* ____images1_marshaled = NULL;
	if (___images1 != NULL)
	{
		____images1_marshaled = reinterpret_cast<intptr_t*>((___images1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___mask4' to native representation
	intptr_t* ____mask4_marshaled = NULL;
	if (___mask4 != NULL)
	{
		____mask4_marshaled = reinterpret_cast<intptr_t*>((___mask4)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Feature2D_detect_Mat2)(___detector0, ____images1_marshaled, ___imageLength2, ___keypoints3, ____mask4_marshaled);
	#else
	il2cppPInvokeFunc(___detector0, ____images1_marshaled, ___imageLength2, ___keypoints3, ____mask4_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_Feature2D_detect_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Feature2D_detect_InputArray_m04C008EBE977256A2FD13307017F1CDE4BA4C2A5 (intptr_t ___detector0, intptr_t ___image1, intptr_t ___keypoints2, intptr_t ___mask3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Feature2D_detect_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Feature2D_detect_InputArray)(___detector0, ___image1, ___keypoints2, ___mask3);
	#else
	il2cppPInvokeFunc(___detector0, ___image1, ___keypoints2, ___mask3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_Feature2D_compute1(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Feature2D_compute1_m5BBBA93EE2FF8950E41C82CC39BA10B0FED58351 (intptr_t ___obj0, intptr_t ___image1, intptr_t ___keypoints2, intptr_t ___descriptors3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Feature2D_compute1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Feature2D_compute1)(___obj0, ___image1, ___keypoints2, ___descriptors3);
	#else
	il2cppPInvokeFunc(___obj0, ___image1, ___keypoints2, ___descriptors3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_Feature2D_compute2(System.IntPtr,System.IntPtr[],System.Int32,System.IntPtr,System.IntPtr[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Feature2D_compute2_m67C850C92BAE540DA79A4C67CF4C1A06ED2FB940 (intptr_t ___detector0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___images1, int32_t ___imageLength2, intptr_t ___keypoints3, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___descriptors4, int32_t ___descriptorsLength5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, intptr_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Feature2D_compute2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___images1' to native representation
	intptr_t* ____images1_marshaled = NULL;
	if (___images1 != NULL)
	{
		____images1_marshaled = reinterpret_cast<intptr_t*>((___images1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___descriptors4' to native representation
	intptr_t* ____descriptors4_marshaled = NULL;
	if (___descriptors4 != NULL)
	{
		____descriptors4_marshaled = reinterpret_cast<intptr_t*>((___descriptors4)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Feature2D_compute2)(___detector0, ____images1_marshaled, ___imageLength2, ___keypoints3, ____descriptors4_marshaled, ___descriptorsLength5);
	#else
	il2cppPInvokeFunc(___detector0, ____images1_marshaled, ___imageLength2, ___keypoints3, ____descriptors4_marshaled, ___descriptorsLength5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_Feature2D_detectAndCompute(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Feature2D_detectAndCompute_m570BCF4053402F053CFDCF6CEC52428E96BCAD5F (intptr_t ___detector0, intptr_t ___image1, intptr_t ___mask2, intptr_t ___keypoints3, intptr_t ___descriptors4, int32_t ___useProvidedKeypoints5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Feature2D_detectAndCompute", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Feature2D_detectAndCompute)(___detector0, ___image1, ___mask2, ___keypoints3, ___descriptors4, ___useProvidedKeypoints5);
	#else
	il2cppPInvokeFunc(___detector0, ___image1, ___mask2, ___keypoints3, ___descriptors4, ___useProvidedKeypoints5);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_Feature2D_descriptorSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_Feature2D_descriptorSize_m2476A9A37F1E3A2FB47C4D477E0F7AB56E0CDCBC (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Feature2D_descriptorSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Feature2D_descriptorSize)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::features2d_Feature2D_descriptorType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_Feature2D_descriptorType_m82E4DA4D7960423CE3B3AC314134ABA3D82FD33A (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Feature2D_descriptorType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Feature2D_descriptorType)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::features2d_Feature2D_defaultNorm(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_Feature2D_defaultNorm_m0FF4DFE8DC335F916EA67BFB67B53EFAAD4513C8 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Feature2D_defaultNorm", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Feature2D_defaultNorm)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::features2d_Feature2D_empty(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_Feature2D_empty_mFCEEAA86DA05B27E7494044C23633C3B20D4256A (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Feature2D_empty", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Feature2D_empty)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_GFTTDetector_create(System.Int32,System.Double,System.Double,System.Int32,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_GFTTDetector_create_m93687CAA7A11F22345EB4F95816108558342499F (int32_t ___maxCorners0, double ___qualityLevel1, double ___minDistance2, int32_t ___blockSize3, int32_t ___useHarrisDetector4, double ___k5, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, double, double, int32_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_create)(___maxCorners0, ___qualityLevel1, ___minDistance2, ___blockSize3, ___useHarrisDetector4, ___k5);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___maxCorners0, ___qualityLevel1, ___minDistance2, ___blockSize3, ___useHarrisDetector4, ___k5);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_GFTTDetector_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_GFTTDetector_get_mAA35EB370BC1694A699F3DC8CF3531A8956E3753 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_GFTTDetector_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_GFTTDetector_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_GFTTDetector_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_GFTTDetector_delete_m303B770FF3F082D61FA3EC994BA620B59A545B41 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_GFTTDetector_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_GFTTDetector_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_GFTTDetector_setMaxFeatures(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_GFTTDetector_setMaxFeatures_mF28FC8E3B63970227DAAA8C7B884E8B75C2DCCA5 (intptr_t ___obj0, int32_t ___maxFeatures1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_setMaxFeatures", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_setMaxFeatures)(___obj0, ___maxFeatures1);
	#else
	il2cppPInvokeFunc(___obj0, ___maxFeatures1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_GFTTDetector_getMaxFeatures(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_GFTTDetector_getMaxFeatures_m4CE2146E8D3C12FD6C65157CD03C4579AFFA2218 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_getMaxFeatures", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_getMaxFeatures)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_GFTTDetector_setQualityLevel(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_GFTTDetector_setQualityLevel_mE1C8DFFAF2E34A54AFF6B18B805F06D5F2E2E280 (intptr_t ___obj0, double ___qlevel1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_setQualityLevel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_setQualityLevel)(___obj0, ___qlevel1);
	#else
	il2cppPInvokeFunc(___obj0, ___qlevel1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::features2d_GFTTDetector_getQualityLevel(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_features2d_GFTTDetector_getQualityLevel_mEAEB1AF84C5E93B760ADEFEDF2D54D99E027BED1 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_getQualityLevel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_getQualityLevel)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_GFTTDetector_setMinDistance(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_GFTTDetector_setMinDistance_m837A027D9755580364C309EE550A77B8AD245F3D (intptr_t ___obj0, double ___minDistance1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_setMinDistance", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_setMinDistance)(___obj0, ___minDistance1);
	#else
	il2cppPInvokeFunc(___obj0, ___minDistance1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::features2d_GFTTDetector_getMinDistance(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_features2d_GFTTDetector_getMinDistance_mED4966A937BC6B015E7E453317001DF95211F512 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_getMinDistance", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_getMinDistance)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_GFTTDetector_setBlockSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_GFTTDetector_setBlockSize_mC1A8777F0C3ED5E5150A99A70E2E9AE45AC070DD (intptr_t ___obj0, int32_t ___blockSize1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_setBlockSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_setBlockSize)(___obj0, ___blockSize1);
	#else
	il2cppPInvokeFunc(___obj0, ___blockSize1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_GFTTDetector_getBlockSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_GFTTDetector_getBlockSize_mFE65605890626F70C987827B163A678902425A5D (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_getBlockSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_getBlockSize)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_GFTTDetector_setHarrisDetector(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_GFTTDetector_setHarrisDetector_m140C0BD82EDED4F7F9F2B514851EACEEE8134E34 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_setHarrisDetector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_setHarrisDetector)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_GFTTDetector_getHarrisDetector(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_GFTTDetector_getHarrisDetector_mB17733BD3874163D65E74136901B1867CEC92322 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_getHarrisDetector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_getHarrisDetector)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_GFTTDetector_setK(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_GFTTDetector_setK_m745DBDB29EB353C24353C27B7B01748C1FF973FB (intptr_t ___obj0, double ___k1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_setK", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_setK)(___obj0, ___k1);
	#else
	il2cppPInvokeFunc(___obj0, ___k1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::features2d_GFTTDetector_getK(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_features2d_GFTTDetector_getK_m94A0018E9297A8E24FF2BF3EE355A1003BF96AD7 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_getK", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_getK)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_KAZE_create(System.Boolean,System.Boolean,System.Single,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_KAZE_create_mC48B246F3127F6126B99EA7D212924B20F68E88D (bool ___extended0, bool ___upright1, float ___threshold2, int32_t ___nOctaves3, int32_t ___nOctaveLayers4, int32_t ___diffusivity5, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, float, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 4 + 4 + sizeof(float) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_KAZE_create)(static_cast<int32_t>(___extended0), static_cast<int32_t>(___upright1), ___threshold2, ___nOctaves3, ___nOctaveLayers4, ___diffusivity5);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(static_cast<int32_t>(___extended0), static_cast<int32_t>(___upright1), ___threshold2, ___nOctaves3, ___nOctaveLayers4, ___diffusivity5);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_KAZE_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_KAZE_delete_mE75AC02C39DC967964195442A99CFCD8CABE91B5 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_KAZE_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_KAZE_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_KAZE_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_KAZE_get_mBD07016675E397AD758D1395CA8123B277A372CF (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_KAZE_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_KAZE_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_KAZE_setDiffusivity(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KAZE_setDiffusivity_mD17A0A898DF9FA58912E61A5711105417C631540 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_setDiffusivity", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KAZE_setDiffusivity)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_KAZE_getDiffusivity(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_KAZE_getDiffusivity_mD8FD02EA243747A4C50D36BD1FFBF09914E4A6AD (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_getDiffusivity", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_KAZE_getDiffusivity)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_KAZE_setExtended(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KAZE_setExtended_m1EB7187F4A7677B3CE9725698172F0B6EAE3E9D8 (intptr_t ___obj0, bool ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_setExtended", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KAZE_setExtended)(___obj0, static_cast<int32_t>(___val1));
	#else
	il2cppPInvokeFunc(___obj0, static_cast<int32_t>(___val1));
	#endif

}
// System.Boolean OpenCvSharp.NativeMethods::features2d_KAZE_getExtended(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_features2d_KAZE_getExtended_mA12BF569A92914C4F9BE40AC2099C52980FC1970 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_getExtended", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_KAZE_getExtended)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return static_cast<bool>(returnValue);
}
// System.Void OpenCvSharp.NativeMethods::features2d_KAZE_setNOctaveLayers(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KAZE_setNOctaveLayers_m601BA225185934F4EF32D94E71330C483CD7F83C (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_setNOctaveLayers", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KAZE_setNOctaveLayers)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_KAZE_getNOctaveLayers(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_KAZE_getNOctaveLayers_m713F6C878D669D8E2A0A01A1FEBDAAFFAB80766E (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_getNOctaveLayers", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_KAZE_getNOctaveLayers)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_KAZE_setNOctaves(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KAZE_setNOctaves_mE45502481F91320C317AB9944C73524B2CBD8876 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_setNOctaves", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KAZE_setNOctaves)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_KAZE_getNOctaves(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_KAZE_getNOctaves_m42BADA7CF5804D325676B5E00E1F0BE8971FC647 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_getNOctaves", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_KAZE_getNOctaves)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_KAZE_setThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KAZE_setThreshold_mA146FF0F2546366D21B46B17F8DE21BAD984E7BC (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_setThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KAZE_setThreshold)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::features2d_KAZE_getThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_features2d_KAZE_getThreshold_m19A36818A7EA6976445F29D3A8891EBE6A744FA3 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_getThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(features2d_KAZE_getThreshold)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_KAZE_setUpright(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KAZE_setUpright_mB9DEC24337AA3D7A0042EB0685FA000F4845A897 (intptr_t ___obj0, bool ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_setUpright", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KAZE_setUpright)(___obj0, static_cast<int32_t>(___val1));
	#else
	il2cppPInvokeFunc(___obj0, static_cast<int32_t>(___val1));
	#endif

}
// System.Boolean OpenCvSharp.NativeMethods::features2d_KAZE_getUpright(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_features2d_KAZE_getUpright_m3BEE6B7D168B36C5AC87C2654678D4645D09097C (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_getUpright", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_KAZE_getUpright)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return static_cast<bool>(returnValue);
}
// System.Void OpenCvSharp.NativeMethods::features2d_KeyPointsFilter_runByImageBorder(System.IntPtr,OpenCvSharp.Size,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KeyPointsFilter_runByImageBorder_m0C42EC5BE416DC24F5E12FA0FE49A42A67517402 (intptr_t ___keypoints0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___imageSize1, int32_t ___borderSize2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KeyPointsFilter_runByImageBorder", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KeyPointsFilter_runByImageBorder)(___keypoints0, ___imageSize1, ___borderSize2);
	#else
	il2cppPInvokeFunc(___keypoints0, ___imageSize1, ___borderSize2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_KeyPointsFilter_runByKeypointSize(System.IntPtr,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KeyPointsFilter_runByKeypointSize_mC3E2CEB31D8D2BA0420A67ED4800FAEC888E394D (intptr_t ___keypoints0, float ___minSize1, float ___maxSize2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KeyPointsFilter_runByKeypointSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KeyPointsFilter_runByKeypointSize)(___keypoints0, ___minSize1, ___maxSize2);
	#else
	il2cppPInvokeFunc(___keypoints0, ___minSize1, ___maxSize2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_KeyPointsFilter_runByPixelsMask(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KeyPointsFilter_runByPixelsMask_mD3CDB0B73BE76BA82A5FDB24B89BDE5DE1D12630 (intptr_t ___keypoints0, intptr_t ___mask1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KeyPointsFilter_runByPixelsMask", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KeyPointsFilter_runByPixelsMask)(___keypoints0, ___mask1);
	#else
	il2cppPInvokeFunc(___keypoints0, ___mask1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_KeyPointsFilter_removeDuplicated(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KeyPointsFilter_removeDuplicated_m9C5A6C6331DFD93CAE2F8D69BB4C1F7D4422A786 (intptr_t ___keypoints0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KeyPointsFilter_removeDuplicated", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KeyPointsFilter_removeDuplicated)(___keypoints0);
	#else
	il2cppPInvokeFunc(___keypoints0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_KeyPointsFilter_retainBest(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KeyPointsFilter_retainBest_m7E3304E2709A6580A4E8A1765B118DA89864AD39 (intptr_t ___keypoints0, int32_t ___npoints1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KeyPointsFilter_retainBest", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KeyPointsFilter_retainBest)(___keypoints0, ___npoints1);
	#else
	il2cppPInvokeFunc(___keypoints0, ___npoints1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_MSER_create(System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Int32,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_MSER_create_m7D3D4E93CC46A8CF6DF4A6CE0399C7CF9D4F7AA3 (int32_t ___delta0, int32_t ___minArea1, int32_t ___maxArea2, double ___maxVariation3, double ___minDiversity4, int32_t ___maxEvolution5, double ___areaThreshold6, double ___minMargin7, int32_t ___edgeBlurSize8, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t, double, double, int32_t, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_MSER_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_MSER_create)(___delta0, ___minArea1, ___maxArea2, ___maxVariation3, ___minDiversity4, ___maxEvolution5, ___areaThreshold6, ___minMargin7, ___edgeBlurSize8);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___delta0, ___minArea1, ___maxArea2, ___maxVariation3, ___minDiversity4, ___maxEvolution5, ___areaThreshold6, ___minMargin7, ___edgeBlurSize8);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_MSER_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_MSER_delete_m645CED1252DAA5BBDA206D6E3BB89CCA0C31BEF5 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_MSER_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_MSER_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_MSER_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_MSER_get_m100FDEB5F8C77D0B93DE98918FD37186F5DE3437 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_MSER_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_MSER_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_MSER_detectRegions(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_MSER_detectRegions_mD636D2821DD771B237D7A9E750CF5E50FDF39001 (intptr_t ___obj0, intptr_t ___image1, intptr_t ___msers2, intptr_t ___bboxes3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_MSER_detectRegions", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_MSER_detectRegions)(___obj0, ___image1, ___msers2, ___bboxes3);
	#else
	il2cppPInvokeFunc(___obj0, ___image1, ___msers2, ___bboxes3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_MSER_setDelta(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_MSER_setDelta_mB60A89F775113CF68EC6DC802D05DA5253E657DB (intptr_t ___obj0, int32_t ___delta1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_MSER_setDelta", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_MSER_setDelta)(___obj0, ___delta1);
	#else
	il2cppPInvokeFunc(___obj0, ___delta1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_MSER_getDelta(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_MSER_getDelta_m2EF42A9B0DC091FEF4C22C4EE0735D0B151922ED (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_MSER_getDelta", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_MSER_getDelta)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_MSER_setMinArea(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_MSER_setMinArea_m6B0D75B0111CEAF83EBE3C8D24565B43A20DE147 (intptr_t ___obj0, int32_t ___minArea1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_MSER_setMinArea", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_MSER_setMinArea)(___obj0, ___minArea1);
	#else
	il2cppPInvokeFunc(___obj0, ___minArea1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_MSER_getMinArea(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_MSER_getMinArea_m2727CBC545A5DB94BEB3857A51179285AB15120E (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_MSER_getMinArea", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_MSER_getMinArea)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_MSER_setMaxArea(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_MSER_setMaxArea_m3DBEF15A6EB2D8BAB2C3C8488873302508EFFE62 (intptr_t ___obj0, int32_t ___maxArea1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_MSER_setMaxArea", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_MSER_setMaxArea)(___obj0, ___maxArea1);
	#else
	il2cppPInvokeFunc(___obj0, ___maxArea1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_MSER_getMaxArea(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_MSER_getMaxArea_mA713A21ED31E3262F8F1DD74F83155BB0F882105 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_MSER_getMaxArea", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_MSER_getMaxArea)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_MSER_setPass2Only(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_MSER_setPass2Only_mC6220AA78D92A10F868A97B7E93813B66729B48C (intptr_t ___obj0, int32_t ___f1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_MSER_setPass2Only", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_MSER_setPass2Only)(___obj0, ___f1);
	#else
	il2cppPInvokeFunc(___obj0, ___f1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_MSER_getPass2Only(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_MSER_getPass2Only_m22562BA86FB6E76411F9787E80A75B894D2AD7E9 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_MSER_getPass2Only", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_MSER_getPass2Only)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_ORB_create(System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_ORB_create_m38ADB348F556952E10CF4816B4057EB7FDB46A54 (int32_t ___nFeatures0, float ___scaleFactor1, int32_t ___nlevels2, int32_t ___edgeThreshold3, int32_t ___firstLevel4, int32_t ___wtaK5, int32_t ___scoreType6, int32_t ___patchSize7, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, float, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(float) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_ORB_create)(___nFeatures0, ___scaleFactor1, ___nlevels2, ___edgeThreshold3, ___firstLevel4, ___wtaK5, ___scoreType6, ___patchSize7);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___nFeatures0, ___scaleFactor1, ___nlevels2, ___edgeThreshold3, ___firstLevel4, ___wtaK5, ___scoreType6, ___patchSize7);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_ORB_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_ORB_delete_mB839E2AEE3D41DA33A79F26FB2618A72BB881753 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_ORB_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_ORB_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_ORB_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_ORB_get_m334F3E8D46AE2D4324C659C592EDDB0FF9098764 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_ORB_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_ORB_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_ORB_setMaxFeatures(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_ORB_setMaxFeatures_m442E76DDDE38D583D7AB3A0F10F037F4CE1A19DF (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_setMaxFeatures", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_ORB_setMaxFeatures)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_ORB_getMaxFeatures(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_ORB_getMaxFeatures_mF8A9D17AE4064414E0F48B2809BD9E7932FA0004 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_getMaxFeatures", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_ORB_getMaxFeatures)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_ORB_setScaleFactor(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_ORB_setScaleFactor_m78700EBEEE9D0B972A7073E9AA56C4C3578FF272 (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_setScaleFactor", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_ORB_setScaleFactor)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::features2d_ORB_getScaleFactor(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_features2d_ORB_getScaleFactor_m48881B8014AF6127A5B8C612B8185967B1E7F44D (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_getScaleFactor", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(features2d_ORB_getScaleFactor)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_ORB_setNLevels(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_ORB_setNLevels_m03FE5C27B600A74E5FD157F658FA903EE34D057F (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_setNLevels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_ORB_setNLevels)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_ORB_getNLevels(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_ORB_getNLevels_m57644DD9D5E0F027269D9A11C4D4636F4EAFB7E0 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_getNLevels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_ORB_getNLevels)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_ORB_setEdgeThreshold(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_ORB_setEdgeThreshold_mF6429D96F44EE3A0C86E110D61CE27324263E295 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_setEdgeThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_ORB_setEdgeThreshold)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_ORB_getEdgeThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_ORB_getEdgeThreshold_m63CEB4238A7348B962B179D9DF8E3AF0593C7FEC (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_getEdgeThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_ORB_getEdgeThreshold)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_ORB_setFirstLevel(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_ORB_setFirstLevel_mD3D31B1B114DC295EB7096E8562E7D9637D3AE3D (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_setFirstLevel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_ORB_setFirstLevel)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_ORB_getFirstLevel(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_ORB_getFirstLevel_m90D4B7DEB90758B1371F08F3720766F1A3CCF01D (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_getFirstLevel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_ORB_getFirstLevel)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_ORB_setWTA_K(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_ORB_setWTA_K_mB2204F10C2FA461EAAFA392C2EDD77176C329BC9 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_setWTA_K", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_ORB_setWTA_K)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_ORB_getWTA_K(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_ORB_getWTA_K_m4D0014D617CCFBFEDBF2BBA16AA8E4761BBCABB3 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_getWTA_K", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_ORB_getWTA_K)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_ORB_setScoreType(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_ORB_setScoreType_mB99503DA25DA07960705F8A875C17BD6EFCCDB60 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_setScoreType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_ORB_setScoreType)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_ORB_getScoreType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_ORB_getScoreType_m2EF6AF504119A6861104681068B34EB538F064FC (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_getScoreType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_ORB_getScoreType)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_ORB_setPatchSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_ORB_setPatchSize_m0F627902044E54CAE82F8EC255FDD8A84AF89190 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_setPatchSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_ORB_setPatchSize)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_ORB_getPatchSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_ORB_getPatchSize_m5D72076B53E8B5E990538F2190AD7A4E1AB1008D (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_getPatchSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_ORB_getPatchSize)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_ORB_setFastThreshold(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_ORB_setFastThreshold_m6AA610DE716E40041D9010F1275143BAFB472B97 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_setFastThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_ORB_setFastThreshold)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_ORB_getFastThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_ORB_getFastThreshold_m44ED5C6BF828866C30C06E212779E2AB1BA323EE (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_getFastThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_ORB_getFastThreshold)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_SimpleBlobDetector_create(OpenCvSharp.SimpleBlobDetector/WParams&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_SimpleBlobDetector_create_mF0C8EEE4744D01DBC53FE4081A4D8991FBA156BA (WParams_tF352D7BCB627DF6ABFC3538BAE8B601298495A54* ___parameters0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (WParams_tF352D7BCB627DF6ABFC3538BAE8B601298495A54*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(WParams_tF352D7BCB627DF6ABFC3538BAE8B601298495A54*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_SimpleBlobDetector_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_SimpleBlobDetector_create)(___parameters0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___parameters0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_SimpleBlobDetector_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_SimpleBlobDetector_get_mBAE8AA0ED0805D3208668A777CD7F77E326F2789 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_SimpleBlobDetector_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_SimpleBlobDetector_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_SimpleBlobDetector_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_SimpleBlobDetector_delete_m6492449DF2DA3977D45BAB5617C536CE7487F225 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_SimpleBlobDetector_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_SimpleBlobDetector_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_getGaussianKernel(System.Int32,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_getGaussianKernel_m0E6391A4797DB3C9929D2F847C9AE8A2126B8179 (int32_t ___ksize0, double ___sigma1, int32_t ___ktype2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getGaussianKernel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_getGaussianKernel)(___ksize0, ___sigma1, ___ktype2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ksize0, ___sigma1, ___ktype2);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_getDerivKernels(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_getDerivKernels_m822F7CB01D5112D3F84C84A59DD9F06C8C65A69D (intptr_t ___kx0, intptr_t ___ky1, int32_t ___dx2, int32_t ___dy3, int32_t ___ksize4, int32_t ___normalize5, int32_t ___ktype6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getDerivKernels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_getDerivKernels)(___kx0, ___ky1, ___dx2, ___dy3, ___ksize4, ___normalize5, ___ktype6);
	#else
	il2cppPInvokeFunc(___kx0, ___ky1, ___dx2, ___dy3, ___ksize4, ___normalize5, ___ktype6);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_getGaborKernel(OpenCvSharp.Size,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_getGaborKernel_m5850E3B094BE2A9C89420DE5A34B12E0A046E5DD (Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___ksize0, double ___sigma1, double ___theta2, double ___lambd3, double ___gamma4, double ___psi5, int32_t ___ktype6, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, double, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getGaborKernel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_getGaborKernel)(___ksize0, ___sigma1, ___theta2, ___lambd3, ___gamma4, ___psi5, ___ktype6);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ksize0, ___sigma1, ___theta2, ___lambd3, ___gamma4, ___psi5, ___ktype6);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_getStructuringElement(System.Int32,OpenCvSharp.Size,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_getStructuringElement_mDC44016CDC07014BD65103FAD5B9BD659C6446C6 (int32_t ___shape0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___ksize1, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___anchor2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getStructuringElement", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_getStructuringElement)(___shape0, ___ksize1, ___anchor2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___shape0, ___ksize1, ___anchor2);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_copyMakeBorder(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_copyMakeBorder_m249BA869C403B239C2E2F3AA0E31F1CF89E2B070 (intptr_t ___src0, intptr_t ___dst1, int32_t ___top2, int32_t ___bottom3, int32_t ___left4, int32_t ___right5, int32_t ___borderType6, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___value7, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t, int32_t, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_copyMakeBorder", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_copyMakeBorder)(___src0, ___dst1, ___top2, ___bottom3, ___left4, ___right5, ___borderType6, ___value7);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___top2, ___bottom3, ___left4, ___right5, ___borderType6, ___value7);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_medianBlur(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_medianBlur_m7C48E3B3183F17D4D9DEC5E9B9C61991508269C4 (intptr_t ___src0, intptr_t ___dst1, int32_t ___ksize2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_medianBlur", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_medianBlur)(___src0, ___dst1, ___ksize2);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___ksize2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_GaussianBlur(System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GaussianBlur_m405340D9766A7F6053E600D6C8AFABFA2748FDE9 (intptr_t ___src0, intptr_t ___dst1, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___ksize2, double ___sigmaX3, double ___sigmaY4, int32_t ___borderType5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GaussianBlur", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GaussianBlur)(___src0, ___dst1, ___ksize2, ___sigmaX3, ___sigmaY4, ___borderType5);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___ksize2, ___sigmaX3, ___sigmaY4, ___borderType5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_bilateralFilter(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_bilateralFilter_m831FC0EDC0D37E8AF7CD0284EB9BEACAD5B37B10 (intptr_t ___src0, intptr_t ___dst1, int32_t ___d2, double ___sigmaColor3, double ___sigmaSpace4, int32_t ___borderType5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_bilateralFilter", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_bilateralFilter)(___src0, ___dst1, ___d2, ___sigmaColor3, ___sigmaSpace4, ___borderType5);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___d2, ___sigmaColor3, ___sigmaSpace4, ___borderType5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_boxFilter(System.IntPtr,System.IntPtr,System.Int32,OpenCvSharp.Size,OpenCvSharp.Point,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_boxFilter_m71491C2350B58EFC9B548BCBE30023AC4ECD053D (intptr_t ___src0, intptr_t ___dst1, int32_t ___ddepth2, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___ksize3, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___anchor4, int32_t ___normalize5, int32_t ___borderType6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_boxFilter", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_boxFilter)(___src0, ___dst1, ___ddepth2, ___ksize3, ___anchor4, ___normalize5, ___borderType6);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___ddepth2, ___ksize3, ___anchor4, ___normalize5, ___borderType6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_blur(System.IntPtr,System.IntPtr,OpenCvSharp.Size,OpenCvSharp.Point,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_blur_m5A75C710A93CDAA4F58B9939F47D6ECD98D64D47 (intptr_t ___src0, intptr_t ___dst1, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___ksize2, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___anchor3, int32_t ___borderType4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_blur", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_blur)(___src0, ___dst1, ___ksize2, ___anchor3, ___borderType4);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___ksize2, ___anchor3, ___borderType4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_filter2D(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,OpenCvSharp.Point,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_filter2D_mBD8DB612461148102B13D2344C5CC71187853844 (intptr_t ___src0, intptr_t ___dst1, int32_t ___ddepth2, intptr_t ___kernel3, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___anchor4, double ___delta5, int32_t ___borderType6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_filter2D", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_filter2D)(___src0, ___dst1, ___ddepth2, ___kernel3, ___anchor4, ___delta5, ___borderType6);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___ddepth2, ___kernel3, ___anchor4, ___delta5, ___borderType6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_sepFilter2D(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,OpenCvSharp.Point,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_sepFilter2D_m7DE0B9D58EE6016601F8846A6B4E69DB4BC149EE (intptr_t ___src0, intptr_t ___dst1, int32_t ___ddepth2, intptr_t ___kernelX3, intptr_t ___kernelY4, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___anchor5, double ___delta6, int32_t ___borderType7, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_sepFilter2D", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_sepFilter2D)(___src0, ___dst1, ___ddepth2, ___kernelX3, ___kernelY4, ___anchor5, ___delta6, ___borderType7);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___ddepth2, ___kernelX3, ___kernelY4, ___anchor5, ___delta6, ___borderType7);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_Sobel(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Sobel_m13153705E9FDFF41A24CC366236C7F7AB2F35F40 (intptr_t ___src0, intptr_t ___dst1, int32_t ___ddepth2, int32_t ___dx3, int32_t ___dy4, int32_t ___ksize5, double ___scale6, double ___delta7, int32_t ___borderType8, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t, int32_t, int32_t, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Sobel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Sobel)(___src0, ___dst1, ___ddepth2, ___dx3, ___dy4, ___ksize5, ___scale6, ___delta7, ___borderType8);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___ddepth2, ___dx3, ___dy4, ___ksize5, ___scale6, ___delta7, ___borderType8);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_Scharr(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Scharr_mD7A20E5E13CAF98711266CB3DB9E7A183FB9FB1E (intptr_t ___src0, intptr_t ___dst1, int32_t ___ddepth2, int32_t ___dx3, int32_t ___dy4, double ___scale5, double ___delta6, int32_t ___borderType7, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t, int32_t, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Scharr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Scharr)(___src0, ___dst1, ___ddepth2, ___dx3, ___dy4, ___scale5, ___delta6, ___borderType7);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___ddepth2, ___dx3, ___dy4, ___scale5, ___delta6, ___borderType7);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_Laplacian(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Laplacian_m7AE25DDE3D1D1A11A96B002CC66612D7E4836BE4 (intptr_t ___src0, intptr_t ___dst1, int32_t ___ddepth2, int32_t ___ksize3, double ___scale4, double ___delta5, int32_t ___borderType6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Laplacian", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Laplacian)(___src0, ___dst1, ___ddepth2, ___ksize3, ___scale4, ___delta5, ___borderType6);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___ddepth2, ___ksize3, ___scale4, ___delta5, ___borderType6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_Canny(System.IntPtr,System.IntPtr,System.Double,System.Double,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Canny_mC6EB3D4755338615F387BE20C305DE6DD502C007 (intptr_t ___src0, intptr_t ___edges1, double ___threshold12, double ___threshold23, int32_t ___apertureSize4, int32_t ___L2gradient5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, double, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Canny", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Canny)(___src0, ___edges1, ___threshold12, ___threshold23, ___apertureSize4, ___L2gradient5);
	#else
	il2cppPInvokeFunc(___src0, ___edges1, ___threshold12, ___threshold23, ___apertureSize4, ___L2gradient5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_cornerEigenValsAndVecs(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_cornerEigenValsAndVecs_mA5AF3997A7071F0F2C23CAA681C73474FE745242 (intptr_t ___src0, intptr_t ___dst1, int32_t ___blockSize2, int32_t ___ksize3, int32_t ___borderType4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_cornerEigenValsAndVecs", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_cornerEigenValsAndVecs)(___src0, ___dst1, ___blockSize2, ___ksize3, ___borderType4);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___blockSize2, ___ksize3, ___borderType4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_preCornerDetect(System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_preCornerDetect_m110318E5B6887EC554B7B7E0D6A26B2402AD498E (intptr_t ___src0, intptr_t ___dst1, int32_t ___ksize2, int32_t ___borderType3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_preCornerDetect", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_preCornerDetect)(___src0, ___dst1, ___ksize2, ___borderType3);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___ksize2, ___borderType3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_cornerSubPix(System.IntPtr,System.IntPtr,OpenCvSharp.Size,OpenCvSharp.Size,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_cornerSubPix_m6902D7BEB0942AEDDEA99BC441C2253578531A52 (intptr_t ___image0, intptr_t ___corners1, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___winSize2, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___zeroZone3, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___criteria4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_cornerSubPix", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_cornerSubPix)(___image0, ___corners1, ___winSize2, ___zeroZone3, ___criteria4);
	#else
	il2cppPInvokeFunc(___image0, ___corners1, ___winSize2, ___zeroZone3, ___criteria4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_goodFeaturesToTrack(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.Double,System.IntPtr,System.Int32,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_goodFeaturesToTrack_m532912F4C353735209F2493BC74154E65CBFF8CA (intptr_t ___src0, intptr_t ___corners1, int32_t ___maxCorners2, double ___qualityLevel3, double ___minDistance4, intptr_t ___mask5, int32_t ___blockSize6, int32_t ___useHarrisDetector7, double ___k8, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double, double, intptr_t, int32_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_goodFeaturesToTrack", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_goodFeaturesToTrack)(___src0, ___corners1, ___maxCorners2, ___qualityLevel3, ___minDistance4, ___mask5, ___blockSize6, ___useHarrisDetector7, ___k8);
	#else
	il2cppPInvokeFunc(___src0, ___corners1, ___maxCorners2, ___qualityLevel3, ___minDistance4, ___mask5, ___blockSize6, ___useHarrisDetector7, ___k8);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_HoughLines(System.IntPtr,System.IntPtr,System.Double,System.Double,System.Int32,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_HoughLines_mF95B7C405745ADF9BADF01E8B5B19656DADFB81E (intptr_t ___src0, intptr_t ___lines1, double ___rho2, double ___theta3, int32_t ___threshold4, double ___srn5, double ___stn6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, double, int32_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double) + sizeof(int32_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_HoughLines", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_HoughLines)(___src0, ___lines1, ___rho2, ___theta3, ___threshold4, ___srn5, ___stn6);
	#else
	il2cppPInvokeFunc(___src0, ___lines1, ___rho2, ___theta3, ___threshold4, ___srn5, ___stn6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_HoughLinesP(System.IntPtr,System.IntPtr,System.Double,System.Double,System.Int32,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_HoughLinesP_m77B603E7DFAB6AB3187B26B651770E0364C6AA4A (intptr_t ___src0, intptr_t ___lines1, double ___rho2, double ___theta3, int32_t ___threshold4, double ___minLineLength5, double ___maxLineG6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, double, int32_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double) + sizeof(int32_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_HoughLinesP", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_HoughLinesP)(___src0, ___lines1, ___rho2, ___theta3, ___threshold4, ___minLineLength5, ___maxLineG6);
	#else
	il2cppPInvokeFunc(___src0, ___lines1, ___rho2, ___theta3, ___threshold4, ___minLineLength5, ___maxLineG6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_HoughCircles(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_HoughCircles_m9E67AE86E651B7BD0C0BBD04CBCF4D83D5619BDC (intptr_t ___src0, intptr_t ___circles1, int32_t ___method2, double ___dp3, double ___minDist4, double ___param15, double ___param26, int32_t ___minRadius7, int32_t ___maxRadius8, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double, double, double, double, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_HoughCircles", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_HoughCircles)(___src0, ___circles1, ___method2, ___dp3, ___minDist4, ___param15, ___param26, ___minRadius7, ___maxRadius8);
	#else
	il2cppPInvokeFunc(___src0, ___circles1, ___method2, ___dp3, ___minDist4, ___param15, ___param26, ___minRadius7, ___maxRadius8);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_erode(System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Point,System.Int32,System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_erode_m9DF16486A22EB3F198B939D3C8B9355E595AA3E7 (intptr_t ___src0, intptr_t ___dst1, intptr_t ___kernel2, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___anchor3, int32_t ___iterations4, int32_t ___borderType5, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___borderValue6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_erode", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_erode)(___src0, ___dst1, ___kernel2, ___anchor3, ___iterations4, ___borderType5, ___borderValue6);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___kernel2, ___anchor3, ___iterations4, ___borderType5, ___borderValue6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_dilate(System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Point,System.Int32,System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_dilate_m8BC70CC58808EB26CD9881429F15CB85E0742807 (intptr_t ___src0, intptr_t ___dst1, intptr_t ___kernel2, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___anchor3, int32_t ___iterations4, int32_t ___borderType5, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___borderValue6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_dilate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_dilate)(___src0, ___dst1, ___kernel2, ___anchor3, ___iterations4, ___borderType5, ___borderValue6);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___kernel2, ___anchor3, ___iterations4, ___borderType5, ___borderValue6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_morphologyEx(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,OpenCvSharp.Point,System.Int32,System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_morphologyEx_m80449D778466F6626D53473700F364F1B0179D88 (intptr_t ___src0, intptr_t ___dst1, int32_t ___op2, intptr_t ___kernel3, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___anchor4, int32_t ___iterations5, int32_t ___borderType6, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___borderValue7, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_morphologyEx", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_morphologyEx)(___src0, ___dst1, ___op2, ___kernel3, ___anchor4, ___iterations5, ___borderType6, ___borderValue7);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___op2, ___kernel3, ___anchor4, ___iterations5, ___borderType6, ___borderValue7);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_resize(System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_resize_m97989A7DEA6B88D84D3D722D491330DF23A2E1BC (intptr_t ___src0, intptr_t ___dst1, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___dsize2, double ___fx3, double ___fy4, int32_t ___interpolation5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_resize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_resize)(___src0, ___dst1, ___dsize2, ___fx3, ___fy4, ___interpolation5);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___dsize2, ___fx3, ___fy4, ___interpolation5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_warpAffine(System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Int32,System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_warpAffine_m4635BEE7774748249C7024845CF876104B7BCF49 (intptr_t ___src0, intptr_t ___dst1, intptr_t ___m2, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___dsize3, int32_t ___flags4, int32_t ___borderMode5, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___borderValue6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_warpAffine", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_warpAffine)(___src0, ___dst1, ___m2, ___dsize3, ___flags4, ___borderMode5, ___borderValue6);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___m2, ___dsize3, ___flags4, ___borderMode5, ___borderValue6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_warpPerspective_MisInputArray(System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Int32,System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_warpPerspective_MisInputArray_m46D31C1139EAA2192B9A0362DCD8944F7BF037B1 (intptr_t ___src0, intptr_t ___dst1, intptr_t ___m2, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___dsize3, int32_t ___flags4, int32_t ___borderMode5, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___borderValue6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_warpPerspective_MisInputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_warpPerspective_MisInputArray)(___src0, ___dst1, ___m2, ___dsize3, ___flags4, ___borderMode5, ___borderValue6);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___m2, ___dsize3, ___flags4, ___borderMode5, ___borderValue6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_warpPerspective_MisArray(System.IntPtr,System.IntPtr,System.Single[,],System.Int32,System.Int32,OpenCvSharp.Size,System.Int32,System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_warpPerspective_MisArray_mC22188B4F5A5DA146B72169FF93FB5161396D1F8 (intptr_t ___src0, intptr_t ___dst1, SingleU5BU2CU5D_t8C95DA2D5056EB0490FC7DCB1ED30E33DE1D53F4* ___m2, int32_t ___mRow3, int32_t ___mCol4, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___dsize5, int32_t ___flags6, int32_t ___borderMode7, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___borderValue8, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Single[,]'."), NULL);
}
// System.Void OpenCvSharp.NativeMethods::imgproc_remap(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_remap_mB1030C5197D25FE864DA428869A466F87E5B3459 (intptr_t ___src0, intptr_t ___dst1, intptr_t ___map12, intptr_t ___map23, int32_t ___interpolation4, int32_t ___borderMode5, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___borderValue6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_remap", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_remap)(___src0, ___dst1, ___map12, ___map23, ___interpolation4, ___borderMode5, ___borderValue6);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___map12, ___map23, ___interpolation4, ___borderMode5, ___borderValue6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_convertMaps(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_convertMaps_m20EC17DC04D26470D355499CFFF4A9C71825B368 (intptr_t ___map10, intptr_t ___map21, intptr_t ___dstmap12, intptr_t ___dstmap23, int32_t ___dstmap1Type4, int32_t ___nninterpolation5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_convertMaps", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_convertMaps)(___map10, ___map21, ___dstmap12, ___dstmap23, ___dstmap1Type4, ___nninterpolation5);
	#else
	il2cppPInvokeFunc(___map10, ___map21, ___dstmap12, ___dstmap23, ___dstmap1Type4, ___nninterpolation5);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_getRotationMatrix2D(OpenCvSharp.Point2f,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_getRotationMatrix2D_mC47F719A15DA2184556E3D78FD7970890C77BFC1 (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___center0, double ___angle1, double ___scale2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getRotationMatrix2D", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_getRotationMatrix2D)(___center0, ___angle1, ___scale2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___center0, ___angle1, ___scale2);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_invertAffineTransform(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_invertAffineTransform_mD5E7CCCD0E6D2FE9727B28FD0AA62036751088BB (intptr_t ___m0, intptr_t ___im1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_invertAffineTransform", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_invertAffineTransform)(___m0, ___im1);
	#else
	il2cppPInvokeFunc(___m0, ___im1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_getPerspectiveTransform1(OpenCvSharp.Point2f[],OpenCvSharp.Point2f[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_getPerspectiveTransform1_m1931941FDD8A6891768C2C4DB154A527A95E0B4C (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___src0, Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___dst1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getPerspectiveTransform1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___src0' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____src0_marshaled = NULL;
	if (___src0 != NULL)
	{
		____src0_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___src0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___dst1' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____dst1_marshaled = NULL;
	if (___dst1 != NULL)
	{
		____dst1_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___dst1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_getPerspectiveTransform1)(____src0_marshaled, ____dst1_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____src0_marshaled, ____dst1_marshaled);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_getPerspectiveTransform2(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_getPerspectiveTransform2_m368295D6481A5AA15F95516F5607CD78DE6BCC90 (intptr_t ___src0, intptr_t ___dst1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getPerspectiveTransform2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_getPerspectiveTransform2)(___src0, ___dst1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___src0, ___dst1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_getAffineTransform1(OpenCvSharp.Point2f[],OpenCvSharp.Point2f[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_getAffineTransform1_m51FFC681289DD569747C6DA847CE95E77DE06754 (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___src0, Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___dst1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getAffineTransform1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___src0' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____src0_marshaled = NULL;
	if (___src0 != NULL)
	{
		____src0_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___src0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___dst1' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____dst1_marshaled = NULL;
	if (___dst1 != NULL)
	{
		____dst1_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___dst1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_getAffineTransform1)(____src0_marshaled, ____dst1_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____src0_marshaled, ____dst1_marshaled);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_getAffineTransform2(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_getAffineTransform2_m748CB653A1EC70D7E25507952031BE84B46168CA (intptr_t ___src0, intptr_t ___dst1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getAffineTransform2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_getAffineTransform2)(___src0, ___dst1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___src0, ___dst1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_getRectSubPix(System.IntPtr,OpenCvSharp.Size,OpenCvSharp.Point2f,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_getRectSubPix_m4BFB1582EE5F25DBF5A54D5CB8635327450774F2 (intptr_t ___image0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___patchSize1, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___center2, intptr_t ___patch3, int32_t ___patchType4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getRectSubPix", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_getRectSubPix)(___image0, ___patchSize1, ___center2, ___patch3, ___patchType4);
	#else
	il2cppPInvokeFunc(___image0, ___patchSize1, ___center2, ___patch3, ___patchType4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_logPolar(System.IntPtr,System.IntPtr,OpenCvSharp.Point2f,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_logPolar_m3A7588B6F1876E4759D9B672D5598DE9A99C0312 (intptr_t ___src0, intptr_t ___dst1, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___center2, double ___m3, int32_t ___flags4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_logPolar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_logPolar)(___src0, ___dst1, ___center2, ___m3, ___flags4);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___center2, ___m3, ___flags4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_linearPolar(System.IntPtr,System.IntPtr,OpenCvSharp.Point2f,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_linearPolar_mCD2A80B329110E1A1E4879DE97C42393DE23077A (intptr_t ___src0, intptr_t ___dst1, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___center2, double ___maxRadius3, int32_t ___flags4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_linearPolar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_linearPolar)(___src0, ___dst1, ___center2, ___maxRadius3, ___flags4);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___center2, ___maxRadius3, ___flags4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_integral1(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_integral1_mA82373F41509820FD8631D3C7650BC24EF9A9ADF (intptr_t ___src0, intptr_t ___sum1, int32_t ___sdepth2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_integral1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_integral1)(___src0, ___sum1, ___sdepth2);
	#else
	il2cppPInvokeFunc(___src0, ___sum1, ___sdepth2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_integral2(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_integral2_mF10FFDDB141017E069CEA53DEFFAF80AE2B4938D (intptr_t ___src0, intptr_t ___sum1, intptr_t ___sqsum2, int32_t ___sdepth3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_integral2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_integral2)(___src0, ___sum1, ___sqsum2, ___sdepth3);
	#else
	il2cppPInvokeFunc(___src0, ___sum1, ___sqsum2, ___sdepth3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_integral3(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_integral3_mE6091D92AD9EADEF93AD547F9B7EC28F8B3ECD55 (intptr_t ___src0, intptr_t ___sum1, intptr_t ___sqsum2, intptr_t ___tilted3, int32_t ___sdepth4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_integral3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_integral3)(___src0, ___sum1, ___sqsum2, ___tilted3, ___sdepth4);
	#else
	il2cppPInvokeFunc(___src0, ___sum1, ___sqsum2, ___tilted3, ___sdepth4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_accumulate(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_accumulate_m29B5F4A305A7CE5B9CA95F0C33A55BF1405AE96F (intptr_t ___src0, intptr_t ___dst1, intptr_t ___mask2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_accumulate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_accumulate)(___src0, ___dst1, ___mask2);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___mask2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_accumulateSquare(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_accumulateSquare_m536499BBFF544F27BDE5B4FCC45BF77CB2B72A20 (intptr_t ___src0, intptr_t ___dst1, intptr_t ___mask2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_accumulateSquare", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_accumulateSquare)(___src0, ___dst1, ___mask2);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___mask2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_accumulateProduct(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_accumulateProduct_mC3B0CF4F4905F98BC1D5A564B8F641E561E95F2D (intptr_t ___src10, intptr_t ___src21, intptr_t ___dst2, intptr_t ___mask3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_accumulateProduct", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_accumulateProduct)(___src10, ___src21, ___dst2, ___mask3);
	#else
	il2cppPInvokeFunc(___src10, ___src21, ___dst2, ___mask3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_accumulateWeighted(System.IntPtr,System.IntPtr,System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_accumulateWeighted_m7300D390B34AEC9006F78C32D09C24AD6E99A408 (intptr_t ___src0, intptr_t ___dst1, double ___alpha2, intptr_t ___mask3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_accumulateWeighted", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_accumulateWeighted)(___src0, ___dst1, ___alpha2, ___mask3);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___alpha2, ___mask3);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_PSNR(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_PSNR_m6AA66189D731A044DC4420F4EFA6849E5BC9A7F0 (intptr_t ___src10, intptr_t ___src21, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_PSNR", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_PSNR)(___src10, ___src21);
	#else
	double returnValue = il2cppPInvokeFunc(___src10, ___src21);
	#endif

	return returnValue;
}
// OpenCvSharp.Point2d OpenCvSharp.NativeMethods::imgproc_phaseCorrelate(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C NativeMethods_imgproc_phaseCorrelate_mD4AFA86C0F02953E8C6E2CF7B76D16E521183B55 (intptr_t ___src10, intptr_t ___src21, intptr_t ___window2, const RuntimeMethod* method) 
{
	typedef Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_phaseCorrelate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C returnValue = reinterpret_cast<PInvokeFunc>(imgproc_phaseCorrelate)(___src10, ___src21, ___window2);
	#else
	Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C returnValue = il2cppPInvokeFunc(___src10, ___src21, ___window2);
	#endif

	return returnValue;
}
// OpenCvSharp.Point2d OpenCvSharp.NativeMethods::imgproc_phaseCorrelateRes(System.IntPtr,System.IntPtr,System.IntPtr,System.Double&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C NativeMethods_imgproc_phaseCorrelateRes_mF218601C7DB4FDF0D48C7DBB86DBF56B96566016 (intptr_t ___src10, intptr_t ___src21, intptr_t ___window2, double* ___response3, const RuntimeMethod* method) 
{
	typedef Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_phaseCorrelateRes", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C returnValue = reinterpret_cast<PInvokeFunc>(imgproc_phaseCorrelateRes)(___src10, ___src21, ___window2, ___response3);
	#else
	Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C returnValue = il2cppPInvokeFunc(___src10, ___src21, ___window2, ___response3);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_createHanningWindow(System.IntPtr,OpenCvSharp.Size,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_createHanningWindow_m65874530DADC72AE23DB43A91B4358B3A3669BE9 (intptr_t ___dst0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___winSize1, int32_t ___type2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_createHanningWindow", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_createHanningWindow)(___dst0, ___winSize1, ___type2);
	#else
	il2cppPInvokeFunc(___dst0, ___winSize1, ___type2);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_threshold(System.IntPtr,System.IntPtr,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_threshold_m5581942E8787F4B0709F83555FC8EA04571F3A20 (intptr_t ___src0, intptr_t ___dst1, double ___thresh2, double ___maxval3, int32_t ___type4, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_threshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_threshold)(___src0, ___dst1, ___thresh2, ___maxval3, ___type4);
	#else
	double returnValue = il2cppPInvokeFunc(___src0, ___dst1, ___thresh2, ___maxval3, ___type4);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_adaptiveThreshold(System.IntPtr,System.IntPtr,System.Double,System.Int32,System.Int32,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_adaptiveThreshold_m4F8052F1FF1C01412ADD26931EA817E0CA902369 (intptr_t ___src0, intptr_t ___dst1, double ___maxValue2, int32_t ___adaptiveMethod3, int32_t ___thresholdType4, int32_t ___blockSize5, double ___c6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, int32_t, int32_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_adaptiveThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_adaptiveThreshold)(___src0, ___dst1, ___maxValue2, ___adaptiveMethod3, ___thresholdType4, ___blockSize5, ___c6);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___maxValue2, ___adaptiveMethod3, ___thresholdType4, ___blockSize5, ___c6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_pyrDown(System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_pyrDown_m4411FAEE37A7CD022D65D44AE9171729C11D29F0 (intptr_t ___src0, intptr_t ___dst1, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___dstsize2, int32_t ___borderType3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_pyrDown", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_pyrDown)(___src0, ___dst1, ___dstsize2, ___borderType3);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___dstsize2, ___borderType3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_pyrUp(System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_pyrUp_m6CBE072C8D4448A757F967FCAD7522062E6F7422 (intptr_t ___src0, intptr_t ___dst1, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___dstsize2, int32_t ___borderType3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_pyrUp", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_pyrUp)(___src0, ___dst1, ___dstsize2, ___borderType3);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___dstsize2, ___borderType3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_undistort(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_undistort_m926239A198EF251C787C1BCAA8F7160AA4E00FF9 (intptr_t ___src0, intptr_t ___dst1, intptr_t ___cameraMatrix2, intptr_t ___distCoeffs3, intptr_t ___newCameraMatrix4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_undistort", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_undistort)(___src0, ___dst1, ___cameraMatrix2, ___distCoeffs3, ___newCameraMatrix4);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___cameraMatrix2, ___distCoeffs3, ___newCameraMatrix4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_initUndistortRectifyMap(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Int32,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_initUndistortRectifyMap_m5817E8F338AA16A8C7BEF735C91ABE7F7B9E5F79 (intptr_t ___cameraMatrix0, intptr_t ___distCoeffs1, intptr_t ___r2, intptr_t ___newCameraMatrix3, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___size4, int32_t ___m1Type5, intptr_t ___map16, intptr_t ___map27, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_initUndistortRectifyMap", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_initUndistortRectifyMap)(___cameraMatrix0, ___distCoeffs1, ___r2, ___newCameraMatrix3, ___size4, ___m1Type5, ___map16, ___map27);
	#else
	il2cppPInvokeFunc(___cameraMatrix0, ___distCoeffs1, ___r2, ___newCameraMatrix3, ___size4, ___m1Type5, ___map16, ___map27);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::imgproc_initWideAngleProjMap(System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Int32,System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_imgproc_initWideAngleProjMap_mE38C89096976F0221801B762FBD075258C868D95 (intptr_t ___cameraMatrix0, intptr_t ___distCoeffs1, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___imageSize2, int32_t ___destImageWidth3, int32_t ___m1Type4, intptr_t ___map15, intptr_t ___map26, int32_t ___projType7, double ___alpha8, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, intptr_t, intptr_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_initWideAngleProjMap", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(imgproc_initWideAngleProjMap)(___cameraMatrix0, ___distCoeffs1, ___imageSize2, ___destImageWidth3, ___m1Type4, ___map15, ___map26, ___projType7, ___alpha8);
	#else
	float returnValue = il2cppPInvokeFunc(___cameraMatrix0, ___distCoeffs1, ___imageSize2, ___destImageWidth3, ___m1Type4, ___map15, ___map26, ___projType7, ___alpha8);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_getDefaultNewCameraMatrix(System.IntPtr,OpenCvSharp.Size,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_getDefaultNewCameraMatrix_m8F162F3C4B81F3BC075BB182856356896AC89BC1 (intptr_t ___cameraMatrix0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___imgSize1, int32_t ___centerPrincipalPoint2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getDefaultNewCameraMatrix", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_getDefaultNewCameraMatrix)(___cameraMatrix0, ___imgSize1, ___centerPrincipalPoint2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___cameraMatrix0, ___imgSize1, ___centerPrincipalPoint2);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_undistortPoints(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_undistortPoints_mD05EE749E0E4D97FBC22DE4C796C35106B5A4879 (intptr_t ___src0, intptr_t ___dst1, intptr_t ___cameraMatrix2, intptr_t ___distCoeffs3, intptr_t ___r4, intptr_t ___p5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_undistortPoints", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_undistortPoints)(___src0, ___dst1, ___cameraMatrix2, ___distCoeffs3, ___r4, ___p5);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___cameraMatrix2, ___distCoeffs3, ___r4, ___p5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_calcHist1(System.IntPtr[],System.Int32,System.Int32[],System.IntPtr,System.IntPtr,System.Int32,System.Int32[],System.IntPtr[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_calcHist1_m8C13056F8A86350788DAEA4F432D67EA91E18503 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___images0, int32_t ___nimages1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___channels2, intptr_t ___mask3, intptr_t ___hist4, int32_t ___dims5, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___histSize6, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___ranges7, int32_t ___uniform8, int32_t ___accumulate9, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, int32_t, int32_t*, intptr_t, intptr_t, int32_t, int32_t*, intptr_t*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(void*) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_calcHist1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___images0' to native representation
	intptr_t* ____images0_marshaled = NULL;
	if (___images0 != NULL)
	{
		____images0_marshaled = reinterpret_cast<intptr_t*>((___images0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___channels2' to native representation
	int32_t* ____channels2_marshaled = NULL;
	if (___channels2 != NULL)
	{
		____channels2_marshaled = reinterpret_cast<int32_t*>((___channels2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___histSize6' to native representation
	int32_t* ____histSize6_marshaled = NULL;
	if (___histSize6 != NULL)
	{
		____histSize6_marshaled = reinterpret_cast<int32_t*>((___histSize6)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___ranges7' to native representation
	intptr_t* ____ranges7_marshaled = NULL;
	if (___ranges7 != NULL)
	{
		____ranges7_marshaled = reinterpret_cast<intptr_t*>((___ranges7)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_calcHist1)(____images0_marshaled, ___nimages1, ____channels2_marshaled, ___mask3, ___hist4, ___dims5, ____histSize6_marshaled, ____ranges7_marshaled, ___uniform8, ___accumulate9);
	#else
	il2cppPInvokeFunc(____images0_marshaled, ___nimages1, ____channels2_marshaled, ___mask3, ___hist4, ___dims5, ____histSize6_marshaled, ____ranges7_marshaled, ___uniform8, ___accumulate9);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_calcBackProject(System.IntPtr[],System.Int32,System.Int32[],System.IntPtr,System.IntPtr,System.IntPtr[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_calcBackProject_m0D1A444B50D976F8EC0B1055A835E6405E44AB91 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___images0, int32_t ___nimages1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___channels2, intptr_t ___hist3, intptr_t ___backProject4, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___ranges5, int32_t ___uniform6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, int32_t, int32_t*, intptr_t, intptr_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_calcBackProject", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___images0' to native representation
	intptr_t* ____images0_marshaled = NULL;
	if (___images0 != NULL)
	{
		____images0_marshaled = reinterpret_cast<intptr_t*>((___images0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___channels2' to native representation
	int32_t* ____channels2_marshaled = NULL;
	if (___channels2 != NULL)
	{
		____channels2_marshaled = reinterpret_cast<int32_t*>((___channels2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___ranges5' to native representation
	intptr_t* ____ranges5_marshaled = NULL;
	if (___ranges5 != NULL)
	{
		____ranges5_marshaled = reinterpret_cast<intptr_t*>((___ranges5)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_calcBackProject)(____images0_marshaled, ___nimages1, ____channels2_marshaled, ___hist3, ___backProject4, ____ranges5_marshaled, ___uniform6);
	#else
	il2cppPInvokeFunc(____images0_marshaled, ___nimages1, ____channels2_marshaled, ___hist3, ___backProject4, ____ranges5_marshaled, ___uniform6);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_compareHist1(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_compareHist1_mE4DE2DD5CBA6F1492083AA1ECE7B6C31ABB419E5 (intptr_t ___h10, intptr_t ___h21, int32_t ___method2, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_compareHist1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_compareHist1)(___h10, ___h21, ___method2);
	#else
	double returnValue = il2cppPInvokeFunc(___h10, ___h21, ___method2);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_equalizeHist(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_equalizeHist_m11ACBB631BCA00C7AE5510DE55C9608D88413444 (intptr_t ___src0, intptr_t ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_equalizeHist", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_equalizeHist)(___src0, ___dst1);
	#else
	il2cppPInvokeFunc(___src0, ___dst1);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::imgproc_EMD(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.Single&,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_imgproc_EMD_mCE7025BA1BB97A8087290664C899D1AAE72C8EE3 (intptr_t ___signature10, intptr_t ___signature21, int32_t ___distType2, intptr_t ___cost3, float* ___lowerBound4, intptr_t ___flow5, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t, float*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(float*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_EMD", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(imgproc_EMD)(___signature10, ___signature21, ___distType2, ___cost3, ___lowerBound4, ___flow5);
	#else
	float returnValue = il2cppPInvokeFunc(___signature10, ___signature21, ___distType2, ___cost3, ___lowerBound4, ___flow5);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_watershed(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_watershed_mB8FFD299B1072D4B682C2DAD52C10DD0318A922D (intptr_t ___image0, intptr_t ___markers1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_watershed", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_watershed)(___image0, ___markers1);
	#else
	il2cppPInvokeFunc(___image0, ___markers1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_pyrMeanShiftFiltering(System.IntPtr,System.IntPtr,System.Double,System.Double,System.Int32,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_pyrMeanShiftFiltering_mBA2C978022861283A0E1B10D064AD5B04224CD77 (intptr_t ___src0, intptr_t ___dst1, double ___sp2, double ___sr3, int32_t ___maxLevel4, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___termcrit5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, double, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double) + sizeof(int32_t) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_pyrMeanShiftFiltering", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_pyrMeanShiftFiltering)(___src0, ___dst1, ___sp2, ___sr3, ___maxLevel4, ___termcrit5);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___sp2, ___sr3, ___maxLevel4, ___termcrit5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_grabCut(System.IntPtr,System.IntPtr,OpenCvSharp.Rect,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_grabCut_m6262F73CF3BE845A0FA45F3F56BB78032BA8757B (intptr_t ___img0, intptr_t ___mask1, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___rect2, intptr_t ___bgdModel3, intptr_t ___fgdModel4, int32_t ___iterCount5, int32_t ___mode6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_grabCut", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_grabCut)(___img0, ___mask1, ___rect2, ___bgdModel3, ___fgdModel4, ___iterCount5, ___mode6);
	#else
	il2cppPInvokeFunc(___img0, ___mask1, ___rect2, ___bgdModel3, ___fgdModel4, ___iterCount5, ___mode6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_distanceTransformWithLabels(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_distanceTransformWithLabels_m067443352C8776A8ACD48B7C05D44B45561DA9E8 (intptr_t ___src0, intptr_t ___dst1, intptr_t ___labels2, int32_t ___distanceType3, int32_t ___maskSize4, int32_t ___labelType5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_distanceTransformWithLabels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_distanceTransformWithLabels)(___src0, ___dst1, ___labels2, ___distanceType3, ___maskSize4, ___labelType5);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___labels2, ___distanceType3, ___maskSize4, ___labelType5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_distanceTransform(System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_distanceTransform_mF7C082C3C8CED2150C3451719E7926B78355C9C7 (intptr_t ___src0, intptr_t ___dst1, int32_t ___distanceType2, int32_t ___maskSize3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_distanceTransform", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_distanceTransform)(___src0, ___dst1, ___distanceType2, ___maskSize3);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___distanceType2, ___maskSize3);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_floodFill(System.IntPtr,OpenCvSharp.Point,OpenCvSharp.Scalar,OpenCvSharp.Rect&,OpenCvSharp.Scalar,OpenCvSharp.Scalar,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_floodFill_m14E82B77ECD36CC642E816B5CD80D1E49984784C (intptr_t ___image0, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___seedPoint1, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___newVal2, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___rect3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___loDiff4, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___upDiff5, int32_t ___flags6, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_floodFill1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_floodFill1)(___image0, ___seedPoint1, ___newVal2, ___rect3, ___loDiff4, ___upDiff5, ___flags6);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___image0, ___seedPoint1, ___newVal2, ___rect3, ___loDiff4, ___upDiff5, ___flags6);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_floodFill(System.IntPtr,System.IntPtr,OpenCvSharp.Point,OpenCvSharp.Scalar,OpenCvSharp.Rect&,OpenCvSharp.Scalar,OpenCvSharp.Scalar,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_floodFill_m9920F8B0658A923A5A9A5171E51F86587D0B0872 (intptr_t ___image0, intptr_t ___mask1, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___seedPoint2, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___newVal3, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___rect4, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___loDiff5, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___upDiff6, int32_t ___flags7, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_floodFill2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_floodFill2)(___image0, ___mask1, ___seedPoint2, ___newVal3, ___rect4, ___loDiff5, ___upDiff6, ___flags7);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___image0, ___mask1, ___seedPoint2, ___newVal3, ___rect4, ___loDiff5, ___upDiff6, ___flags7);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_cvtColor(System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_cvtColor_m871EFFEFDE04C8D68CAD890B156A441C67D02E0C (intptr_t ___src0, intptr_t ___dst1, int32_t ___code2, int32_t ___dstCn3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_cvtColor", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_cvtColor)(___src0, ___dst1, ___code2, ___dstCn3);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___code2, ___dstCn3);
	#endif

}
// OpenCvSharp.Moments/NativeStruct OpenCvSharp.NativeMethods::imgproc_moments(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR NativeStruct_tB25EB88E7E834223F80F1F898DE4BE9853B6D3C8 NativeMethods_imgproc_moments_m11E0784E5D95AA26BF28D0E8A7F63E7FA36C2178 (intptr_t ___arr0, int32_t ___binaryImage1, const RuntimeMethod* method) 
{
	typedef NativeStruct_tB25EB88E7E834223F80F1F898DE4BE9853B6D3C8 (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_moments", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	NativeStruct_tB25EB88E7E834223F80F1F898DE4BE9853B6D3C8 returnValue = reinterpret_cast<PInvokeFunc>(imgproc_moments)(___arr0, ___binaryImage1);
	#else
	NativeStruct_tB25EB88E7E834223F80F1F898DE4BE9853B6D3C8 returnValue = il2cppPInvokeFunc(___arr0, ___binaryImage1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_matchTemplate(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_matchTemplate_m490AE0F34F3A63989A71B126D5B76CF89AF81A1E (intptr_t ___image0, intptr_t ___templ1, intptr_t ___result2, int32_t ___method3, intptr_t ___mask4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_matchTemplate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_matchTemplate)(___image0, ___templ1, ___result2, ___method3, ___mask4);
	#else
	il2cppPInvokeFunc(___image0, ___templ1, ___result2, ___method3, ___mask4);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_connectedComponents(System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_connectedComponents_mC13F5294BD308FB74AED6F3ED640C80A0E4484C3 (intptr_t ___image0, intptr_t ___labels1, int32_t ___connectivity2, int32_t ___ltype3, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_connectedComponents", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_connectedComponents)(___image0, ___labels1, ___connectivity2, ___ltype3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___image0, ___labels1, ___connectivity2, ___ltype3);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_connectedComponentsWithStats(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_connectedComponentsWithStats_mADF3F5AA6C0D4F7D70C3C4DAAB5CFB554690B6EF (intptr_t ___image0, intptr_t ___labels1, intptr_t ___stats2, intptr_t ___centroids3, int32_t ___connectivity4, int32_t ___ltype5, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_connectedComponentsWithStats", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_connectedComponentsWithStats)(___image0, ___labels1, ___stats2, ___centroids3, ___connectivity4, ___ltype5);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___image0, ___labels1, ___stats2, ___centroids3, ___connectivity4, ___ltype5);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_findContours1_vector(System.IntPtr,System.IntPtr&,System.IntPtr&,System.Int32,System.Int32,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_findContours1_vector_m0D0AB38B0CC846775A89638A03FEBF483AD3E70C (intptr_t ___image0, intptr_t* ___contours1, intptr_t* ___hierarchy2, int32_t ___mode3, int32_t ___method4, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___offset5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, intptr_t*, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*) + sizeof(intptr_t*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_findContours1_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_findContours1_vector)(___image0, ___contours1, ___hierarchy2, ___mode3, ___method4, ___offset5);
	#else
	il2cppPInvokeFunc(___image0, ___contours1, ___hierarchy2, ___mode3, ___method4, ___offset5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_findContours1_OutputArray(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_findContours1_OutputArray_mAF0AF90FBC1EC6D5B8DEFB28AF3DCB23FC6E53BC (intptr_t ___image0, intptr_t* ___contours1, intptr_t ___hierarchy2, int32_t ___mode3, int32_t ___method4, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___offset5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, intptr_t, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_findContours1_OutputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_findContours1_OutputArray)(___image0, ___contours1, ___hierarchy2, ___mode3, ___method4, ___offset5);
	#else
	il2cppPInvokeFunc(___image0, ___contours1, ___hierarchy2, ___mode3, ___method4, ___offset5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_findContours2_vector(System.IntPtr,System.IntPtr&,System.Int32,System.Int32,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_findContours2_vector_mE2D5A189DF64F32E8B63394164BABDFB63C56BD6 (intptr_t ___image0, intptr_t* ___contours1, int32_t ___mode2, int32_t ___method3, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___offset4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_findContours2_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_findContours2_vector)(___image0, ___contours1, ___mode2, ___method3, ___offset4);
	#else
	il2cppPInvokeFunc(___image0, ___contours1, ___mode2, ___method3, ___offset4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_findContours2_OutputArray(System.IntPtr,System.IntPtr&,System.Int32,System.Int32,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_findContours2_OutputArray_m75F8109F6CF031D16D8667A2E82628A3ACDCD854 (intptr_t ___image0, intptr_t* ___contours1, int32_t ___mode2, int32_t ___method3, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___offset4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_findContours2_OutputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_findContours2_OutputArray)(___image0, ___contours1, ___mode2, ___method3, ___offset4);
	#else
	il2cppPInvokeFunc(___image0, ___contours1, ___mode2, ___method3, ___offset4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_drawContours_vector_fix(System.IntPtr,System.IntPtr[],System.Int32,System.Int32[],OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32,OpenCvSharp.Vec4i[],System.Int32,System.Int32,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_drawContours_vector_fix_m43BF2372ABA54B77D7F8B681B3F844263A9B2C4D (intptr_t ___image0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___contours1, int32_t ___contoursSize12, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___contoursSize23, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___color4, int32_t ___contourIdx5, int32_t ___thickness6, int32_t ___lineType7, Vec4iU5BU5D_tA592A0B55AB1329BD078300CADFC474499AA7157* ___hierarchy8, int32_t ___hiearchyLength9, int32_t ___maxLevel10, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___offset11, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, int32_t*, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_drawContours_vector_fix", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___contours1' to native representation
	intptr_t* ____contours1_marshaled = NULL;
	if (___contours1 != NULL)
	{
		____contours1_marshaled = reinterpret_cast<intptr_t*>((___contours1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___contoursSize23' to native representation
	int32_t* ____contoursSize23_marshaled = NULL;
	if (___contoursSize23 != NULL)
	{
		____contoursSize23_marshaled = reinterpret_cast<int32_t*>((___contoursSize23)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___hierarchy8' to native representation
	Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* ____hierarchy8_marshaled = NULL;
	if (___hierarchy8 != NULL)
	{
		____hierarchy8_marshaled = reinterpret_cast<Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*>((___hierarchy8)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_drawContours_vector_fix)(___image0, ____contours1_marshaled, ___contoursSize12, ____contoursSize23_marshaled, ___color4, ___contourIdx5, ___thickness6, ___lineType7, ____hierarchy8_marshaled, ___hiearchyLength9, ___maxLevel10, ___offset11);
	#else
	il2cppPInvokeFunc(___image0, ____contours1_marshaled, ___contoursSize12, ____contoursSize23_marshaled, ___color4, ___contourIdx5, ___thickness6, ___lineType7, ____hierarchy8_marshaled, ___hiearchyLength9, ___maxLevel10, ___offset11);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_drawContours_vector_fix(System.IntPtr,System.IntPtr[],System.Int32,System.Int32[],OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_drawContours_vector_fix_mF7F83D17A2E3EB2D7E468C10070DB495923735B4 (intptr_t ___image0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___contours1, int32_t ___contoursSize12, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___contoursSize23, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___color4, int32_t ___contourIdx5, int32_t ___thickness6, int32_t ___lineType7, intptr_t ___hierarchy8, int32_t ___hiearchyLength9, int32_t ___maxLevel10, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___offset11, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, int32_t*, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t, intptr_t, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_drawContours_vector_fix", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___contours1' to native representation
	intptr_t* ____contours1_marshaled = NULL;
	if (___contours1 != NULL)
	{
		____contours1_marshaled = reinterpret_cast<intptr_t*>((___contours1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___contoursSize23' to native representation
	int32_t* ____contoursSize23_marshaled = NULL;
	if (___contoursSize23 != NULL)
	{
		____contoursSize23_marshaled = reinterpret_cast<int32_t*>((___contoursSize23)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_drawContours_vector_fix)(___image0, ____contours1_marshaled, ___contoursSize12, ____contoursSize23_marshaled, ___color4, ___contourIdx5, ___thickness6, ___lineType7, ___hierarchy8, ___hiearchyLength9, ___maxLevel10, ___offset11);
	#else
	il2cppPInvokeFunc(___image0, ____contours1_marshaled, ___contoursSize12, ____contoursSize23_marshaled, ___color4, ___contourIdx5, ___thickness6, ___lineType7, ___hierarchy8, ___hiearchyLength9, ___maxLevel10, ___offset11);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_drawContours_InputArray(System.IntPtr,System.IntPtr[],System.Int32,System.Int32,OpenCvSharp.Scalar,System.Int32,System.Int32,System.IntPtr,System.Int32,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_drawContours_InputArray_m84354C98984D34B3225AD8DBB0D33FC1AFADBBA4 (intptr_t ___image0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___contours1, int32_t ___contoursLength2, int32_t ___contourIdx3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___color4, int32_t ___thickness5, int32_t ___lineType6, intptr_t ___hierarchy7, int32_t ___maxLevel8, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___offset9, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, intptr_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_drawContours_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___contours1' to native representation
	intptr_t* ____contours1_marshaled = NULL;
	if (___contours1 != NULL)
	{
		____contours1_marshaled = reinterpret_cast<intptr_t*>((___contours1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_drawContours_InputArray)(___image0, ____contours1_marshaled, ___contoursLength2, ___contourIdx3, ___color4, ___thickness5, ___lineType6, ___hierarchy7, ___maxLevel8, ___offset9);
	#else
	il2cppPInvokeFunc(___image0, ____contours1_marshaled, ___contoursLength2, ___contourIdx3, ___color4, ___thickness5, ___lineType6, ___hierarchy7, ___maxLevel8, ___offset9);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_approxPolyDP_InputArray(System.IntPtr,System.IntPtr,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_approxPolyDP_InputArray_m20CF6518FE8E6DA9736166C26A5BABD2A3BDB3FE (intptr_t ___curve0, intptr_t ___approxCurve1, double ___epsilon2, int32_t ___closed3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_approxPolyDP_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_approxPolyDP_InputArray)(___curve0, ___approxCurve1, ___epsilon2, ___closed3);
	#else
	il2cppPInvokeFunc(___curve0, ___approxCurve1, ___epsilon2, ___closed3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_approxPolyDP_Point(OpenCvSharp.Point[],System.Int32,System.IntPtr&,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_approxPolyDP_Point_m58A0B868A048B84341A2D330FD28FC3E7F25C0FB (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___curve0, int32_t ___curveLength1, intptr_t* ___approxCurve2, double ___epsilon3, int32_t ___closed4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, intptr_t*, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_approxPolyDP_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___curve0' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____curve0_marshaled = NULL;
	if (___curve0 != NULL)
	{
		____curve0_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___curve0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_approxPolyDP_Point)(____curve0_marshaled, ___curveLength1, ___approxCurve2, ___epsilon3, ___closed4);
	#else
	il2cppPInvokeFunc(____curve0_marshaled, ___curveLength1, ___approxCurve2, ___epsilon3, ___closed4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_approxPolyDP_Point2f(OpenCvSharp.Point2f[],System.Int32,System.IntPtr&,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_approxPolyDP_Point2f_mBBB1DB64AF494D38C92C36E4F1105739ECDF0D64 (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___curve0, int32_t ___curveLength1, intptr_t* ___approxCurve2, double ___epsilon3, int32_t ___closed4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t*, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_approxPolyDP_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___curve0' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____curve0_marshaled = NULL;
	if (___curve0 != NULL)
	{
		____curve0_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___curve0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_approxPolyDP_Point2f)(____curve0_marshaled, ___curveLength1, ___approxCurve2, ___epsilon3, ___closed4);
	#else
	il2cppPInvokeFunc(____curve0_marshaled, ___curveLength1, ___approxCurve2, ___epsilon3, ___closed4);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_arcLength_InputArray(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_arcLength_InputArray_mFB10E9B8572126BA7A17E33A60352EC8B7C86C18 (intptr_t ___curve0, int32_t ___closed1, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_arcLength_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_arcLength_InputArray)(___curve0, ___closed1);
	#else
	double returnValue = il2cppPInvokeFunc(___curve0, ___closed1);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::imgproc_arcLength_Point(OpenCvSharp.Point[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_arcLength_Point_m641712A00FA718A17166B5BDEC6047502C6300A6 (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___curve0, int32_t ___curveLength1, int32_t ___closed2, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_arcLength_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___curve0' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____curve0_marshaled = NULL;
	if (___curve0 != NULL)
	{
		____curve0_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___curve0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_arcLength_Point)(____curve0_marshaled, ___curveLength1, ___closed2);
	#else
	double returnValue = il2cppPInvokeFunc(____curve0_marshaled, ___curveLength1, ___closed2);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::imgproc_arcLength_Point2f(OpenCvSharp.Point2f[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_arcLength_Point2f_m4B44592AB5841E6E705A8D8DBE271C7DCC4218A3 (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___curve0, int32_t ___curveLength1, int32_t ___closed2, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_arcLength_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___curve0' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____curve0_marshaled = NULL;
	if (___curve0 != NULL)
	{
		____curve0_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___curve0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_arcLength_Point2f)(____curve0_marshaled, ___curveLength1, ___closed2);
	#else
	double returnValue = il2cppPInvokeFunc(____curve0_marshaled, ___curveLength1, ___closed2);
	#endif

	return returnValue;
}
// OpenCvSharp.Rect OpenCvSharp.NativeMethods::imgproc_boundingRect_InputArray(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A NativeMethods_imgproc_boundingRect_InputArray_mD115D1F6EBBA413CFADDD83676ED7D2169320806 (intptr_t ___curve0, const RuntimeMethod* method) 
{
	typedef Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_boundingRect_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = reinterpret_cast<PInvokeFunc>(imgproc_boundingRect_InputArray)(___curve0);
	#else
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = il2cppPInvokeFunc(___curve0);
	#endif

	return returnValue;
}
// OpenCvSharp.Rect OpenCvSharp.NativeMethods::imgproc_boundingRect_Point(OpenCvSharp.Point[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A NativeMethods_imgproc_boundingRect_Point_m56257B4AE4FAB9A3E0A536A3BFF0D2CAFD03D470 (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___curve0, int32_t ___curveLength1, const RuntimeMethod* method) 
{
	typedef Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_boundingRect_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___curve0' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____curve0_marshaled = NULL;
	if (___curve0 != NULL)
	{
		____curve0_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___curve0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = reinterpret_cast<PInvokeFunc>(imgproc_boundingRect_Point)(____curve0_marshaled, ___curveLength1);
	#else
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = il2cppPInvokeFunc(____curve0_marshaled, ___curveLength1);
	#endif

	return returnValue;
}
// OpenCvSharp.Rect OpenCvSharp.NativeMethods::imgproc_boundingRect_Point2f(OpenCvSharp.Point2f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A NativeMethods_imgproc_boundingRect_Point2f_mB231690529F4978B5848B66F8DDEF19428A66A43 (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___curve0, int32_t ___curveLength1, const RuntimeMethod* method) 
{
	typedef Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_boundingRect_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___curve0' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____curve0_marshaled = NULL;
	if (___curve0 != NULL)
	{
		____curve0_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___curve0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = reinterpret_cast<PInvokeFunc>(imgproc_boundingRect_Point2f)(____curve0_marshaled, ___curveLength1);
	#else
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = il2cppPInvokeFunc(____curve0_marshaled, ___curveLength1);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::imgproc_contourArea_InputArray(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_contourArea_InputArray_mD1F54FDE7BFDB6849F7B1BB5CB4DB04B6505F799 (intptr_t ___contour0, int32_t ___oriented1, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_contourArea_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_contourArea_InputArray)(___contour0, ___oriented1);
	#else
	double returnValue = il2cppPInvokeFunc(___contour0, ___oriented1);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::imgproc_contourArea_Point(OpenCvSharp.Point[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_contourArea_Point_m326A33427E056735A76061E167FD57AA8FDA25F8 (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___contour0, int32_t ___contourLength1, int32_t ___oriented2, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_contourArea_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___contour0' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____contour0_marshaled = NULL;
	if (___contour0 != NULL)
	{
		____contour0_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___contour0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_contourArea_Point)(____contour0_marshaled, ___contourLength1, ___oriented2);
	#else
	double returnValue = il2cppPInvokeFunc(____contour0_marshaled, ___contourLength1, ___oriented2);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::imgproc_contourArea_Point2f(OpenCvSharp.Point2f[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_contourArea_Point2f_mF7F8AB97BAEAB81679B38506AD5CE8F1BC78A966 (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___contour0, int32_t ___contourLength1, int32_t ___oriented2, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_contourArea_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___contour0' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____contour0_marshaled = NULL;
	if (___contour0 != NULL)
	{
		____contour0_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___contour0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_contourArea_Point2f)(____contour0_marshaled, ___contourLength1, ___oriented2);
	#else
	double returnValue = il2cppPInvokeFunc(____contour0_marshaled, ___contourLength1, ___oriented2);
	#endif

	return returnValue;
}
// OpenCvSharp.RotatedRect OpenCvSharp.NativeMethods::imgproc_minAreaRect_InputArray(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 NativeMethods_imgproc_minAreaRect_InputArray_m82C5AFF52CAE2094B70114F87A9F0084FAC5B4CA (intptr_t ___points0, const RuntimeMethod* method) 
{
	typedef RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_minAreaRect_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = reinterpret_cast<PInvokeFunc>(imgproc_minAreaRect_InputArray)(___points0);
	#else
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = il2cppPInvokeFunc(___points0);
	#endif

	return returnValue;
}
// OpenCvSharp.RotatedRect OpenCvSharp.NativeMethods::imgproc_minAreaRect_Point(OpenCvSharp.Point[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 NativeMethods_imgproc_minAreaRect_Point_mA4D7DDEDA77F79B9944B49CA59DBFC494DB76FB4 (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___points0, int32_t ___pointsLength1, const RuntimeMethod* method) 
{
	typedef RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_minAreaRect_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___points0' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____points0_marshaled = NULL;
	if (___points0 != NULL)
	{
		____points0_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___points0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = reinterpret_cast<PInvokeFunc>(imgproc_minAreaRect_Point)(____points0_marshaled, ___pointsLength1);
	#else
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = il2cppPInvokeFunc(____points0_marshaled, ___pointsLength1);
	#endif

	return returnValue;
}
// OpenCvSharp.RotatedRect OpenCvSharp.NativeMethods::imgproc_minAreaRect_Point2f(OpenCvSharp.Point2f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 NativeMethods_imgproc_minAreaRect_Point2f_m21A54CE3070184D5FABBF996576278DF95EC7B94 (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___points0, int32_t ___pointsLength1, const RuntimeMethod* method) 
{
	typedef RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_minAreaRect_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___points0' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____points0_marshaled = NULL;
	if (___points0 != NULL)
	{
		____points0_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___points0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = reinterpret_cast<PInvokeFunc>(imgproc_minAreaRect_Point2f)(____points0_marshaled, ___pointsLength1);
	#else
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = il2cppPInvokeFunc(____points0_marshaled, ___pointsLength1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_minEnclosingCircle_InputArray(System.IntPtr,OpenCvSharp.Point2f&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_minEnclosingCircle_InputArray_m5741C4633A6B83B5E9650EBC1AF550755FFD2EE8 (intptr_t ___points0, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ___center1, float* ___radius2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, float*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_minEnclosingCircle_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_minEnclosingCircle_InputArray)(___points0, ___center1, ___radius2);
	#else
	il2cppPInvokeFunc(___points0, ___center1, ___radius2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_minEnclosingCircle_Point(OpenCvSharp.Point[],System.Int32,OpenCvSharp.Point2f&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_minEnclosingCircle_Point_mDC4039AF2CA956559B899382BCDB3ED288B60BC7 (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___points0, int32_t ___pointsLength1, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ___center2, float* ___radius3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, float*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_minEnclosingCircle_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___points0' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____points0_marshaled = NULL;
	if (___points0 != NULL)
	{
		____points0_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___points0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_minEnclosingCircle_Point)(____points0_marshaled, ___pointsLength1, ___center2, ___radius3);
	#else
	il2cppPInvokeFunc(____points0_marshaled, ___pointsLength1, ___center2, ___radius3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_minEnclosingCircle_Point2f(OpenCvSharp.Point2f[],System.Int32,OpenCvSharp.Point2f&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_minEnclosingCircle_Point2f_m5E8733023AF5111472BA92D267BC76BFEF0B3AF7 (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___points0, int32_t ___pointsLength1, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ___center2, float* ___radius3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, float*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_minEnclosingCircle_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___points0' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____points0_marshaled = NULL;
	if (___points0 != NULL)
	{
		____points0_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___points0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_minEnclosingCircle_Point2f)(____points0_marshaled, ___pointsLength1, ___center2, ___radius3);
	#else
	il2cppPInvokeFunc(____points0_marshaled, ___pointsLength1, ___center2, ___radius3);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_matchShapes_InputArray(System.IntPtr,System.IntPtr,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_matchShapes_InputArray_m9BF1F22A75EB78EAB9F9FA32BF6EC18CEA23C41C (intptr_t ___contour10, intptr_t ___contour21, int32_t ___method2, double ___parameter3, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_matchShapes_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_matchShapes_InputArray)(___contour10, ___contour21, ___method2, ___parameter3);
	#else
	double returnValue = il2cppPInvokeFunc(___contour10, ___contour21, ___method2, ___parameter3);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::imgproc_matchShapes_Point(OpenCvSharp.Point[],System.Int32,OpenCvSharp.Point[],System.Int32,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_matchShapes_Point_m2B95D8AE7991C7B11E854BB6D3BA1F943CF8E46A (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___contour10, int32_t ___contour1Length1, PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___contour22, int32_t ___contour2Length3, int32_t ___method4, double ___parameter5, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_matchShapes_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___contour10' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____contour10_marshaled = NULL;
	if (___contour10 != NULL)
	{
		____contour10_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___contour10)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___contour22' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____contour22_marshaled = NULL;
	if (___contour22 != NULL)
	{
		____contour22_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___contour22)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_matchShapes_Point)(____contour10_marshaled, ___contour1Length1, ____contour22_marshaled, ___contour2Length3, ___method4, ___parameter5);
	#else
	double returnValue = il2cppPInvokeFunc(____contour10_marshaled, ___contour1Length1, ____contour22_marshaled, ___contour2Length3, ___method4, ___parameter5);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_convexHull_InputArray(System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_convexHull_InputArray_mCDC46172977E543FC3FE25AA602EC883F06BC04F (intptr_t ___points0, intptr_t ___hull1, int32_t ___clockwise2, int32_t ___returnPoints3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_convexHull_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_convexHull_InputArray)(___points0, ___hull1, ___clockwise2, ___returnPoints3);
	#else
	il2cppPInvokeFunc(___points0, ___hull1, ___clockwise2, ___returnPoints3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_convexHull_Point_ReturnsPoints(OpenCvSharp.Point[],System.Int32,System.IntPtr&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_convexHull_Point_ReturnsPoints_m19ADF9ED0D4B6A7FDED04071205F17612E7837C0 (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___points0, int32_t ___pointsLength1, intptr_t* ___hull2, int32_t ___clockwise3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_convexHull_Point_ReturnsPoints", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___points0' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____points0_marshaled = NULL;
	if (___points0 != NULL)
	{
		____points0_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___points0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_convexHull_Point_ReturnsPoints)(____points0_marshaled, ___pointsLength1, ___hull2, ___clockwise3);
	#else
	il2cppPInvokeFunc(____points0_marshaled, ___pointsLength1, ___hull2, ___clockwise3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_convexHull_Point2f_ReturnsPoints(OpenCvSharp.Point2f[],System.Int32,System.IntPtr&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_convexHull_Point2f_ReturnsPoints_mFD5366F4A47831F44EB924C98FE380CB8ABB6E5B (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___points0, int32_t ___pointsLength1, intptr_t* ___hull2, int32_t ___clockwise3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_convexHull_Point2f_ReturnsPoints", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___points0' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____points0_marshaled = NULL;
	if (___points0 != NULL)
	{
		____points0_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___points0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_convexHull_Point2f_ReturnsPoints)(____points0_marshaled, ___pointsLength1, ___hull2, ___clockwise3);
	#else
	il2cppPInvokeFunc(____points0_marshaled, ___pointsLength1, ___hull2, ___clockwise3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_convexHull_Point_ReturnsIndices(OpenCvSharp.Point[],System.Int32,System.IntPtr&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_convexHull_Point_ReturnsIndices_m7DFE070DEF91901B3A9D499F69B56E5E9EC92AB9 (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___points0, int32_t ___pointsLength1, intptr_t* ___hull2, int32_t ___clockwise3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_convexHull_Point_ReturnsIndices", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___points0' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____points0_marshaled = NULL;
	if (___points0 != NULL)
	{
		____points0_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___points0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_convexHull_Point_ReturnsIndices)(____points0_marshaled, ___pointsLength1, ___hull2, ___clockwise3);
	#else
	il2cppPInvokeFunc(____points0_marshaled, ___pointsLength1, ___hull2, ___clockwise3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_convexHull_Point2f_ReturnsIndices(OpenCvSharp.Point2f[],System.Int32,System.IntPtr&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_convexHull_Point2f_ReturnsIndices_m0E366D90FCAB4ACDE088C0D73F17F2836B5ED74F (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___points0, int32_t ___pointsLength1, intptr_t* ___hull2, int32_t ___clockwise3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_convexHull_Point2f_ReturnsIndices", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___points0' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____points0_marshaled = NULL;
	if (___points0 != NULL)
	{
		____points0_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___points0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_convexHull_Point2f_ReturnsIndices)(____points0_marshaled, ___pointsLength1, ___hull2, ___clockwise3);
	#else
	il2cppPInvokeFunc(____points0_marshaled, ___pointsLength1, ___hull2, ___clockwise3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_convexityDefects_InputArray(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_convexityDefects_InputArray_m7B71CA6562063F57B9A31F6F475FFBD9D2015F11 (intptr_t ___contour0, intptr_t ___convexHull1, intptr_t ___convexityDefects2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_convexityDefects_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_convexityDefects_InputArray)(___contour0, ___convexHull1, ___convexityDefects2);
	#else
	il2cppPInvokeFunc(___contour0, ___convexHull1, ___convexityDefects2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_convexityDefects_Point(OpenCvSharp.Point[],System.Int32,System.Int32[],System.Int32,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_convexityDefects_Point_m25BBE795665FC15D0E82C68A14618ABD1C65B788 (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___contour0, int32_t ___contourLength1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___convexHull2, int32_t ___convexHullLength3, intptr_t* ___convexityDefects4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, int32_t*, int32_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_convexityDefects_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___contour0' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____contour0_marshaled = NULL;
	if (___contour0 != NULL)
	{
		____contour0_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___contour0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___convexHull2' to native representation
	int32_t* ____convexHull2_marshaled = NULL;
	if (___convexHull2 != NULL)
	{
		____convexHull2_marshaled = reinterpret_cast<int32_t*>((___convexHull2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_convexityDefects_Point)(____contour0_marshaled, ___contourLength1, ____convexHull2_marshaled, ___convexHullLength3, ___convexityDefects4);
	#else
	il2cppPInvokeFunc(____contour0_marshaled, ___contourLength1, ____convexHull2_marshaled, ___convexHullLength3, ___convexityDefects4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_convexityDefects_Point2f(OpenCvSharp.Point2f[],System.Int32,System.Int32[],System.Int32,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_convexityDefects_Point2f_m2C3840545C48108F3C1850FAEA6076787A15C7B0 (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___contour0, int32_t ___contourLength1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___convexHull2, int32_t ___convexHullLength3, intptr_t* ___convexityDefects4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, int32_t*, int32_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_convexityDefects_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___contour0' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____contour0_marshaled = NULL;
	if (___contour0 != NULL)
	{
		____contour0_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___contour0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___convexHull2' to native representation
	int32_t* ____convexHull2_marshaled = NULL;
	if (___convexHull2 != NULL)
	{
		____convexHull2_marshaled = reinterpret_cast<int32_t*>((___convexHull2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_convexityDefects_Point2f)(____contour0_marshaled, ___contourLength1, ____convexHull2_marshaled, ___convexHullLength3, ___convexityDefects4);
	#else
	il2cppPInvokeFunc(____contour0_marshaled, ___contourLength1, ____convexHull2_marshaled, ___convexHullLength3, ___convexityDefects4);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_isContourConvex_InputArray(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_isContourConvex_InputArray_mFB6EAE47A260B42431DADA69BB8FD33BB9C005A5 (intptr_t ___contour0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_isContourConvex_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_isContourConvex_InputArray)(___contour0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___contour0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_isContourConvex_Point(OpenCvSharp.Point[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_isContourConvex_Point_mE91B4F9DDBD0293DF69C948139FF095FF5ABD6C8 (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___contour0, int32_t ___contourLength1, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_isContourConvex_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___contour0' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____contour0_marshaled = NULL;
	if (___contour0 != NULL)
	{
		____contour0_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___contour0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_isContourConvex_Point)(____contour0_marshaled, ___contourLength1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____contour0_marshaled, ___contourLength1);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_isContourConvex_Point2f(OpenCvSharp.Point2f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_isContourConvex_Point2f_m2C127C13A832FC838776E9057BB623E86DB683D1 (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___contour0, int32_t ___contourLength1, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_isContourConvex_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___contour0' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____contour0_marshaled = NULL;
	if (___contour0 != NULL)
	{
		____contour0_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___contour0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_isContourConvex_Point2f)(____contour0_marshaled, ___contourLength1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____contour0_marshaled, ___contourLength1);
	#endif

	return returnValue;
}
// System.Single OpenCvSharp.NativeMethods::imgproc_intersectConvexConvex_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_imgproc_intersectConvexConvex_InputArray_m84654863505ECD47399CF175F5AF99A477CAD78D (intptr_t ___p10, intptr_t ___p21, intptr_t ___p122, int32_t ___handleNested3, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_intersectConvexConvex_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(imgproc_intersectConvexConvex_InputArray)(___p10, ___p21, ___p122, ___handleNested3);
	#else
	float returnValue = il2cppPInvokeFunc(___p10, ___p21, ___p122, ___handleNested3);
	#endif

	return returnValue;
}
// System.Single OpenCvSharp.NativeMethods::imgproc_intersectConvexConvex_Point(OpenCvSharp.Point[],System.Int32,OpenCvSharp.Point[],System.Int32,System.IntPtr&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_imgproc_intersectConvexConvex_Point_m45C8F5C8244E4FB87CB7CA9C69A76D5A182863CB (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___p10, int32_t ___p1Length1, PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___p22, int32_t ___p2Length3, intptr_t* ___p124, int32_t ___handleNested5, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_intersectConvexConvex_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___p10' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____p10_marshaled = NULL;
	if (___p10 != NULL)
	{
		____p10_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___p10)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___p22' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____p22_marshaled = NULL;
	if (___p22 != NULL)
	{
		____p22_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___p22)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(imgproc_intersectConvexConvex_Point)(____p10_marshaled, ___p1Length1, ____p22_marshaled, ___p2Length3, ___p124, ___handleNested5);
	#else
	float returnValue = il2cppPInvokeFunc(____p10_marshaled, ___p1Length1, ____p22_marshaled, ___p2Length3, ___p124, ___handleNested5);
	#endif

	return returnValue;
}
// System.Single OpenCvSharp.NativeMethods::imgproc_intersectConvexConvex_Point2f(OpenCvSharp.Point2f[],System.Int32,OpenCvSharp.Point2f[],System.Int32,System.IntPtr&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_imgproc_intersectConvexConvex_Point2f_mC0F687FE603FEAD39949182345F37BD16486930F (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___p10, int32_t ___p1Length1, Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___p22, int32_t ___p2Length3, intptr_t* ___p124, int32_t ___handleNested5, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_intersectConvexConvex_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___p10' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____p10_marshaled = NULL;
	if (___p10 != NULL)
	{
		____p10_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___p10)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___p22' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____p22_marshaled = NULL;
	if (___p22 != NULL)
	{
		____p22_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___p22)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(imgproc_intersectConvexConvex_Point2f)(____p10_marshaled, ___p1Length1, ____p22_marshaled, ___p2Length3, ___p124, ___handleNested5);
	#else
	float returnValue = il2cppPInvokeFunc(____p10_marshaled, ___p1Length1, ____p22_marshaled, ___p2Length3, ___p124, ___handleNested5);
	#endif

	return returnValue;
}
// OpenCvSharp.RotatedRect OpenCvSharp.NativeMethods::imgproc_fitEllipse_InputArray(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 NativeMethods_imgproc_fitEllipse_InputArray_mB3772798AB001EE583E8896DB4F44A5AA55ACA95 (intptr_t ___points0, const RuntimeMethod* method) 
{
	typedef RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fitEllipse_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = reinterpret_cast<PInvokeFunc>(imgproc_fitEllipse_InputArray)(___points0);
	#else
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = il2cppPInvokeFunc(___points0);
	#endif

	return returnValue;
}
// OpenCvSharp.RotatedRect OpenCvSharp.NativeMethods::imgproc_fitEllipse_Point(OpenCvSharp.Point[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 NativeMethods_imgproc_fitEllipse_Point_mDB717476E6965C1E77216CD3ED0BBC4A2503C016 (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___points0, int32_t ___pointsLength1, const RuntimeMethod* method) 
{
	typedef RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fitEllipse_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___points0' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____points0_marshaled = NULL;
	if (___points0 != NULL)
	{
		____points0_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___points0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = reinterpret_cast<PInvokeFunc>(imgproc_fitEllipse_Point)(____points0_marshaled, ___pointsLength1);
	#else
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = il2cppPInvokeFunc(____points0_marshaled, ___pointsLength1);
	#endif

	return returnValue;
}
// OpenCvSharp.RotatedRect OpenCvSharp.NativeMethods::imgproc_fitEllipse_Point2f(OpenCvSharp.Point2f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 NativeMethods_imgproc_fitEllipse_Point2f_m666C03D4AE80FF245CA8D570ED7EE210313B50EF (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___points0, int32_t ___pointsLength1, const RuntimeMethod* method) 
{
	typedef RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fitEllipse_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___points0' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____points0_marshaled = NULL;
	if (___points0 != NULL)
	{
		____points0_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___points0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = reinterpret_cast<PInvokeFunc>(imgproc_fitEllipse_Point2f)(____points0_marshaled, ___pointsLength1);
	#else
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = il2cppPInvokeFunc(____points0_marshaled, ___pointsLength1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_fitLine_InputArray(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_fitLine_InputArray_m74EE634E94F1A3EE7D734701D486417B2C9E3823 (intptr_t ___points0, intptr_t ___line1, int32_t ___distType2, double ___param3, double ___reps4, double ___aeps5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fitLine_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_fitLine_InputArray)(___points0, ___line1, ___distType2, ___param3, ___reps4, ___aeps5);
	#else
	il2cppPInvokeFunc(___points0, ___line1, ___distType2, ___param3, ___reps4, ___aeps5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_fitLine_Point(OpenCvSharp.Point[],System.Int32,System.Single[],System.Int32,System.Double,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_fitLine_Point_m69D5A31B23D934203ABD1B795ACE86135F0E080C (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___points0, int32_t ___pointsLength1, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___line2, int32_t ___distType3, double ___param4, double ___reps5, double ___aeps6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, float*, int32_t, double, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fitLine_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___points0' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____points0_marshaled = NULL;
	if (___points0 != NULL)
	{
		____points0_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___points0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___line2' to native representation
	float* ____line2_marshaled = NULL;
	if (___line2 != NULL)
	{
		____line2_marshaled = reinterpret_cast<float*>((___line2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_fitLine_Point)(____points0_marshaled, ___pointsLength1, ____line2_marshaled, ___distType3, ___param4, ___reps5, ___aeps6);
	#else
	il2cppPInvokeFunc(____points0_marshaled, ___pointsLength1, ____line2_marshaled, ___distType3, ___param4, ___reps5, ___aeps6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_fitLine_Point2f(OpenCvSharp.Point2f[],System.Int32,System.Single[],System.Int32,System.Double,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_fitLine_Point2f_mBF71E5504E169F1DB5003C0B1F1CDABD3D5864CC (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___points0, int32_t ___pointsLength1, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___line2, int32_t ___distType3, double ___param4, double ___reps5, double ___aeps6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, float*, int32_t, double, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fitLine_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___points0' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____points0_marshaled = NULL;
	if (___points0 != NULL)
	{
		____points0_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___points0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___line2' to native representation
	float* ____line2_marshaled = NULL;
	if (___line2 != NULL)
	{
		____line2_marshaled = reinterpret_cast<float*>((___line2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_fitLine_Point2f)(____points0_marshaled, ___pointsLength1, ____line2_marshaled, ___distType3, ___param4, ___reps5, ___aeps6);
	#else
	il2cppPInvokeFunc(____points0_marshaled, ___pointsLength1, ____line2_marshaled, ___distType3, ___param4, ___reps5, ___aeps6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_fitLine_Point3i(OpenCvSharp.Point3i[],System.Int32,System.Single[],System.Int32,System.Double,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_fitLine_Point3i_m6E034689880322F2778DA0ACDA4BB5F24D9A7D24 (Point3iU5BU5D_t4ADE5D61157E49120DBB2AC37D0C253B312688EC* ___points0, int32_t ___pointsLength1, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___line2, int32_t ___distType3, double ___param4, double ___reps5, double ___aeps6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B*, int32_t, float*, int32_t, double, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fitLine_Point3i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___points0' to native representation
	Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B* ____points0_marshaled = NULL;
	if (___points0 != NULL)
	{
		____points0_marshaled = reinterpret_cast<Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B*>((___points0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___line2' to native representation
	float* ____line2_marshaled = NULL;
	if (___line2 != NULL)
	{
		____line2_marshaled = reinterpret_cast<float*>((___line2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_fitLine_Point3i)(____points0_marshaled, ___pointsLength1, ____line2_marshaled, ___distType3, ___param4, ___reps5, ___aeps6);
	#else
	il2cppPInvokeFunc(____points0_marshaled, ___pointsLength1, ____line2_marshaled, ___distType3, ___param4, ___reps5, ___aeps6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_fitLine_Point3f(OpenCvSharp.Point3f[],System.Int32,System.Single[],System.Int32,System.Double,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_fitLine_Point3f_m20C2C3493B334472AFB742E3851EC323092A38E4 (Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2* ___points0, int32_t ___pointsLength1, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___line2, int32_t ___distType3, double ___param4, double ___reps5, double ___aeps6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, int32_t, float*, int32_t, double, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fitLine_Point3f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___points0' to native representation
	Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* ____points0_marshaled = NULL;
	if (___points0 != NULL)
	{
		____points0_marshaled = reinterpret_cast<Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*>((___points0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___line2' to native representation
	float* ____line2_marshaled = NULL;
	if (___line2 != NULL)
	{
		____line2_marshaled = reinterpret_cast<float*>((___line2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_fitLine_Point3f)(____points0_marshaled, ___pointsLength1, ____line2_marshaled, ___distType3, ___param4, ___reps5, ___aeps6);
	#else
	il2cppPInvokeFunc(____points0_marshaled, ___pointsLength1, ____line2_marshaled, ___distType3, ___param4, ___reps5, ___aeps6);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_pointPolygonTest_InputArray(System.IntPtr,OpenCvSharp.Point2f,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_pointPolygonTest_InputArray_m48D9701C7A7339A254157B923991A3621A398121 (intptr_t ___contour0, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___pt1, int32_t ___measureDist2, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_pointPolygonTest_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_pointPolygonTest_InputArray)(___contour0, ___pt1, ___measureDist2);
	#else
	double returnValue = il2cppPInvokeFunc(___contour0, ___pt1, ___measureDist2);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::imgproc_pointPolygonTest_Point(OpenCvSharp.Point[],System.Int32,OpenCvSharp.Point2f,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_pointPolygonTest_Point_m4D472AB33A4E432F2AFB8DF784B5EE4EB96B395D (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___contour0, int32_t ___contourLength1, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___pt2, int32_t ___measureDist3, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_pointPolygonTest_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___contour0' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____contour0_marshaled = NULL;
	if (___contour0 != NULL)
	{
		____contour0_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___contour0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_pointPolygonTest_Point)(____contour0_marshaled, ___contourLength1, ___pt2, ___measureDist3);
	#else
	double returnValue = il2cppPInvokeFunc(____contour0_marshaled, ___contourLength1, ___pt2, ___measureDist3);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::imgproc_pointPolygonTest_Point2f(OpenCvSharp.Point2f[],System.Int32,OpenCvSharp.Point2f,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_pointPolygonTest_Point2f_m990AC6020ECDE6236D3ECF411125A6EE1F819724 (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___contour0, int32_t ___contourLength1, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___pt2, int32_t ___measureDist3, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_pointPolygonTest_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___contour0' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____contour0_marshaled = NULL;
	if (___contour0 != NULL)
	{
		____contour0_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___contour0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_pointPolygonTest_Point2f)(____contour0_marshaled, ___contourLength1, ___pt2, ___measureDist3);
	#else
	double returnValue = il2cppPInvokeFunc(____contour0_marshaled, ___contourLength1, ___pt2, ___measureDist3);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_rotatedRectangleIntersection_OutputArray(OpenCvSharp.RotatedRect,OpenCvSharp.RotatedRect,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_rotatedRectangleIntersection_OutputArray_m3FC147C7816BD2665961A7B202A8EEAE9B9D23CF (RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 ___rect10, RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 ___rect21, intptr_t ___intersectingRegion2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967, RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967) + sizeof(RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_rotatedRectangleIntersection_OutputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_rotatedRectangleIntersection_OutputArray)(___rect10, ___rect21, ___intersectingRegion2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___rect10, ___rect21, ___intersectingRegion2);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_rotatedRectangleIntersection_vector(OpenCvSharp.RotatedRect,OpenCvSharp.RotatedRect,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_rotatedRectangleIntersection_vector_m9797C6D0546091262DA3F84A21C063E7F5933CEE (RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 ___rect10, RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 ___rect21, intptr_t ___intersectingRegion2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967, RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967) + sizeof(RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_rotatedRectangleIntersection_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_rotatedRectangleIntersection_vector)(___rect10, ___rect21, ___intersectingRegion2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___rect10, ___rect21, ___intersectingRegion2);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_applyColorMap(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_applyColorMap_mC5E3BBBC274B5C1071B3A66333E9A0DF4EC835A4 (intptr_t ___src0, intptr_t ___dst1, int32_t ___colormap2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_applyColorMap", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_applyColorMap)(___src0, ___dst1, ___colormap2);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___colormap2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_line(System.IntPtr,OpenCvSharp.Point,OpenCvSharp.Point,OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_line_m8EF9410BF52D8C1D33426CFF64F553FBEF337E48 (intptr_t ___img0, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___pt11, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___pt22, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___color3, int32_t ___thickness4, int32_t ___lineType5, int32_t ___shift6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_line", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_line)(___img0, ___pt11, ___pt22, ___color3, ___thickness4, ___lineType5, ___shift6);
	#else
	il2cppPInvokeFunc(___img0, ___pt11, ___pt22, ___color3, ___thickness4, ___lineType5, ___shift6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_arrowedLine(System.IntPtr,OpenCvSharp.Point,OpenCvSharp.Point,OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_arrowedLine_mE0DFD0C47655713D7967348AC258A8DE316D5774 (intptr_t ___img0, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___pt11, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___pt22, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___color3, int32_t ___thickness4, int32_t ___lineType5, int32_t ___shift6, double ___tipLength7, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_arrowedLine", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_arrowedLine)(___img0, ___pt11, ___pt22, ___color3, ___thickness4, ___lineType5, ___shift6, ___tipLength7);
	#else
	il2cppPInvokeFunc(___img0, ___pt11, ___pt22, ___color3, ___thickness4, ___lineType5, ___shift6, ___tipLength7);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_rectangle_InputOutputArray(System.IntPtr,OpenCvSharp.Point,OpenCvSharp.Point,OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_rectangle_InputOutputArray_mD640F0D5E4ED107DE150A47AAD8FA678288B49A1 (intptr_t ___img0, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___pt11, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___pt22, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___color3, int32_t ___thickness4, int32_t ___lineType5, int32_t ___shift6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_rectangle_InputOutputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_rectangle_InputOutputArray)(___img0, ___pt11, ___pt22, ___color3, ___thickness4, ___lineType5, ___shift6);
	#else
	il2cppPInvokeFunc(___img0, ___pt11, ___pt22, ___color3, ___thickness4, ___lineType5, ___shift6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_rectangle_Mat(System.IntPtr,OpenCvSharp.Rect,OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_rectangle_Mat_mA06FD4F3053526880545F78BC400A0C0D39C2363 (intptr_t ___img0, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___rect1, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___color2, int32_t ___thickness3, int32_t ___lineType4, int32_t ___shift5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_rectangle_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_rectangle_Mat)(___img0, ___rect1, ___color2, ___thickness3, ___lineType4, ___shift5);
	#else
	il2cppPInvokeFunc(___img0, ___rect1, ___color2, ___thickness3, ___lineType4, ___shift5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_circle(System.IntPtr,OpenCvSharp.Point,System.Int32,OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_circle_mCC29D575C60F181BF989494F01D22756F4836B0C (intptr_t ___img0, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___center1, int32_t ___radius2, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___color3, int32_t ___thickness4, int32_t ___lineType5, int32_t ___shift6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_circle", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_circle)(___img0, ___center1, ___radius2, ___color3, ___thickness4, ___lineType5, ___shift6);
	#else
	il2cppPInvokeFunc(___img0, ___center1, ___radius2, ___color3, ___thickness4, ___lineType5, ___shift6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_ellipse1(System.IntPtr,OpenCvSharp.Point,OpenCvSharp.Size,System.Double,System.Double,System.Double,OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_ellipse1_m063E48F97B941AB69E2297EDB2219DA9B96926F5 (intptr_t ___img0, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___center1, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___axes2, double ___angle3, double ___startAngle4, double ___endAngle5, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___color6, int32_t ___thickness7, int32_t ___lineType8, int32_t ___shift9, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, double, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_ellipse1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_ellipse1)(___img0, ___center1, ___axes2, ___angle3, ___startAngle4, ___endAngle5, ___color6, ___thickness7, ___lineType8, ___shift9);
	#else
	il2cppPInvokeFunc(___img0, ___center1, ___axes2, ___angle3, ___startAngle4, ___endAngle5, ___color6, ___thickness7, ___lineType8, ___shift9);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_ellipse2(System.IntPtr,OpenCvSharp.RotatedRect,OpenCvSharp.Scalar,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_ellipse2_mDC40B2D611BB48537E023355D3BA982F3956136D (intptr_t ___img0, RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 ___box1, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___color2, int32_t ___thickness3, int32_t ___lineType4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_ellipse2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_ellipse2)(___img0, ___box1, ___color2, ___thickness3, ___lineType4);
	#else
	il2cppPInvokeFunc(___img0, ___box1, ___color2, ___thickness3, ___lineType4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_fillConvexPoly_Mat(System.IntPtr,OpenCvSharp.Point[],System.Int32,OpenCvSharp.Scalar,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_fillConvexPoly_Mat_m164E0D239723FAF5292AF83B069BD7CC5F624DD8 (intptr_t ___img0, PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___pts1, int32_t ___npts2, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___color3, int32_t ___lineType4, int32_t ___shift5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fillConvexPoly_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___pts1' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____pts1_marshaled = NULL;
	if (___pts1 != NULL)
	{
		____pts1_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___pts1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_fillConvexPoly_Mat)(___img0, ____pts1_marshaled, ___npts2, ___color3, ___lineType4, ___shift5);
	#else
	il2cppPInvokeFunc(___img0, ____pts1_marshaled, ___npts2, ___color3, ___lineType4, ___shift5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_fillConvexPoly_InputOutputArray(System.IntPtr,System.IntPtr,OpenCvSharp.Scalar,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_fillConvexPoly_InputOutputArray_mC1EAF01217075DF72DA8571B10783A9D4A6797C0 (intptr_t ___img0, intptr_t ___points1, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___color2, int32_t ___lineType3, int32_t ___shift4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fillConvexPoly_InputOutputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_fillConvexPoly_InputOutputArray)(___img0, ___points1, ___color2, ___lineType3, ___shift4);
	#else
	il2cppPInvokeFunc(___img0, ___points1, ___color2, ___lineType3, ___shift4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_fillPoly_Mat(System.IntPtr,System.IntPtr[],System.Int32[],System.Int32,OpenCvSharp.Scalar,System.Int32,System.Int32,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_fillPoly_Mat_m24A3438B48CBD347D638147189239B80E12B37B5 (intptr_t ___img0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___pts1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___npts2, int32_t ___ncontours3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___color4, int32_t ___lineType5, int32_t ___shift6, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___offset7, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t*, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(void*) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fillPoly_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___pts1' to native representation
	intptr_t* ____pts1_marshaled = NULL;
	if (___pts1 != NULL)
	{
		____pts1_marshaled = reinterpret_cast<intptr_t*>((___pts1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___npts2' to native representation
	int32_t* ____npts2_marshaled = NULL;
	if (___npts2 != NULL)
	{
		____npts2_marshaled = reinterpret_cast<int32_t*>((___npts2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_fillPoly_Mat)(___img0, ____pts1_marshaled, ____npts2_marshaled, ___ncontours3, ___color4, ___lineType5, ___shift6, ___offset7);
	#else
	il2cppPInvokeFunc(___img0, ____pts1_marshaled, ____npts2_marshaled, ___ncontours3, ___color4, ___lineType5, ___shift6, ___offset7);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_fillPoly_InputOutputArray(System.IntPtr,System.IntPtr,OpenCvSharp.Scalar,System.Int32,System.Int32,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_fillPoly_InputOutputArray_m1C5413DB2A92EBF21DE3C3ECB892410D915E39BA (intptr_t ___img0, intptr_t ___pts1, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___color2, int32_t ___lineType3, int32_t ___shift4, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___offset5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fillPoly_InputOutputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_fillPoly_InputOutputArray)(___img0, ___pts1, ___color2, ___lineType3, ___shift4, ___offset5);
	#else
	il2cppPInvokeFunc(___img0, ___pts1, ___color2, ___lineType3, ___shift4, ___offset5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_polylines_Mat(System.IntPtr,System.IntPtr[],System.Int32[],System.Int32,System.Int32,OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_polylines_Mat_m68DDAD194B4E1F0BB5120903C96AC5F24E697F9D (intptr_t ___img0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___pts1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___npts2, int32_t ___ncontours3, int32_t ___isClosed4, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___color5, int32_t ___thickness6, int32_t ___lineType7, int32_t ___shift8, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t*, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_polylines_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___pts1' to native representation
	intptr_t* ____pts1_marshaled = NULL;
	if (___pts1 != NULL)
	{
		____pts1_marshaled = reinterpret_cast<intptr_t*>((___pts1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___npts2' to native representation
	int32_t* ____npts2_marshaled = NULL;
	if (___npts2 != NULL)
	{
		____npts2_marshaled = reinterpret_cast<int32_t*>((___npts2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_polylines_Mat)(___img0, ____pts1_marshaled, ____npts2_marshaled, ___ncontours3, ___isClosed4, ___color5, ___thickness6, ___lineType7, ___shift8);
	#else
	il2cppPInvokeFunc(___img0, ____pts1_marshaled, ____npts2_marshaled, ___ncontours3, ___isClosed4, ___color5, ___thickness6, ___lineType7, ___shift8);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_polylines_InputOutputArray(System.IntPtr,System.IntPtr,System.Int32,OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_polylines_InputOutputArray_mCC208122238B154759F1D6B69F09E4B3DFB8918B (intptr_t ___img0, intptr_t ___pts1, int32_t ___isClosed2, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___color3, int32_t ___thickness4, int32_t ___lineType5, int32_t ___shift6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_polylines_InputOutputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_polylines_InputOutputArray)(___img0, ___pts1, ___isClosed2, ___color3, ___thickness4, ___lineType5, ___shift6);
	#else
	il2cppPInvokeFunc(___img0, ___pts1, ___isClosed2, ___color3, ___thickness4, ___lineType5, ___shift6);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_clipLine1(OpenCvSharp.Size,OpenCvSharp.Point&,OpenCvSharp.Point&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_clipLine1_m63C55C23C14E2B9AA754F7DDCB0DF83813791090 (Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___imgSize0, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ___pt11, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ___pt22, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_clipLine1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_clipLine1)(___imgSize0, ___pt11, ___pt22);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___imgSize0, ___pt11, ___pt22);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_clipLine2(OpenCvSharp.Rect,OpenCvSharp.Point&,OpenCvSharp.Point&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_clipLine2_mDBC86DF78F1094D49CA7CF11BCEC6F174B32E8F8 (Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___imgRect0, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ___pt11, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ___pt22, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_clipLine2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_clipLine2)(___imgRect0, ___pt11, ___pt22);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___imgRect0, ___pt11, ___pt22);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_ellipse2Poly(OpenCvSharp.Point,OpenCvSharp.Size,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_ellipse2Poly_m57999857D4BDF251077D0383448BB68D33484DCE (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___center0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___axes1, int32_t ___angle2, int32_t ___arcStart3, int32_t ___arcEnd4, int32_t ___delta5, intptr_t ___pts6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, int32_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_ellipse2Poly", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_ellipse2Poly)(___center0, ___axes1, ___angle2, ___arcStart3, ___arcEnd4, ___delta5, ___pts6);
	#else
	il2cppPInvokeFunc(___center0, ___axes1, ___angle2, ___arcStart3, ___arcEnd4, ___delta5, ___pts6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_putText(System.IntPtr,System.String,OpenCvSharp.Point,System.Int32,System.Double,OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_putText_m237B7D9602084803C13E2D15C57EC80E68A61077 (intptr_t ___img0, String_t* ___text1, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___org2, int32_t ___fontFace3, double ___fontScale4, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___color5, int32_t ___thickness6, int32_t ___lineType7, int32_t ___bottomLeftOrigin8, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, double, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(int32_t) + sizeof(double) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_putText", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___text1' to native representation
	char* ____text1_marshaled = NULL;
	____text1_marshaled = il2cpp_codegen_marshal_string(___text1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_putText)(___img0, ____text1_marshaled, ___org2, ___fontFace3, ___fontScale4, ___color5, ___thickness6, ___lineType7, ___bottomLeftOrigin8);
	#else
	il2cppPInvokeFunc(___img0, ____text1_marshaled, ___org2, ___fontFace3, ___fontScale4, ___color5, ___thickness6, ___lineType7, ___bottomLeftOrigin8);
	#endif

	// Marshaling cleanup of parameter '___text1' native representation
	il2cpp_codegen_marshal_free(____text1_marshaled);
	____text1_marshaled = NULL;

}
// OpenCvSharp.Size OpenCvSharp.NativeMethods::core_getTextSize(System.String,System.Int32,System.Double,System.Int32,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 NativeMethods_core_getTextSize_mA57E2C8AE36B169EB07D088EF85992F50D9EA5C4 (String_t* ___text0, int32_t ___fontFace1, double ___fontScale2, int32_t ___thickness3, int32_t* ___baseLine4, const RuntimeMethod* method) 
{
	typedef Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 (CDECL *PInvokeFunc) (char*, int32_t, double, int32_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(int32_t) + sizeof(double) + sizeof(int32_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_getTextSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___text0' to native representation
	char* ____text0_marshaled = NULL;
	____text0_marshaled = il2cpp_codegen_marshal_string(___text0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = reinterpret_cast<PInvokeFunc>(core_getTextSize)(____text0_marshaled, ___fontFace1, ___fontScale2, ___thickness3, ___baseLine4);
	#else
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = il2cppPInvokeFunc(____text0_marshaled, ___fontFace1, ___fontScale2, ___thickness3, ___baseLine4);
	#endif

	// Marshaling cleanup of parameter '___text0' native representation
	il2cpp_codegen_marshal_free(____text0_marshaled);
	____text0_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_createCLAHE(System.Double,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_createCLAHE_m62D1A70F34F24D5C3A4BE161BE0E26114F9BB030 (double ___clipLimit0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___tileGridSize1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_createCLAHE", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_createCLAHE)(___clipLimit0, ___tileGridSize1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___clipLimit0, ___tileGridSize1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_Ptr_CLAHE_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Ptr_CLAHE_delete_mF71629D9EF171921037121FB4B400A85863B3278 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Ptr_CLAHE_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Ptr_CLAHE_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_Ptr_CLAHE_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_Ptr_CLAHE_get_mCD082FE3485ED96FA27D9A2480FCB75AA7A8AA41 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Ptr_CLAHE_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Ptr_CLAHE_get)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_CLAHE_apply(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_CLAHE_apply_mA2B57CD946751532C3872A8D023B360561F0FF27 (intptr_t ___obj0, intptr_t ___src1, intptr_t ___dst2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_CLAHE_apply", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_CLAHE_apply)(___obj0, ___src1, ___dst2);
	#else
	il2cppPInvokeFunc(___obj0, ___src1, ___dst2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_CLAHE_setClipLimit(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_CLAHE_setClipLimit_m21900AB3B514DB26A7180C456D017464911EFE97 (intptr_t ___obj0, double ___clipLimit1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_CLAHE_setClipLimit", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_CLAHE_setClipLimit)(___obj0, ___clipLimit1);
	#else
	il2cppPInvokeFunc(___obj0, ___clipLimit1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_CLAHE_getClipLimit(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_CLAHE_getClipLimit_m44C0828C7A4F5FA24B3A917E24567A116E5DA4AE (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_CLAHE_getClipLimit", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_CLAHE_getClipLimit)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_CLAHE_setTilesGridSize(System.IntPtr,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_CLAHE_setTilesGridSize_m0B2813888E7EC6942082595C4E99B2A2066B43EF (intptr_t ___obj0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___tileGridSize1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_CLAHE_setTilesGridSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_CLAHE_setTilesGridSize)(___obj0, ___tileGridSize1);
	#else
	il2cppPInvokeFunc(___obj0, ___tileGridSize1);
	#endif

}
// OpenCvSharp.Size OpenCvSharp.NativeMethods::imgproc_CLAHE_getTilesGridSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 NativeMethods_imgproc_CLAHE_getTilesGridSize_m51736BADD4ECEFD65B9047DDF8F603F6B6001C10 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_CLAHE_getTilesGridSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = reinterpret_cast<PInvokeFunc>(imgproc_CLAHE_getTilesGridSize)(___obj0);
	#else
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_CLAHE_collectGarbage(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_CLAHE_collectGarbage_m25C26C42280504B62E84F562DEE0AFB00800853E (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_CLAHE_collectGarbage", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_CLAHE_collectGarbage)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_setTemplate1(System.IntPtr,System.IntPtr,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHough_setTemplate1_m33E148AD80F6FE8E2F549ADD5305ED4AB826E202 (intptr_t ___obj0, intptr_t ___templ1, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___templCenter2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_setTemplate1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_setTemplate1)(___obj0, ___templ1, ___templCenter2);
	#else
	il2cppPInvokeFunc(___obj0, ___templ1, ___templCenter2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_setTemplate2(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHough_setTemplate2_m562383016F2FAC52B33FA9F1E857FFF761A0F355 (intptr_t ___obj0, intptr_t ___edges1, intptr_t ___dx2, intptr_t ___dy3, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___templCenter4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_setTemplate2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_setTemplate2)(___obj0, ___edges1, ___dx2, ___dy3, ___templCenter4);
	#else
	il2cppPInvokeFunc(___obj0, ___edges1, ___dx2, ___dy3, ___templCenter4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_detect1(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHough_detect1_m8796DFE7ABE189057CA06C444E99EEEF4F94F940 (intptr_t ___obj0, intptr_t ___image1, intptr_t ___positions2, intptr_t ___votes3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_detect1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_detect1)(___obj0, ___image1, ___positions2, ___votes3);
	#else
	il2cppPInvokeFunc(___obj0, ___image1, ___positions2, ___votes3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_detect2(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHough_detect2_mC698112E2C19A09ABD0D0290722E95546AE6C498 (intptr_t ___obj0, intptr_t ___edges1, intptr_t ___dx2, intptr_t ___dy3, intptr_t ___positions4, intptr_t ___votes5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_detect2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_detect2)(___obj0, ___edges1, ___dx2, ___dy3, ___positions4, ___votes5);
	#else
	il2cppPInvokeFunc(___obj0, ___edges1, ___dx2, ___dy3, ___positions4, ___votes5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_setCannyLowThresh(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHough_setCannyLowThresh_m0237B58BF0A53F01C4668925273D4D2B267CB33F (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_setCannyLowThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_setCannyLowThresh)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_getCannyLowThresh(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_GeneralizedHough_getCannyLowThresh_mDF706F618E0280439469DADA551BF12EE21B2556 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_getCannyLowThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_getCannyLowThresh)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_setCannyHighThresh(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHough_setCannyHighThresh_m4EFA639B613046E1F78442EC5E014808392817AD (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_setCannyHighThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_setCannyHighThresh)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_getCannyHighThresh(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_GeneralizedHough_getCannyHighThresh_m37EB0A29DC28113CD77C7C64E7EA1C2539869ED0 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_getCannyHighThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_getCannyHighThresh)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_setMinDist(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHough_setMinDist_m0B188A381C190A6B850B12FCA9A7EAF39236E547 (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_setMinDist", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_setMinDist)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_getMinDist(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_GeneralizedHough_getMinDist_m33A3ABE1017019AAD5FC61E2324AC18BA1E6A7DC (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_getMinDist", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_getMinDist)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_setDp(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHough_setDp_m2789749A52C8B5C4382C81C61995A5834A985855 (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_setDp", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_setDp)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_getDp(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_GeneralizedHough_getDp_m0612F1F76B8430A1D56D962E150DC0158115DC95 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_getDp", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_getDp)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_setMaxBufferSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHough_setMaxBufferSize_mE02E06B8C059D61E346B20F32E3757171B34CFE2 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_setMaxBufferSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_setMaxBufferSize)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_getMaxBufferSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_GeneralizedHough_getMaxBufferSize_m2367FC156CF2445E39C242DE9985751C45857CBB (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_getMaxBufferSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_getMaxBufferSize)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_createGeneralizedHoughBallard()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_createGeneralizedHoughBallard_m76B5403039C9E1054DEBC69A051F3EF92C07B322 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_createGeneralizedHoughBallard", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_createGeneralizedHoughBallard)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_Ptr_GeneralizedHoughBallard_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_Ptr_GeneralizedHoughBallard_get_mE450454F5CA515B2B973B4E0C7C50F0216A5B678 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Ptr_GeneralizedHoughBallard_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Ptr_GeneralizedHoughBallard_get)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_Ptr_GeneralizedHoughBallard_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Ptr_GeneralizedHoughBallard_delete_m1D931CC618CD3E96E8467D09E43AC560422B5BB9 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Ptr_GeneralizedHoughBallard_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Ptr_GeneralizedHoughBallard_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughBallard_setLevels(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughBallard_setLevels_m05091C9DC43F3470BDF3F79F64A43A889BA6685D (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughBallard_setLevels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughBallard_setLevels)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughBallard_getLevels(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_GeneralizedHoughBallard_getLevels_mA75A37A567D9103B8BEA7408707208FDD1D31691 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughBallard_getLevels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughBallard_getLevels)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughBallard_setVotesThreshold(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughBallard_setVotesThreshold_mAB10A3C8D25DD50D831DF1ECCBC0DBAA8E701F72 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughBallard_setVotesThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughBallard_setVotesThreshold)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughBallard_getVotesThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_GeneralizedHoughBallard_getVotesThreshold_m5555BD0DB3F0DC9B360093E664CDEE72F8757FB2 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughBallard_getVotesThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughBallard_getVotesThreshold)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_createGeneralizedHoughGuil()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_createGeneralizedHoughGuil_m8376F45E65E87F3CDDD682F4D0EE37F3DF1DAD90 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_createGeneralizedHoughGuil", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_createGeneralizedHoughGuil)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_Ptr_GeneralizedHoughGuil_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_Ptr_GeneralizedHoughGuil_get_mF4BA0869BAE4818E24DF0A3B373547D63A3E0695 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Ptr_GeneralizedHoughGuil_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Ptr_GeneralizedHoughGuil_get)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_Ptr_GeneralizedHoughGuil_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Ptr_GeneralizedHoughGuil_delete_mEF4CCA8C375BE60DB0BFCDE39863F987F1F97317 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Ptr_GeneralizedHoughGuil_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Ptr_GeneralizedHoughGuil_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setXi(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setXi_m60D01467E2BDC1B3549998D5944D880A91C9D529 (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setXi", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setXi)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getXi(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_GeneralizedHoughGuil_getXi_m894444F035E967EFB5451142A61F751B84BB3AFA (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getXi", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getXi)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setLevels(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setLevels_m8AC90C80616173B1DB17561B43F6CFFD475704E7 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setLevels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setLevels)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getLevels(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_GeneralizedHoughGuil_getLevels_mE75C12BD2D5FE194142D39FD475F557AFED7E3F2 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getLevels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getLevels)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setAngleEpsilon(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setAngleEpsilon_m81F070E1D6F178FA4F3FD806E79CF7B640CFAF6F (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setAngleEpsilon", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setAngleEpsilon)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getAngleEpsilon(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_GeneralizedHoughGuil_getAngleEpsilon_mB6E8664CC7991A1493986CD37217512264580939 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getAngleEpsilon", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getAngleEpsilon)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setMinAngle(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setMinAngle_m4691EFF35B3EB06AE9BB63B7C747631FD31DF7B9 (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setMinAngle", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setMinAngle)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getMinAngle(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_GeneralizedHoughGuil_getMinAngle_m37EA28F89C01C47230547C1944D866210EFB6772 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getMinAngle", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getMinAngle)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setMaxAngle(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setMaxAngle_mC7B5180D427E7B3B978E864F4C31183CD797DDED (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setMaxAngle", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setMaxAngle)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getMaxAngle(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_GeneralizedHoughGuil_getMaxAngle_m98F00DA3356A018D9FE660F9035286BDC9B120D2 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getMaxAngle", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getMaxAngle)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setAngleStep(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setAngleStep_m2513830E0C183449905906E91326C6115EBB4AFA (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setAngleStep", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setAngleStep)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getAngleStep(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_GeneralizedHoughGuil_getAngleStep_mDBE557D2657A264BD52F53DA5BF9367C54C5A5B8 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getAngleStep", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getAngleStep)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setAngleThresh(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setAngleThresh_mC79B2C895D88BB1AE45574624A2A0D5DBA24FA74 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setAngleThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setAngleThresh)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getAngleThresh(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_GeneralizedHoughGuil_getAngleThresh_mD897BDA7B4A9DC511E132493FCB5382E06216C57 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getAngleThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getAngleThresh)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setMinScale(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setMinScale_m2F9AC35ADF94EF29E83F46236D54F5552DA3C1DB (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setMinScale", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setMinScale)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getMinScale(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_GeneralizedHoughGuil_getMinScale_mE868E3D5926444AC0A74CDE20E5DF52E5CDF382D (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getMinScale", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getMinScale)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setMaxScale(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setMaxScale_mEF6F72A826DF78751024296D702F8D8D75527DBB (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setMaxScale", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setMaxScale)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getMaxScale(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_GeneralizedHoughGuil_getMaxScale_m01D505DA32738166C6815F12E8FE3E232D6CA6C4 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getMaxScale", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getMaxScale)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setScaleStep(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setScaleStep_m1849BA850B3FA4EA66AFA35048F416DC6F9AA288 (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setScaleStep", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setScaleStep)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getScaleStep(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_GeneralizedHoughGuil_getScaleStep_m741F38DD650C3B00E0DE6091BF3A73C1E4335AFA (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getScaleStep", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getScaleStep)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setScaleThresh(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setScaleThresh_m283EB65D967F382B89B45011470EB4FF54E6711D (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setScaleThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setScaleThresh)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getScaleThresh(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_GeneralizedHoughGuil_getScaleThresh_m454CEBD531AC7D262FEC447165D5C85D101CD7C1 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getScaleThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getScaleThresh)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setPosThresh(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setPosThresh_m6E5ED9C61E473681107F55CF83BE3D6A396F9E14 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setPosThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setPosThresh)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getPosThresh(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_GeneralizedHoughGuil_getPosThresh_m7DBB4CDBE7F7CB99D670795FB5062BE2F048F996 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getPosThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getPosThresh)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_LineIterator_new(System.IntPtr,OpenCvSharp.Point,OpenCvSharp.Point,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_LineIterator_new_mAC3C08CBFCC5ABA82A4E7C5D5544A5FC80F164BA (intptr_t ___img0, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___pt11, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___pt22, int32_t ___connectivity3, int32_t ___leftToRight4, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_new)(___img0, ___pt11, ___pt22, ___connectivity3, ___leftToRight4);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___img0, ___pt11, ___pt22, ___connectivity3, ___leftToRight4);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_delete_mCFF28705BFED35F0DF1770CD06128E8E05CF08E7 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_LineIterator_operatorEntity(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_LineIterator_operatorEntity_m38D9F49A23282D48986DB88888F5AAEAA709DFA0 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_operatorEntity", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_operatorEntity)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_operatorPP(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_operatorPP_m1C9C69DB1039CDDC32FB7032BBC19E442821C47A (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_operatorPP", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_operatorPP)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// OpenCvSharp.Point OpenCvSharp.NativeMethods::imgproc_LineIterator_pos(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC NativeMethods_imgproc_LineIterator_pos_mEC9EC61B0B8397A64EDD757A1DFA56B13F1C6A45 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_pos", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_pos)(___obj0);
	#else
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_LineIterator_ptr_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_LineIterator_ptr_get_m4588CD6BD334434BA0B872A84EDC03F2849EBE85 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_ptr_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_ptr_get)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_ptr_set(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_ptr_set_mE3D14207825AEC4F13D76EAF112DBAD3CED59714 (intptr_t ___obj0, intptr_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_ptr_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_ptr_set)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_LineIterator_ptr0_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_LineIterator_ptr0_get_m6A927D06D9759290150BD7B6D9C3EF44F4F988D9 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_ptr0_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_ptr0_get)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_LineIterator_step_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_LineIterator_step_get_m3353E24A8E3AB68BD05C55737A7F6D0D5E142C43 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_step_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_step_get)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_step_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_step_set_m70349AC042926788AADE047FFA01E8C46CC0CF7A (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_step_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_step_set)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_LineIterator_elemSize_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_LineIterator_elemSize_get_m936C0DF5A82EB1C0937D1FEF8E7B49794B60A11E (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_elemSize_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_elemSize_get)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_elemSize_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_elemSize_set_m1B0A0E4F84ACD8ECF04BA1C372100A082A9F4964 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_elemSize_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_elemSize_set)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_LineIterator_err_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_LineIterator_err_get_mAD306F40F7EB0C2BC0E00B7DFF9B77C19E13F77D (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_err_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_err_get)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_err_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_err_set_mDE088D3676FDF3D072A7DC31EFFA5B15BCF494F5 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_err_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_err_set)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_LineIterator_count_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_LineIterator_count_get_mBE38C072A64FA843885BBFEC06744444745B4B5C (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_count_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_count_get)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_count_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_count_set_m883FB50DE86905C5814D76DC2B48B13BCA13D7B4 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_count_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_count_set)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_LineIterator_minusDelta_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_LineIterator_minusDelta_get_mF1CB7095B1771C44D2B56349082D0C9C840B0EC0 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_minusDelta_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_minusDelta_get)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_minusDelta_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_minusDelta_set_m9247318FAC487D4D14C8DE8C6B05097556EBF285 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_minusDelta_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_minusDelta_set)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_LineIterator_plusDelta_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_LineIterator_plusDelta_get_m8F22E99E2ADFC51B56A9D03FB9F6258715A312CF (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_plusDelta_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_plusDelta_get)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_plusDelta_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_plusDelta_set_m5364ED37A77D1CC171178D64B31B49A2DA0A5437 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_plusDelta_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_plusDelta_set)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_LineIterator_minusStep_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_LineIterator_minusStep_get_m344B129CF6AC3BEA195D329737518F033AD7DD62 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_minusStep_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_minusStep_get)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_minusStep_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_minusStep_set_m5387972C19CB73AF538DC6071DDFEF87A6C9043C (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_minusStep_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_minusStep_set)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_LineIterator_plusStep_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_LineIterator_plusStep_get_m3C268007033700C972FB513350899C02EACD36FC (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_plusStep_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_plusStep_get)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_plusStep_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_plusStep_set_m346C306883F4B16AA07E9ED91B4E22A728D565E0 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_plusStep_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_plusStep_set)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineSegmentDetector_detect_OutputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineSegmentDetector_detect_OutputArray_m2AE67863BDA07921E30D91156D23198941F01E66 (intptr_t ___obj0, intptr_t ___image1, intptr_t ___lines2, intptr_t ___width3, intptr_t ___prec4, intptr_t ___nfa5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineSegmentDetector_detect_OutputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineSegmentDetector_detect_OutputArray)(___obj0, ___image1, ___lines2, ___width3, ___prec4, ___nfa5);
	#else
	il2cppPInvokeFunc(___obj0, ___image1, ___lines2, ___width3, ___prec4, ___nfa5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineSegmentDetector_detect_vector(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineSegmentDetector_detect_vector_m78BC14945B176F0C27EBD3FF590966D928DDED1A (intptr_t ___obj0, intptr_t ___image1, intptr_t ___lines2, intptr_t ___width3, intptr_t ___prec4, intptr_t ___nfa5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineSegmentDetector_detect_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineSegmentDetector_detect_vector)(___obj0, ___image1, ___lines2, ___width3, ___prec4, ___nfa5);
	#else
	il2cppPInvokeFunc(___obj0, ___image1, ___lines2, ___width3, ___prec4, ___nfa5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineSegmentDetector_drawSegments(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineSegmentDetector_drawSegments_mC108DE1165C4FE906528808AB09D2BE7B05F864B (intptr_t ___obj0, intptr_t ___image1, intptr_t ___lines2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineSegmentDetector_drawSegments", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineSegmentDetector_drawSegments)(___obj0, ___image1, ___lines2);
	#else
	il2cppPInvokeFunc(___obj0, ___image1, ___lines2);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_LineSegmentDetector_compareSegments(System.IntPtr,OpenCvSharp.Size,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_LineSegmentDetector_compareSegments_m349C03456F78C13A7CC391825AFEE18AA3485CE4 (intptr_t ___obj0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___size1, intptr_t ___lines12, intptr_t ___lines23, intptr_t ___image4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineSegmentDetector_compareSegments", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineSegmentDetector_compareSegments)(___obj0, ___size1, ___lines12, ___lines23, ___image4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___size1, ___lines12, ___lines23, ___image4);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_createLineSegmentDetector(System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_createLineSegmentDetector_m3E0A391DA3E051EB9B4F80B1C413AA5E2B89E915 (int32_t ___refine0, double ___scale1, double ___sigma_scale2, double ___quant3, double ___ang_th4, double ___log_eps5, double ___density_th6, int32_t ___n_bins7, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, double, double, double, double, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_createLineSegmentDetector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_createLineSegmentDetector)(___refine0, ___scale1, ___sigma_scale2, ___quant3, ___ang_th4, ___log_eps5, ___density_th6, ___n_bins7);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___refine0, ___scale1, ___sigma_scale2, ___quant3, ___ang_th4, ___log_eps5, ___density_th6, ___n_bins7);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_Ptr_LineSegmentDetector_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Ptr_LineSegmentDetector_delete_mF1374AE3D15CBDD6658DAFDC6023A1F18ADD56E1 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Ptr_LineSegmentDetector_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Ptr_LineSegmentDetector_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_Ptr_LineSegmentDetector_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_Ptr_LineSegmentDetector_get_mD677F18F67BE37F6AAB049B84675DA49C31895D1 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Ptr_LineSegmentDetector_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Ptr_LineSegmentDetector_get)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_Subdiv2D_new()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_Subdiv2D_new_m86B4E93CB77C6E682B7529D4D15B847CD4001EB6 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_Subdiv2D_new(OpenCvSharp.Rect)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_Subdiv2D_new_m935841F9176B31B87CED414A4ECDC246CFA88F95 (Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___rect0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_new2)(___rect0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___rect0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_Subdiv2D_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Subdiv2D_delete_m0B6E32F19E97465283D68590B7E8A38F4E6A65C5 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_Subdiv2D_initDelaunay(System.IntPtr,OpenCvSharp.Rect)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Subdiv2D_initDelaunay_m15D806A303985527DAAA89384A11B436C53B5ACC (intptr_t ___obj0, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___rect1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_initDelaunay", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_initDelaunay)(___obj0, ___rect1);
	#else
	il2cppPInvokeFunc(___obj0, ___rect1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_Subdiv2D_insert(System.IntPtr,OpenCvSharp.Point2f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_Subdiv2D_insert_m9140C1C3623451C65FA6E617CB4E6B305A48EDA7 (intptr_t ___obj0, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___pt1, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_insert1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_insert1)(___obj0, ___pt1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___pt1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_Subdiv2D_insert(System.IntPtr,OpenCvSharp.Point2f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Subdiv2D_insert_mC4EA21FD0AE4BA02E17FBA7EB57A753E8DDFE85E (intptr_t ___obj0, Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___ptArray1, int32_t ___length2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_insert2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___ptArray1' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____ptArray1_marshaled = NULL;
	if (___ptArray1 != NULL)
	{
		____ptArray1_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___ptArray1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_insert2)(___obj0, ____ptArray1_marshaled, ___length2);
	#else
	il2cppPInvokeFunc(___obj0, ____ptArray1_marshaled, ___length2);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_Subdiv2D_locate(System.IntPtr,OpenCvSharp.Point2f,System.Int32&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_Subdiv2D_locate_m26C52826676D7F85C4ACC50A5CA06A7C6C6B4F02 (intptr_t ___obj0, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___pt1, int32_t* ___edge2, int32_t* ___vertex3, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, int32_t*, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8) + sizeof(int32_t*) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_locate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_locate)(___obj0, ___pt1, ___edge2, ___vertex3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___pt1, ___edge2, ___vertex3);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_Subdiv2D_findNearest(System.IntPtr,OpenCvSharp.Point2f,OpenCvSharp.Point2f&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_Subdiv2D_findNearest_m05B2BDCEA083C193FD05168D58546D91511EE260 (intptr_t ___obj0, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___pt1, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ___nearestPt2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_findNearest", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_findNearest)(___obj0, ___pt1, ___nearestPt2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___pt1, ___nearestPt2);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_Subdiv2D_getEdgeList(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Subdiv2D_getEdgeList_m93BE8C35C6362A52715789B28414A7B59779CEE6 (intptr_t ___obj0, intptr_t* ___edgeList1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_getEdgeList", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_getEdgeList)(___obj0, ___edgeList1);
	#else
	il2cppPInvokeFunc(___obj0, ___edgeList1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_Subdiv2D_getTriangleList(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Subdiv2D_getTriangleList_m9971FDCB89BBC8778F331F05D7127015748F12D5 (intptr_t ___obj0, intptr_t* ___triangleList1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_getTriangleList", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_getTriangleList)(___obj0, ___triangleList1);
	#else
	il2cppPInvokeFunc(___obj0, ___triangleList1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_Subdiv2D_getVoronoiFacetList(System.IntPtr,System.Int32[],System.Int32,System.IntPtr&,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Subdiv2D_getVoronoiFacetList_m04B7F6E1E36EFE1C836FF8315E03408510E28C42 (intptr_t ___obj0, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___idx1, int32_t ___idxCount2, intptr_t* ___facetList3, intptr_t* ___facetCenters4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t*, int32_t, intptr_t*, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_getVoronoiFacetList", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___idx1' to native representation
	int32_t* ____idx1_marshaled = NULL;
	if (___idx1 != NULL)
	{
		____idx1_marshaled = reinterpret_cast<int32_t*>((___idx1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_getVoronoiFacetList)(___obj0, ____idx1_marshaled, ___idxCount2, ___facetList3, ___facetCenters4);
	#else
	il2cppPInvokeFunc(___obj0, ____idx1_marshaled, ___idxCount2, ___facetList3, ___facetCenters4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_Subdiv2D_getVoronoiFacetList(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr&,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Subdiv2D_getVoronoiFacetList_m4882F4ECFB7662FDB0C4DE597A94D7CA06A0E1DB (intptr_t ___obj0, intptr_t ___idx1, int32_t ___idxCount2, intptr_t* ___facetList3, intptr_t* ___facetCenters4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t*, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_getVoronoiFacetList", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_getVoronoiFacetList)(___obj0, ___idx1, ___idxCount2, ___facetList3, ___facetCenters4);
	#else
	il2cppPInvokeFunc(___obj0, ___idx1, ___idxCount2, ___facetList3, ___facetCenters4);
	#endif

}
// OpenCvSharp.Point2f OpenCvSharp.NativeMethods::imgproc_Subdiv2D_getVertex(System.IntPtr,System.Int32,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 NativeMethods_imgproc_Subdiv2D_getVertex_m700EDC28A8FD1165A992DBA1DD3890C0AE77F73A (intptr_t ___obj0, int32_t ___vertex1, int32_t* ___firstEdge2, const RuntimeMethod* method) 
{
	typedef Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_getVertex", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_getVertex)(___obj0, ___vertex1, ___firstEdge2);
	#else
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 returnValue = il2cppPInvokeFunc(___obj0, ___vertex1, ___firstEdge2);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_Subdiv2D_getEdge(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_Subdiv2D_getEdge_mB76FAA64322D22BC29777506CD1CCD294E0B7E9D (intptr_t ___obj0, int32_t ___edge1, int32_t ___nextEdgeType2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_getEdge", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_getEdge)(___obj0, ___edge1, ___nextEdgeType2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___edge1, ___nextEdgeType2);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_Subdiv2D_nextEdge(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_Subdiv2D_nextEdge_m23086702CB0E3B088A6676712729DB120C305903 (intptr_t ___obj0, int32_t ___edge1, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_nextEdge", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_nextEdge)(___obj0, ___edge1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___edge1);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_Subdiv2D_rotateEdge(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_Subdiv2D_rotateEdge_mDB79DD58D6FE230FE37A68AB57CA4FBA006B1DC6 (intptr_t ___obj0, int32_t ___edge1, int32_t ___rotate2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_rotateEdge", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_rotateEdge)(___obj0, ___edge1, ___rotate2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___edge1, ___rotate2);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_Subdiv2D_symEdge(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_Subdiv2D_symEdge_mB238CECD99C46A46AE6555EAB51E4974980A7504 (intptr_t ___obj0, int32_t ___edge1, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_symEdge", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_symEdge)(___obj0, ___edge1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___edge1);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_Subdiv2D_edgeOrg(System.IntPtr,System.Int32,OpenCvSharp.Point2f&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_Subdiv2D_edgeOrg_m75FE762BCBEC131653B1399F19278F782979883E (intptr_t ___obj0, int32_t ___edge1, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ___orgpt2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_edgeOrg", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_edgeOrg)(___obj0, ___edge1, ___orgpt2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___edge1, ___orgpt2);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_Subdiv2D_edgeDst(System.IntPtr,System.Int32,OpenCvSharp.Point2f&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_Subdiv2D_edgeDst_mBEA4338F2E5AA1E69F7CDDF4C3F4A89B920072FB (intptr_t ___obj0, int32_t ___edge1, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ___dstpt2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_edgeDst", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_edgeDst)(___obj0, ___edge1, ___dstpt2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___edge1, ___dstpt2);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setTrainMethod(System.IntPtr,System.Int32,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setTrainMethod_mCFFC26D80D67DCFB348D17106C80C477C4F4FD11 (intptr_t ___obj0, int32_t ___method1, double ___param12, double ___param23, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setTrainMethod", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setTrainMethod)(___obj0, ___method1, ___param12, ___param23);
	#else
	il2cppPInvokeFunc(___obj0, ___method1, ___param12, ___param23);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_ANN_MLP_getTrainMethod(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_ANN_MLP_getTrainMethod_mAB1F0AA68DE4C94562E3E4405B41338EEE4776D9 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getTrainMethod", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getTrainMethod)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setActivationFunction(System.IntPtr,System.Int32,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setActivationFunction_mF7BBA3BC9AB78F1F9CA1A35889FBBE7FC556910E (intptr_t ___obj0, int32_t ___type1, double ___param12, double ___param23, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setActivationFunction", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setActivationFunction)(___obj0, ___type1, ___param12, ___param23);
	#else
	il2cppPInvokeFunc(___obj0, ___type1, ___param12, ___param23);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setLayerSizes(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setLayerSizes_mE881356151C02A09DA1233D3D0E837B9F0F3028C (intptr_t ___obj0, intptr_t ___layerSizes1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setLayerSizes", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setLayerSizes)(___obj0, ___layerSizes1);
	#else
	il2cppPInvokeFunc(___obj0, ___layerSizes1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_ANN_MLP_getLayerSizes(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_ANN_MLP_getLayerSizes_mC3E9D39CB7BB911A6F79B29DA8615D8219620ACF (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getLayerSizes", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getLayerSizes)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// OpenCvSharp.TermCriteria OpenCvSharp.NativeMethods::ml_ANN_MLP_getTermCriteria(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 NativeMethods_ml_ANN_MLP_getTermCriteria_m2D86110D4B3130107ED0A16656F1DA9FD2BF34B0 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getTermCriteria", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getTermCriteria)(___obj0);
	#else
	TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setTermCriteria(System.IntPtr,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setTermCriteria_m2D438E22C8D293C3C3AC0A21837E239D7EDB87A9 (intptr_t ___obj0, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setTermCriteria", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setTermCriteria)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_ANN_MLP_getBackpropWeightScale(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_ANN_MLP_getBackpropWeightScale_m77CDED64A04B9B45C7E0BB47BF41D739475D4804 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getBackpropWeightScale", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getBackpropWeightScale)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setBackpropWeightScale(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setBackpropWeightScale_m52D74C6B51D7DE61ED68CC92DCCBFD99E65E642C (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setBackpropWeightScale", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setBackpropWeightScale)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_ANN_MLP_getBackpropMomentumScale(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_ANN_MLP_getBackpropMomentumScale_m644010A34779E001B4D103E23239BC5BB25FF787 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getBackpropMomentumScale", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getBackpropMomentumScale)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setBackpropMomentumScale(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setBackpropMomentumScale_mAE2A9E55D782A8A04D78107666BC55D02608C940 (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setBackpropMomentumScale", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setBackpropMomentumScale)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_ANN_MLP_getRpropDW0(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_ANN_MLP_getRpropDW0_m2852F222A4AFF3AA99CA34CB26F5608988745D4C (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getRpropDW0", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getRpropDW0)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setRpropDW0(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setRpropDW0_mBC030DEA1AF3F50EC97FDE88048ED469CF2D0745 (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setRpropDW0", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setRpropDW0)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_ANN_MLP_getRpropDWPlus(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_ANN_MLP_getRpropDWPlus_m387CD9648BE815FFC4A600208A86044858B4783A (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getRpropDWPlus", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getRpropDWPlus)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setRpropDWPlus(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setRpropDWPlus_mE770263F25CA462C90AAA91A2CA02188EFD7EF31 (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setRpropDWPlus", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setRpropDWPlus)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_ANN_MLP_getRpropDWMinus(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_ANN_MLP_getRpropDWMinus_mC8771BF335BCB14722A61251583D2C1AD9BBDF1E (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getRpropDWMinus", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getRpropDWMinus)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setRpropDWMinus(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setRpropDWMinus_m200E4262D8954F30CB9E02B057C2B54910CEEF18 (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setRpropDWMinus", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setRpropDWMinus)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_ANN_MLP_getRpropDWMin(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_ANN_MLP_getRpropDWMin_m07210B0602195D22541B7ADA0D99597DAFFCB3DA (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getRpropDWMin", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getRpropDWMin)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setRpropDWMin(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setRpropDWMin_m71D754C7B8AFF43C1CB9EEC2C37A69A6223F7AF7 (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setRpropDWMin", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setRpropDWMin)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_ANN_MLP_getRpropDWMax(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_ANN_MLP_getRpropDWMax_mE93B13405CA8EE7FEDF121B15B2D2908725FDBB0 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getRpropDWMax", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getRpropDWMax)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setRpropDWMax(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setRpropDWMax_mA70B7050A9564FDDB70C76D77B6C5B4AC5981D13 (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setRpropDWMax", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setRpropDWMax)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_ANN_MLP_getWeights(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_ANN_MLP_getWeights_mFE912044B1D04E9951DF71D8DC0FC0116906E448 (intptr_t ___obj0, int32_t ___layerIdx1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getWeights", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getWeights)(___obj0, ___layerIdx1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ___layerIdx1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::ml_ANN_MLP_create()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_ANN_MLP_create_m9199E10ED95FB6A677B96F7C5E1775E9A008FBCE (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_create)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_Ptr_ANN_MLP_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_Ptr_ANN_MLP_delete_m707970DF0E6225AA19A691CBEA2AD2BAEE05E364 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_ANN_MLP_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_Ptr_ANN_MLP_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_Ptr_ANN_MLP_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_Ptr_ANN_MLP_get_m808AA03C68F4770AF1D2D72BB39A70B0D074F1F2 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_ANN_MLP_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_Ptr_ANN_MLP_get)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::ml_Boost_getBoostType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_Boost_getBoostType_m307D83105B3C1BDD58BFFF7422AB19E156AE862D (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Boost_getBoostType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_Boost_getBoostType)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_Boost_setBoostType(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_Boost_setBoostType_m35E32A26662D9DEB9488CE904E10D8883F97D26C (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Boost_setBoostType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_Boost_setBoostType)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_Boost_getWeakCount(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_Boost_getWeakCount_mF3BFD12A7527756D86F7385973F35CFB9D43F6EF (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Boost_getWeakCount", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_Boost_getWeakCount)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_Boost_setWeakCount(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_Boost_setWeakCount_mB2253FE9480536FBBAD07F3896310EFC2A2FF236 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Boost_setWeakCount", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_Boost_setWeakCount)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_Boost_getWeightTrimRate(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_Boost_getWeightTrimRate_mBA064D6A72800C9E1F9A4C5FE194A26C76004589 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Boost_getWeightTrimRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_Boost_getWeightTrimRate)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_Boost_setWeightTrimRate(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_Boost_setWeightTrimRate_m7E4B8CBAAAF9D1E24DBE4D6577A06728CB3572BD (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Boost_setWeightTrimRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_Boost_setWeightTrimRate)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_Boost_create()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_Boost_create_m1E1D46B1CEDA19AD2D5D0D756BB20501439D4009 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Boost_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_Boost_create)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_Ptr_Boost_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_Ptr_Boost_delete_mBF4EF35988918DBD901E958C392F39D4392DC885 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_Boost_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_Ptr_Boost_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_Ptr_Boost_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_Ptr_Boost_get_m45478320BEA9138F2457F6FC3244C095B4EA972D (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_Boost_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_Ptr_Boost_get)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::ml_EM_getClustersNumber(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_EM_getClustersNumber_m28756DFEBFF812BDB873CBD2544DEF4EBCF39FD7 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_getClustersNumber", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_EM_getClustersNumber)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_EM_setClustersNumber(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_EM_setClustersNumber_m550AD70F2BEC9E339DA4B933A7A6C9BA735F08F1 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_setClustersNumber", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_EM_setClustersNumber)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_EM_getCovarianceMatrixType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_EM_getCovarianceMatrixType_m92D3E498179DB38FDA0DCDA093E4598185FB1880 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_getCovarianceMatrixType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_EM_getCovarianceMatrixType)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_EM_setCovarianceMatrixType(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_EM_setCovarianceMatrixType_m44CEE29B4CC9257AF7620E3D2DBB7E687697301E (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_setCovarianceMatrixType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_EM_setCovarianceMatrixType)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// OpenCvSharp.TermCriteria OpenCvSharp.NativeMethods::ml_EM_getTermCriteria(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 NativeMethods_ml_EM_getTermCriteria_mF65B81A5336D519A5633799778BC0481E2576D00 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_getTermCriteria", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 returnValue = reinterpret_cast<PInvokeFunc>(ml_EM_getTermCriteria)(___obj0);
	#else
	TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_EM_setTermCriteria(System.IntPtr,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_EM_setTermCriteria_mF3066D63B4DE872D99DF16DB9F7A389CAEC513E6 (intptr_t ___obj0, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_setTermCriteria", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_EM_setTermCriteria)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_EM_getWeights(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_EM_getWeights_m2EF05B052F9C64149CB0A53FCFB757BEEABB5AA8 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_getWeights", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_EM_getWeights)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::ml_EM_getMeans(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_EM_getMeans_mBAD6B28318E6D3AC0B2FFCD52E7700CC80B81DE2 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_getMeans", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_EM_getMeans)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_EM_getCovs(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_EM_getCovs_m798185D0F6D1B73677C6EBAE9B3196DDCEF63D7E (intptr_t ___obj0, intptr_t ___covs1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_getCovs", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_EM_getCovs)(___obj0, ___covs1);
	#else
	il2cppPInvokeFunc(___obj0, ___covs1);
	#endif

}
// OpenCvSharp.Vec2d OpenCvSharp.NativeMethods::ml_EM_predict2(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23 NativeMethods_ml_EM_predict2_m4C9CE362B669BDE012A537E74DD63F42EC8B508E (intptr_t ___model0, intptr_t ___sample1, intptr_t ___probs2, const RuntimeMethod* method) 
{
	typedef Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23 (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_predict2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23 returnValue = reinterpret_cast<PInvokeFunc>(ml_EM_predict2)(___model0, ___sample1, ___probs2);
	#else
	Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23 returnValue = il2cppPInvokeFunc(___model0, ___sample1, ___probs2);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::ml_EM_trainEM(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_EM_trainEM_m81AEAAF2959F5ED2D0933CFED95677C8AFD51A06 (intptr_t ___obj0, intptr_t ___samples1, intptr_t ___logLikelihoods2, intptr_t ___labels3, intptr_t ___probs4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_trainEM", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_EM_trainEM)(___obj0, ___samples1, ___logLikelihoods2, ___labels3, ___probs4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___samples1, ___logLikelihoods2, ___labels3, ___probs4);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::ml_EM_trainE(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_EM_trainE_m7887A04A2A35159522816910EE951159912D8C67 (intptr_t ___model0, intptr_t ___samples1, intptr_t ___means02, intptr_t ___covs03, intptr_t ___weights04, intptr_t ___logLikelihoods5, intptr_t ___labels6, intptr_t ___probs7, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_trainE", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_EM_trainE)(___model0, ___samples1, ___means02, ___covs03, ___weights04, ___logLikelihoods5, ___labels6, ___probs7);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___model0, ___samples1, ___means02, ___covs03, ___weights04, ___logLikelihoods5, ___labels6, ___probs7);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::ml_EM_trainM(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_EM_trainM_m8D22DB1AFFDA531C503618A5EBCD34AE545FA1DB (intptr_t ___model0, intptr_t ___samples1, intptr_t ___probs02, intptr_t ___logLikelihoods3, intptr_t ___labels4, intptr_t ___probs5, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_trainM", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_EM_trainM)(___model0, ___samples1, ___probs02, ___logLikelihoods3, ___labels4, ___probs5);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___model0, ___samples1, ___probs02, ___logLikelihoods3, ___labels4, ___probs5);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::ml_EM_create()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_EM_create_mB2162BC4216D53823839E18E64F4D412F6643499 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_EM_create)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::ml_Ptr_EM_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_Ptr_EM_get_m123FF0D5357F5A37F44CFAACF1CABF191C1C122F (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_EM_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_Ptr_EM_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_Ptr_EM_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_Ptr_EM_delete_m35CC2A525434FAF73E724010019DFA27C4D8F05C (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_EM_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_Ptr_EM_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_KNearest_getDefaultK(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_KNearest_getDefaultK_m6733F08D106E33A20A97BB8267C939AE27604658 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_KNearest_getDefaultK", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_KNearest_getDefaultK)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_KNearest_setDefaultK(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_KNearest_setDefaultK_m7D65AA27A9FE6492EFED92B0BF0B46C13B9D3009 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_KNearest_setDefaultK", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_KNearest_setDefaultK)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_KNearest_getIsClassifier(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_KNearest_getIsClassifier_m431EA6297CFB0EE218354DBB542D5276095EAF48 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_KNearest_getIsClassifier", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_KNearest_getIsClassifier)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_KNearest_setIsClassifier(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_KNearest_setIsClassifier_m9549C96EC870A5E06EEA116AF832BAB660B1E49E (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_KNearest_setIsClassifier", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_KNearest_setIsClassifier)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_KNearest_getEmax(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_KNearest_getEmax_mE7EAF9584EE3604B40DAA7852263E4A44B94BA1B (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_KNearest_getEmax", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_KNearest_getEmax)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_KNearest_setEmax(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_KNearest_setEmax_m591F7E225DE2A960261365986F2E6A083AA929BE (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_KNearest_setEmax", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_KNearest_setEmax)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_KNearest_getAlgorithmType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_KNearest_getAlgorithmType_mCEF098100B20163FE160FB5B8107015F0EC74DCB (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_KNearest_getAlgorithmType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_KNearest_getAlgorithmType)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_KNearest_setAlgorithmType(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_KNearest_setAlgorithmType_m3AB92D492EB225C175A5F80D3B8A9F88F73FA4A0 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_KNearest_setAlgorithmType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_KNearest_setAlgorithmType)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::ml_KNearest_findNearest(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_ml_KNearest_findNearest_m05F54FDB5F2C52B69E1C16FCF8FC82C5E1B89AEB (intptr_t ___obj0, intptr_t ___samples1, int32_t ___k2, intptr_t ___results3, intptr_t ___neighborResponses4, intptr_t ___dist5, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_KNearest_findNearest", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(ml_KNearest_findNearest)(___obj0, ___samples1, ___k2, ___results3, ___neighborResponses4, ___dist5);
	#else
	float returnValue = il2cppPInvokeFunc(___obj0, ___samples1, ___k2, ___results3, ___neighborResponses4, ___dist5);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::ml_KNearest_create()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_KNearest_create_m62BC125F1C2BB4B111329A1110B506CCE9E9EEF2 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_KNearest_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_KNearest_create)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_Ptr_KNearest_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_Ptr_KNearest_delete_m6FB11758925D3F5AF5934C8662102453A94850D5 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_KNearest_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_Ptr_KNearest_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_Ptr_KNearest_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_Ptr_KNearest_get_m04F109A796F8AC524E97CBC50BC93100B4987F58 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_KNearest_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_Ptr_KNearest_get)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::ml_LogisticRegression_getLearningRate(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_LogisticRegression_getLearningRate_m32DFC6998228528B217BB1C96ABCDAD6FEF99B2D (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_getLearningRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_getLearningRate)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_LogisticRegression_setLearningRate(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_LogisticRegression_setLearningRate_m2029CF2766D9CD5EC658652563D47E75459C2749 (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_setLearningRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_setLearningRate)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_LogisticRegression_getIterations(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_LogisticRegression_getIterations_m5BF8F3162A8CFEA491B8E33762A8C4B7F2F4B484 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_getIterations", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_getIterations)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_LogisticRegression_setIterations(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_LogisticRegression_setIterations_mB322E3CB9A7AFAB72C3E0BB706252ABCA0FF7CA3 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_setIterations", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_setIterations)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_LogisticRegression_getRegularization(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_LogisticRegression_getRegularization_m6D4190CC36205DAF297E82245B4C7C5503E0DAAB (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_getRegularization", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_getRegularization)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_LogisticRegression_setRegularization(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_LogisticRegression_setRegularization_m1130C560E6C9AC31C8FABD2B46F249C68CFCB837 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_setRegularization", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_setRegularization)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_LogisticRegression_getTrainMethod(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_LogisticRegression_getTrainMethod_mFE519B8F51EBCE9570F0E746F72B812B66E7DAC2 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_getTrainMethod", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_getTrainMethod)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_LogisticRegression_setTrainMethod(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_LogisticRegression_setTrainMethod_mB36AF36B89A9155392A6CD0F49F5A44CE9C3ABD5 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_setTrainMethod", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_setTrainMethod)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_LogisticRegression_getMiniBatchSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_LogisticRegression_getMiniBatchSize_m63689D53EEEF47745FAC779019619A495C9DDFFE (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_getMiniBatchSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_getMiniBatchSize)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_LogisticRegression_setMiniBatchSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_LogisticRegression_setMiniBatchSize_m9AD59B04C2B1B1C93B5850CEABD2A9514F425D8B (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_setMiniBatchSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_setMiniBatchSize)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// OpenCvSharp.TermCriteria OpenCvSharp.NativeMethods::ml_LogisticRegression_getTermCriteria(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 NativeMethods_ml_LogisticRegression_getTermCriteria_m12D999978C58FB6DFC7DA9464A279E0BD860210A (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_getTermCriteria", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 returnValue = reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_getTermCriteria)(___obj0);
	#else
	TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_LogisticRegression_setTermCriteria(System.IntPtr,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_LogisticRegression_setTermCriteria_mE0841E026D0E7E4EFCF148F2AE14F91BE8092D7F (intptr_t ___obj0, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_setTermCriteria", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_setTermCriteria)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::ml_LogisticRegression_predict(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_ml_LogisticRegression_predict_m25EC6843B005E034383D33C25F9F74802730C23B (intptr_t ___obj0, intptr_t ___samples1, intptr_t ___results2, int32_t ___flags3, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_predict", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_predict)(___obj0, ___samples1, ___results2, ___flags3);
	#else
	float returnValue = il2cppPInvokeFunc(___obj0, ___samples1, ___results2, ___flags3);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::ml_LogisticRegression_get_learnt_thetas(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_LogisticRegression_get_learnt_thetas_m8B5FB1F6E7A20CC591EBE71D7662BA0E13DA0CEA (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_get_learnt_thetas", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_get_learnt_thetas)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::ml_LogisticRegression_create()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_LogisticRegression_create_mDA535569EBFFBF9B395AF93BBB14DA469C85D44D (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_create)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_Ptr_LogisticRegression_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_Ptr_LogisticRegression_delete_m1C1D9E87894F724642EF7E9884812CF3D76619CF (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_LogisticRegression_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_Ptr_LogisticRegression_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_Ptr_LogisticRegression_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_Ptr_LogisticRegression_get_m8529341BFE2EBCACCE5DB02A3B98620D0764140B (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_LogisticRegression_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_Ptr_LogisticRegression_get)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Single OpenCvSharp.NativeMethods::ml_NormalBayesClassifier_predictProb(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_ml_NormalBayesClassifier_predictProb_m78288A36CA12E04D7A553523E529D4092312767A (intptr_t ___obj0, intptr_t ___inputs1, intptr_t ___samples2, intptr_t ___outputProbs3, int32_t ___flags4, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_NormalBayesClassifier_predictProb", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(ml_NormalBayesClassifier_predictProb)(___obj0, ___inputs1, ___samples2, ___outputProbs3, ___flags4);
	#else
	float returnValue = il2cppPInvokeFunc(___obj0, ___inputs1, ___samples2, ___outputProbs3, ___flags4);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::ml_NormalBayesClassifier_create()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_NormalBayesClassifier_create_mE90BDB2209EE9D5D07B19E129E1673F92159DCF6 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_NormalBayesClassifier_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_NormalBayesClassifier_create)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_Ptr_NormalBayesClassifier_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_Ptr_NormalBayesClassifier_delete_mCCB637964D716A9A51AEC5C0DE79B9F35D3D0D10 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_NormalBayesClassifier_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_Ptr_NormalBayesClassifier_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_Ptr_NormalBayesClassifier_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_Ptr_NormalBayesClassifier_get_mABE235FBF88103CD88D5E821D8F22F3FF582E102 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_NormalBayesClassifier_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_Ptr_NormalBayesClassifier_get)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_StatModel_clear(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_StatModel_clear_mE28A8542A9ABB06B54149604CC55AC2E2FAFE344 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_StatModel_clear", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_StatModel_clear)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_StatModel_getVarCount(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_StatModel_getVarCount_m76A2DBC2A4F52579931E5AA8C9F8DD3B82750318 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_StatModel_getVarCount", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_StatModel_getVarCount)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::ml_StatModel_empty(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_StatModel_empty_m576E058795CDB46A6A06D4BBD24FE851AA1524A0 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_StatModel_empty", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_StatModel_empty)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::ml_StatModel_isTrained(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_StatModel_isTrained_mB0E173FB63D8CFA445B94DF247AAE84CDD829410 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_StatModel_isTrained", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_StatModel_isTrained)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::ml_StatModel_isClassifier(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_StatModel_isClassifier_mA21ED19DA0019379A1E128A2D79CE0C86C74D447 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_StatModel_isClassifier", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_StatModel_isClassifier)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::ml_StatModel_train1(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_StatModel_train1_m56873FBD86A5C182E887420295C14AF679B10CD2 (intptr_t ___obj0, intptr_t ___trainData1, int32_t ___flags2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_StatModel_train1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_StatModel_train1)(___obj0, ___trainData1, ___flags2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___trainData1, ___flags2);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::ml_StatModel_train2(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_StatModel_train2_m5C0F8A4F808D831E1BE9A96074F4A4AAD9551664 (intptr_t ___obj0, intptr_t ___samples1, int32_t ___layout2, intptr_t ___responses3, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_StatModel_train2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_StatModel_train2)(___obj0, ___samples1, ___layout2, ___responses3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___samples1, ___layout2, ___responses3);
	#endif

	return returnValue;
}
// System.Single OpenCvSharp.NativeMethods::ml_StatModel_calcError(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_ml_StatModel_calcError_m1D43E1A3B620CF26A8B51B8E5D89BDEDB7A85A54 (intptr_t ___obj0, intptr_t ___data1, int32_t ___test2, intptr_t ___resp3, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_StatModel_calcError", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(ml_StatModel_calcError)(___obj0, ___data1, ___test2, ___resp3);
	#else
	float returnValue = il2cppPInvokeFunc(___obj0, ___data1, ___test2, ___resp3);
	#endif

	return returnValue;
}
// System.Single OpenCvSharp.NativeMethods::ml_StatModel_predict(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_ml_StatModel_predict_m7AB694645F7251CE79E1682DCA02A3CB5E7D8519 (intptr_t ___obj0, intptr_t ___samples1, intptr_t ___results2, int32_t ___flags3, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_StatModel_predict", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(ml_StatModel_predict)(___obj0, ___samples1, ___results2, ___flags3);
	#else
	float returnValue = il2cppPInvokeFunc(___obj0, ___samples1, ___results2, ___flags3);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_StatModel_save(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_StatModel_save_mDF2FF3417236CDFA5F8FB588C4C7F6AEB1E7D9A6 (intptr_t ___obj0, String_t* ___filename1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_StatModel_save", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___filename1' to native representation
	char* ____filename1_marshaled = NULL;
	____filename1_marshaled = il2cpp_codegen_marshal_string(___filename1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_StatModel_save)(___obj0, ____filename1_marshaled);
	#else
	il2cppPInvokeFunc(___obj0, ____filename1_marshaled);
	#endif

	// Marshaling cleanup of parameter '___filename1' native representation
	il2cpp_codegen_marshal_free(____filename1_marshaled);
	____filename1_marshaled = NULL;

}
// System.Int32 OpenCvSharp.NativeMethods::ml_SVM_getType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_SVM_getType_m3DADF2D087FD8743C627E3A5274AA8005E17B99B (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getType)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_SVM_setType(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_SVM_setType_m641B9FA6EE4A12553F0626FDDF32E50031D60DA7 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_setType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_SVM_setType)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_SVM_getGamma(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_SVM_getGamma_mC36CF5F65B6ED678B18D2EAB0A61283207C52466 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getGamma", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getGamma)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_SVM_setGamma(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_SVM_setGamma_mD7EF359AFE37C1402EAB6F8F458C0E3DDA38003A (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_setGamma", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_SVM_setGamma)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_SVM_getCoef0(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_SVM_getCoef0_m23779CEA1613A3FAB4B9956665F643795969DD4F (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getCoef0", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getCoef0)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_SVM_setCoef0(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_SVM_setCoef0_mB1F0B1C44614521C849B29132A9B0B8FE4034551 (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_setCoef0", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_SVM_setCoef0)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_SVM_getDegree(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_SVM_getDegree_mC58E2C58BEA48575005A1BC214E8C422B27B76EC (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getDegree", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getDegree)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_SVM_setDegree(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_SVM_setDegree_m56AD87F5AC9F220624886B2C511DDD3B998D01F2 (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_setDegree", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_SVM_setDegree)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_SVM_getC(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_SVM_getC_mBEA800604B0BC51AA696810A228169C65485F44E (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getC", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getC)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_SVM_setC(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_SVM_setC_m3927743AD1EB98170E5DD4E66263C9242E486874 (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_setC", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_SVM_setC)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_SVM_getP(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_SVM_getP_mAB757035A25F324F0AEA641374037CD385FEA210 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getP", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getP)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_SVM_setP(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_SVM_setP_m36DCD218CA5E4B95CA0C2FE67DCA8C4AF483C682 (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_setP", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_SVM_setP)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_SVM_getNu(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_SVM_getNu_m5BBAF641C3E1022820748F42595061F1841B3D0D (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getNu", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getNu)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_SVM_setNu(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_SVM_setNu_m3ABEFAE8628315389D1C6F5F1AF994F79500B76D (intptr_t ___obj0, double ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_setNu", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_SVM_setNu)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_SVM_getClassWeights(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_SVM_getClassWeights_mD65A8E3E6B71D9AC3763081AC15616FD3D649A6A (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getClassWeights", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getClassWeights)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_SVM_setClassWeights(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_SVM_setClassWeights_m590BE369786C2A49E2AD5E421C50BEF4EBC5AD73 (intptr_t ___obj0, intptr_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_setClassWeights", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_SVM_setClassWeights)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// OpenCvSharp.TermCriteria OpenCvSharp.NativeMethods::ml_SVM_getTermCriteria(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 NativeMethods_ml_SVM_getTermCriteria_m20EE76F2ABCD6A8003FDD6A6699AFE6C8A1B4E38 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getTermCriteria", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getTermCriteria)(___obj0);
	#else
	TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_SVM_setTermCriteria(System.IntPtr,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_SVM_setTermCriteria_m2F00B3979B03AD7F71D41ADDD3E05DBB200A5455 (intptr_t ___obj0, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_setTermCriteria", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_SVM_setTermCriteria)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_SVM_getKernelType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_SVM_getKernelType_m69730CF4AA70B3C91817C3443F816B76E3B71F57 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getKernelType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getKernelType)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_SVM_setKernel(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_SVM_setKernel_m2B447456DC793B3AC5876FFA9C095FF5849F87F8 (intptr_t ___obj0, int32_t ___kernelType1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_setKernel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_SVM_setKernel)(___obj0, ___kernelType1);
	#else
	il2cppPInvokeFunc(___obj0, ___kernelType1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_SVM_getSupportVectors(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_SVM_getSupportVectors_m0AE4B89E641B0C335F9D0D0348C5A311B3588D7E (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getSupportVectors", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getSupportVectors)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::ml_SVM_getDecisionFunction(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_SVM_getDecisionFunction_m793B33584AE6FF169891032DA7E26C6E2F11A46D (intptr_t ___obj0, int32_t ___i1, intptr_t ___alpha2, intptr_t ___svidx3, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, int32_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getDecisionFunction", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getDecisionFunction)(___obj0, ___i1, ___alpha2, ___svidx3);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0, ___i1, ___alpha2, ___svidx3);
	#endif

	return returnValue;
}
// OpenCvSharp.ML.ParamGrid OpenCvSharp.NativeMethods::ml_SVM_getDefaultGrid(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ParamGrid_t0F18158C237FDE12E81979168156D10ABD2E0A6D NativeMethods_ml_SVM_getDefaultGrid_m6C301DA8D3AE76366F7A4420498DA5C91700452E (int32_t ___paramId0, const RuntimeMethod* method) 
{
	typedef ParamGrid_t0F18158C237FDE12E81979168156D10ABD2E0A6D (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getDefaultGrid", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	ParamGrid_t0F18158C237FDE12E81979168156D10ABD2E0A6D returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getDefaultGrid)(___paramId0);
	#else
	ParamGrid_t0F18158C237FDE12E81979168156D10ABD2E0A6D returnValue = il2cppPInvokeFunc(___paramId0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::ml_SVM_create()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_SVM_create_mF134296BD93A44878017F55DBE198A2FB51530DD (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_create)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_Ptr_SVM_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_Ptr_SVM_delete_mEED304F84E3D4233BAACC97696D64DE9E5D08BA2 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_SVM_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_Ptr_SVM_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_Ptr_SVM_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_Ptr_SVM_get_m44188455F40466858987D5B07735BFCEC4FED901 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_SVM_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_Ptr_SVM_get)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods__cctor_m03F7FFB1FD1DE76CD9732A537A1F03287FB56873 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CU3Ec_U3C_cctorU3Eb__1286_0_m3CEB893697AD4AF356D15350AAE6136FB0D0A49B_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CU3Ec_U3C_cctorU3Eb__1286_1_m71C25B4F275F33A4FF39BFEC18D7EBBA195B06BC_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral81151D1E9FF5F53A008A360CAFF19A0083D10880);
		s_Il2CppMethodInitialized = true;
	}
	{
		// private static bool tried = false;
		((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___tried_0 = (bool)0;
		// private static readonly string[] RuntimeDllNames =
		// {
		//     //DllVCRuntime,
		//     //DllMsvcp,
		// };
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_0 = (StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)SZArrayNew(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var, (uint32_t)0);
		((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___RuntimeDllNames_5 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___RuntimeDllNames_5), (void*)L_0);
		// private static readonly string[] OpenCVDllNames =
		// {
		//     "opencv_world",
		// };
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_1 = (StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)SZArrayNew(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var, (uint32_t)1);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_2 = L_1;
		NullCheck(L_2);
		ArrayElementTypeCheck (L_2, _stringLiteral81151D1E9FF5F53A008A360CAFF19A0083D10880);
		(L_2)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral81151D1E9FF5F53A008A360CAFF19A0083D10880);
		((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___OpenCVDllNames_6 = L_2;
		Il2CppCodeGenWriteBarrier((void**)(&((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___OpenCVDllNames_6), (void*)L_2);
		// public static readonly CvErrorCallback ErrorHandlerThrowException =
		//     delegate(ErrorCode status, string funcName, string errMsg, string fileName, int line, IntPtr userdata)
		//     {
		//         try
		//         {
		//             //cvSetErrStatus(CvStatus.StsOk);
		//             return 0;
		//         }
		//         finally
		//         {
		//             throw new OpenCVException(status, funcName, errMsg, fileName, line);
		//         }
		//     };
		il2cpp_codegen_runtime_class_init_inline(U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_il2cpp_TypeInfo_var);
		U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7* L_3 = ((U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_StaticFields*)il2cpp_codegen_static_fields_for(U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_il2cpp_TypeInfo_var))->___U3CU3E9_0;
		CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* L_4 = (CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D*)il2cpp_codegen_object_new(CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D_il2cpp_TypeInfo_var);
		NullCheck(L_4);
		CvErrorCallback__ctor_mFAA228DCA256624CAC949BDCEBE1027F94C57D44(L_4, L_3, (intptr_t)((void*)U3CU3Ec_U3C_cctorU3Eb__1286_0_m3CEB893697AD4AF356D15350AAE6136FB0D0A49B_RuntimeMethod_var), NULL);
		((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___ErrorHandlerThrowException_9 = L_4;
		Il2CppCodeGenWriteBarrier((void**)(&((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___ErrorHandlerThrowException_9), (void*)L_4);
		// public static readonly CvErrorCallback ErrorHandlerIgnorance =
		//     delegate(ErrorCode status, string funcName, string errMsg, string fileName, int line, IntPtr userdata)
		//     {
		//         //cvSetErrStatus(CvStatus.StsOk);
		//         return 0;
		//     };
		U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7* L_5 = ((U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_StaticFields*)il2cpp_codegen_static_fields_for(U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_il2cpp_TypeInfo_var))->___U3CU3E9_0;
		CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* L_6 = (CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D*)il2cpp_codegen_object_new(CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D_il2cpp_TypeInfo_var);
		NullCheck(L_6);
		CvErrorCallback__ctor_mFAA228DCA256624CAC949BDCEBE1027F94C57D44(L_6, L_5, (intptr_t)((void*)U3CU3Ec_U3C_cctorU3Eb__1286_1_m71C25B4F275F33A4FF39BFEC18D7EBBA195B06BC_RuntimeMethod_var), NULL);
		((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___ErrorHandlerIgnorance_10 = L_6;
		Il2CppCodeGenWriteBarrier((void**)(&((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___ErrorHandlerIgnorance_10), (void*)L_6);
		// LoadLibraries(WindowsLibraryLoader.Instance.AdditionalPaths);
		il2cpp_codegen_runtime_class_init_inline(WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_il2cpp_TypeInfo_var);
		WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* L_7;
		L_7 = WindowsLibraryLoader_get_Instance_m019E55E3951CDB6FDDAA19F411741DAC90A6AFD3_inline(NULL);
		NullCheck(L_7);
		List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* L_8;
		L_8 = WindowsLibraryLoader_get_AdditionalPaths_m3305759C5A1160F085A7B8E8842870B8D1E36E19_inline(L_7, NULL);
		NativeMethods_LoadLibraries_m27E4BE377F22C9046760EF872C8CE5D50E98E347(L_8, NULL);
		// TryPInvoke();
		NativeMethods_TryPInvoke_m107EA381079C0171D039D89C9527B5C720F5E704(NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.NativeMethods::LoadLibraries(System.Collections.Generic.IEnumerable`1<System.String>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_LoadLibraries_m27E4BE377F22C9046760EF872C8CE5D50E98E347 (RuntimeObject* ___additionalPaths0, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&EnumerableEx_ToArray_TisString_t_mEFCCD6680E378258F94F29E25E24E2A0BA967DE8_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_Add_mF10DB1D3CBB0B14215F0E4F8AB4934A1955E5351_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1__ctor_m0BAB01B25B1D62E100CC97401B1A9972D6DEB6EC_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Type_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral3EE2B7884D8BAA386714E3413F22889095B05B25);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral924CB591C7F83A8003577672F4A8CAFA3D9C6F31);
		s_Il2CppMethodInitialized = true;
	}
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* V_0 = NULL;
	List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* V_1 = NULL;
	intptr_t V_2;
	memset((&V_2), 0, sizeof(V_2));
	intptr_t V_3;
	memset((&V_3), 0, sizeof(V_3));
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* V_4 = NULL;
	int32_t V_5 = 0;
	String_t* V_6 = NULL;
	String_t* V_7 = NULL;
	{
		// if (IsUnix())
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = NativeMethods_IsUnix_mB280264B594473B5CDE78862CC0481E59AFBBB6E(NULL);
		if (!L_0)
		{
			goto IL_0008;
		}
	}
	{
		// return;
		return;
	}

IL_0008:
	{
		// string[] ap = EnumerableEx.ToArray(additionalPaths);
		RuntimeObject* L_1 = ___additionalPaths0;
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_2;
		L_2 = EnumerableEx_ToArray_TisString_t_mEFCCD6680E378258F94F29E25E24E2A0BA967DE8(L_1, EnumerableEx_ToArray_TisString_t_mEFCCD6680E378258F94F29E25E24E2A0BA967DE8_RuntimeMethod_var);
		V_0 = L_2;
		// List<string> runtimePaths = new List<string> (ap);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_3 = V_0;
		List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* L_4 = (List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD*)il2cpp_codegen_object_new(List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD_il2cpp_TypeInfo_var);
		NullCheck(L_4);
		List_1__ctor_m0BAB01B25B1D62E100CC97401B1A9972D6DEB6EC(L_4, (RuntimeObject*)L_3, List_1__ctor_m0BAB01B25B1D62E100CC97401B1A9972D6DEB6EC_RuntimeMethod_var);
		V_1 = L_4;
		// runtimePaths.Add(Environment.GetFolderPath(Environment.SpecialFolder.System));
		List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* L_5 = V_1;
		String_t* L_6;
		L_6 = Environment_GetFolderPath_m6294B29BDF0AC7CBB12EE2BB109D6DAA3FE9AF4B(((int32_t)37), NULL);
		NullCheck(L_5);
		List_1_Add_mF10DB1D3CBB0B14215F0E4F8AB4934A1955E5351_inline(L_5, L_6, List_1_Add_mF10DB1D3CBB0B14215F0E4F8AB4934A1955E5351_RuntimeMethod_var);
		// foreach (string dll in RuntimeDllNames)
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_7 = ((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___RuntimeDllNames_5;
		V_4 = L_7;
		V_5 = 0;
		goto IL_0049;
	}

IL_002f:
	{
		// foreach (string dll in RuntimeDllNames)
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_8 = V_4;
		int32_t L_9 = V_5;
		NullCheck(L_8);
		int32_t L_10 = L_9;
		String_t* L_11 = (L_8)->GetAt(static_cast<il2cpp_array_size_t>(L_10));
		V_6 = L_11;
		// WindowsLibraryLoader.Instance.LoadLibrary(dll, runtimePaths);
		il2cpp_codegen_runtime_class_init_inline(WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_il2cpp_TypeInfo_var);
		WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* L_12;
		L_12 = WindowsLibraryLoader_get_Instance_m019E55E3951CDB6FDDAA19F411741DAC90A6AFD3_inline(NULL);
		String_t* L_13 = V_6;
		List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* L_14 = V_1;
		NullCheck(L_12);
		WindowsLibraryLoader_LoadLibrary_m05228C618D3CD3D6EB2D1763FFB1426103464FDA(L_12, L_13, L_14, NULL);
		int32_t L_15 = V_5;
		V_5 = ((int32_t)il2cpp_codegen_add(L_15, 1));
	}

IL_0049:
	{
		// foreach (string dll in RuntimeDllNames)
		int32_t L_16 = V_5;
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_17 = V_4;
		NullCheck(L_17);
		if ((((int32_t)L_16) < ((int32_t)((int32_t)(((RuntimeArray*)L_17)->max_length)))))
		{
			goto IL_002f;
		}
	}
	{
		// foreach (string dll in OpenCVDllNames)
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_18 = ((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___OpenCVDllNames_6;
		V_4 = L_18;
		V_5 = 0;
		goto IL_0081;
	}

IL_005d:
	{
		// foreach (string dll in OpenCVDllNames)
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_19 = V_4;
		int32_t L_20 = V_5;
		NullCheck(L_19);
		int32_t L_21 = L_20;
		String_t* L_22 = (L_19)->GetAt(static_cast<il2cpp_array_size_t>(L_21));
		V_7 = L_22;
		// WindowsLibraryLoader.Instance.LoadLibrary(dll + Version, ap);
		il2cpp_codegen_runtime_class_init_inline(WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_il2cpp_TypeInfo_var);
		WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* L_23;
		L_23 = WindowsLibraryLoader_get_Instance_m019E55E3951CDB6FDDAA19F411741DAC90A6AFD3_inline(NULL);
		String_t* L_24 = V_7;
		String_t* L_25;
		L_25 = String_Concat_mAF2CE02CC0CB7460753D0A1A91CCF2B1E9804C5D(L_24, _stringLiteral3EE2B7884D8BAA386714E3413F22889095B05B25, NULL);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_26 = V_0;
		NullCheck(L_23);
		WindowsLibraryLoader_LoadLibrary_m05228C618D3CD3D6EB2D1763FFB1426103464FDA(L_23, L_25, (RuntimeObject*)L_26, NULL);
		int32_t L_27 = V_5;
		V_5 = ((int32_t)il2cpp_codegen_add(L_27, 1));
	}

IL_0081:
	{
		// foreach (string dll in OpenCVDllNames)
		int32_t L_28 = V_5;
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_29 = V_4;
		NullCheck(L_29);
		if ((((int32_t)L_28) < ((int32_t)((int32_t)(((RuntimeArray*)L_29)->max_length)))))
		{
			goto IL_005d;
		}
	}
	{
		// WindowsLibraryLoader.Instance.LoadLibrary(DllExtern, ap);
		il2cpp_codegen_runtime_class_init_inline(WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_il2cpp_TypeInfo_var);
		WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* L_30;
		L_30 = WindowsLibraryLoader_get_Instance_m019E55E3951CDB6FDDAA19F411741DAC90A6AFD3_inline(NULL);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_31 = V_0;
		NullCheck(L_30);
		WindowsLibraryLoader_LoadLibrary_m05228C618D3CD3D6EB2D1763FFB1426103464FDA(L_30, _stringLiteral924CB591C7F83A8003577672F4A8CAFA3D9C6F31, (RuntimeObject*)L_31, NULL);
		// IntPtr zero = IntPtr.Zero;
		V_2 = (0);
		// IntPtr current = redirectError(ErrorHandlerThrowException, zero, ref zero);
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* L_32 = ((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___ErrorHandlerThrowException_9;
		intptr_t L_33 = V_2;
		intptr_t L_34;
		L_34 = NativeMethods_redirectError_m06C82E765CF74E3834D98EF8F7CAB1CCA6440233(L_32, L_33, (&V_2), NULL);
		V_3 = L_34;
		// if (current != IntPtr.Zero)
		intptr_t L_35 = V_3;
		bool L_36;
		L_36 = IntPtr_op_Inequality_m2F715312CBFCE7E1A81D0689F68B97218E37E5D1(L_35, (0), NULL);
		if (!L_36)
		{
			goto IL_00d5;
		}
	}
	{
		// ErrorHandlerDefault = (CvErrorCallback)Marshal.GetDelegateForFunctionPointer(
		//     current,
		//     typeof(CvErrorCallback)
		// );
		intptr_t L_37 = V_3;
		RuntimeTypeHandle_t332A452B8B6179E4469B69525D0FE82A88030F7B L_38 = { reinterpret_cast<intptr_t> (CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D_0_0_0_var) };
		il2cpp_codegen_runtime_class_init_inline(Type_t_il2cpp_TypeInfo_var);
		Type_t* L_39;
		L_39 = Type_GetTypeFromHandle_m2570A2A5B32A5E9D9F0F38B37459DA18736C823E(L_38, NULL);
		il2cpp_codegen_runtime_class_init_inline(Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		Delegate_t* L_40;
		L_40 = Marshal_GetDelegateForFunctionPointer_mCD20B7B64621599ED3A9F339F94B6D73FACCE592(L_37, L_39, NULL);
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___ErrorHandlerDefault_11 = ((CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D*)CastclassSealed((RuntimeObject*)L_40, CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D_il2cpp_TypeInfo_var));
		Il2CppCodeGenWriteBarrier((void**)(&((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___ErrorHandlerDefault_11), (void*)((CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D*)CastclassSealed((RuntimeObject*)L_40, CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D_il2cpp_TypeInfo_var)));
		return;
	}

IL_00d5:
	{
		// ErrorHandlerDefault = null;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___ErrorHandlerDefault_11 = (CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D*)NULL;
		Il2CppCodeGenWriteBarrier((void**)(&((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___ErrorHandlerDefault_11), (void*)(CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D*)NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.NativeMethods::TryPInvoke()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_TryPInvoke_m107EA381079C0171D039D89C9527B5C720F5E704 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A* V_0 = NULL;
	OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A* V_1 = NULL;
	Exception_t* V_2 = NULL;
	Exception_t* V_3 = NULL;
	il2cpp::utils::ExceptionSupportStack<RuntimeObject*, 2> __active_exceptions;
	Exception_t* G_B20_0 = NULL;
	Exception_t* G_B19_0 = NULL;
	{
		// if (tried)
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		bool L_0 = ((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___tried_0;
		if (!L_0)
		{
			goto IL_0008;
		}
	}
	{
		// return;
		return;
	}

IL_0008:
	{
		// tried = true;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___tried_0 = (bool)1;
	}
	try
	{// begin try (depth: 1)
		// core_Mat_sizeof();
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		uint64_t L_1;
		L_1 = NativeMethods_core_Mat_sizeof_m206DA3A87E0AF7DD8E5AD578B7996420F48D1082(NULL);
		// }
		goto IL_0077;
	}// end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&DllNotFoundException_t8CAE636A394C482C9FCF38FB7B7929506319D534_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
		{
			IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
			goto CATCH_0016;
		}
		if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BadImageFormatException_t7EBAEDCD74D3274D00106EC0051755C18D20E552_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
		{
			IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
			goto CATCH_0034;
		}
		if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Exception_t_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
		{
			IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
			goto CATCH_0052;
		}
		throw e;
	}

CATCH_0016:
	{// begin catch(System.DllNotFoundException)
		{
			// var exception = PInvokeHelper.CreateException(e);
			OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A* L_2;
			L_2 = PInvokeHelper_CreateException_m05E240B26DF5AC599731315F1FB55DD4B91867FE(((DllNotFoundException_t8CAE636A394C482C9FCF38FB7B7929506319D534*)IL2CPP_GET_ACTIVE_EXCEPTION(DllNotFoundException_t8CAE636A394C482C9FCF38FB7B7929506319D534*)), NULL);
			V_0 = L_2;
		}
		try
		{// begin try (depth: 2)
			// try{Console.WriteLine(exception.Message);}
			OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A* L_3 = V_0;
			NullCheck(L_3);
			String_t* L_4;
			L_4 = VirtualFuncInvoker0< String_t* >::Invoke(5 /* System.String System.Exception::get_Message() */, L_3);
			il2cpp_codegen_runtime_class_init_inline(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Console_t5EDF9498D011BD48287171978EDBBA6964829C3E_il2cpp_TypeInfo_var)));
			Console_WriteLine_mB3B6E89C2D3CCB7C284B46F30233782BFF942709(L_4, NULL);
			// try{Console.WriteLine(exception.Message);}
			goto IL_002c;
		}// end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&RuntimeObject_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
			{
				IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
				goto CATCH_0029;
			}
			throw e;
		}

CATCH_0029:
		{// begin catch(System.Object)
			// catch{}
			// catch{}
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_002c;
		}// end catch (depth: 2)

IL_002c:
		{
		}
		try
		{// begin try (depth: 2)
			// try{Debug.WriteLine(exception.Message);}
			goto IL_0032;
		}// end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&RuntimeObject_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
			{
				IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
				goto CATCH_002f;
			}
			throw e;
		}

CATCH_002f:
		{// begin catch(System.Object)
			// catch{}
			// catch{}
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_0032;
		}// end catch (depth: 2)

IL_0032:
		{
			// throw exception;
			OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A* L_5 = V_0;
			IL2CPP_RAISE_MANAGED_EXCEPTION(L_5, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&NativeMethods_TryPInvoke_m107EA381079C0171D039D89C9527B5C720F5E704_RuntimeMethod_var)));
		}
	}// end catch (depth: 1)

CATCH_0034:
	{// begin catch(System.BadImageFormatException)
		{
			// var exception = PInvokeHelper.CreateException(e);
			OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A* L_6;
			L_6 = PInvokeHelper_CreateException_m05E240B26DF5AC599731315F1FB55DD4B91867FE(((BadImageFormatException_t7EBAEDCD74D3274D00106EC0051755C18D20E552*)IL2CPP_GET_ACTIVE_EXCEPTION(BadImageFormatException_t7EBAEDCD74D3274D00106EC0051755C18D20E552*)), NULL);
			V_1 = L_6;
		}
		try
		{// begin try (depth: 2)
			// try { Console.WriteLine(exception.Message); }
			OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A* L_7 = V_1;
			NullCheck(L_7);
			String_t* L_8;
			L_8 = VirtualFuncInvoker0< String_t* >::Invoke(5 /* System.String System.Exception::get_Message() */, L_7);
			il2cpp_codegen_runtime_class_init_inline(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Console_t5EDF9498D011BD48287171978EDBBA6964829C3E_il2cpp_TypeInfo_var)));
			Console_WriteLine_mB3B6E89C2D3CCB7C284B46F30233782BFF942709(L_8, NULL);
			// try { Console.WriteLine(exception.Message); }
			goto IL_004a;
		}// end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&RuntimeObject_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
			{
				IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
				goto CATCH_0047;
			}
			throw e;
		}

CATCH_0047:
		{// begin catch(System.Object)
			// catch { }
			// catch { }
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_004a;
		}// end catch (depth: 2)

IL_004a:
		{
		}
		try
		{// begin try (depth: 2)
			// try { Debug.WriteLine(exception.Message); }
			goto IL_0050;
		}// end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&RuntimeObject_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
			{
				IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
				goto CATCH_004d;
			}
			throw e;
		}

CATCH_004d:
		{// begin catch(System.Object)
			// catch { }
			// catch { }
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_0050;
		}// end catch (depth: 2)

IL_0050:
		{
			// throw exception;
			OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A* L_9 = V_1;
			IL2CPP_RAISE_MANAGED_EXCEPTION(L_9, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&NativeMethods_TryPInvoke_m107EA381079C0171D039D89C9527B5C720F5E704_RuntimeMethod_var)));
		}
	}// end catch (depth: 1)

CATCH_0052:
	{// begin catch(System.Exception)
		{
			// catch (Exception e)
			V_2 = ((Exception_t*)IL2CPP_GET_ACTIVE_EXCEPTION(Exception_t*));
			// Exception ex = e.InnerException ?? e;
			Exception_t* L_10 = V_2;
			NullCheck(L_10);
			Exception_t* L_11;
			L_11 = Exception_get_InnerException_m0C1BDB339C786BA4DA7D2C1AD214571CFBBB1410_inline(L_10, NULL);
			Exception_t* L_12 = L_11;
			G_B19_0 = L_12;
			if (L_12)
			{
				G_B20_0 = L_12;
				goto IL_005e;
			}
		}
		{
			Exception_t* L_13 = V_2;
			G_B20_0 = L_13;
		}

IL_005e:
		{
			V_3 = G_B20_0;
		}
		try
		{// begin try (depth: 2)
			// try{ Console.WriteLine(ex.Message); }
			Exception_t* L_14 = V_3;
			NullCheck(L_14);
			String_t* L_15;
			L_15 = VirtualFuncInvoker0< String_t* >::Invoke(5 /* System.String System.Exception::get_Message() */, L_14);
			il2cpp_codegen_runtime_class_init_inline(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Console_t5EDF9498D011BD48287171978EDBBA6964829C3E_il2cpp_TypeInfo_var)));
			Console_WriteLine_mB3B6E89C2D3CCB7C284B46F30233782BFF942709(L_15, NULL);
			// try{ Console.WriteLine(ex.Message); }
			goto IL_006f;
		}// end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&RuntimeObject_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
			{
				IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
				goto CATCH_006c;
			}
			throw e;
		}

CATCH_006c:
		{// begin catch(System.Object)
			// catch{}
			// catch{}
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_006f;
		}// end catch (depth: 2)

IL_006f:
		{
		}
		try
		{// begin try (depth: 2)
			// try{ Debug.WriteLine(ex.Message); }
			goto IL_0075;
		}// end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&RuntimeObject_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
			{
				IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
				goto CATCH_0072;
			}
			throw e;
		}

CATCH_0072:
		{// begin catch(System.Object)
			// catch{}
			// catch{}
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_0075;
		}// end catch (depth: 2)

IL_0075:
		{
			// throw;
			IL2CPP_RETHROW_MANAGED_EXCEPTION(IL2CPP_GET_ACTIVE_EXCEPTION(Exception_t*));
		}
	}// end catch (depth: 1)

IL_0077:
	{
		// }
		return;
	}
}
// System.Boolean OpenCvSharp.NativeMethods::IsWindows()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_IsWindows_m099DDE89335BE2C1FC7465105CCC22036A610AC9 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return !IsUnix();
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = NativeMethods_IsUnix_mB280264B594473B5CDE78862CC0481E59AFBBB6E(NULL);
		return (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
	}
}
// System.Boolean OpenCvSharp.NativeMethods::IsUnix()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_IsUnix_mB280264B594473B5CDE78862CC0481E59AFBBB6E (const RuntimeMethod* method) 
{
	int32_t V_0 = 0;
	{
		// var p = Environment.OSVersion.Platform;
		OperatingSystem_t08A94435A5C7D999B5553B6C58763A6F2E3C8557* L_0;
		L_0 = Environment_get_OSVersion_mE57572A131F223315BB4EFDE0CE136DC2FDDCEE2(NULL);
		NullCheck(L_0);
		int32_t L_1;
		L_1 = OperatingSystem_get_Platform_m01AF3D6217E4031C3AA824481BBE9E2933347E26_inline(L_0, NULL);
		V_0 = L_1;
		// return (p == PlatformID.Unix ||
		//         p == PlatformID.MacOSX ||
		//         (int)p == 128);
		int32_t L_2 = V_0;
		if ((((int32_t)L_2) == ((int32_t)4)))
		{
			goto IL_001c;
		}
	}
	{
		int32_t L_3 = V_0;
		if ((((int32_t)L_3) == ((int32_t)6)))
		{
			goto IL_001c;
		}
	}
	{
		int32_t L_4 = V_0;
		return (bool)((((int32_t)L_4) == ((int32_t)((int32_t)128)))? 1 : 0);
	}

IL_001c:
	{
		return (bool)1;
	}
}
// System.Boolean OpenCvSharp.NativeMethods::IsMono()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_IsMono_mBE2BBA2371C5C5A24F2A12E405C3677CF2F663E8 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_IsMono_mBE2BBA2371C5C5A24F2A12E405C3677CF2F663E8_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Type_GetType_m80C621C4D91A89DDEE6D3DDF343925B30F99BC45_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Type_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralA18A4AE569C5BE88A9C406093C040EFEBFF78C5E);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return (Type.GetType("Mono.Runtime") != null);
		il2cpp_codegen_runtime_class_init_inline(Type_t_il2cpp_TypeInfo_var);
		Type_t* L_0;
		L_0 = il2cpp_codegen_get_type(_stringLiteralA18A4AE569C5BE88A9C406093C040EFEBFF78C5E, Type_GetType_m80C621C4D91A89DDEE6D3DDF343925B30F99BC45_RuntimeMethod_var, NativeMethods_IsMono_mBE2BBA2371C5C5A24F2A12E405C3677CF2F663E8_RuntimeMethod_var);
		bool L_1;
		L_1 = Type_op_Inequality_m71AAC993EBBDBA44EE73847D68F71C70AF7AD1D5(L_0, (Type_t*)NULL, NULL);
		return L_1;
	}
}
// System.IntPtr OpenCvSharp.NativeMethods::aruco_getPredefinedDictionary(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_aruco_getPredefinedDictionary_m271AADA9D5B39E052E1FE2853EE33EBBC206AB5B (int32_t ___name0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_getPredefinedDictionary", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_getPredefinedDictionary)(___name0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___name0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::aruco_detectMarkers(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_detectMarkers_mB78E85E68743D6B8AFCD48E979E121411C7483EC (intptr_t ___image0, intptr_t ___dictionary1, intptr_t ___corners2, intptr_t ___ids3, intptr_t ___detectParameters4, intptr_t ___outrejectedImgPoints5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_detectMarkers", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_detectMarkers)(___image0, ___dictionary1, ___corners2, ___ids3, ___detectParameters4, ___outrejectedImgPoints5);
	#else
	il2cppPInvokeFunc(___image0, ___dictionary1, ___corners2, ___ids3, ___detectParameters4, ___outrejectedImgPoints5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_drawDetectedMarkers(System.IntPtr,System.IntPtr[],System.Int32,System.Int32[],System.Int32[],System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_drawDetectedMarkers_mD7D3121978F28F6DBC90444CC99922F500540F50 (intptr_t ___image0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___corners1, int32_t ___cornerSize12, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___contoursSize23, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___ids4, int32_t ___idxLength5, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___borderColor6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, int32_t*, int32_t*, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(void*) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_drawDetectedMarkers", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___corners1' to native representation
	intptr_t* ____corners1_marshaled = NULL;
	if (___corners1 != NULL)
	{
		____corners1_marshaled = reinterpret_cast<intptr_t*>((___corners1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___contoursSize23' to native representation
	int32_t* ____contoursSize23_marshaled = NULL;
	if (___contoursSize23 != NULL)
	{
		____contoursSize23_marshaled = reinterpret_cast<int32_t*>((___contoursSize23)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___ids4' to native representation
	int32_t* ____ids4_marshaled = NULL;
	if (___ids4 != NULL)
	{
		____ids4_marshaled = reinterpret_cast<int32_t*>((___ids4)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_drawDetectedMarkers)(___image0, ____corners1_marshaled, ___cornerSize12, ____contoursSize23_marshaled, ____ids4_marshaled, ___idxLength5, ___borderColor6);
	#else
	il2cppPInvokeFunc(___image0, ____corners1_marshaled, ___cornerSize12, ____contoursSize23_marshaled, ____ids4_marshaled, ___idxLength5, ___borderColor6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_drawDetectedMarkers(System.IntPtr,System.IntPtr[],System.Int32,System.Int32[],System.IntPtr,System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_drawDetectedMarkers_mECDDBB89847250261543F42779FD81832E41CCE6 (intptr_t ___image0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___corners1, int32_t ___cornerSize12, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___contoursSize23, intptr_t ___ids4, int32_t ___idxLength5, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___borderColor6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, int32_t*, intptr_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_drawDetectedMarkers", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___corners1' to native representation
	intptr_t* ____corners1_marshaled = NULL;
	if (___corners1 != NULL)
	{
		____corners1_marshaled = reinterpret_cast<intptr_t*>((___corners1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___contoursSize23' to native representation
	int32_t* ____contoursSize23_marshaled = NULL;
	if (___contoursSize23 != NULL)
	{
		____contoursSize23_marshaled = reinterpret_cast<int32_t*>((___contoursSize23)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_drawDetectedMarkers)(___image0, ____corners1_marshaled, ___cornerSize12, ____contoursSize23_marshaled, ___ids4, ___idxLength5, ___borderColor6);
	#else
	il2cppPInvokeFunc(___image0, ____corners1_marshaled, ___cornerSize12, ____contoursSize23_marshaled, ___ids4, ___idxLength5, ___borderColor6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_drawMarker(System.IntPtr,System.Int32,System.Int32,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_drawMarker_m567BA2324FC32A2ED9A226546D23FA3C960C353E (intptr_t ___dictionary0, int32_t ___id1, int32_t ___sidePixels2, intptr_t ___mat3, int32_t ___borderBits4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_drawMarker", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_drawMarker)(___dictionary0, ___id1, ___sidePixels2, ___mat3, ___borderBits4);
	#else
	il2cppPInvokeFunc(___dictionary0, ___id1, ___sidePixels2, ___mat3, ___borderBits4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_drawAxis(System.IntPtr,System.IntPtr,System.Double[],System.Int32,System.Double[],System.Double[],System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_drawAxis_mA653C3B0E524BEB086426ECD83FE1FE5D1EF3A41 (intptr_t ___image0, intptr_t ___cameraMatrix1, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___distCoeffs2, int32_t ___distCoeffsLength3, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___rvec4, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___tvec5, float ___lenght6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double*, int32_t, double*, double*, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(void*) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_drawAxis", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___distCoeffs2' to native representation
	double* ____distCoeffs2_marshaled = NULL;
	if (___distCoeffs2 != NULL)
	{
		____distCoeffs2_marshaled = reinterpret_cast<double*>((___distCoeffs2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___rvec4' to native representation
	double* ____rvec4_marshaled = NULL;
	if (___rvec4 != NULL)
	{
		____rvec4_marshaled = reinterpret_cast<double*>((___rvec4)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___tvec5' to native representation
	double* ____tvec5_marshaled = NULL;
	if (___tvec5 != NULL)
	{
		____tvec5_marshaled = reinterpret_cast<double*>((___tvec5)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_drawAxis)(___image0, ___cameraMatrix1, ____distCoeffs2_marshaled, ___distCoeffsLength3, ____rvec4_marshaled, ____tvec5_marshaled, ___lenght6);
	#else
	il2cppPInvokeFunc(___image0, ___cameraMatrix1, ____distCoeffs2_marshaled, ___distCoeffsLength3, ____rvec4_marshaled, ____tvec5_marshaled, ___lenght6);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::aruco_DetectorParameters_create()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_aruco_DetectorParameters_create_m44DBC3FCE47CBAF12D4888992244CA6E1DF14628 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_create)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::aruco_Ptr_DetectorParameters_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_Ptr_DetectorParameters_delete_mFC3157912F56B0CE09FA63CFA74C20AF880F4314 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_Ptr_DetectorParameters_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_Ptr_DetectorParameters_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::aruco_Ptr_DetectorParameters_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_aruco_Ptr_DetectorParameters_get_m98FE7CFFB5C65EEB558ED17A0A4E05557C2B45DA (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_Ptr_DetectorParameters_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_Ptr_DetectorParameters_get)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setDoCornerRefinement(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setDoCornerRefinement_m40CC03B0D8CA614995797E0AD4628C14D72D82A6 (intptr_t ___obj0, bool ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setDoCornerRefinement", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setDoCornerRefinement)(___obj0, static_cast<int32_t>(___value1));
	#else
	il2cppPInvokeFunc(___obj0, static_cast<int32_t>(___value1));
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setAdaptiveThreshConstant(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setAdaptiveThreshConstant_m95053A1F85DE6827536607B8169EECB4A0C0AC5B (intptr_t ___obj0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setAdaptiveThreshConstant", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setAdaptiveThreshConstant)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setCornerRefinementMinAccuracy(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setCornerRefinementMinAccuracy_m36D4B315FD93F0FBB514CA55788872A7D683AC8A (intptr_t ___obj0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setCornerRefinementMinAccuracy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setCornerRefinementMinAccuracy)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setErrorCorrectionRate(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setErrorCorrectionRate_m31B2BDD102DBEA63496433889D65E39AC3B555BE (intptr_t ___obj0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setErrorCorrectionRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setErrorCorrectionRate)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setMaxErroneousBitsInBorderRate(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setMaxErroneousBitsInBorderRate_mD4A4F31831DF50F2ACBDB10101D15E569380BFB1 (intptr_t ___obj0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setMaxErroneousBitsInBorderRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setMaxErroneousBitsInBorderRate)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setMaxMarkerPerimeterRate(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setMaxMarkerPerimeterRate_m566DDADEEE22E4D03917AE139C2429CEF53ACC1F (intptr_t ___obj0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setMaxMarkerPerimeterRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setMaxMarkerPerimeterRate)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setMinCornerDistanceRate(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setMinCornerDistanceRate_m99364C74F9C0F4F913169585A941A1C18413EC1C (intptr_t ___obj0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setMinCornerDistanceRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setMinCornerDistanceRate)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setMinMarkerDistanceRate(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setMinMarkerDistanceRate_m296E39F35D13DDF541CB9C433A5288AB01916522 (intptr_t ___obj0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setMinMarkerDistanceRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setMinMarkerDistanceRate)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setMinMarkerPerimeterRate(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setMinMarkerPerimeterRate_m98FB8A30BFBFF208739921EBDA0DCA0FB018204C (intptr_t ___obj0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setMinMarkerPerimeterRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setMinMarkerPerimeterRate)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setMinOtsuStdDev(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setMinOtsuStdDev_m5D9E057B8722F6C72DBAC5906AA9A9DFE1614FCF (intptr_t ___obj0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setMinOtsuStdDev", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setMinOtsuStdDev)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setPerspectiveRemoveIgnoredMarginPerCell(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setPerspectiveRemoveIgnoredMarginPerCell_m2BC84BD8151D7FCFF5C772822EA74D4B7223A039 (intptr_t ___obj0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setPerspectiveRemoveIgnoredMarginPerCell", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setPerspectiveRemoveIgnoredMarginPerCell)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setPolygonalApproxAccuracyRate(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setPolygonalApproxAccuracyRate_m301E7C2CE23DA172CA2A22DCB055F3C4765021E8 (intptr_t ___obj0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setPolygonalApproxAccuracyRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setPolygonalApproxAccuracyRate)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setAdaptiveThreshWinSizeMax(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setAdaptiveThreshWinSizeMax_mD735F06E2FDFE64CD27915169376799BF4A9A2DC (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setAdaptiveThreshWinSizeMax", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setAdaptiveThreshWinSizeMax)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setAdaptiveThreshWinSizeMin(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setAdaptiveThreshWinSizeMin_m9AB57072B9994595F1291DD32918DD64984EE1CE (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setAdaptiveThreshWinSizeMin", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setAdaptiveThreshWinSizeMin)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setAdaptiveThreshWinSizeStep(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setAdaptiveThreshWinSizeStep_m80DFD33F442C4BF65ED54C78D26BD43C46F810DB (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setAdaptiveThreshWinSizeStep", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setAdaptiveThreshWinSizeStep)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setCornerRefinementMaxIterations(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setCornerRefinementMaxIterations_m7B0543307CD92532993250FC27043F5C16A7DC8E (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setCornerRefinementMaxIterations", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setCornerRefinementMaxIterations)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setCornerRefinementWinSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setCornerRefinementWinSize_m1EE41036F4C8FFB3123537BBF4D70315CD399FB6 (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setCornerRefinementWinSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setCornerRefinementWinSize)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setMarkerBorderBits(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setMarkerBorderBits_mBC0938E2842BA1DEF39C6F1CBC6D08F27E1E17A2 (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setMarkerBorderBits", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setMarkerBorderBits)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setMinDistanceToBorder(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setMinDistanceToBorder_m64CF7D3789F3AB16E1F06B04F2B3C4B04B73A4B3 (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setMinDistanceToBorder", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setMinDistanceToBorder)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setPerspectiveRemovePixelPerCell(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setPerspectiveRemovePixelPerCell_mF1545786CDB80AB2BE4D360A9D92C0DA60F67345 (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setPerspectiveRemovePixelPerCell", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setPerspectiveRemovePixelPerCell)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Boolean OpenCvSharp.NativeMethods::aruco_DetectorParameters_getDoCornerRefinement(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_aruco_DetectorParameters_getDoCornerRefinement_mBDD05345933E33DC1A30B5D031490F07198119F2 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getDoCornerRefinement", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getDoCornerRefinement)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return static_cast<bool>(returnValue);
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getAdaptiveThreshConstant(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getAdaptiveThreshConstant_m77A2308B756D71C5FC646B9E4C338B428122AD89 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getAdaptiveThreshConstant", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getAdaptiveThreshConstant)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getCornerRefinementMinAccuracy(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getCornerRefinementMinAccuracy_m9CB9AF193C649D6BC4A05AED95B70455161088F4 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getCornerRefinementMinAccuracy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getCornerRefinementMinAccuracy)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getErrorCorrectionRate(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getErrorCorrectionRate_mA565C4DB5FF5A3C44FEC5EA71ADADDA2D4502BE8 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getErrorCorrectionRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getErrorCorrectionRate)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getMaxErroneousBitsInBorderRate(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getMaxErroneousBitsInBorderRate_m92DE0EC47B0A5DBA130C60249E6CDBF48658F89A (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getMaxErroneousBitsInBorderRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getMaxErroneousBitsInBorderRate)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getMaxMarkerPerimeterRate(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getMaxMarkerPerimeterRate_m272A36D88E438CB79F00D2F8459CB55012D5E75B (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getMaxMarkerPerimeterRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getMaxMarkerPerimeterRate)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getMinCornerDistanceRate(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getMinCornerDistanceRate_m7CFA55AD49C3D629BB4A4AFB09F39B50B87784C8 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getMinCornerDistanceRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getMinCornerDistanceRate)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getMinMarkerDistanceRate(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getMinMarkerDistanceRate_mA8C91EC0EAD32BA6F6F778834E1A8B09A01382BF (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getMinMarkerDistanceRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getMinMarkerDistanceRate)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getMinMarkerPerimeterRate(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getMinMarkerPerimeterRate_m6F5FB9FBBBE0BB97A68C83AA85E67C19C7482148 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getMinMarkerPerimeterRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getMinMarkerPerimeterRate)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getMinOtsuStdDev(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getMinOtsuStdDev_m3B526846A592481CFB144BAF6FA4F78AD76A82FB (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getMinOtsuStdDev", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getMinOtsuStdDev)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getPerspectiveRemoveIgnoredMarginPerCell(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getPerspectiveRemoveIgnoredMarginPerCell_m714FD0FE0FD453371113EDCBFB0D5619C63FB7A2 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getPerspectiveRemoveIgnoredMarginPerCell", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getPerspectiveRemoveIgnoredMarginPerCell)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getPolygonalApproxAccuracyRate(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getPolygonalApproxAccuracyRate_m7C1A2CB647F5B6C15B984AC387CA19AF3FA1E3B6 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getPolygonalApproxAccuracyRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getPolygonalApproxAccuracyRate)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::aruco_DetectorParameters_getAdaptiveThreshWinSizeMax(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_aruco_DetectorParameters_getAdaptiveThreshWinSizeMax_m3442B12E751EAD489D42D746774C86117ABF43C0 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getAdaptiveThreshWinSizeMax", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getAdaptiveThreshWinSizeMax)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::aruco_DetectorParameters_getAdaptiveThreshWinSizeMin(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_aruco_DetectorParameters_getAdaptiveThreshWinSizeMin_mA7BDE577D14953936F5A3AEE537DCF87251B0FA6 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getAdaptiveThreshWinSizeMin", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getAdaptiveThreshWinSizeMin)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::aruco_DetectorParameters_getAdaptiveThreshWinSizeStep(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_aruco_DetectorParameters_getAdaptiveThreshWinSizeStep_m562D8CB508497D76F9241834CED66891C04BD370 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getAdaptiveThreshWinSizeStep", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getAdaptiveThreshWinSizeStep)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::aruco_DetectorParameters_getCornerRefinementMaxIterations(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_aruco_DetectorParameters_getCornerRefinementMaxIterations_m123D46A230ABCB9D06001B63DDB408B491896885 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getCornerRefinementMaxIterations", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getCornerRefinementMaxIterations)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::aruco_DetectorParameters_getCornerRefinementWinSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_aruco_DetectorParameters_getCornerRefinementWinSize_m3B8B47593662CD1E50B907F9E3E4F8DBC9763375 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getCornerRefinementWinSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getCornerRefinementWinSize)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::aruco_DetectorParameters_getMarkerBorderBits(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_aruco_DetectorParameters_getMarkerBorderBits_m604858E41C36A0C0D680308DF24AE2D51E3BC8F0 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getMarkerBorderBits", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getMarkerBorderBits)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::aruco_DetectorParameters_getMinDistanceToBorder(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_aruco_DetectorParameters_getMinDistanceToBorder_m34A1E22F15090FD4806A368891BB5DC7ADACACBA (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getMinDistanceToBorder", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getMinDistanceToBorder)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::aruco_DetectorParameters_getPerspectiveRemovePixelPerCell(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_aruco_DetectorParameters_getPerspectiveRemovePixelPerCell_mD3EF1752CD6F8A45EB6DCD10B88B15627D16E51C (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getPerspectiveRemovePixelPerCell", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getPerspectiveRemovePixelPerCell)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::aruco_Ptr_Dictionary_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_Ptr_Dictionary_delete_mDA41A49660AD8E5DD6BD7A97BD471BB82BA87F84 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_Ptr_Dictionary_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_Ptr_Dictionary_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::aruco_Ptr_Dictionary_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_aruco_Ptr_Dictionary_get_mA9CC8EFA45FCD174345BBF54F022DE9B0BBB9851 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_Ptr_Dictionary_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_Ptr_Dictionary_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::aruco_Dictionary_setMarkerSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_Dictionary_setMarkerSize_m71F30C6821F4FD2F2AC15FE2D5A4E041885B599B (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_Dictionary_setMarkerSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_Dictionary_setMarkerSize)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_Dictionary_setMaxCorrectionBits(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_Dictionary_setMaxCorrectionBits_m5A8F03D4D3152D01795628BBF692D59550EE0F2A (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_Dictionary_setMaxCorrectionBits", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_Dictionary_setMaxCorrectionBits)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::aruco_Dictionary_getBytesList(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_aruco_Dictionary_getBytesList_mB1A4584C6D75EAA74236587A7691C6A3E339D6FC (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_Dictionary_getBytesList", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_Dictionary_getBytesList)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::aruco_Dictionary_getMarkerSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_aruco_Dictionary_getMarkerSize_m94CE136D336219B6214C94AD3C9B2E32132E09C3 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_Dictionary_getMarkerSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_Dictionary_getMarkerSize)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::aruco_Dictionary_getMaxCorrectionBits(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_aruco_Dictionary_getMaxCorrectionBits_m7C83F850EAECF1FA8FEA5B9702469CE516CC6C15 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_Dictionary_getMaxCorrectionBits", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_Dictionary_getMaxCorrectionBits)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::bgsegm_createBackgroundSubtractorMOG(System.Int32,System.Int32,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_bgsegm_createBackgroundSubtractorMOG_mFBDDB513CC51A2E96298DD4ECEAA800EB43A5C17 (int32_t ___history0, int32_t ___nmixtures1, double ___backgroundRatio2, double ___noiseSigma3, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_createBackgroundSubtractorMOG", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_createBackgroundSubtractorMOG)(___history0, ___nmixtures1, ___backgroundRatio2, ___noiseSigma3);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___history0, ___nmixtures1, ___backgroundRatio2, ___noiseSigma3);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_Ptr_BackgroundSubtractorMOG_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_Ptr_BackgroundSubtractorMOG_delete_mE35777AAD69DCBF306B69683332A1795A81329D5 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_Ptr_BackgroundSubtractorMOG_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_Ptr_BackgroundSubtractorMOG_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::bgsegm_Ptr_BackgroundSubtractorMOG_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_bgsegm_Ptr_BackgroundSubtractorMOG_get_m10556313FC583AD4769E0D5A034B9DE2C2D5F5E9 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_Ptr_BackgroundSubtractorMOG_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_Ptr_BackgroundSubtractorMOG_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_getHistory(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_bgsegm_BackgroundSubtractorMOG_getHistory_mEDC702FAAE298AA07E06AF02B095E8F451F57114 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorMOG_getHistory", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorMOG_getHistory)(___ptr0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_setHistory(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorMOG_setHistory_m35E6BDB9064690B0AD4487204F3CA52E5EE51823 (intptr_t ___ptr0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorMOG_setHistory", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorMOG_setHistory)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_getNMixtures(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_bgsegm_BackgroundSubtractorMOG_getNMixtures_m2C88F8514092105D87092E382E0ED9012DFC9CF7 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorMOG_getNMixtures", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorMOG_getNMixtures)(___ptr0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_setNMixtures(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorMOG_setNMixtures_m5189A6D35A9F819F0AB8CFB97F4C915A4A90CC66 (intptr_t ___ptr0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorMOG_setNMixtures", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorMOG_setNMixtures)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_getBackgroundRatio(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_bgsegm_BackgroundSubtractorMOG_getBackgroundRatio_m16608EBD2534272B501A890C9B3FDB49ED486E36 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorMOG_getBackgroundRatio", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorMOG_getBackgroundRatio)(___ptr0);
	#else
	double returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_setBackgroundRatio(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorMOG_setBackgroundRatio_m4A1248496AD9A6863B76D00065E305A4BC3B02C3 (intptr_t ___ptr0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorMOG_setBackgroundRatio", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorMOG_setBackgroundRatio)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_getNoiseSigma(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_bgsegm_BackgroundSubtractorMOG_getNoiseSigma_m9EE07F4E200CC927586B966E56D7652E007755FD (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorMOG_getNoiseSigma", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorMOG_getNoiseSigma)(___ptr0);
	#else
	double returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_setNoiseSigma(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorMOG_setNoiseSigma_m100B67AD28C2DB5A5C1724396BE70F596089D971 (intptr_t ___ptr0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorMOG_setNoiseSigma", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorMOG_setNoiseSigma)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::bgsegm_createBackgroundSubtractorGMG(System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_bgsegm_createBackgroundSubtractorGMG_m2691734D0537882A43D7E27FCB11EAF16C57613E (int32_t ___initializationFrames0, double ___decisionThreshold1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_createBackgroundSubtractorGMG", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_createBackgroundSubtractorGMG)(___initializationFrames0, ___decisionThreshold1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___initializationFrames0, ___decisionThreshold1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_Ptr_BackgroundSubtractorGMG_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_Ptr_BackgroundSubtractorGMG_delete_mD1CAC360FBA60C58452C97FF4EFCE3C47DF57E19 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_Ptr_BackgroundSubtractorGMG_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_Ptr_BackgroundSubtractorGMG_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::bgsegm_Ptr_BackgroundSubtractorGMG_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_bgsegm_Ptr_BackgroundSubtractorGMG_get_m962C72C3BC5FC5D11D3A9861766960518DF92546 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_Ptr_BackgroundSubtractorGMG_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_Ptr_BackgroundSubtractorGMG_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getMaxFeatures(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_bgsegm_BackgroundSubtractorGMG_getMaxFeatures_m35EFCC85602750095813F3F25426B00B6CA53064 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_getMaxFeatures", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_getMaxFeatures)(___ptr0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setMaxFeatures(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setMaxFeatures_m2A5C098883C19D3C335569778121BDCD5CB5CA2D (intptr_t ___ptr0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_setMaxFeatures", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_setMaxFeatures)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getDefaultLearningRate(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_bgsegm_BackgroundSubtractorGMG_getDefaultLearningRate_m2301F8D8129626EC99641510C0EC9787D6E7C6DA (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_getDefaultLearningRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_getDefaultLearningRate)(___ptr0);
	#else
	double returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setDefaultLearningRate(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setDefaultLearningRate_m9FEC4BE4A416B5D944FB869A2685311D038BDD16 (intptr_t ___ptr0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_setDefaultLearningRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_setDefaultLearningRate)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getNumFrames(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_bgsegm_BackgroundSubtractorGMG_getNumFrames_m7A41338487732840CDE4840E5AE4A8D5DF54261B (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_getNumFrames", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_getNumFrames)(___ptr0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setNumFrames(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setNumFrames_m3935AE706DF2A66BC1A64E58BB9C496CFD71C234 (intptr_t ___ptr0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_setNumFrames", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_setNumFrames)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getQuantizationLevels(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_bgsegm_BackgroundSubtractorGMG_getQuantizationLevels_mF90323C7F1CFB7537F288F9D985A3123CB069DA9 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_getQuantizationLevels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_getQuantizationLevels)(___ptr0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setQuantizationLevels(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setQuantizationLevels_m6EA46629D2930FCCC2F1422C53E1E275F04FCDDA (intptr_t ___ptr0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_setQuantizationLevels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_setQuantizationLevels)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getBackgroundPrior(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_bgsegm_BackgroundSubtractorGMG_getBackgroundPrior_m8E8B0C3F9FB55AC3742C7EDF3AC757819D7CED68 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_getBackgroundPrior", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_getBackgroundPrior)(___ptr0);
	#else
	double returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setBackgroundPrior(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setBackgroundPrior_m9A86F4243AA4FCE5097F580E044100EE0A3490F2 (intptr_t ___ptr0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_setBackgroundPrior", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_setBackgroundPrior)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getSmoothingRadius(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_bgsegm_BackgroundSubtractorGMG_getSmoothingRadius_m7212C85C2B7B1D9BA203DD23679B22F0DE4EC3A6 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_getSmoothingRadius", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_getSmoothingRadius)(___ptr0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setSmoothingRadius(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setSmoothingRadius_m7E52716F643FC05EA11FB41FE1FB254D938F182F (intptr_t ___ptr0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_setSmoothingRadius", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_setSmoothingRadius)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getDecisionThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_bgsegm_BackgroundSubtractorGMG_getDecisionThreshold_mDDB96F56D450835FB58D3FD90A2E6B95B7DBB529 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_getDecisionThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_getDecisionThreshold)(___ptr0);
	#else
	double returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setDecisionThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setDecisionThreshold_m099518B6125E348AED1CBCC42C815E0D630B130D (intptr_t ___ptr0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_setDecisionThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_setDecisionThreshold)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getUpdateBackgroundModel(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_bgsegm_BackgroundSubtractorGMG_getUpdateBackgroundModel_m38CDF5014A1793749C215C098F84BA29550F633E (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_getUpdateBackgroundModel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_getUpdateBackgroundModel)(___ptr0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setUpdateBackgroundModel(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setUpdateBackgroundModel_mE5E2D0E676B3701872A048F2BF80CA088EEA87A0 (intptr_t ___ptr0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_setUpdateBackgroundModel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_setUpdateBackgroundModel)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getMinVal(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_bgsegm_BackgroundSubtractorGMG_getMinVal_m1D17F68AEE93823608FE9B632A617B05DC104EAB (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_getMinVal", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_getMinVal)(___ptr0);
	#else
	double returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setMinVal(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setMinVal_m79B1158BE999765B92E1601CB884B9F4CF15E2BF (intptr_t ___ptr0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_setMinVal", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_setMinVal)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getMaxVal(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_bgsegm_BackgroundSubtractorGMG_getMaxVal_mB14AE74D54921093A7E45F926450BA3788498241 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_getMaxVal", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_getMaxVal)(___ptr0);
	#else
	double returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setMaxVal(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setMaxVal_m6B4F7629F33A07345DBAC5F5DD6EAE6A259C7D95 (intptr_t ___ptr0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_setMaxVal", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_setMaxVal)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::flann_Index_new(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_flann_Index_new_mF856651FB539D5E43ABDFA435C74825D3395CCDF (intptr_t ___features0, intptr_t ___params1, int32_t ___distType2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_Index_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(flann_Index_new)(___features0, ___params1, ___distType2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___features0, ___params1, ___distType2);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::flann_Index_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_Index_delete_m047EDF95ABDCC6040144DCB0236ED8232C43D605 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_Index_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_Index_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::flann_Index_knnSearch1(System.IntPtr,System.Single[],System.Int32,System.Int32[],System.Single[],System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_Index_knnSearch1_mAE2DB48D025A9C81E6DCC78B5647A8B978D486FB (intptr_t ___obj0, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___queries1, int32_t ___queriesLength2, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___indices3, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___dists4, int32_t ___knn5, intptr_t ___params6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float*, int32_t, int32_t*, float*, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_Index_knnSearch1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___queries1' to native representation
	float* ____queries1_marshaled = NULL;
	if (___queries1 != NULL)
	{
		____queries1_marshaled = reinterpret_cast<float*>((___queries1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___indices3' to native representation
	int32_t* ____indices3_marshaled = NULL;
	if (___indices3 != NULL)
	{
		il2cpp_array_size_t ____indices3_Length = (___indices3)->max_length;
		____indices3_marshaled = il2cpp_codegen_marshal_allocate_array<int32_t>(____indices3_Length);
		memset(____indices3_marshaled, 0, ____indices3_Length * sizeof(int32_t));
	}

	// Marshaling of parameter '___dists4' to native representation
	float* ____dists4_marshaled = NULL;
	if (___dists4 != NULL)
	{
		il2cpp_array_size_t ____dists4_Length = (___dists4)->max_length;
		____dists4_marshaled = il2cpp_codegen_marshal_allocate_array<float>(____dists4_Length);
		memset(____dists4_marshaled, 0, ____dists4_Length * sizeof(float));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_Index_knnSearch1)(___obj0, ____queries1_marshaled, ___queriesLength2, ____indices3_marshaled, ____dists4_marshaled, ___knn5, ___params6);
	#else
	il2cppPInvokeFunc(___obj0, ____queries1_marshaled, ___queriesLength2, ____indices3_marshaled, ____dists4_marshaled, ___knn5, ___params6);
	#endif

	// Marshaling of parameter '___indices3' back from native representation
	if (____indices3_marshaled != NULL)
	{
		il2cpp_array_size_t ____indices3_Length = (___indices3)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____indices3_Length); i++)
		{
			(___indices3)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____indices3_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___indices3' native representation
	il2cpp_codegen_marshal_free(____indices3_marshaled);
	____indices3_marshaled = NULL;

	// Marshaling of parameter '___dists4' back from native representation
	if (____dists4_marshaled != NULL)
	{
		il2cpp_array_size_t ____dists4_Length = (___dists4)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____dists4_Length); i++)
		{
			(___dists4)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____dists4_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___dists4' native representation
	il2cpp_codegen_marshal_free(____dists4_marshaled);
	____dists4_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::flann_Index_knnSearch2(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_Index_knnSearch2_m2A8A0AAF2FCDB10E8E6B1562827B6E14C917EA3F (intptr_t ___obj0, intptr_t ___queries1, intptr_t ___indices2, intptr_t ___dists3, int32_t ___knn4, intptr_t ___params5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_Index_knnSearch2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_Index_knnSearch2)(___obj0, ___queries1, ___indices2, ___dists3, ___knn4, ___params5);
	#else
	il2cppPInvokeFunc(___obj0, ___queries1, ___indices2, ___dists3, ___knn4, ___params5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::flann_Index_knnSearch3(System.IntPtr,System.IntPtr,System.Int32[],System.Single[],System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_Index_knnSearch3_m15798246953C892A58AA0034B44A19C241D61F2B (intptr_t ___obj0, intptr_t ___queries1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___indices2, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___dists3, int32_t ___knn4, intptr_t ___params5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t*, float*, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_Index_knnSearch3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___indices2' to native representation
	int32_t* ____indices2_marshaled = NULL;
	if (___indices2 != NULL)
	{
		il2cpp_array_size_t ____indices2_Length = (___indices2)->max_length;
		____indices2_marshaled = il2cpp_codegen_marshal_allocate_array<int32_t>(____indices2_Length);
		memset(____indices2_marshaled, 0, ____indices2_Length * sizeof(int32_t));
	}

	// Marshaling of parameter '___dists3' to native representation
	float* ____dists3_marshaled = NULL;
	if (___dists3 != NULL)
	{
		il2cpp_array_size_t ____dists3_Length = (___dists3)->max_length;
		____dists3_marshaled = il2cpp_codegen_marshal_allocate_array<float>(____dists3_Length);
		memset(____dists3_marshaled, 0, ____dists3_Length * sizeof(float));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_Index_knnSearch3)(___obj0, ___queries1, ____indices2_marshaled, ____dists3_marshaled, ___knn4, ___params5);
	#else
	il2cppPInvokeFunc(___obj0, ___queries1, ____indices2_marshaled, ____dists3_marshaled, ___knn4, ___params5);
	#endif

	// Marshaling of parameter '___indices2' back from native representation
	if (____indices2_marshaled != NULL)
	{
		il2cpp_array_size_t ____indices2_Length = (___indices2)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____indices2_Length); i++)
		{
			(___indices2)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____indices2_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___indices2' native representation
	il2cpp_codegen_marshal_free(____indices2_marshaled);
	____indices2_marshaled = NULL;

	// Marshaling of parameter '___dists3' back from native representation
	if (____dists3_marshaled != NULL)
	{
		il2cpp_array_size_t ____dists3_Length = (___dists3)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____dists3_Length); i++)
		{
			(___dists3)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____dists3_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___dists3' native representation
	il2cpp_codegen_marshal_free(____dists3_marshaled);
	____dists3_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::flann_Index_radiusSearch1(System.IntPtr,System.Single[],System.Int32,System.Int32[],System.Int32,System.Single[],System.Int32,System.Single,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_Index_radiusSearch1_m5497BA1ADAEC95FF8C7A0D58109DA6B42B6C751F (intptr_t ___obj0, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___queries1, int32_t ___queriesLength2, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___indices3, int32_t ___indicesLength4, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___dists5, int32_t ___dists_length6, float ___radius7, int32_t ___maxResults8, intptr_t ___params9, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float*, int32_t, int32_t*, int32_t, float*, int32_t, float, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(float) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_Index_radiusSearch1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___queries1' to native representation
	float* ____queries1_marshaled = NULL;
	if (___queries1 != NULL)
	{
		____queries1_marshaled = reinterpret_cast<float*>((___queries1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___indices3' to native representation
	int32_t* ____indices3_marshaled = NULL;
	if (___indices3 != NULL)
	{
		il2cpp_array_size_t ____indices3_Length = (___indices3)->max_length;
		____indices3_marshaled = il2cpp_codegen_marshal_allocate_array<int32_t>(____indices3_Length);
		memset(____indices3_marshaled, 0, ____indices3_Length * sizeof(int32_t));
	}

	// Marshaling of parameter '___dists5' to native representation
	float* ____dists5_marshaled = NULL;
	if (___dists5 != NULL)
	{
		il2cpp_array_size_t ____dists5_Length = (___dists5)->max_length;
		____dists5_marshaled = il2cpp_codegen_marshal_allocate_array<float>(____dists5_Length);
		memset(____dists5_marshaled, 0, ____dists5_Length * sizeof(float));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_Index_radiusSearch1)(___obj0, ____queries1_marshaled, ___queriesLength2, ____indices3_marshaled, ___indicesLength4, ____dists5_marshaled, ___dists_length6, ___radius7, ___maxResults8, ___params9);
	#else
	il2cppPInvokeFunc(___obj0, ____queries1_marshaled, ___queriesLength2, ____indices3_marshaled, ___indicesLength4, ____dists5_marshaled, ___dists_length6, ___radius7, ___maxResults8, ___params9);
	#endif

	// Marshaling of parameter '___indices3' back from native representation
	if (____indices3_marshaled != NULL)
	{
		il2cpp_array_size_t ____indices3_Length = (___indices3)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____indices3_Length); i++)
		{
			(___indices3)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____indices3_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___indices3' native representation
	il2cpp_codegen_marshal_free(____indices3_marshaled);
	____indices3_marshaled = NULL;

	// Marshaling of parameter '___dists5' back from native representation
	if (____dists5_marshaled != NULL)
	{
		il2cpp_array_size_t ____dists5_Length = (___dists5)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____dists5_Length); i++)
		{
			(___dists5)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____dists5_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___dists5' native representation
	il2cpp_codegen_marshal_free(____dists5_marshaled);
	____dists5_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::flann_Index_radiusSearch2(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Single,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_Index_radiusSearch2_mB7DD2C1BB0E5037B78C58296353FBEE96F75DFB7 (intptr_t ___obj0, intptr_t ___queries1, intptr_t ___indices2, intptr_t ___dists3, float ___radius4, int32_t ___maxResults5, intptr_t ___params6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, float, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_Index_radiusSearch2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_Index_radiusSearch2)(___obj0, ___queries1, ___indices2, ___dists3, ___radius4, ___maxResults5, ___params6);
	#else
	il2cppPInvokeFunc(___obj0, ___queries1, ___indices2, ___dists3, ___radius4, ___maxResults5, ___params6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::flann_Index_radiusSearch3(System.IntPtr,System.IntPtr,System.Int32[],System.Int32,System.Single[],System.Int32,System.Single,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_Index_radiusSearch3_m925896A35FCFC3CE40B9F3E247F8626AA1F08AEC (intptr_t ___obj0, intptr_t ___queries1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___indices2, int32_t ___indicesLength3, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___dists4, int32_t ___distsLength5, float ___radius6, int32_t ___maxResults7, intptr_t ___params8, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t*, int32_t, float*, int32_t, float, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(float) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_Index_radiusSearch3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___indices2' to native representation
	int32_t* ____indices2_marshaled = NULL;
	if (___indices2 != NULL)
	{
		il2cpp_array_size_t ____indices2_Length = (___indices2)->max_length;
		____indices2_marshaled = il2cpp_codegen_marshal_allocate_array<int32_t>(____indices2_Length);
		memset(____indices2_marshaled, 0, ____indices2_Length * sizeof(int32_t));
	}

	// Marshaling of parameter '___dists4' to native representation
	float* ____dists4_marshaled = NULL;
	if (___dists4 != NULL)
	{
		il2cpp_array_size_t ____dists4_Length = (___dists4)->max_length;
		____dists4_marshaled = il2cpp_codegen_marshal_allocate_array<float>(____dists4_Length);
		memset(____dists4_marshaled, 0, ____dists4_Length * sizeof(float));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_Index_radiusSearch3)(___obj0, ___queries1, ____indices2_marshaled, ___indicesLength3, ____dists4_marshaled, ___distsLength5, ___radius6, ___maxResults7, ___params8);
	#else
	il2cppPInvokeFunc(___obj0, ___queries1, ____indices2_marshaled, ___indicesLength3, ____dists4_marshaled, ___distsLength5, ___radius6, ___maxResults7, ___params8);
	#endif

	// Marshaling of parameter '___indices2' back from native representation
	if (____indices2_marshaled != NULL)
	{
		il2cpp_array_size_t ____indices2_Length = (___indices2)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____indices2_Length); i++)
		{
			(___indices2)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____indices2_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___indices2' native representation
	il2cpp_codegen_marshal_free(____indices2_marshaled);
	____indices2_marshaled = NULL;

	// Marshaling of parameter '___dists4' back from native representation
	if (____dists4_marshaled != NULL)
	{
		il2cpp_array_size_t ____dists4_Length = (___dists4)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____dists4_Length); i++)
		{
			(___dists4)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____dists4_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___dists4' native representation
	il2cpp_codegen_marshal_free(____dists4_marshaled);
	____dists4_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::flann_Index_save(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_Index_save_m1AF2DD6FD14355126A188E05F4D2598964CB0613 (intptr_t ___obj0, String_t* ___filename1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_Index_save", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___filename1' to native representation
	char* ____filename1_marshaled = NULL;
	____filename1_marshaled = il2cpp_codegen_marshal_string(___filename1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_Index_save)(___obj0, ____filename1_marshaled);
	#else
	il2cppPInvokeFunc(___obj0, ____filename1_marshaled);
	#endif

	// Marshaling cleanup of parameter '___filename1' native representation
	il2cpp_codegen_marshal_free(____filename1_marshaled);
	____filename1_marshaled = NULL;

}
// System.IntPtr OpenCvSharp.NativeMethods::flann_IndexParams_new()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_flann_IndexParams_new_mB319F7CE7BBF3735D40BEBBEDDBDD7A7AD530158 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(flann_IndexParams_new)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::flann_IndexParams_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_IndexParams_delete_mB77C7E3EA1B431D9C0F31A038776A1E72CB3B531 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_IndexParams_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::flann_IndexParams_getString(System.IntPtr,System.String,System.String,System.Text.StringBuilder)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_IndexParams_getString_m9D068137F7A5037253A4C5B7BBF4AE61CE8DAD58 (intptr_t ___obj0, String_t* ___key1, String_t* ___defaultVal2, StringBuilder_t* ___result3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, char*, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(char*) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_getString", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___key1' to native representation
	char* ____key1_marshaled = NULL;
	____key1_marshaled = il2cpp_codegen_marshal_string(___key1);

	// Marshaling of parameter '___defaultVal2' to native representation
	char* ____defaultVal2_marshaled = NULL;
	____defaultVal2_marshaled = il2cpp_codegen_marshal_string(___defaultVal2);

	// Marshaling of parameter '___result3' to native representation
	char* ____result3_marshaled = NULL;
	____result3_marshaled = il2cpp_codegen_marshal_string_builder(___result3);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_IndexParams_getString)(___obj0, ____key1_marshaled, ____defaultVal2_marshaled, ____result3_marshaled);
	#else
	il2cppPInvokeFunc(___obj0, ____key1_marshaled, ____defaultVal2_marshaled, ____result3_marshaled);
	#endif

	// Marshaling cleanup of parameter '___key1' native representation
	il2cpp_codegen_marshal_free(____key1_marshaled);
	____key1_marshaled = NULL;

	// Marshaling cleanup of parameter '___defaultVal2' native representation
	il2cpp_codegen_marshal_free(____defaultVal2_marshaled);
	____defaultVal2_marshaled = NULL;

	// Marshaling of parameter '___result3' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___result3, ____result3_marshaled);

	// Marshaling cleanup of parameter '___result3' native representation
	il2cpp_codegen_marshal_free(____result3_marshaled);
	____result3_marshaled = NULL;

}
// System.Int32 OpenCvSharp.NativeMethods::flann_IndexParams_getInt(System.IntPtr,System.String,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_flann_IndexParams_getInt_m7C73598C0679776DF57EEB659FF471341D34EE34 (intptr_t ___obj0, String_t* ___key1, int32_t ___defaultVal2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_getInt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___key1' to native representation
	char* ____key1_marshaled = NULL;
	____key1_marshaled = il2cpp_codegen_marshal_string(___key1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(flann_IndexParams_getInt)(___obj0, ____key1_marshaled, ___defaultVal2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ____key1_marshaled, ___defaultVal2);
	#endif

	// Marshaling cleanup of parameter '___key1' native representation
	il2cpp_codegen_marshal_free(____key1_marshaled);
	____key1_marshaled = NULL;

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::flann_IndexParams_getDouble(System.IntPtr,System.String,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_flann_IndexParams_getDouble_m1A900812642B8AB31D1CCE0DC47C95CE68EACD6A (intptr_t ___obj0, String_t* ___key1, double ___defaultVal2, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, char*, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_getDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___key1' to native representation
	char* ____key1_marshaled = NULL;
	____key1_marshaled = il2cpp_codegen_marshal_string(___key1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(flann_IndexParams_getDouble)(___obj0, ____key1_marshaled, ___defaultVal2);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0, ____key1_marshaled, ___defaultVal2);
	#endif

	// Marshaling cleanup of parameter '___key1' native representation
	il2cpp_codegen_marshal_free(____key1_marshaled);
	____key1_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::flann_IndexParams_setString(System.IntPtr,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_IndexParams_setString_m27361A9ED3D2AB4F8AFFC8341ABCD556BAF90A9E (intptr_t ___obj0, String_t* ___key1, String_t* ___value2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_setString", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___key1' to native representation
	char* ____key1_marshaled = NULL;
	____key1_marshaled = il2cpp_codegen_marshal_string(___key1);

	// Marshaling of parameter '___value2' to native representation
	char* ____value2_marshaled = NULL;
	____value2_marshaled = il2cpp_codegen_marshal_string(___value2);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_IndexParams_setString)(___obj0, ____key1_marshaled, ____value2_marshaled);
	#else
	il2cppPInvokeFunc(___obj0, ____key1_marshaled, ____value2_marshaled);
	#endif

	// Marshaling cleanup of parameter '___key1' native representation
	il2cpp_codegen_marshal_free(____key1_marshaled);
	____key1_marshaled = NULL;

	// Marshaling cleanup of parameter '___value2' native representation
	il2cpp_codegen_marshal_free(____value2_marshaled);
	____value2_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::flann_IndexParams_setInt(System.IntPtr,System.String,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_IndexParams_setInt_m3ED11236BC0AE284B877F87A83960C81CE945340 (intptr_t ___obj0, String_t* ___key1, int32_t ___value2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_setInt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___key1' to native representation
	char* ____key1_marshaled = NULL;
	____key1_marshaled = il2cpp_codegen_marshal_string(___key1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_IndexParams_setInt)(___obj0, ____key1_marshaled, ___value2);
	#else
	il2cppPInvokeFunc(___obj0, ____key1_marshaled, ___value2);
	#endif

	// Marshaling cleanup of parameter '___key1' native representation
	il2cpp_codegen_marshal_free(____key1_marshaled);
	____key1_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::flann_IndexParams_setDouble(System.IntPtr,System.String,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_IndexParams_setDouble_m467DBA6931A22FB7743B557B34F6F35642A987A1 (intptr_t ___obj0, String_t* ___key1, double ___value2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_setDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___key1' to native representation
	char* ____key1_marshaled = NULL;
	____key1_marshaled = il2cpp_codegen_marshal_string(___key1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_IndexParams_setDouble)(___obj0, ____key1_marshaled, ___value2);
	#else
	il2cppPInvokeFunc(___obj0, ____key1_marshaled, ___value2);
	#endif

	// Marshaling cleanup of parameter '___key1' native representation
	il2cpp_codegen_marshal_free(____key1_marshaled);
	____key1_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::flann_IndexParams_setFloat(System.IntPtr,System.String,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_IndexParams_setFloat_mDCAC78444A8D0CAF3D94F2E7DE36C9453D317921 (intptr_t ___obj0, String_t* ___key1, float ___value2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_setFloat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___key1' to native representation
	char* ____key1_marshaled = NULL;
	____key1_marshaled = il2cpp_codegen_marshal_string(___key1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_IndexParams_setFloat)(___obj0, ____key1_marshaled, ___value2);
	#else
	il2cppPInvokeFunc(___obj0, ____key1_marshaled, ___value2);
	#endif

	// Marshaling cleanup of parameter '___key1' native representation
	il2cpp_codegen_marshal_free(____key1_marshaled);
	____key1_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::flann_IndexParams_setBool(System.IntPtr,System.String,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_IndexParams_setBool_m1D74B0CD675A9CCF4208AFCF279CF67AB187475C (intptr_t ___obj0, String_t* ___key1, int32_t ___value2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_setBool", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___key1' to native representation
	char* ____key1_marshaled = NULL;
	____key1_marshaled = il2cpp_codegen_marshal_string(___key1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_IndexParams_setBool)(___obj0, ____key1_marshaled, ___value2);
	#else
	il2cppPInvokeFunc(___obj0, ____key1_marshaled, ___value2);
	#endif

	// Marshaling cleanup of parameter '___key1' native representation
	il2cpp_codegen_marshal_free(____key1_marshaled);
	____key1_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::flann_IndexParams_setAlgorithm(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_IndexParams_setAlgorithm_m64D23F80F40DC7B151CB8374CFD710C8CD8C0811 (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_setAlgorithm", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_IndexParams_setAlgorithm)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::flann_LinearIndexParams_new()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_flann_LinearIndexParams_new_m722D4F56CF5BD17BC7944AEAC8370E6E2D1AB097 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_LinearIndexParams_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(flann_LinearIndexParams_new)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::flann_LinearIndexParams_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_LinearIndexParams_delete_mA8FCF1220F8727C637912DE9127871CCBE43BC91 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_LinearIndexParams_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_LinearIndexParams_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::flann_KDTreeIndexParams_new(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_flann_KDTreeIndexParams_new_mCDAA47A76391922DE625663B5D1FC95839DDE7C2 (int32_t ___trees0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_KDTreeIndexParams_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(flann_KDTreeIndexParams_new)(___trees0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___trees0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::flann_KDTreeIndexParams_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_KDTreeIndexParams_delete_m0ABD23C2B07B06360B7F2143725B2BAF75F960A5 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_KDTreeIndexParams_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_KDTreeIndexParams_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::flann_KMeansIndexParams_new(System.Int32,System.Int32,OpenCvSharp.Flann.FlannCentersInit,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_flann_KMeansIndexParams_new_mE86A8176E2CCAC93C134FD8BA23BDBBCC5B85FFC (int32_t ___branching0, int32_t ___iterations1, int32_t ___centers_init2, float ___cb_index3, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + 4 + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_KMeansIndexParams_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(flann_KMeansIndexParams_new)(___branching0, ___iterations1, ___centers_init2, ___cb_index3);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___branching0, ___iterations1, ___centers_init2, ___cb_index3);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::flann_KMeansIndexParams_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_KMeansIndexParams_delete_mB31A2DB6D920A51E9E51AC451E5C38CCCD292FF7 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_KMeansIndexParams_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_KMeansIndexParams_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::flann_CompositeIndexParams_new(System.Int32,System.Int32,System.Int32,OpenCvSharp.Flann.FlannCentersInit,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_flann_CompositeIndexParams_new_mF08D884CEC71453D97F90D833E00B2AF01107D12 (int32_t ___trees0, int32_t ___branching1, int32_t ___iterations2, int32_t ___centers_init3, float ___cb_index4, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t, int32_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_CompositeIndexParams_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(flann_CompositeIndexParams_new)(___trees0, ___branching1, ___iterations2, ___centers_init3, ___cb_index4);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___trees0, ___branching1, ___iterations2, ___centers_init3, ___cb_index4);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::flann_CompositeIndexParams_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_CompositeIndexParams_delete_m23C9155BA6C6DD791C39E5A45B36591A3144A7D8 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_CompositeIndexParams_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_CompositeIndexParams_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::flann_AutotunedIndexParams_new(System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_flann_AutotunedIndexParams_new_m1DDCA60123D0BDD4B27C993F1D67EAD01EBC7C1B (float ___targetPrecision0, float ___build_weight1, float ___memory_weight2, float ___sample_fraction3, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (float, float, float, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(float) + sizeof(float) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_AutotunedIndexParams_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(flann_AutotunedIndexParams_new)(___targetPrecision0, ___build_weight1, ___memory_weight2, ___sample_fraction3);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___targetPrecision0, ___build_weight1, ___memory_weight2, ___sample_fraction3);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::flann_AutotunedIndexParams_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_AutotunedIndexParams_delete_m3C2FEEA4A1ACB6D3907E9B265AF0AAB60F6D8685 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_AutotunedIndexParams_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_AutotunedIndexParams_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::flann_SavedIndexParams_new(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_flann_SavedIndexParams_new_mEA4C94B7E11154AA8307A3F4C5689AB40E67A2A2 (String_t* ___filename0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_SavedIndexParams_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___filename0' to native representation
	char* ____filename0_marshaled = NULL;
	____filename0_marshaled = il2cpp_codegen_marshal_string(___filename0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(flann_SavedIndexParams_new)(____filename0_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____filename0_marshaled);
	#endif

	// Marshaling cleanup of parameter '___filename0' native representation
	il2cpp_codegen_marshal_free(____filename0_marshaled);
	____filename0_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::flann_SavedIndexParams_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_SavedIndexParams_delete_m594FCCB01900C5B21436BF41FE79F94C6C771277 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_SavedIndexParams_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_SavedIndexParams_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::flann_SearchParams_new(System.Int32,System.Single,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_flann_SearchParams_new_m236AD11EDBB7BABD55BEC04301AD3F6A1A076473 (int32_t ___checks0, float ___eps1, int32_t ___sorted2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, float, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(float) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_SearchParams_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(flann_SearchParams_new)(___checks0, ___eps1, ___sorted2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___checks0, ___eps1, ___sorted2);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::flann_SearchParams_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_SearchParams_delete_mD4BF625B75A139C4165F6E09F0B1BB2C75926388 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_SearchParams_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_SearchParams_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::highgui_namedWindow(System.String,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_highgui_namedWindow_m1FE4929C94EEA4432DBD91759796D0FC23DCC17C (String_t* ___winname0, int32_t ___flags1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_namedWindow", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___winname0' to native representation
	char* ____winname0_marshaled = NULL;
	____winname0_marshaled = il2cpp_codegen_marshal_string(___winname0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(highgui_namedWindow)(____winname0_marshaled, ___flags1);
	#else
	il2cppPInvokeFunc(____winname0_marshaled, ___flags1);
	#endif

	// Marshaling cleanup of parameter '___winname0' native representation
	il2cpp_codegen_marshal_free(____winname0_marshaled);
	____winname0_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::highgui_destroyWindow(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_highgui_destroyWindow_m732C1D305D851A92AD54645F851D0FD90844F732 (String_t* ___winName0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_destroyWindow", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___winName0' to native representation
	char* ____winName0_marshaled = NULL;
	____winName0_marshaled = il2cpp_codegen_marshal_string(___winName0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(highgui_destroyWindow)(____winName0_marshaled);
	#else
	il2cppPInvokeFunc(____winName0_marshaled);
	#endif

	// Marshaling cleanup of parameter '___winName0' native representation
	il2cpp_codegen_marshal_free(____winName0_marshaled);
	____winName0_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::highgui_destroyAllWindows()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_highgui_destroyAllWindows_m0A3D05A7E4302E5A8858E05DECBB3707C5BBE002 (const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_destroyAllWindows", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(highgui_destroyAllWindows)();
	#else
	il2cppPInvokeFunc();
	#endif

}
// System.Void OpenCvSharp.NativeMethods::highgui_imshow(System.String,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_highgui_imshow_mAADBB521813BA2A0AEB02163ABA6A291D8A25214 (String_t* ___winname0, intptr_t ___mat1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_imshow", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___winname0' to native representation
	char* ____winname0_marshaled = NULL;
	____winname0_marshaled = il2cpp_codegen_marshal_string(___winname0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(highgui_imshow)(____winname0_marshaled, ___mat1);
	#else
	il2cppPInvokeFunc(____winname0_marshaled, ___mat1);
	#endif

	// Marshaling cleanup of parameter '___winname0' native representation
	il2cpp_codegen_marshal_free(____winname0_marshaled);
	____winname0_marshaled = NULL;

}
// System.Int32 OpenCvSharp.NativeMethods::highgui_startWindowThread()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_highgui_startWindowThread_m6E5E785B234117930435DF006CBCDCA5724E9590 (const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_startWindowThread", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(highgui_startWindowThread)();
	#else
	int32_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::highgui_waitKey(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_highgui_waitKey_m694801FB495ED6FEAC7B7AF252D7398AE341F40E (int32_t ___delay0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_waitKey", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(highgui_waitKey)(___delay0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___delay0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::highgui_resizeWindow(System.String,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_highgui_resizeWindow_m9A7D47A66BFDEA36C55BDFB467945B89DCDE8D01 (String_t* ___winName0, int32_t ___width1, int32_t ___height2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_resizeWindow", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___winName0' to native representation
	char* ____winName0_marshaled = NULL;
	____winName0_marshaled = il2cpp_codegen_marshal_string(___winName0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(highgui_resizeWindow)(____winName0_marshaled, ___width1, ___height2);
	#else
	il2cppPInvokeFunc(____winName0_marshaled, ___width1, ___height2);
	#endif

	// Marshaling cleanup of parameter '___winName0' native representation
	il2cpp_codegen_marshal_free(____winName0_marshaled);
	____winName0_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::highgui_moveWindow(System.String,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_highgui_moveWindow_m8CDEE1A95F8DFD88D1FBFDD325E4588F7F6C0320 (String_t* ___winName0, int32_t ___x1, int32_t ___y2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_moveWindow", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___winName0' to native representation
	char* ____winName0_marshaled = NULL;
	____winName0_marshaled = il2cpp_codegen_marshal_string(___winName0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(highgui_moveWindow)(____winName0_marshaled, ___x1, ___y2);
	#else
	il2cppPInvokeFunc(____winName0_marshaled, ___x1, ___y2);
	#endif

	// Marshaling cleanup of parameter '___winName0' native representation
	il2cpp_codegen_marshal_free(____winName0_marshaled);
	____winName0_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::highgui_setWindowProperty(System.String,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_highgui_setWindowProperty_m6ED3502F2A9B2FA5A1EA823F40694CDB3A25C01C (String_t* ___winName0, int32_t ___propId1, double ___propValue2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_setWindowProperty", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___winName0' to native representation
	char* ____winName0_marshaled = NULL;
	____winName0_marshaled = il2cpp_codegen_marshal_string(___winName0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(highgui_setWindowProperty)(____winName0_marshaled, ___propId1, ___propValue2);
	#else
	il2cppPInvokeFunc(____winName0_marshaled, ___propId1, ___propValue2);
	#endif

	// Marshaling cleanup of parameter '___winName0' native representation
	il2cpp_codegen_marshal_free(____winName0_marshaled);
	____winName0_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::highgui_setWindowTitle(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_highgui_setWindowTitle_mB1E00E5AF2CE1A44C64E3C3D0D633B3E6E555985 (String_t* ___winname0, String_t* ___title1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_setWindowTitle", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___winname0' to native representation
	char* ____winname0_marshaled = NULL;
	____winname0_marshaled = il2cpp_codegen_marshal_string(___winname0);

	// Marshaling of parameter '___title1' to native representation
	char* ____title1_marshaled = NULL;
	____title1_marshaled = il2cpp_codegen_marshal_string(___title1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(highgui_setWindowTitle)(____winname0_marshaled, ____title1_marshaled);
	#else
	il2cppPInvokeFunc(____winname0_marshaled, ____title1_marshaled);
	#endif

	// Marshaling cleanup of parameter '___winname0' native representation
	il2cpp_codegen_marshal_free(____winname0_marshaled);
	____winname0_marshaled = NULL;

	// Marshaling cleanup of parameter '___title1' native representation
	il2cpp_codegen_marshal_free(____title1_marshaled);
	____title1_marshaled = NULL;

}
// System.Double OpenCvSharp.NativeMethods::highgui_getWindowProperty(System.String,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_highgui_getWindowProperty_mA52AD2843EE2C82109920CAA70E05D4236301FB7 (String_t* ___winName0, int32_t ___propId1, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_getWindowProperty", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___winName0' to native representation
	char* ____winName0_marshaled = NULL;
	____winName0_marshaled = il2cpp_codegen_marshal_string(___winName0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(highgui_getWindowProperty)(____winName0_marshaled, ___propId1);
	#else
	double returnValue = il2cppPInvokeFunc(____winName0_marshaled, ___propId1);
	#endif

	// Marshaling cleanup of parameter '___winName0' native representation
	il2cpp_codegen_marshal_free(____winName0_marshaled);
	____winName0_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::highgui_setMouseCallback(System.String,OpenCvSharp.CvMouseCallback,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_highgui_setMouseCallback_m6094C9A256EC9F1B80296141B960E7FBDC70537D (String_t* ___winName0, CvMouseCallback_t22DBBF4F8817261C6B75DDC580CF521ACF39D8FB* ___onMouse1, intptr_t ___userData2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, Il2CppMethodPointer, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_setMouseCallback", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___winName0' to native representation
	char* ____winName0_marshaled = NULL;
	____winName0_marshaled = il2cpp_codegen_marshal_string(___winName0);

	// Marshaling of parameter '___onMouse1' to native representation
	Il2CppMethodPointer ____onMouse1_marshaled = NULL;
	____onMouse1_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___onMouse1));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(highgui_setMouseCallback)(____winName0_marshaled, ____onMouse1_marshaled, ___userData2);
	#else
	il2cppPInvokeFunc(____winName0_marshaled, ____onMouse1_marshaled, ___userData2);
	#endif

	// Marshaling cleanup of parameter '___winName0' native representation
	il2cpp_codegen_marshal_free(____winName0_marshaled);
	____winName0_marshaled = NULL;

}
// System.Int32 OpenCvSharp.NativeMethods::highgui_createTrackbar(System.String,System.String,System.Int32&,System.Int32,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_highgui_createTrackbar_m1681976564FF67640A1464DEFFDC7990B58EF872 (String_t* ___trackbarName0, String_t* ___winName1, int32_t* ___value2, int32_t ___count3, intptr_t ___onChange4, intptr_t ___userData5, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (char*, char*, int32_t*, int32_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(char*) + sizeof(int32_t*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_createTrackbar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___trackbarName0' to native representation
	char* ____trackbarName0_marshaled = NULL;
	____trackbarName0_marshaled = il2cpp_codegen_marshal_string(___trackbarName0);

	// Marshaling of parameter '___winName1' to native representation
	char* ____winName1_marshaled = NULL;
	____winName1_marshaled = il2cpp_codegen_marshal_string(___winName1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(highgui_createTrackbar)(____trackbarName0_marshaled, ____winName1_marshaled, ___value2, ___count3, ___onChange4, ___userData5);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____trackbarName0_marshaled, ____winName1_marshaled, ___value2, ___count3, ___onChange4, ___userData5);
	#endif

	// Marshaling cleanup of parameter '___trackbarName0' native representation
	il2cpp_codegen_marshal_free(____trackbarName0_marshaled);
	____trackbarName0_marshaled = NULL;

	// Marshaling cleanup of parameter '___winName1' native representation
	il2cpp_codegen_marshal_free(____winName1_marshaled);
	____winName1_marshaled = NULL;

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::highgui_getTrackbarPos(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_highgui_getTrackbarPos_m8013866B9BBFFD870D523D6610F401122ED51820 (String_t* ___trackbarName0, String_t* ___winName1, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (char*, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_getTrackbarPos", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___trackbarName0' to native representation
	char* ____trackbarName0_marshaled = NULL;
	____trackbarName0_marshaled = il2cpp_codegen_marshal_string(___trackbarName0);

	// Marshaling of parameter '___winName1' to native representation
	char* ____winName1_marshaled = NULL;
	____winName1_marshaled = il2cpp_codegen_marshal_string(___winName1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(highgui_getTrackbarPos)(____trackbarName0_marshaled, ____winName1_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____trackbarName0_marshaled, ____winName1_marshaled);
	#endif

	// Marshaling cleanup of parameter '___trackbarName0' native representation
	il2cpp_codegen_marshal_free(____trackbarName0_marshaled);
	____trackbarName0_marshaled = NULL;

	// Marshaling cleanup of parameter '___winName1' native representation
	il2cpp_codegen_marshal_free(____winName1_marshaled);
	____winName1_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::highgui_setTrackbarPos(System.String,System.String,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_highgui_setTrackbarPos_mFF74EC0672F958EABC64DC21B70FB658C3F4C3D9 (String_t* ___trackbarName0, String_t* ___winName1, int32_t ___pos2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(char*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_setTrackbarPos", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___trackbarName0' to native representation
	char* ____trackbarName0_marshaled = NULL;
	____trackbarName0_marshaled = il2cpp_codegen_marshal_string(___trackbarName0);

	// Marshaling of parameter '___winName1' to native representation
	char* ____winName1_marshaled = NULL;
	____winName1_marshaled = il2cpp_codegen_marshal_string(___winName1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(highgui_setTrackbarPos)(____trackbarName0_marshaled, ____winName1_marshaled, ___pos2);
	#else
	il2cppPInvokeFunc(____trackbarName0_marshaled, ____winName1_marshaled, ___pos2);
	#endif

	// Marshaling cleanup of parameter '___trackbarName0' native representation
	il2cpp_codegen_marshal_free(____trackbarName0_marshaled);
	____trackbarName0_marshaled = NULL;

	// Marshaling cleanup of parameter '___winName1' native representation
	il2cpp_codegen_marshal_free(____winName1_marshaled);
	____winName1_marshaled = NULL;

}
// System.Int32 OpenCvSharp.NativeMethods::highgui_createButton(System.String,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_highgui_createButton_mD8F7B24B05B944D31D1DB36C433A0A7F1FDD2924 (String_t* ___barName0, intptr_t ___onChange1, intptr_t ___userdata2, int32_t ___type3, int32_t ___initialButtonState4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (char*, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_createButton", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___barName0' to native representation
	char* ____barName0_marshaled = NULL;
	____barName0_marshaled = il2cpp_codegen_marshal_string(___barName0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(highgui_createButton)(____barName0_marshaled, ___onChange1, ___userdata2, ___type3, ___initialButtonState4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____barName0_marshaled, ___onChange1, ___userdata2, ___type3, ___initialButtonState4);
	#endif

	// Marshaling cleanup of parameter '___barName0' native representation
	il2cpp_codegen_marshal_free(____barName0_marshaled);
	____barName0_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgcodecs_imread(System.String,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgcodecs_imread_m01CE73FAC03ACD41B52BFC696DCEAE2F60BCF55B (String_t* ___filename0, int32_t ___flags1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_imread", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___filename0' to native representation
	char* ____filename0_marshaled = NULL;
	____filename0_marshaled = il2cpp_codegen_marshal_string(___filename0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgcodecs_imread)(____filename0_marshaled, ___flags1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____filename0_marshaled, ___flags1);
	#endif

	// Marshaling cleanup of parameter '___filename0' native representation
	il2cpp_codegen_marshal_free(____filename0_marshaled);
	____filename0_marshaled = NULL;

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgcodecs_imreadmulti(System.String,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgcodecs_imreadmulti_mC05DB1AAF0D68168B34D80E9E454DEC7EA3B9587 (String_t* ___filename0, intptr_t ___mats1, int32_t ___flags2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (char*, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_imreadmulti", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___filename0' to native representation
	char* ____filename0_marshaled = NULL;
	____filename0_marshaled = il2cpp_codegen_marshal_string(___filename0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgcodecs_imreadmulti)(____filename0_marshaled, ___mats1, ___flags2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____filename0_marshaled, ___mats1, ___flags2);
	#endif

	// Marshaling cleanup of parameter '___filename0' native representation
	il2cpp_codegen_marshal_free(____filename0_marshaled);
	____filename0_marshaled = NULL;

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgcodecs_imwrite(System.String,System.IntPtr,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgcodecs_imwrite_mBC352AA13C98F832DB2D552C76BFEBB0648D5B8C (String_t* ___filename0, intptr_t ___img1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___params2, int32_t ___paramsLength3, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (char*, intptr_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_imwrite", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___filename0' to native representation
	char* ____filename0_marshaled = NULL;
	____filename0_marshaled = il2cpp_codegen_marshal_string(___filename0);

	// Marshaling of parameter '___params2' to native representation
	int32_t* ____params2_marshaled = NULL;
	if (___params2 != NULL)
	{
		____params2_marshaled = reinterpret_cast<int32_t*>((___params2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgcodecs_imwrite)(____filename0_marshaled, ___img1, ____params2_marshaled, ___paramsLength3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____filename0_marshaled, ___img1, ____params2_marshaled, ___paramsLength3);
	#endif

	// Marshaling cleanup of parameter '___filename0' native representation
	il2cpp_codegen_marshal_free(____filename0_marshaled);
	____filename0_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgcodecs_imdecode_Mat(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgcodecs_imdecode_Mat_m1CB8230FB1EC2D2297DF54ADE2A2D3C7F8C7F392 (intptr_t ___buf0, int32_t ___flags1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_imdecode_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgcodecs_imdecode_Mat)(___buf0, ___flags1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___buf0, ___flags1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgcodecs_imdecode_vector(System.Byte[],System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgcodecs_imdecode_vector_m8344A79D79720423E16AE524C4AE129A2157F693 (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___buf0, intptr_t ___bufLength1, int32_t ___flags2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (uint8_t*, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_imdecode_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___buf0' to native representation
	uint8_t* ____buf0_marshaled = NULL;
	if (___buf0 != NULL)
	{
		____buf0_marshaled = reinterpret_cast<uint8_t*>((___buf0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgcodecs_imdecode_vector)(____buf0_marshaled, ___bufLength1, ___flags2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____buf0_marshaled, ___bufLength1, ___flags2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgcodecs_imdecode_InputArray(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgcodecs_imdecode_InputArray_m20A88B41A118E36B9D47B755E2FDACAD90418B49 (intptr_t ___buf0, int32_t ___flags1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_imdecode_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgcodecs_imdecode_InputArray)(___buf0, ___flags1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___buf0, ___flags1);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgcodecs_imencode_vector(System.String,System.IntPtr,System.IntPtr,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgcodecs_imencode_vector_mD38D26A64D0E89D9E85B1B2EF4DCFAB377B42291 (String_t* ___ext0, intptr_t ___img1, intptr_t ___buf2, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___params3, int32_t ___paramsLength4, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (char*, intptr_t, intptr_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_imencode_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___ext0' to native representation
	char* ____ext0_marshaled = NULL;
	____ext0_marshaled = il2cpp_codegen_marshal_string(___ext0);

	// Marshaling of parameter '___params3' to native representation
	int32_t* ____params3_marshaled = NULL;
	if (___params3 != NULL)
	{
		____params3_marshaled = reinterpret_cast<int32_t*>((___params3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgcodecs_imencode_vector)(____ext0_marshaled, ___img1, ___buf2, ____params3_marshaled, ___paramsLength4);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____ext0_marshaled, ___img1, ___buf2, ____params3_marshaled, ___paramsLength4);
	#endif

	// Marshaling cleanup of parameter '___ext0' native representation
	il2cpp_codegen_marshal_free(____ext0_marshaled);
	____ext0_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgcodecs_cvConvertImage_CvArr(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgcodecs_cvConvertImage_CvArr_m11E21AD10E1A1C730F0E1DBE4319F5A08DA15DB8 (intptr_t ___src0, intptr_t ___dst1, int32_t ___flags2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_cvConvertImage_CvArr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgcodecs_cvConvertImage_CvArr)(___src0, ___dst1, ___flags2);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___flags2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgcodecs_cvConvertImage_Mat(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgcodecs_cvConvertImage_Mat_m89C7F566F364D7716CD178631834C180FD5792A0 (intptr_t ___src0, intptr_t ___dst1, int32_t ___flags2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_cvConvertImage_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgcodecs_cvConvertImage_Mat)(___src0, ___dst1, ___flags2);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___flags2);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgcodecs_cvHaveImageReader(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgcodecs_cvHaveImageReader_mEA44E1586FA955E0CB364DF5947424B73F552B90 (String_t* ___fileName0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_cvHaveImageReader", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___fileName0' to native representation
	char* ____fileName0_marshaled = NULL;
	____fileName0_marshaled = il2cpp_codegen_marshal_string(___fileName0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgcodecs_cvHaveImageReader)(____fileName0_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____fileName0_marshaled);
	#endif

	// Marshaling cleanup of parameter '___fileName0' native representation
	il2cpp_codegen_marshal_free(____fileName0_marshaled);
	____fileName0_marshaled = NULL;

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgcodecs_cvHaveImageWriter(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgcodecs_cvHaveImageWriter_m24EDF22899BD6B30125BC53655D62DFF103AE7E8 (String_t* ___fileName0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_cvHaveImageWriter", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___fileName0' to native representation
	char* ____fileName0_marshaled = NULL;
	____fileName0_marshaled = il2cpp_codegen_marshal_string(___fileName0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgcodecs_cvHaveImageWriter)(____fileName0_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____fileName0_marshaled);
	#endif

	// Marshaling cleanup of parameter '___fileName0' native representation
	il2cpp_codegen_marshal_free(____fileName0_marshaled);
	____fileName0_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_new()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_objdetect_CascadeClassifier_new_m16074C085938FF5A456D3970C1551CE3C2295688 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_new)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_newFromFile(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_objdetect_CascadeClassifier_newFromFile_m2E086BBDAAE99CEA6D2103E2AE6BA44DA189BF31 (String_t* ___fileName0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_newFromFile", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___fileName0' to native representation
	char* ____fileName0_marshaled = NULL;
	____fileName0_marshaled = il2cpp_codegen_marshal_string(___fileName0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_newFromFile)(____fileName0_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____fileName0_marshaled);
	#endif

	// Marshaling cleanup of parameter '___fileName0' native representation
	il2cpp_codegen_marshal_free(____fileName0_marshaled);
	____fileName0_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_CascadeClassifier_delete_m93BD89077365D8C17533EAC8C46A2A2D4B44D147 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_empty(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_CascadeClassifier_empty_m9490A8DCC094A577020BBBAA64ED5496A47BC0BE (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_empty", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_empty)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_load(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_CascadeClassifier_load_m187FAD6E3206998D9014F7A4B4443C5C9217ACD2 (intptr_t ___obj0, String_t* ___fileName1, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_load", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___fileName1' to native representation
	char* ____fileName1_marshaled = NULL;
	____fileName1_marshaled = il2cpp_codegen_marshal_string(___fileName1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_load)(___obj0, ____fileName1_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ____fileName1_marshaled);
	#endif

	// Marshaling cleanup of parameter '___fileName1' native representation
	il2cpp_codegen_marshal_free(____fileName1_marshaled);
	____fileName1_marshaled = NULL;

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_read(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_CascadeClassifier_read_m6F646BD620B84CB405D35871520D266CB6A9CE32 (intptr_t ___obj0, intptr_t ___node1, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_read", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_read)(___obj0, ___node1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___node1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_detectMultiScale1(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Int32,System.Int32,OpenCvSharp.Size,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_CascadeClassifier_detectMultiScale1_mD584642AB4301AD49F31531FA0EC17A1B5AE297C (intptr_t ___obj0, intptr_t ___image1, intptr_t ___objects2, double ___scaleFactor3, int32_t ___minNeighbors4, int32_t ___flags5, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___minSize6, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___maxSize7, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, int32_t, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_detectMultiScale1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_detectMultiScale1)(___obj0, ___image1, ___objects2, ___scaleFactor3, ___minNeighbors4, ___flags5, ___minSize6, ___maxSize7);
	#else
	il2cppPInvokeFunc(___obj0, ___image1, ___objects2, ___scaleFactor3, ___minNeighbors4, ___flags5, ___minSize6, ___maxSize7);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_detectMultiScale2(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Int32,System.Int32,OpenCvSharp.Size,OpenCvSharp.Size,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_CascadeClassifier_detectMultiScale2_mF3871DC62241EFC167E73B9390FA9208152AB63D (intptr_t ___obj0, intptr_t ___image1, intptr_t ___objects2, intptr_t ___rejectLevels3, intptr_t ___levelWeights4, double ___scaleFactor5, int32_t ___minNeighbors6, int32_t ___flags7, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___minSize8, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___maxSize9, int32_t ___outputRejectLevels10, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, double, int32_t, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_detectMultiScale2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_detectMultiScale2)(___obj0, ___image1, ___objects2, ___rejectLevels3, ___levelWeights4, ___scaleFactor5, ___minNeighbors6, ___flags7, ___minSize8, ___maxSize9, ___outputRejectLevels10);
	#else
	il2cppPInvokeFunc(___obj0, ___image1, ___objects2, ___rejectLevels3, ___levelWeights4, ___scaleFactor5, ___minNeighbors6, ___flags7, ___minSize8, ___maxSize9, ___outputRejectLevels10);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_isOldFormatCascade(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_CascadeClassifier_isOldFormatCascade_m5C93DDC253737B44BF0E1DCFFBA9A3DD505109A1 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_isOldFormatCascade", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_isOldFormatCascade)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// OpenCvSharp.Size OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_getOriginalWindowSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 NativeMethods_objdetect_CascadeClassifier_getOriginalWindowSize_m69EF95BB5DB33DDF4F14671E78CB004FBA013C8E (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_getOriginalWindowSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_getOriginalWindowSize)(___obj0);
	#else
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_getFeatureType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_CascadeClassifier_getFeatureType_m12CB998033DDEA57CB4DD655614215EF92833FB0 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_getFeatureType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_getFeatureType)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_sizeof()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_HOGDescriptor_sizeof_m9080287A8E65456323E47AF9202237C428E4E77B (const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_sizeof", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_sizeof)();
	#else
	int32_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_objdetect_HOGDescriptor_new1_m4364D9059A3309600568A8A87E40C4205329B034 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_new2(OpenCvSharp.Size,OpenCvSharp.Size,OpenCvSharp.Size,OpenCvSharp.Size,System.Int32,System.Int32,System.Double,OpenCvSharp.HistogramNormType,System.Double,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_objdetect_HOGDescriptor_new2_mC01BED8DE0A2DF9B751F9CB58740F41E24CFE7A1 (Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___winSize0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___blockSize1, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___blockStride2, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___cellSize3, int32_t ___nbins4, int32_t ___derivAperture5, double ___winSigma6, int32_t ___histogramNormType7, double ___l2HysThreshold8, int32_t ___gammaCorrection9, int32_t ___nlevels10, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, double, int32_t, double, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + 4 + sizeof(double) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_new2)(___winSize0, ___blockSize1, ___blockStride2, ___cellSize3, ___nbins4, ___derivAperture5, ___winSigma6, ___histogramNormType7, ___l2HysThreshold8, ___gammaCorrection9, ___nlevels10);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___winSize0, ___blockSize1, ___blockStride2, ___cellSize3, ___nbins4, ___derivAperture5, ___winSigma6, ___histogramNormType7, ___l2HysThreshold8, ___gammaCorrection9, ___nlevels10);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_new3(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_objdetect_HOGDescriptor_new3_m1F6768B4411070DEA10F723684A2128FD926B642 (String_t* ___fileName0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___fileName0' to native representation
	char* ____fileName0_marshaled = NULL;
	____fileName0_marshaled = il2cpp_codegen_marshal_string(___fileName0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_new3)(____fileName0_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____fileName0_marshaled);
	#endif

	// Marshaling cleanup of parameter '___fileName0' native representation
	il2cpp_codegen_marshal_free(____fileName0_marshaled);
	____fileName0_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_delete_m505947F9F0A638C5052BFFC9996423B0891D9B31 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_delete)(___self0);
	#else
	il2cppPInvokeFunc(___self0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_getDescriptorSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_objdetect_HOGDescriptor_getDescriptorSize_m8A7EBD1819ECEE5B122C7AB5C466275D3C0FDEF7 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_getDescriptorSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_getDescriptorSize)(___self0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_checkDetectorSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_HOGDescriptor_checkDetectorSize_m56D6CFD7BCDF432D125A655FF17139F164045209 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_checkDetectorSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_checkDetectorSize)(___self0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_getWinSigma(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_objdetect_HOGDescriptor_getWinSigma_m0A497E7C4ABCA4AFC2078286F4D163BADF2B7C99 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_getWinSigma", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_getWinSigma)(___self0);
	#else
	double returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_setSVMDetector(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_setSVMDetector_m48AC4A1A05D27CB056B2835D143632B211EB1DF7 (intptr_t ___self0, intptr_t ___svmdetector1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_setSVMDetector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_setSVMDetector)(___self0, ___svmdetector1);
	#else
	il2cppPInvokeFunc(___self0, ___svmdetector1);
	#endif

}
// System.Boolean OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_load(System.IntPtr,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_objdetect_HOGDescriptor_load_mC9F07007E2EAECA21570374AD2145CEB81B6785D (intptr_t ___self0, String_t* ___filename1, String_t* ___objname2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, char*, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_load", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___filename1' to native representation
	char* ____filename1_marshaled = NULL;
	____filename1_marshaled = il2cpp_codegen_marshal_string(___filename1);

	// Marshaling of parameter '___objname2' to native representation
	char* ____objname2_marshaled = NULL;
	____objname2_marshaled = il2cpp_codegen_marshal_string(___objname2);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_load)(___self0, ____filename1_marshaled, ____objname2_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___self0, ____filename1_marshaled, ____objname2_marshaled);
	#endif

	// Marshaling cleanup of parameter '___filename1' native representation
	il2cpp_codegen_marshal_free(____filename1_marshaled);
	____filename1_marshaled = NULL;

	// Marshaling cleanup of parameter '___objname2' native representation
	il2cpp_codegen_marshal_free(____objname2_marshaled);
	____objname2_marshaled = NULL;

	return static_cast<bool>(returnValue);
}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_save(System.IntPtr,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_save_mF1CA179DDC2EB39ECAB4190DC3C24F68264F0262 (intptr_t ___self0, String_t* ___filename1, String_t* ___objname2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_save", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___filename1' to native representation
	char* ____filename1_marshaled = NULL;
	____filename1_marshaled = il2cpp_codegen_marshal_string(___filename1);

	// Marshaling of parameter '___objname2' to native representation
	char* ____objname2_marshaled = NULL;
	____objname2_marshaled = il2cpp_codegen_marshal_string(___objname2);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_save)(___self0, ____filename1_marshaled, ____objname2_marshaled);
	#else
	il2cppPInvokeFunc(___self0, ____filename1_marshaled, ____objname2_marshaled);
	#endif

	// Marshaling cleanup of parameter '___filename1' native representation
	il2cpp_codegen_marshal_free(____filename1_marshaled);
	____filename1_marshaled = NULL;

	// Marshaling cleanup of parameter '___objname2' native representation
	il2cpp_codegen_marshal_free(____objname2_marshaled);
	____objname2_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_compute(System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Size,OpenCvSharp.Size,OpenCvSharp.Point[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_compute_m3F098EEC0212A974ADF81AEB06997BF0994CEB73 (intptr_t ___self0, intptr_t ___img1, intptr_t ___descriptors2, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___winStride3, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___padding4, PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___locations5, int32_t ___locationsLength6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_compute", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___locations5' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____locations5_marshaled = NULL;
	if (___locations5 != NULL)
	{
		____locations5_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___locations5)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_compute)(___self0, ___img1, ___descriptors2, ___winStride3, ___padding4, ____locations5_marshaled, ___locationsLength6);
	#else
	il2cppPInvokeFunc(___self0, ___img1, ___descriptors2, ___winStride3, ___padding4, ____locations5_marshaled, ___locationsLength6);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_detect(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,OpenCvSharp.Size,OpenCvSharp.Size,OpenCvSharp.Point[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_detect_m9053A2A8C37723DD84C8977F0DAB179F6D50F6C8 (intptr_t ___self0, intptr_t ___img1, intptr_t ___foundLocations2, double ___hitThreshold3, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___winStride4, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___padding5, PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___searchLocations6, int32_t ___searchLocationsLength7, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_detect1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___searchLocations6' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____searchLocations6_marshaled = NULL;
	if (___searchLocations6 != NULL)
	{
		____searchLocations6_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___searchLocations6)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_detect1)(___self0, ___img1, ___foundLocations2, ___hitThreshold3, ___winStride4, ___padding5, ____searchLocations6_marshaled, ___searchLocationsLength7);
	#else
	il2cppPInvokeFunc(___self0, ___img1, ___foundLocations2, ___hitThreshold3, ___winStride4, ___padding5, ____searchLocations6_marshaled, ___searchLocationsLength7);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_detect(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,OpenCvSharp.Size,OpenCvSharp.Size,OpenCvSharp.Point[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_detect_m5A197C8781FB411560E0D042BFA2873A8C20739F (intptr_t ___self0, intptr_t ___img1, intptr_t ___foundLocations2, intptr_t ___weights3, double ___hitThreshold4, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___winStride5, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___padding6, PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___searchLocations7, int32_t ___searchLocationsLength8, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_detect2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___searchLocations7' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____searchLocations7_marshaled = NULL;
	if (___searchLocations7 != NULL)
	{
		____searchLocations7_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___searchLocations7)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_detect2)(___self0, ___img1, ___foundLocations2, ___weights3, ___hitThreshold4, ___winStride5, ___padding6, ____searchLocations7_marshaled, ___searchLocationsLength8);
	#else
	il2cppPInvokeFunc(___self0, ___img1, ___foundLocations2, ___weights3, ___hitThreshold4, ___winStride5, ___padding6, ____searchLocations7_marshaled, ___searchLocationsLength8);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_detectMultiScale(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,OpenCvSharp.Size,OpenCvSharp.Size,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_detectMultiScale_mE7885898B43D477A43E0E9ED91110C9729BAB28B (intptr_t ___self0, intptr_t ___img1, intptr_t ___foundLocations2, double ___hitThreshold3, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___winStride4, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___padding5, double ___scale6, int32_t ___groupThreshold7, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_detectMultiScale1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_detectMultiScale1)(___self0, ___img1, ___foundLocations2, ___hitThreshold3, ___winStride4, ___padding5, ___scale6, ___groupThreshold7);
	#else
	il2cppPInvokeFunc(___self0, ___img1, ___foundLocations2, ___hitThreshold3, ___winStride4, ___padding5, ___scale6, ___groupThreshold7);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_detectMultiScale(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,OpenCvSharp.Size,OpenCvSharp.Size,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_detectMultiScale_m11180D17D82BD09E5ED9E50A6DF9FA1D4AB92EAD (intptr_t ___self0, intptr_t ___img1, intptr_t ___foundLocations2, intptr_t ___foundWeights3, double ___hitThreshold4, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___winStride5, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___padding6, double ___scale7, int32_t ___groupThreshold8, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_detectMultiScale2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_detectMultiScale2)(___self0, ___img1, ___foundLocations2, ___foundWeights3, ___hitThreshold4, ___winStride5, ___padding6, ___scale7, ___groupThreshold8);
	#else
	il2cppPInvokeFunc(___self0, ___img1, ___foundLocations2, ___foundWeights3, ___hitThreshold4, ___winStride5, ___padding6, ___scale7, ___groupThreshold8);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_computeGradient(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Size,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_computeGradient_m3849BA7AC6783E8E9D5DA3901B1FD0E0A5CE9FF3 (intptr_t ___self0, intptr_t ___img1, intptr_t ___grad2, intptr_t ___angleOfs3, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___paddingTL4, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___paddingBR5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_computeGradient", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_computeGradient)(___self0, ___img1, ___grad2, ___angleOfs3, ___paddingTL4, ___paddingBR5);
	#else
	il2cppPInvokeFunc(___self0, ___img1, ___grad2, ___angleOfs3, ___paddingTL4, ___paddingBR5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_detectROI(System.IntPtr,System.IntPtr,OpenCvSharp.Point[],System.Int32,System.IntPtr,System.IntPtr,System.Double,OpenCvSharp.Size,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_detectROI_mC6A5C127330C10DC68228556F6F57263BFE04970 (intptr_t ___obj0, intptr_t ___img1, PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___locations2, int32_t ___locationsLength3, intptr_t ___foundLocations4, intptr_t ___confidences5, double ___hitThreshold6, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___winStride7, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___padding8, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_detectROI", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___locations2' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____locations2_marshaled = NULL;
	if (___locations2 != NULL)
	{
		____locations2_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___locations2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_detectROI)(___obj0, ___img1, ____locations2_marshaled, ___locationsLength3, ___foundLocations4, ___confidences5, ___hitThreshold6, ___winStride7, ___padding8);
	#else
	il2cppPInvokeFunc(___obj0, ___img1, ____locations2_marshaled, ___locationsLength3, ___foundLocations4, ___confidences5, ___hitThreshold6, ___winStride7, ___padding8);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_detectMultiScaleROI(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_detectMultiScaleROI_m6E375DC34A60B9ECEA8E7D705A309FCED3E3085E (intptr_t ___obj0, intptr_t ___img1, intptr_t ___foundLocations2, intptr_t ___roiScales3, intptr_t ___roiLocations4, intptr_t ___roiConfidences5, double ___hitThreshold6, int32_t ___groupThreshold7, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_detectMultiScaleROI", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_detectMultiScaleROI)(___obj0, ___img1, ___foundLocations2, ___roiScales3, ___roiLocations4, ___roiConfidences5, ___hitThreshold6, ___groupThreshold7);
	#else
	il2cppPInvokeFunc(___obj0, ___img1, ___foundLocations2, ___roiScales3, ___roiLocations4, ___roiConfidences5, ___hitThreshold6, ___groupThreshold7);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_readALTModel(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_readALTModel_mAB8C4FC357B1F07752960AEC0F416FFC14B9AE9C (intptr_t ___obj0, String_t* ___modelfile1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_readALTModel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___modelfile1' to native representation
	char* ____modelfile1_marshaled = NULL;
	____modelfile1_marshaled = il2cpp_codegen_marshal_string(___modelfile1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_readALTModel)(___obj0, ____modelfile1_marshaled);
	#else
	il2cppPInvokeFunc(___obj0, ____modelfile1_marshaled);
	#endif

	// Marshaling cleanup of parameter '___modelfile1' native representation
	il2cpp_codegen_marshal_free(____modelfile1_marshaled);
	____modelfile1_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_groupRectangles(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_groupRectangles_mF9BC685C30338F4D6D793A5E0858292A92C96058 (intptr_t ___obj0, intptr_t ___rectList1, intptr_t ___weights2, int32_t ___groupThreshold3, double ___eps4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_groupRectangles", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_groupRectangles)(___obj0, ___rectList1, ___weights2, ___groupThreshold3, ___eps4);
	#else
	il2cppPInvokeFunc(___obj0, ___rectList1, ___weights2, ___groupThreshold3, ___eps4);
	#endif

}
// OpenCvSharp.Size OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_winSize_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 NativeMethods_objdetect_HOGDescriptor_winSize_get_mFD4F3D389D42449EF3BB9FFFD8D646FC74E9CEFC (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_winSize_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_winSize_get)(___self0);
	#else
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// OpenCvSharp.Size OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_blockSize_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 NativeMethods_objdetect_HOGDescriptor_blockSize_get_m3B6FAB79DEBF07566479672AAC5C76D904F0ABA6 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_blockSize_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_blockSize_get)(___self0);
	#else
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// OpenCvSharp.Size OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_blockStride_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 NativeMethods_objdetect_HOGDescriptor_blockStride_get_m85408D885CE29869B359D7F8AE6EB8DE59B1173C (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_blockStride_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_blockStride_get)(___self0);
	#else
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// OpenCvSharp.Size OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_cellSize_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 NativeMethods_objdetect_HOGDescriptor_cellSize_get_m1C254B2C1C80CCE4AB11F362FA8A43D3E96488DF (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_cellSize_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_cellSize_get)(___self0);
	#else
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_nbins_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_HOGDescriptor_nbins_get_m2D60610BDF076B672A4CAFBA15167DCA2BFD64E5 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_nbins_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_nbins_get)(___self0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_derivAperture_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_HOGDescriptor_derivAperture_get_mA2CD78DF6F3B916BC1BC1E67371089F96913506A (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_derivAperture_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_derivAperture_get)(___self0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_winSigma_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_objdetect_HOGDescriptor_winSigma_get_mA059AF707E83CC7F35EFD7D3BE565150B12B1AEF (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_winSigma_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_winSigma_get)(___self0);
	#else
	double returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_histogramNormType_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_HOGDescriptor_histogramNormType_get_m792D62049AB0FB4CA4B81BCBBD187DEE884DAFF8 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_histogramNormType_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_histogramNormType_get)(___self0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_L2HysThreshold_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_objdetect_HOGDescriptor_L2HysThreshold_get_m9DC1772C17337C82D368C361F9012C3654D70B9B (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_L2HysThreshold_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_L2HysThreshold_get)(___self0);
	#else
	double returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_gammaCorrection_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_HOGDescriptor_gammaCorrection_get_m0F8F71A7E3E69245E5993878168B907C430F9ACE (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_gammaCorrection_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_gammaCorrection_get)(___self0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_nlevels_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_HOGDescriptor_nlevels_get_m6BF7EFFACB5235A17607A10685163AC5B251B326 (intptr_t ___self0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_nlevels_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_nlevels_get)(___self0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___self0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_winSize_set(System.IntPtr,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_winSize_set_m1E04BABA91C9C26668B9BADE6DA15D5D5F49DCC9 (intptr_t ___self0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_winSize_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_winSize_set)(___self0, ___value1);
	#else
	il2cppPInvokeFunc(___self0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_blockSize_set(System.IntPtr,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_blockSize_set_m78C580D5921FEAD5AABC4B683BDDC60139636A04 (intptr_t ___self0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_blockSize_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_blockSize_set)(___self0, ___value1);
	#else
	il2cppPInvokeFunc(___self0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_blockStride_set(System.IntPtr,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_blockStride_set_m08AA29F504A79D0DBB3B1C96714E46DE7778FBA6 (intptr_t ___self0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_blockStride_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_blockStride_set)(___self0, ___value1);
	#else
	il2cppPInvokeFunc(___self0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_cellSize_set(System.IntPtr,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_cellSize_set_m3B3980432F1666C2E9C06F24B4158AB6D1CE601D (intptr_t ___self0, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_cellSize_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_cellSize_set)(___self0, ___value1);
	#else
	il2cppPInvokeFunc(___self0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_nbins_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_nbins_set_mA698340399386AF65D40696C2B9AB99BFCA75601 (intptr_t ___self0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_nbins_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_nbins_set)(___self0, ___value1);
	#else
	il2cppPInvokeFunc(___self0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_derivAperture_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_derivAperture_set_m30272CBF7F244EFE92A62D7A724319C991D1C2EA (intptr_t ___self0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_derivAperture_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_derivAperture_set)(___self0, ___value1);
	#else
	il2cppPInvokeFunc(___self0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_winSigma_set(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_winSigma_set_mDD27F337B527BA877163656D7C5F89CBAAAA2F84 (intptr_t ___self0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_winSigma_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_winSigma_set)(___self0, ___value1);
	#else
	il2cppPInvokeFunc(___self0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_histogramNormType_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_histogramNormType_set_mDA96E7D32AAE2BC42EA1D7C5F04039F2873B1064 (intptr_t ___self0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_histogramNormType_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_histogramNormType_set)(___self0, ___value1);
	#else
	il2cppPInvokeFunc(___self0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_L2HysThreshold_set(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_L2HysThreshold_set_m9C829C7CEFBB7C6AF879152079D2C4DAC36392BA (intptr_t ___self0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_L2HysThreshold_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_L2HysThreshold_set)(___self0, ___value1);
	#else
	il2cppPInvokeFunc(___self0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_gammaCorrection_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_gammaCorrection_set_mFE38A54F30611FEF9CD3CB9285DF3679A092DEF9 (intptr_t ___self0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_gammaCorrection_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_gammaCorrection_set)(___self0, ___value1);
	#else
	il2cppPInvokeFunc(___self0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_nlevels_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_nlevels_set_m2315DF5D44A7A024F8B5ABF2DF000CA60C9E0493 (intptr_t ___self0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_nlevels_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_nlevels_set)(___self0, ___value1);
	#else
	il2cppPInvokeFunc(___self0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_groupRectangles1(System.IntPtr,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_groupRectangles1_mDB9368042CB760C4C7305DF7BAF844437BB232B6 (intptr_t ___rectList0, int32_t ___groupThreshold1, double ___eps2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_groupRectangles1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_groupRectangles1)(___rectList0, ___groupThreshold1, ___eps2);
	#else
	il2cppPInvokeFunc(___rectList0, ___groupThreshold1, ___eps2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_groupRectangles2(System.IntPtr,System.IntPtr,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_groupRectangles2_mC2EE34B9232ACA533C750F92A9E7CD75CC2B0784 (intptr_t ___rectList0, intptr_t ___weights1, int32_t ___groupThreshold2, double ___eps3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_groupRectangles2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_groupRectangles2)(___rectList0, ___weights1, ___groupThreshold2, ___eps3);
	#else
	il2cppPInvokeFunc(___rectList0, ___weights1, ___groupThreshold2, ___eps3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_groupRectangles3(System.IntPtr,System.Int32,System.Double,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_groupRectangles3_m5CE65A6D9BED73A6D4B26C2ED396C3617A194A8C (intptr_t ___rectList0, int32_t ___groupThreshold1, double ___eps2, intptr_t ___weights3, intptr_t ___levelWeights4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, double, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_groupRectangles3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_groupRectangles3)(___rectList0, ___groupThreshold1, ___eps2, ___weights3, ___levelWeights4);
	#else
	il2cppPInvokeFunc(___rectList0, ___groupThreshold1, ___eps2, ___weights3, ___levelWeights4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_groupRectangles4(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_groupRectangles4_mFAD63AA7A2BFD96BC9F6EFE842D0A4098E8C1D9B (intptr_t ___rectList0, intptr_t ___rejectLevels1, intptr_t ___levelWeights2, int32_t ___groupThreshold3, double ___eps4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_groupRectangles4", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_groupRectangles4)(___rectList0, ___rejectLevels1, ___levelWeights2, ___groupThreshold3, ___eps4);
	#else
	il2cppPInvokeFunc(___rectList0, ___rejectLevels1, ___levelWeights2, ___groupThreshold3, ___eps4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_groupRectangles_meanshift(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_groupRectangles_meanshift_m58D3B9FDCBEA4794E0E219806C3DA07EEDDB5117 (intptr_t ___rectList0, intptr_t ___foundWeights1, intptr_t ___foundScales2, double ___detectThreshold3, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___winDetSize4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_groupRectangles_meanshift", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_groupRectangles_meanshift)(___rectList0, ___foundWeights1, ___foundScales2, ___detectThreshold3, ___winDetSize4);
	#else
	il2cppPInvokeFunc(___rectList0, ___foundWeights1, ___foundScales2, ___detectThreshold3, ___winDetSize4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::optflow_motempl_updateMotionHistory(System.IntPtr,System.IntPtr,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_optflow_motempl_updateMotionHistory_m4652DD70A746443A62FD9611D996E6E3528812A2 (intptr_t ___silhouette0, intptr_t ___mhi1, double ___timestamp2, double ___duration3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "optflow_motempl_updateMotionHistory", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(optflow_motempl_updateMotionHistory)(___silhouette0, ___mhi1, ___timestamp2, ___duration3);
	#else
	il2cppPInvokeFunc(___silhouette0, ___mhi1, ___timestamp2, ___duration3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::optflow_motempl_calcMotionGradient(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_optflow_motempl_calcMotionGradient_m49ECA458537D5BA6F6FD853D9123A844DEAE8DAB (intptr_t ___mhi0, intptr_t ___mask1, intptr_t ___orientation2, double ___delta13, double ___delta24, int32_t ___apertureSize5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "optflow_motempl_calcMotionGradient", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(optflow_motempl_calcMotionGradient)(___mhi0, ___mask1, ___orientation2, ___delta13, ___delta24, ___apertureSize5);
	#else
	il2cppPInvokeFunc(___mhi0, ___mask1, ___orientation2, ___delta13, ___delta24, ___apertureSize5);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::optflow_motempl_calcGlobalOrientation(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_optflow_motempl_calcGlobalOrientation_m005F090070E5B531240027DE1EA59299E04219D9 (intptr_t ___orientation0, intptr_t ___mask1, intptr_t ___mhi2, double ___timestamp3, double ___duration4, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "optflow_motempl_calcGlobalOrientation", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(optflow_motempl_calcGlobalOrientation)(___orientation0, ___mask1, ___mhi2, ___timestamp3, ___duration4);
	#else
	double returnValue = il2cppPInvokeFunc(___orientation0, ___mask1, ___mhi2, ___timestamp3, ___duration4);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::optflow_motempl_segmentMotion(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_optflow_motempl_segmentMotion_m5CEFF5436E316517A6355839A4298D8FEC08C182 (intptr_t ___mhi0, intptr_t ___segmask1, intptr_t ___boundingRects2, double ___timestamp3, double ___segThresh4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "optflow_motempl_segmentMotion", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(optflow_motempl_segmentMotion)(___mhi0, ___segmask1, ___boundingRects2, ___timestamp3, ___segThresh4);
	#else
	il2cppPInvokeFunc(___mhi0, ___segmask1, ___boundingRects2, ___timestamp3, ___segThresh4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::optflow_calcOpticalFlowSF1(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_optflow_calcOpticalFlowSF1_m78119B54C049FCDFA14E39701DEA9B05B6473301 (intptr_t ___from0, intptr_t ___to1, intptr_t ___flow2, int32_t ___layers3, int32_t ___averagingBlockSize4, int32_t ___maxFlow5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "optflow_calcOpticalFlowSF1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(optflow_calcOpticalFlowSF1)(___from0, ___to1, ___flow2, ___layers3, ___averagingBlockSize4, ___maxFlow5);
	#else
	il2cppPInvokeFunc(___from0, ___to1, ___flow2, ___layers3, ___averagingBlockSize4, ___maxFlow5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::optflow_calcOpticalFlowSF2(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Int32,System.Double,System.Double,System.Double,System.Int32,System.Double,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_optflow_calcOpticalFlowSF2_mB741945B05B00A4521F6A2BDDB86440AFA0B6721 (intptr_t ___from0, intptr_t ___to1, intptr_t ___flow2, int32_t ___layers3, int32_t ___averagingBlockSize4, int32_t ___maxFlow5, double ___sigmaDist6, double ___sigmaColor7, int32_t ___postprocessWindow8, double ___sigmaDistFix9, double ___sigmaColorFix10, double ___occThr11, int32_t ___upscaleAveragingRadius12, double ___upscaleSigmaDist13, double ___upscaleSigmaColor14, double ___speedUpThr15, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, int32_t, int32_t, double, double, int32_t, double, double, double, int32_t, double, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "optflow_calcOpticalFlowSF2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(optflow_calcOpticalFlowSF2)(___from0, ___to1, ___flow2, ___layers3, ___averagingBlockSize4, ___maxFlow5, ___sigmaDist6, ___sigmaColor7, ___postprocessWindow8, ___sigmaDistFix9, ___sigmaColorFix10, ___occThr11, ___upscaleAveragingRadius12, ___upscaleSigmaDist13, ___upscaleSigmaColor14, ___speedUpThr15);
	#else
	il2cppPInvokeFunc(___from0, ___to1, ___flow2, ___layers3, ___averagingBlockSize4, ___maxFlow5, ___sigmaDist6, ___sigmaColor7, ___postprocessWindow8, ___sigmaDistFix9, ___sigmaColorFix10, ___occThr11, ___upscaleAveragingRadius12, ___upscaleSigmaDist13, ___upscaleSigmaColor14, ___speedUpThr15);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_uchar_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_uchar_new1_mF89826B34A8CA652D985CB364B81907866DEECC1 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_uchar_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_uchar_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_uchar_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_uchar_new2_mB25C581DC818337E98AC995C165C8729999B542F (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_uchar_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_uchar_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_uchar_new3(System.Byte[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_uchar_new3_mD2A4952ADE311EEAFB77EBC6C4E381C565B880E4 (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___data0, intptr_t ___dataLength1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (uint8_t*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_uchar_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___data0' to native representation
	uint8_t* ____data0_marshaled = NULL;
	if (___data0 != NULL)
	{
		____data0_marshaled = reinterpret_cast<uint8_t*>((___data0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_uchar_new3)(____data0_marshaled, ___dataLength1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____data0_marshaled, ___dataLength1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_uchar_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_uchar_getSize_m7345797E0017E252781359E3DFB97B570756BD7C (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_uchar_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_uchar_getSize)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_uchar_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_uchar_getPointer_mD86D10F1CEB68D4C61EEE6BF77254D2444BF704F (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_uchar_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_uchar_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_uchar_copy(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_uchar_copy_mD73E7FECC575E7696456A4D9F4EDBBB294EDB4FB (intptr_t ___vector0, intptr_t ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_uchar_copy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_uchar_copy)(___vector0, ___dst1);
	#else
	il2cppPInvokeFunc(___vector0, ___dst1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_uchar_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_uchar_delete_m43BE1C42F59E13EE7CA6D60E49D15D21DFEE9419 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_uchar_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_uchar_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_int32_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_int32_new1_m88C24ACDA201D3F7F684B183E99022B1D0AB75B1 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_int32_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_int32_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_int32_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_int32_new2_mDC0ED78DF04754D07851A0277F27D1AD4593F996 (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_int32_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_int32_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_int32_new3(System.Int32[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_int32_new3_mE4BB6278F623087A27603AC7E36C220CD386696C (Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___data0, intptr_t ___dataLength1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_int32_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___data0' to native representation
	int32_t* ____data0_marshaled = NULL;
	if (___data0 != NULL)
	{
		____data0_marshaled = reinterpret_cast<int32_t*>((___data0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_int32_new3)(____data0_marshaled, ___dataLength1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____data0_marshaled, ___dataLength1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_int32_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_int32_getSize_mB7EE0210509CCF207DF3EA1AF9FA072C92AC56D6 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_int32_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_int32_getSize)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_int32_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_int32_getPointer_m0A14AF69A3D32E36A9BFEC85CF144963D9948443 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_int32_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_int32_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_int32_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_int32_delete_m78E0AAA24CB7715507FD9FB46DD29E290A532D5C (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_int32_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_int32_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_float_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_float_new1_m6DECC449BF09877945A73A13B0CC9B388C0480DB (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_float_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_float_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_float_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_float_new2_m7D80E6A84D5B173819945508671CFD5B4F798CBE (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_float_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_float_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_float_new3(System.Single[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_float_new3_mDB7F091B71B832DF032EA0B30841F0BCD4086037 (SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___data0, intptr_t ___dataLength1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (float*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_float_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___data0' to native representation
	float* ____data0_marshaled = NULL;
	if (___data0 != NULL)
	{
		____data0_marshaled = reinterpret_cast<float*>((___data0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_float_new3)(____data0_marshaled, ___dataLength1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____data0_marshaled, ___dataLength1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_float_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_float_getSize_mAEF11A3245ED1A9A87883EFC9245931620CC6953 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_float_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_float_getSize)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_float_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_float_getPointer_m45ED7374F8ACEFDF53FF12ED4A1BB4DD3167A199 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_float_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_float_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_float_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_float_delete_m9ABF204BDC64CBEBE6167697F75606A64C6CA5AC (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_float_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_float_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_double_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_double_new1_mC21B816C91DBE3876C95AE5EFBB576FA7D6FF8E2 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_double_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_double_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_double_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_double_new2_m0CF2EFEDA849A1AF1FBE2E5CA256C0739D61C549 (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_double_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_double_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_double_new3(System.Double[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_double_new3_m0263BD83AFC9DBBEC64355516AE33D6F258B6284 (DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___data0, intptr_t ___dataLength1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_double_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___data0' to native representation
	double* ____data0_marshaled = NULL;
	if (___data0 != NULL)
	{
		____data0_marshaled = reinterpret_cast<double*>((___data0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_double_new3)(____data0_marshaled, ___dataLength1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____data0_marshaled, ___dataLength1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_double_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_double_getSize_m0DFD4EAA8E4153B3BB27E7367D5E5178830F5C91 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_double_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_double_getSize)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_double_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_double_getPointer_mCA108F58E16B3B9F72397233E0FC595A871F5FB6 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_double_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_double_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_double_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_double_delete_m69D987501293C00F204EE7225A4F78E96080F61C (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_double_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_double_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec2f_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec2f_new1_m642495FD11140D195BC04EE1B82165F63AC92CF1 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec2f_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec2f_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec2f_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec2f_new2_mED3AF7AF2AB8EB75354122B0AF81191808F56E71 (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec2f_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec2f_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec2f_new3(OpenCvSharp.Vec2f[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec2f_new3_mFDB143502DC9786A19034600DB3A08DD77CDD583 (Vec2fU5BU5D_t605FE443F498ED80B628FC0E98240C847D9C22FF* ___data0, intptr_t ___dataLength1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec2f_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___data0' to native representation
	Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E* ____data0_marshaled = NULL;
	if (___data0 != NULL)
	{
		____data0_marshaled = reinterpret_cast<Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*>((___data0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec2f_new3)(____data0_marshaled, ___dataLength1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____data0_marshaled, ___dataLength1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec2f_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec2f_getSize_m13E53330A20C7941EBDF05AC707F517F705DB2CE (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec2f_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec2f_getSize)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec2f_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec2f_getPointer_mAEAA42387F91E1BBB9B35858BA24BAA021EFCF4A (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec2f_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec2f_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Vec2f_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Vec2f_delete_m79C79397AD623E87338840FBAB3A61A9BAA03945 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec2f_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Vec2f_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec3f_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec3f_new1_mE78FC5536BA04D961A1B77FE3225A48F99A27AB9 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec3f_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec3f_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec3f_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec3f_new2_mEBA910D82065E5B21DA6C1245664645F03F188BB (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec3f_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec3f_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec3f_new3(OpenCvSharp.Vec3f[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec3f_new3_mD2E85DA882D28648DACDF82C9C543C5DEAC541F2 (Vec3fU5BU5D_tED5C8EB686AD5A75ACA66EC986897DE59ABF6C4D* ___data0, intptr_t ___dataLength1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec3f_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___data0' to native representation
	Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* ____data0_marshaled = NULL;
	if (___data0 != NULL)
	{
		____data0_marshaled = reinterpret_cast<Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*>((___data0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec3f_new3)(____data0_marshaled, ___dataLength1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____data0_marshaled, ___dataLength1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec3f_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec3f_getSize_mF66EAF32CF154C618392523D33A9E83F631CB731 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec3f_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec3f_getSize)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec3f_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec3f_getPointer_mEFED90EDFC424F81375D2203A103B98E1241FD7A (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec3f_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec3f_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Vec3f_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Vec3f_delete_m0D04C0CB4DB189858496487E9E7D8E733EBD3727 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec3f_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Vec3f_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec4f_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec4f_new1_mFFB22BDCD05BDC33F05C4F760B4E3FE16B93BC11 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4f_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec4f_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec4f_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec4f_new2_mC6536110051E07229CCF65FC795784AA52EB9A33 (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4f_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec4f_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec4f_new3(OpenCvSharp.Vec4f[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec4f_new3_mD077033ADB2C48556987FE9CA3AF922B17C929C3 (Vec4fU5BU5D_t3B2FBCD7291E3C966FB625B86393DC5CDB180A64* ___data0, intptr_t ___dataLength1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4f_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___data0' to native representation
	Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* ____data0_marshaled = NULL;
	if (___data0 != NULL)
	{
		____data0_marshaled = reinterpret_cast<Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*>((___data0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec4f_new3)(____data0_marshaled, ___dataLength1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____data0_marshaled, ___dataLength1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec4f_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec4f_getSize_m8CBF6635E919757BBE4F5DF1A2E92BCA5B590AF3 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4f_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec4f_getSize)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec4f_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec4f_getPointer_m3CDEFF4BF44E310C6A93EA85139B083DCE8F837A (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4f_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec4f_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Vec4f_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Vec4f_delete_m5A4EF3C056639181A8597B56DC607BB4E03B522F (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4f_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Vec4f_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec4i_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec4i_new1_m499427199E0771FEF8E15C0BCD0F25860E95D10E (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4i_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec4i_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec4i_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec4i_new2_mEB2F7B0D6FD6DE6BD46AF5D56CAE9D2C47CE632E (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4i_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec4i_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec4i_new3(OpenCvSharp.Vec4i[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec4i_new3_m329623A1CBA4671D7119B05A67F74FF42B150CDA (Vec4iU5BU5D_tA592A0B55AB1329BD078300CADFC474499AA7157* ___data0, intptr_t ___dataLength1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4i_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___data0' to native representation
	Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* ____data0_marshaled = NULL;
	if (___data0 != NULL)
	{
		____data0_marshaled = reinterpret_cast<Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*>((___data0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec4i_new3)(____data0_marshaled, ___dataLength1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____data0_marshaled, ___dataLength1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec4i_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec4i_getSize_mB2391628D41D216495CD6F1C84F0D3F09652B519 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4i_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec4i_getSize)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec4i_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec4i_getPointer_mE759D104F76FC08DDBD1FF321E531CFD8C243923 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4i_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec4i_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Vec4i_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Vec4i_delete_m3AA03571D55E32C327FD7D570F58BA414CFC6ADB (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4i_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Vec4i_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec6f_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec6f_new1_m75A0DD1014E52E87DC21AE4DAA455A72FB1C2A27 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6f_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec6f_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec6f_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec6f_new2_m93FDC9E6980CBA1D82C24E4A0DFD3759620DD816 (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6f_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec6f_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec6f_new3(OpenCvSharp.Vec6f[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec6f_new3_m5E040409C9AB0CF6E2351D07BF9EEA1AEA14ACC7 (Vec6fU5BU5D_t592D4E62D13229DBA0A9CD133ADE98A5E27449C3* ___data0, intptr_t ___dataLength1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6f_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___data0' to native representation
	Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* ____data0_marshaled = NULL;
	if (___data0 != NULL)
	{
		____data0_marshaled = reinterpret_cast<Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*>((___data0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec6f_new3)(____data0_marshaled, ___dataLength1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____data0_marshaled, ___dataLength1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec6f_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec6f_getSize_mB522945C1C3BE7DBDDC9900F1F9089FA08DC7952 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6f_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec6f_getSize)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec6f_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec6f_getPointer_mF0D541A2E6A2AF3B8ABCAA795B43B7CE5ECF1B79 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6f_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec6f_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Vec6f_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Vec6f_delete_mF7E5499441D40CCE8B8469A5F3AED20769CEEB49 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6f_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Vec6f_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec6d_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec6d_new1_m759072FD72D0CEA29231AD400A672E995B698997 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6d_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec6d_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec6d_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec6d_new2_m975239F56C82808901E2932A631A30ABD84BF6E1 (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6d_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec6d_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec6d_new3(OpenCvSharp.Vec6d[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec6d_new3_mABF850C0142486390293B1BD2DD6384109497355 (Vec6dU5BU5D_tD00B137B3DBEF1DB6F17CA62572E730E9D27FE42* ___data0, intptr_t ___dataLength1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6d_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___data0' to native representation
	Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6* ____data0_marshaled = NULL;
	if (___data0 != NULL)
	{
		____data0_marshaled = reinterpret_cast<Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6*>((___data0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec6d_new3)(____data0_marshaled, ___dataLength1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____data0_marshaled, ___dataLength1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec6d_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec6d_getSize_m9EAF1668751F00768382DFA94B8C296BF69452AE (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6d_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec6d_getSize)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec6d_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec6d_getPointer_mDB268B0838D0231F2D14E723FBAEB33D97CA830F (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6d_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec6d_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Vec6d_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Vec6d_delete_m7C434A7EC90C6582F3B29AB96CCF4CB579199C9D (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6d_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Vec6d_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point2i_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point2i_new1_mEAF85A9CFFDC1160806437AA89481C90D5062DC9 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2i_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point2i_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point2i_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point2i_new2_m5515DAE65392D4193627299D3ED57C5E0EBE42F5 (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2i_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point2i_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point2i_new3(OpenCvSharp.Point[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point2i_new3_m82189B4E3B8011E054AB58B3C43B03650BDFD813 (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___data0, intptr_t ___dataLength1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2i_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___data0' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____data0_marshaled = NULL;
	if (___data0 != NULL)
	{
		____data0_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___data0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point2i_new3)(____data0_marshaled, ___dataLength1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____data0_marshaled, ___dataLength1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point2i_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point2i_getSize_m324BDCE87A56D8EA201FAD4993315F1B5A4FFF64 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2i_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point2i_getSize)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point2i_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point2i_getPointer_mCD2B55B452BB2FC88A8AA03FC9722E6C396FA6CF (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2i_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point2i_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Point2i_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Point2i_delete_m3963E7F6E266964B2BE77B4ED36DCC61B177437F (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2i_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Point2i_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point2f_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point2f_new1_m765783C75141E3522FA3BDCD94039E191EE1B788 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2f_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point2f_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point2f_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point2f_new2_m890C82E90BE5EB30AB755013E0D52EA3BBFC9A22 (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2f_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point2f_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point2f_new3(OpenCvSharp.Point2f[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point2f_new3_m1CB5E2E0D9645A334C72F22ADBF0B50E24C4810C (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___data0, intptr_t ___dataLength1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2f_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___data0' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____data0_marshaled = NULL;
	if (___data0 != NULL)
	{
		____data0_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___data0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point2f_new3)(____data0_marshaled, ___dataLength1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____data0_marshaled, ___dataLength1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point2f_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point2f_getSize_m6C072BC257601E8BF90C45A2CD35B36CF52DA399 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2f_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point2f_getSize)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point2f_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point2f_getPointer_m7BF9374D7CB11E6B25A9B94A2CF463396C19B451 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2f_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point2f_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Point2f_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Point2f_delete_m8508BB112D8175302A993C573D6F40A5E192A740 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2f_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Point2f_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point3f_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point3f_new1_m80CAA354298CD5656156039E749B7F8C0BA11855 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point3f_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point3f_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point3f_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point3f_new2_m9B49769738132EDE3EBAE868F75A51B0C1BED15C (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point3f_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point3f_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point3f_new3(OpenCvSharp.Point3f[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point3f_new3_m024F24119D0E9065EF2B0BE9E0101230FDCBFC4C (Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2* ___data0, intptr_t ___dataLength1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point3f_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___data0' to native representation
	Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* ____data0_marshaled = NULL;
	if (___data0 != NULL)
	{
		____data0_marshaled = reinterpret_cast<Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*>((___data0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point3f_new3)(____data0_marshaled, ___dataLength1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____data0_marshaled, ___dataLength1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point3f_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point3f_getSize_mD0942F760DF4972FE1A4C60148773A6C0389626D (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point3f_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point3f_getSize)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point3f_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point3f_getPointer_mD176F9AC696A28C6C17812D5F2D16F6024FD67DE (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point3f_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point3f_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Point3f_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Point3f_delete_m8D3EE5D5DCE009AE5F7E9E3F39ABD3F4C113BD3B (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point3f_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Point3f_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Rect_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Rect_new1_mF802A3D485012EEBD55C778F01E5808BA9F39186 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Rect_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Rect_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Rect_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Rect_new2_m7C970B9E877BBA056C5162678E2A1BBDCE20FF15 (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Rect_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Rect_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Rect_new3(OpenCvSharp.Rect[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Rect_new3_mCC5450760C23669D23CA643091FF483AA4820756 (RectU5BU5D_t8D707798510E7E6C5EDA64E457B86964B724B96A* ___data0, intptr_t ___dataLength1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Rect_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___data0' to native representation
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ____data0_marshaled = NULL;
	if (___data0 != NULL)
	{
		____data0_marshaled = reinterpret_cast<Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*>((___data0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Rect_new3)(____data0_marshaled, ___dataLength1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____data0_marshaled, ___dataLength1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Rect_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Rect_getSize_m4016552ABFFFB8AC770BC716B1BF58D2C22F1348 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Rect_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Rect_getSize)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Rect_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Rect_getPointer_m97D39A43ABE0BCC22E0C92F024A81633273CAE96 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Rect_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Rect_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Rect_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Rect_delete_mA18C0196AEFAE1F06752FC6B19F72E3206589DC0 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Rect_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Rect_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_ERStat_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_ERStat_new1_mA6D0EDD14BAC13F4232E4E1555A6C9862299E53C (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_ERStat_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_ERStat_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_ERStat_new2(System.IntPtr[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_ERStat_new2_mE4B4C0D181F75627745198AA1BF44D8904CEF05C (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___data0, intptr_t ___dataLength1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_ERStat_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___data0' to native representation
	intptr_t* ____data0_marshaled = NULL;
	if (___data0 != NULL)
	{
		____data0_marshaled = reinterpret_cast<intptr_t*>((___data0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_ERStat_new2)(____data0_marshaled, ___dataLength1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____data0_marshaled, ___dataLength1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_ERStat_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_ERStat_getSize_m5DE6AE90AC26356531C34F4DB9AD6E152BEB39C2 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_ERStat_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_ERStat_getSize)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_ERStat_getElement(System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_ERStat_getElement_m2555B484856396EC9591D6F4FC449B33F19BAA90 (intptr_t ___vector0, int32_t ___index1, intptr_t ___output2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_ERStat_getElement", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_ERStat_getElement)(___vector0, ___index1, ___output2);
	#else
	il2cppPInvokeFunc(___vector0, ___index1, ___output2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_ERStat_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_ERStat_delete_mC48ACABA7416503E3382CDCFEE3BF52E47FB1CFF (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_ERStat_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_ERStat_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_KeyPoint_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_KeyPoint_new1_mE0A3C2E58AC60E3D10EFDD167BABC3E306E05C72 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_KeyPoint_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_KeyPoint_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_KeyPoint_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_KeyPoint_new2_mC610D788C4F2FC1E4E1933E370F6701EDE4C04EC (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_KeyPoint_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_KeyPoint_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_KeyPoint_new3(OpenCvSharp.KeyPoint[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_KeyPoint_new3_mF0CC0F6962885598DAE1BA61F6992E1EA9DDD438 (KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17* ___data0, intptr_t ___dataLength1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_KeyPoint_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___data0' to native representation
	KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA* ____data0_marshaled = NULL;
	if (___data0 != NULL)
	{
		____data0_marshaled = reinterpret_cast<KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*>((___data0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_KeyPoint_new3)(____data0_marshaled, ___dataLength1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____data0_marshaled, ___dataLength1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_KeyPoint_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_KeyPoint_getSize_m3D97F92BBD48EC93497094090B1B397B2C5EF028 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_KeyPoint_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_KeyPoint_getSize)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_KeyPoint_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_KeyPoint_getPointer_mEC07738DB02DDED3037AEDDDBE2886AB8506CC9C (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_KeyPoint_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_KeyPoint_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_KeyPoint_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_KeyPoint_delete_m9F1A39975AC4D63318CDF7B974183F1FEA2E7A59 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_KeyPoint_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_KeyPoint_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_DMatch_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_DMatch_new1_mBD513B896A9DDC171FCF0D6E6D09BBC49EAFEDF1 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_DMatch_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_DMatch_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_DMatch_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_DMatch_new2_mE149A3B9811E182823417D72B53D17416D8B046D (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_DMatch_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_DMatch_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_DMatch_new3(OpenCvSharp.DMatch[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_DMatch_new3_m864FEA9A6325647534A75F93D4487A2F18977E04 (DMatchU5BU5D_t5146FE58B7CF480941ED1CBE7375F150A69CBD34* ___data0, intptr_t ___dataLength1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_DMatch_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___data0' to native representation
	DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A* ____data0_marshaled = NULL;
	if (___data0 != NULL)
	{
		____data0_marshaled = reinterpret_cast<DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A*>((___data0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_DMatch_new3)(____data0_marshaled, ___dataLength1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____data0_marshaled, ___dataLength1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_DMatch_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_DMatch_getSize_mBA6B4C8C42A17F26E2E1EB150265052F58793E60 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_DMatch_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_DMatch_getSize)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_DMatch_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_DMatch_getPointer_m684BECACC9578A027FA8276C0C707848A8DE7367 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_DMatch_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_DMatch_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_DMatch_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_DMatch_delete_m6034F30BA097F2A6A0A183CD500E51D973B8193E (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_DMatch_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_DMatch_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_int_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_int_new1_mA62476D28296EF257A28DD80B1B0D35E2681A88C (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_int_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_int_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_int_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_int_new2_m42ED6A82C62CE8FE249F84AD5B4E454CAB92DB47 (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_int_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_int_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_int_getSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_int_getSize1_m8B18735B30B7EA44A120EA96C43B4CE379E738C8 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_int_getSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_int_getSize1)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_int_getSize2(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_int_getSize2_m426C29C88B5E64EFF173356BCF61CF1E9D8D4185 (intptr_t ___vector0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___size1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_int_getSize2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___size1' to native representation
	intptr_t* ____size1_marshaled = NULL;
	if (___size1 != NULL)
	{
		____size1_marshaled = reinterpret_cast<intptr_t*>((___size1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_int_getSize2)(___vector0, ____size1_marshaled);
	#else
	il2cppPInvokeFunc(___vector0, ____size1_marshaled);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_int_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_int_getPointer_m41E1F1C20E9859E0F42C58D54221DB597163ACD3 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_int_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_int_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_int_copy(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_int_copy_mDDA14679AC99DACCAB32F609EAD346A9AB56067D (intptr_t ___vec0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_int_copy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___dst1' to native representation
	intptr_t* ____dst1_marshaled = NULL;
	if (___dst1 != NULL)
	{
		____dst1_marshaled = reinterpret_cast<intptr_t*>((___dst1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_int_copy)(___vec0, ____dst1_marshaled);
	#else
	il2cppPInvokeFunc(___vec0, ____dst1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_vector_int_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_int_delete_mBCBDAC685E2C2511A971A9B34DE2B465DC4EF588 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_int_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_int_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_float_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_float_new1_mB5F59C60C0F5387547519C675337E8DDB2333198 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_float_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_float_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_float_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_float_new2_m4A4F79D9BD19260BD48AA8662F8E87261FA3C53F (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_float_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_float_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_float_getSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_float_getSize1_m2F295C24D649BC2438D1BCBF451F0A9DA1A3B534 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_float_getSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_float_getSize1)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_float_getSize2(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_float_getSize2_m4BABE82AE1FCE7AC7D50E1537CA67D4D1B5D42D8 (intptr_t ___vector0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___size1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_float_getSize2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___size1' to native representation
	intptr_t* ____size1_marshaled = NULL;
	if (___size1 != NULL)
	{
		____size1_marshaled = reinterpret_cast<intptr_t*>((___size1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_float_getSize2)(___vector0, ____size1_marshaled);
	#else
	il2cppPInvokeFunc(___vector0, ____size1_marshaled);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_float_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_float_getPointer_m5E338FAAACFE916B2DABF51FC79EA2559939A9B6 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_float_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_float_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_float_copy(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_float_copy_m5ED652E5A89D1970F131AD721C10E91AD489BFAD (intptr_t ___vec0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_float_copy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___dst1' to native representation
	intptr_t* ____dst1_marshaled = NULL;
	if (___dst1 != NULL)
	{
		____dst1_marshaled = reinterpret_cast<intptr_t*>((___dst1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_float_copy)(___vec0, ____dst1_marshaled);
	#else
	il2cppPInvokeFunc(___vec0, ____dst1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_vector_float_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_float_delete_m0D0B120DE82AB77922B3F5CD0A7F44011F49751F (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_float_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_float_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_double_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_double_new1_m66846FD4378EA54F3553E4C623213700D9CAA285 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_double_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_double_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_double_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_double_new2_m68532AF3A27210933B79DBA3B28953CECF025631 (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_double_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_double_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_double_getSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_double_getSize1_mD0570AD8721E65C46EE5AD9DC09BBB71F98C1532 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_double_getSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_double_getSize1)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_double_getSize2(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_double_getSize2_m0777601510E7CCD8BDBA915AECDD5CE6C7AB421C (intptr_t ___vector0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___size1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_double_getSize2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___size1' to native representation
	intptr_t* ____size1_marshaled = NULL;
	if (___size1 != NULL)
	{
		____size1_marshaled = reinterpret_cast<intptr_t*>((___size1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_double_getSize2)(___vector0, ____size1_marshaled);
	#else
	il2cppPInvokeFunc(___vector0, ____size1_marshaled);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_double_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_double_getPointer_m4B776FD375CFD42C61FE0EB1673B0C97FEC96E78 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_double_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_double_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_double_copy(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_double_copy_mCE124D182DFC35BAEF217047A50E71D523584ED0 (intptr_t ___vec0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_double_copy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___dst1' to native representation
	intptr_t* ____dst1_marshaled = NULL;
	if (___dst1 != NULL)
	{
		____dst1_marshaled = reinterpret_cast<intptr_t*>((___dst1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_double_copy)(___vec0, ____dst1_marshaled);
	#else
	il2cppPInvokeFunc(___vec0, ____dst1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_vector_double_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_double_delete_m21FF20B69CEF24144C52A5F44B65E2663713CFE3 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_double_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_double_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_KeyPoint_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_KeyPoint_new1_mA1DB30BEDB19EAEC8055D45B65805305980C5529 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_KeyPoint_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_KeyPoint_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_KeyPoint_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_KeyPoint_new2_m5802457722A9187F233ECBB1910978784B9742DD (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_KeyPoint_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_KeyPoint_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_KeyPoint_new3(System.IntPtr[],System.Int32,System.Int32[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_KeyPoint_new3_m5A0038BCD6169E7A22A856D24C9E21C0B24DFC50 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___values0, int32_t ___size11, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___size22, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t*, int32_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_KeyPoint_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___values0' to native representation
	intptr_t* ____values0_marshaled = NULL;
	if (___values0 != NULL)
	{
		____values0_marshaled = reinterpret_cast<intptr_t*>((___values0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___size22' to native representation
	int32_t* ____size22_marshaled = NULL;
	if (___size22 != NULL)
	{
		____size22_marshaled = reinterpret_cast<int32_t*>((___size22)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_KeyPoint_new3)(____values0_marshaled, ___size11, ____size22_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____values0_marshaled, ___size11, ____size22_marshaled);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_KeyPoint_getSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_KeyPoint_getSize1_m5435F4D14D96A352881700DF7A28C71142FB032E (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_KeyPoint_getSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_KeyPoint_getSize1)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_KeyPoint_getSize2(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_KeyPoint_getSize2_m33AEBC000AD08EA61E47513246E0348CC8E9DAA6 (intptr_t ___vector0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___size1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_KeyPoint_getSize2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___size1' to native representation
	intptr_t* ____size1_marshaled = NULL;
	if (___size1 != NULL)
	{
		____size1_marshaled = reinterpret_cast<intptr_t*>((___size1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_KeyPoint_getSize2)(___vector0, ____size1_marshaled);
	#else
	il2cppPInvokeFunc(___vector0, ____size1_marshaled);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_KeyPoint_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_KeyPoint_getPointer_m891433F9F0F9BC484BC47EF8434A2170B5677983 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_KeyPoint_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_KeyPoint_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_KeyPoint_copy(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_KeyPoint_copy_mAB6CC3191B5D6E963C7F5A5A2929E47CE209BFA8 (intptr_t ___vec0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_KeyPoint_copy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___dst1' to native representation
	intptr_t* ____dst1_marshaled = NULL;
	if (___dst1 != NULL)
	{
		____dst1_marshaled = reinterpret_cast<intptr_t*>((___dst1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_KeyPoint_copy)(___vec0, ____dst1_marshaled);
	#else
	il2cppPInvokeFunc(___vec0, ____dst1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_vector_KeyPoint_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_KeyPoint_delete_m4CBDEBD669945126A970B23F1E5067650F56B65C (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_KeyPoint_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_KeyPoint_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_DMatch_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_DMatch_new1_m7FD7AFB3B675D027718C7C0AF418D50A4135F935 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_DMatch_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_DMatch_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_DMatch_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_DMatch_new2_m47C4DC4DFAD97854E27E51010CC0739547240065 (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_DMatch_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_DMatch_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_DMatch_getSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_DMatch_getSize1_mE2D67DF3E6BB7BE3F7E2DD874327B7EBDD9D5205 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_DMatch_getSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_DMatch_getSize1)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_DMatch_getSize2(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_DMatch_getSize2_m0D816D6104E3ED26A8F11FC5D0C2FDA69357FE32 (intptr_t ___vector0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___size1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_DMatch_getSize2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___size1' to native representation
	intptr_t* ____size1_marshaled = NULL;
	if (___size1 != NULL)
	{
		____size1_marshaled = reinterpret_cast<intptr_t*>((___size1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_DMatch_getSize2)(___vector0, ____size1_marshaled);
	#else
	il2cppPInvokeFunc(___vector0, ____size1_marshaled);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_DMatch_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_DMatch_getPointer_mBD28A67A01CC1E3A901619C8F41418F05385A1E5 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_DMatch_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_DMatch_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_DMatch_copy(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_DMatch_copy_mF70100669B9C0D4F7D091333ACEDDA6716B119C6 (intptr_t ___vec0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_DMatch_copy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___dst1' to native representation
	intptr_t* ____dst1_marshaled = NULL;
	if (___dst1 != NULL)
	{
		____dst1_marshaled = reinterpret_cast<intptr_t*>((___dst1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_DMatch_copy)(___vec0, ____dst1_marshaled);
	#else
	il2cppPInvokeFunc(___vec0, ____dst1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_vector_DMatch_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_DMatch_delete_m739943CFCFD075DE495ACA633A335DABF6277CF4 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_DMatch_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_DMatch_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Point_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Point_new1_m7733EBCB8BB82C2515087A45834EFACCD4741A30 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Point_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Point_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Point_new2_m8C7773DA1EB8DE2F7A7EF898D9F031EB71B758C4 (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Point_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Point_new3(System.IntPtr,System.IntPtr[],System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Point_new3_m44A1F05A564E930D3B6A55BACADEA6100C4D4EAA (intptr_t ___size10, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___size21, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___source2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t*, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___size21' to native representation
	intptr_t* ____size21_marshaled = NULL;
	if (___size21 != NULL)
	{
		____size21_marshaled = reinterpret_cast<intptr_t*>((___size21)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___source2' to native representation
	intptr_t* ____source2_marshaled = NULL;
	if (___source2 != NULL)
	{
		____source2_marshaled = reinterpret_cast<intptr_t*>((___source2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Point_new3)(___size10, ____size21_marshaled, ____source2_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size10, ____size21_marshaled, ____source2_marshaled);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Point_getSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Point_getSize1_mA6566F1929EEB79DC8AC0D3E4A4F09107E92EB15 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point_getSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Point_getSize1)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_Point_getSize2(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_Point_getSize2_m7C8F5B51364A1AF280F266C28438F4408A6D08F8 (intptr_t ___vector0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___size1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point_getSize2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___size1' to native representation
	intptr_t* ____size1_marshaled = NULL;
	if (___size1 != NULL)
	{
		____size1_marshaled = reinterpret_cast<intptr_t*>((___size1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_Point_getSize2)(___vector0, ____size1_marshaled);
	#else
	il2cppPInvokeFunc(___vector0, ____size1_marshaled);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Point_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Point_getPointer_m5B6F27A2046052E00EF03E2156230BC6DA4262C1 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Point_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_Point_copy(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_Point_copy_mC31BC784FCD099D3C524AF2FA3FBC73F40FE47B7 (intptr_t ___vec0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point_copy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___dst1' to native representation
	intptr_t* ____dst1_marshaled = NULL;
	if (___dst1 != NULL)
	{
		____dst1_marshaled = reinterpret_cast<intptr_t*>((___dst1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_Point_copy)(___vec0, ____dst1_marshaled);
	#else
	il2cppPInvokeFunc(___vec0, ____dst1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_vector_Point_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_Point_delete_m52B8B9B1700409F492ABD229A2E190FB8090002D (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_Point_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Vec2i_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Vec2i_new1_m6DBB4BCCF30D5131EACB9854280432C55177CDED (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Vec2i_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Vec2i_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Vec2i_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Vec2i_new2_m4DFB962F8BB70EEFDABC75DB8BD9181DEDCDC91B (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Vec2i_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Vec2i_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Vec2i_new3(System.IntPtr,System.IntPtr[],System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Vec2i_new3_m65220D35C72F31B1BA16134451ECDAA6EF69E5CF (intptr_t ___size10, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___size21, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___source2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t*, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Vec2i_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___size21' to native representation
	intptr_t* ____size21_marshaled = NULL;
	if (___size21 != NULL)
	{
		____size21_marshaled = reinterpret_cast<intptr_t*>((___size21)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___source2' to native representation
	intptr_t* ____source2_marshaled = NULL;
	if (___source2 != NULL)
	{
		____source2_marshaled = reinterpret_cast<intptr_t*>((___source2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Vec2i_new3)(___size10, ____size21_marshaled, ____source2_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size10, ____size21_marshaled, ____source2_marshaled);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Vec2i_getSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Vec2i_getSize1_m153E489E98F6FB7993E0E726853808190EA36AB0 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Vec2i_getSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Vec2i_getSize1)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_Vec2i_getSize2(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_Vec2i_getSize2_mAE2C87197BD2250EEFDB97B434ACF1B24E5BADC5 (intptr_t ___vector0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___size1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Vec2i_getSize2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___size1' to native representation
	intptr_t* ____size1_marshaled = NULL;
	if (___size1 != NULL)
	{
		____size1_marshaled = reinterpret_cast<intptr_t*>((___size1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_Vec2i_getSize2)(___vector0, ____size1_marshaled);
	#else
	il2cppPInvokeFunc(___vector0, ____size1_marshaled);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Vec2i_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Vec2i_getPointer_m52386EA95B1E78BCCEDDBF8456138CBB0806322F (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Vec2i_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Vec2i_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_Vec2i_copy(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_Vec2i_copy_mAE100581A2BC77864661429922F4F4A3EEA7FF4C (intptr_t ___vec0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Vec2i_copy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___dst1' to native representation
	intptr_t* ____dst1_marshaled = NULL;
	if (___dst1 != NULL)
	{
		____dst1_marshaled = reinterpret_cast<intptr_t*>((___dst1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_Vec2i_copy)(___vec0, ____dst1_marshaled);
	#else
	il2cppPInvokeFunc(___vec0, ____dst1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_vector_Vec2i_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_Vec2i_delete_m3CAACEB205A2855D45A3B2D3D036E0C2C924F2EA (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Vec2i_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_Vec2i_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Point2f_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Point2f_new1_mB9D6C8059805978D2632563540E11147B6D64DA1 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point2f_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Point2f_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Point2f_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Point2f_new2_m145402A260F59C494B5085C055A3E4315EAB801D (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point2f_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Point2f_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Point2f_getSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Point2f_getSize1_mBEA6F2F318FF34660BED10EB68BB57554AB8C07A (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point2f_getSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Point2f_getSize1)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_Point2f_getSize2(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_Point2f_getSize2_m4982E43E107E2ACED029A1C1D1FDA12864262DA0 (intptr_t ___vector0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___size1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point2f_getSize2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___size1' to native representation
	intptr_t* ____size1_marshaled = NULL;
	if (___size1 != NULL)
	{
		____size1_marshaled = reinterpret_cast<intptr_t*>((___size1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_Point2f_getSize2)(___vector0, ____size1_marshaled);
	#else
	il2cppPInvokeFunc(___vector0, ____size1_marshaled);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Point2f_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Point2f_getPointer_m13D8EB2C183C349047D18AC991D5DA52DC7E4BC7 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point2f_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Point2f_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_Point2f_copy(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_Point2f_copy_mCE02A89D1AF8C87775F75F37E1FBA4F5FA72C2CC (intptr_t ___vec0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point2f_copy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___dst1' to native representation
	intptr_t* ____dst1_marshaled = NULL;
	if (___dst1 != NULL)
	{
		____dst1_marshaled = reinterpret_cast<intptr_t*>((___dst1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_Point2f_copy)(___vec0, ____dst1_marshaled);
	#else
	il2cppPInvokeFunc(___vec0, ____dst1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_vector_Point2f_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_Point2f_delete_mDB76357B546A767386FAB011D3789F66055FE5DC (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point2f_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_Point2f_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_string_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_string_new1_m849C9B85F2CDFEB4E5492DE247A115425A452A34 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_string_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_string_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_string_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_string_new2_m5784F9F279CB1DF62F8F16A90158786FCF65FA88 (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_string_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_string_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_string_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_string_getSize_mB78A2FC6DAC3D9CC1D8D79B3E46B886B28919BA4 (intptr_t ___vec0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_string_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_string_getSize)(___vec0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vec0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_string_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_string_getPointer_mC59976F37A60234D4E1DA8B85F76FE01A757BC9E (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_string_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_string_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.SByte* OpenCvSharp.NativeMethods::vector_string_elemAt(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int8_t* NativeMethods_vector_string_elemAt_m2A6500B0DA4347331BAA2D0CCBE66AB5D30875BF (intptr_t ___vector0, int32_t ___i1, const RuntimeMethod* method) 
{
	typedef int8_t* (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_string_elemAt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int8_t* returnValue = reinterpret_cast<PInvokeFunc>(vector_string_elemAt)(___vector0, ___i1);
	#else
	int8_t* returnValue = il2cppPInvokeFunc(___vector0, ___i1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_string_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_string_delete_mEE58FA20DC2A01B9E3EF6F7878460891898C2D44 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_string_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_string_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_string_setAt(System.IntPtr,System.Int32,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_string_setAt_m8F6A25B31CEAB672352A3CF9A15BA425AFB4BF17 (intptr_t ___vector0, int32_t ___i1, String_t* ___value2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_string_setAt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___value2' to native representation
	char* ____value2_marshaled = NULL;
	____value2_marshaled = il2cpp_codegen_marshal_string(___value2);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_string_setAt)(___vector0, ___i1, ____value2_marshaled);
	#else
	il2cppPInvokeFunc(___vector0, ___i1, ____value2_marshaled);
	#endif

	// Marshaling cleanup of parameter '___value2' native representation
	il2cpp_codegen_marshal_free(____value2_marshaled);
	____value2_marshaled = NULL;

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_ERStat_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_ERStat_new1_m92668BCCE98147F5004D31B168FD5FBAA029FA55 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_ERStat_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_ERStat_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_ERStat_new2(System.IntPtr,System.IntPtr[],System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_ERStat_new2_m1E174706F6210EE64E91C4DC0F1CEDC791C0E2E6 (intptr_t ___size10, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___sizes21, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___src2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t*, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_ERStat_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___sizes21' to native representation
	intptr_t* ____sizes21_marshaled = NULL;
	if (___sizes21 != NULL)
	{
		____sizes21_marshaled = reinterpret_cast<intptr_t*>((___sizes21)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___src2' to native representation
	intptr_t* ____src2_marshaled = NULL;
	if (___src2 != NULL)
	{
		____src2_marshaled = reinterpret_cast<intptr_t*>((___src2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_ERStat_new2)(___size10, ____sizes21_marshaled, ____src2_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size10, ____sizes21_marshaled, ____src2_marshaled);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_ERStat_getSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_ERStat_getSize1_mF6A8C4136DF807634050A2E1874FFD59E02BD036 (intptr_t ___vec0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_ERStat_getSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_ERStat_getSize1)(___vec0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vec0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_ERStat_getSize2(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_ERStat_getSize2_mC863C7817E1C734F36443C08B6356A97A214B46D (intptr_t ___vec0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___sizes1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_ERStat_getSize2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___sizes1' to native representation
	intptr_t* ____sizes1_marshaled = NULL;
	if (___sizes1 != NULL)
	{
		____sizes1_marshaled = reinterpret_cast<intptr_t*>((___sizes1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_ERStat_getSize2)(___vec0, ____sizes1_marshaled);
	#else
	il2cppPInvokeFunc(___vec0, ____sizes1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_vector_ERStat_getElement(System.IntPtr,System.Int32,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_ERStat_getElement_mF59AA87EF162CBAD0EDC3E2E29B7069D555D048A (intptr_t ___vector0, int32_t ___i1, int32_t ___j2, intptr_t ___output3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_ERStat_getElement", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_ERStat_getElement)(___vector0, ___i1, ___j2, ___output3);
	#else
	il2cppPInvokeFunc(___vector0, ___i1, ___j2, ___output3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_vector_ERStat_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_ERStat_delete_mB7204D967518EB7A0734C3B3AD341E87C0ABAB1E (intptr_t ___vec0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_ERStat_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_ERStat_delete)(___vec0);
	#else
	il2cppPInvokeFunc(___vec0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Mat_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Mat_new1_m46A1A349ADEC93697A7A05C0A72FD640E415CBF4 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Mat_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Mat_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Mat_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Mat_new2_m85E955CAE5BE5AE74CFF64A036F122070195AF4C (intptr_t ___size0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Mat_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Mat_new2)(___size0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___size0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Mat_new3(System.IntPtr[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Mat_new3_m679225D519669317F3AA6CDF6E86B1C131518204 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___data0, intptr_t ___dataLength1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Mat_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___data0' to native representation
	intptr_t* ____data0_marshaled = NULL;
	if (___data0 != NULL)
	{
		____data0_marshaled = reinterpret_cast<intptr_t*>((___data0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Mat_new3)(____data0_marshaled, ___dataLength1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____data0_marshaled, ___dataLength1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Mat_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Mat_getSize_m939CECEEE4FD8F5B970D363EFBA95A686AD03369 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Mat_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Mat_getSize)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Mat_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Mat_getPointer_m14319A25BF3864C1F9EC4E2FF495188120C0D501 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Mat_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Mat_getPointer)(___vector0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___vector0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Mat_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Mat_delete_mF987965CD3DD374510C7E7A54486422AF67E7B20 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Mat_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Mat_delete)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_Mat_assignToArray(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Mat_assignToArray_mB61CF8327A745691E41E103E7545B9701E35AA92 (intptr_t ___vector0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___arr1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Mat_assignToArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___arr1' to native representation
	intptr_t* ____arr1_marshaled = NULL;
	if (___arr1 != NULL)
	{
		____arr1_marshaled = reinterpret_cast<intptr_t*>((___arr1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Mat_assignToArray)(___vector0, ____arr1_marshaled);
	#else
	il2cppPInvokeFunc(___vector0, ____arr1_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_Mat_addref(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Mat_addref_m56BC50207D0197E4C86B87F02D1BBAAF2FC116A6 (intptr_t ___vector0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Mat_addref", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Mat_addref)(___vector0);
	#else
	il2cppPInvokeFunc(___vector0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::stitching_createStitcher(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_stitching_createStitcher_mDB9EF071BDD78089C7EF92FD8E81841C305F0DEB (int32_t ___try_use_cpu0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_createStitcher", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_createStitcher)(___try_use_cpu0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___try_use_cpu0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::stitching_Ptr_Stitcher_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_stitching_Ptr_Stitcher_delete_m135C429AD71D5E1A2FDE8AA60780CBDB99894E36 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Ptr_Stitcher_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(stitching_Ptr_Stitcher_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::stitching_Ptr_Stitcher_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_stitching_Ptr_Stitcher_get_m295DA55C125071638394B061D19ECEDAFD606369 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Ptr_Stitcher_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Ptr_Stitcher_get)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::stitching_Stitcher_registrationResol(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_stitching_Stitcher_registrationResol_m94CEE4A9166EB80E02B83BD7CC5075FA5B3EE9BF (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_registrationResol", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_registrationResol)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::stitching_Stitcher_setRegistrationResol(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_stitching_Stitcher_setRegistrationResol_mE2300D0B430BBBB67E2DCF3FECFCFD332673C742 (intptr_t ___obj0, double ___resolMpx1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_setRegistrationResol", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(stitching_Stitcher_setRegistrationResol)(___obj0, ___resolMpx1);
	#else
	il2cppPInvokeFunc(___obj0, ___resolMpx1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::stitching_Stitcher_seamEstimationResol(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_stitching_Stitcher_seamEstimationResol_m781FD4C0B63C4C2834B5363FEF9170B3C0F40E28 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_seamEstimationResol", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_seamEstimationResol)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::stitching_Stitcher_setSeamEstimationResol(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_stitching_Stitcher_setSeamEstimationResol_m90EF33A1C110A880093ADC1E034497DBC146CAA2 (intptr_t ___obj0, double ___resolMpx1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_setSeamEstimationResol", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(stitching_Stitcher_setSeamEstimationResol)(___obj0, ___resolMpx1);
	#else
	il2cppPInvokeFunc(___obj0, ___resolMpx1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::stitching_Stitcher_compositingResol(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_stitching_Stitcher_compositingResol_m967949D346E51E94681BA959277126BA5C490C6E (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_compositingResol", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_compositingResol)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::stitching_Stitcher_setCompositingResol(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_stitching_Stitcher_setCompositingResol_mD3331A8E5E551CCE024F258B09D5AF8DDB9A60AA (intptr_t ___obj0, double ___resolMpx1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_setCompositingResol", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(stitching_Stitcher_setCompositingResol)(___obj0, ___resolMpx1);
	#else
	il2cppPInvokeFunc(___obj0, ___resolMpx1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::stitching_Stitcher_panoConfidenceThresh(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_stitching_Stitcher_panoConfidenceThresh_m216A340DBEF4D4C48B507C75602247E1202252C2 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_panoConfidenceThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_panoConfidenceThresh)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::stitching_Stitcher_setPanoConfidenceThresh(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_stitching_Stitcher_setPanoConfidenceThresh_m0ADAB4F9B12848B67C33C8A424BB1B2F948ECDD7 (intptr_t ___obj0, double ___confThresh1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_setPanoConfidenceThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(stitching_Stitcher_setPanoConfidenceThresh)(___obj0, ___confThresh1);
	#else
	il2cppPInvokeFunc(___obj0, ___confThresh1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_waveCorrection(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_waveCorrection_mEC46DF1334E7D841608C59327D093507EFF22E0D (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_waveCorrection", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_waveCorrection)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::stitching_Stitcher_setWaveCorrection(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_stitching_Stitcher_setWaveCorrection_mC89A7CABFE1B45B04BD5FA9E9DBFEBB452736FE1 (intptr_t ___obj0, int32_t ___flag1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_setWaveCorrection", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(stitching_Stitcher_setWaveCorrection)(___obj0, ___flag1);
	#else
	il2cppPInvokeFunc(___obj0, ___flag1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_waveCorrectKind(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_waveCorrectKind_m2ED408B0CC8B63D7D4CBC42B775852292E25A9FE (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_waveCorrectKind", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_waveCorrectKind)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::stitching_Stitcher_setWaveCorrectKind(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_stitching_Stitcher_setWaveCorrectKind_mE6AD74D720B0A5010744C2B7A69C0B019758404F (intptr_t ___obj0, int32_t ___kind1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_setWaveCorrectKind", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(stitching_Stitcher_setWaveCorrectKind)(___obj0, ___kind1);
	#else
	il2cppPInvokeFunc(___obj0, ___kind1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_estimateTransform_InputArray1(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_estimateTransform_InputArray1_m55B90DCF018B39034EC05477FFEF7E3A8349AA7B (intptr_t ___obj0, intptr_t ___images1, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_estimateTransform_InputArray1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_estimateTransform_InputArray1)(___obj0, ___images1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___images1);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_estimateTransform_InputArray2(System.IntPtr,System.IntPtr,System.IntPtr[],System.Int32,System.Int32[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_estimateTransform_InputArray2_m2288CB80D0F809F1D3845822DBB38DF6EF4FBC56 (intptr_t ___obj0, intptr_t ___images1, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___rois2, int32_t ___roisSize13, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___roisSize24, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t*, int32_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_estimateTransform_InputArray2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___rois2' to native representation
	intptr_t* ____rois2_marshaled = NULL;
	if (___rois2 != NULL)
	{
		____rois2_marshaled = reinterpret_cast<intptr_t*>((___rois2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___roisSize24' to native representation
	int32_t* ____roisSize24_marshaled = NULL;
	if (___roisSize24 != NULL)
	{
		____roisSize24_marshaled = reinterpret_cast<int32_t*>((___roisSize24)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_estimateTransform_InputArray2)(___obj0, ___images1, ____rois2_marshaled, ___roisSize13, ____roisSize24_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___images1, ____rois2_marshaled, ___roisSize13, ____roisSize24_marshaled);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_estimateTransform_MatArray1(System.IntPtr,System.IntPtr[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_estimateTransform_MatArray1_m526154E0E52E3CE8CFAF1E3543E2520F12D55F1D (intptr_t ___obj0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___images1, int32_t ___imagesSize2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_estimateTransform_MatArray1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___images1' to native representation
	intptr_t* ____images1_marshaled = NULL;
	if (___images1 != NULL)
	{
		____images1_marshaled = reinterpret_cast<intptr_t*>((___images1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_estimateTransform_MatArray1)(___obj0, ____images1_marshaled, ___imagesSize2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ____images1_marshaled, ___imagesSize2);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_estimateTransform_MatArray2(System.IntPtr,System.IntPtr[],System.Int32,System.IntPtr[],System.Int32,System.Int32[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_estimateTransform_MatArray2_mB466FB1D6FB08037B45E05F1BD9F007D443EB1A6 (intptr_t ___obj0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___images1, int32_t ___imagesSize2, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___rois3, int32_t ___roisSize14, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___roisSize25, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, intptr_t*, int32_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_estimateTransform_MatArray2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___images1' to native representation
	intptr_t* ____images1_marshaled = NULL;
	if (___images1 != NULL)
	{
		____images1_marshaled = reinterpret_cast<intptr_t*>((___images1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___rois3' to native representation
	intptr_t* ____rois3_marshaled = NULL;
	if (___rois3 != NULL)
	{
		____rois3_marshaled = reinterpret_cast<intptr_t*>((___rois3)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___roisSize25' to native representation
	int32_t* ____roisSize25_marshaled = NULL;
	if (___roisSize25 != NULL)
	{
		____roisSize25_marshaled = reinterpret_cast<int32_t*>((___roisSize25)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_estimateTransform_MatArray2)(___obj0, ____images1_marshaled, ___imagesSize2, ____rois3_marshaled, ___roisSize14, ____roisSize25_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ____images1_marshaled, ___imagesSize2, ____rois3_marshaled, ___roisSize14, ____roisSize25_marshaled);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_composePanorama1(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_composePanorama1_mA6B7CA1E484998E85AAF62E7509BA4C8D62AF4FB (intptr_t ___obj0, intptr_t ___pano1, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_composePanorama1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_composePanorama1)(___obj0, ___pano1);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___pano1);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_composePanorama2_InputArray(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_composePanorama2_InputArray_mCCDA8CF3CDEEF4A674132298A643E9A4D2598FC1 (intptr_t ___obj0, intptr_t ___images1, intptr_t ___pano2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_composePanorama2_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_composePanorama2_InputArray)(___obj0, ___images1, ___pano2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___images1, ___pano2);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_composePanorama2_MatArray(System.IntPtr,System.IntPtr[],System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_composePanorama2_MatArray_mCF25CEE62486A2995F124FAB8B25FD1360D3CA42 (intptr_t ___obj0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___images1, int32_t ___imagesSize2, intptr_t ___pano3, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_composePanorama2_MatArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___images1' to native representation
	intptr_t* ____images1_marshaled = NULL;
	if (___images1 != NULL)
	{
		____images1_marshaled = reinterpret_cast<intptr_t*>((___images1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_composePanorama2_MatArray)(___obj0, ____images1_marshaled, ___imagesSize2, ___pano3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ____images1_marshaled, ___imagesSize2, ___pano3);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_stitch1_InputArray(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_stitch1_InputArray_mDEA60E131935325AC67F5DA74E280F9E23443644 (intptr_t ___obj0, intptr_t ___images1, intptr_t ___pano2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_stitch1_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_stitch1_InputArray)(___obj0, ___images1, ___pano2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___images1, ___pano2);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_stitch1_MatArray(System.IntPtr,System.IntPtr[],System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_stitch1_MatArray_mC8A6EA7FD4E1F05AE458E730BEE8F4702BFF4927 (intptr_t ___obj0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___images1, int32_t ___imagesSize2, intptr_t ___pano3, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_stitch1_MatArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___images1' to native representation
	intptr_t* ____images1_marshaled = NULL;
	if (___images1 != NULL)
	{
		____images1_marshaled = reinterpret_cast<intptr_t*>((___images1)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_stitch1_MatArray)(___obj0, ____images1_marshaled, ___imagesSize2, ___pano3);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ____images1_marshaled, ___imagesSize2, ___pano3);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_stitch2_InputArray(System.IntPtr,System.IntPtr,System.IntPtr[],System.Int32,System.Int32[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_stitch2_InputArray_mC3732FBCDDC96BE22E0EF8E5ECBC50806CC5DC35 (intptr_t ___obj0, intptr_t ___images1, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___rois2, int32_t ___roisSize13, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___roisSize24, intptr_t ___pano5, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t*, int32_t, int32_t*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_stitch2_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___rois2' to native representation
	intptr_t* ____rois2_marshaled = NULL;
	if (___rois2 != NULL)
	{
		____rois2_marshaled = reinterpret_cast<intptr_t*>((___rois2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___roisSize24' to native representation
	int32_t* ____roisSize24_marshaled = NULL;
	if (___roisSize24 != NULL)
	{
		____roisSize24_marshaled = reinterpret_cast<int32_t*>((___roisSize24)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_stitch2_InputArray)(___obj0, ___images1, ____rois2_marshaled, ___roisSize13, ____roisSize24_marshaled, ___pano5);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___images1, ____rois2_marshaled, ___roisSize13, ____roisSize24_marshaled, ___pano5);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_stitch2_MatArray(System.IntPtr,System.IntPtr[],System.Int32,System.IntPtr[],System.Int32,System.Int32[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_stitch2_MatArray_mEAFFCA4DEB1D24030D61A14C281D134353EF2256 (intptr_t ___obj0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___images1, int32_t ___imagesSize2, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___rois3, int32_t ___roisSize14, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___roisSize25, intptr_t ___pano6, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, intptr_t*, int32_t, int32_t*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_stitch2_MatArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___images1' to native representation
	intptr_t* ____images1_marshaled = NULL;
	if (___images1 != NULL)
	{
		____images1_marshaled = reinterpret_cast<intptr_t*>((___images1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___rois3' to native representation
	intptr_t* ____rois3_marshaled = NULL;
	if (___rois3 != NULL)
	{
		____rois3_marshaled = reinterpret_cast<intptr_t*>((___rois3)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___roisSize25' to native representation
	int32_t* ____roisSize25_marshaled = NULL;
	if (___roisSize25 != NULL)
	{
		____roisSize25_marshaled = reinterpret_cast<int32_t*>((___roisSize25)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_stitch2_MatArray)(___obj0, ____images1_marshaled, ___imagesSize2, ____rois3_marshaled, ___roisSize14, ____roisSize25_marshaled, ___pano6);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ____images1_marshaled, ___imagesSize2, ____rois3_marshaled, ___roisSize14, ____roisSize25_marshaled, ___pano6);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::stitching_Stitcher_component(System.IntPtr,System.IntPtr&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_stitching_Stitcher_component_m7FCE17BD4F9122353EF08FAA81944195A7C5B2BA (intptr_t ___obj0, intptr_t* ___pointer1, int32_t* ___length2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_component", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(stitching_Stitcher_component)(___obj0, ___pointer1, ___length2);
	#else
	il2cppPInvokeFunc(___obj0, ___pointer1, ___length2);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::stitching_Stitcher_workScale(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_stitching_Stitcher_workScale_m4114F54E72BAAD123C22A4D95FA822BD087B9C52 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_workScale", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_workScale)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::superres_FrameSource_nextFrame(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_FrameSource_nextFrame_m81A329FA81EB9718360748974A0DE3A5542A4C3B (intptr_t ___obj0, intptr_t ___frame1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_FrameSource_nextFrame", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_FrameSource_nextFrame)(___obj0, ___frame1);
	#else
	il2cppPInvokeFunc(___obj0, ___frame1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::superres_FrameSource_reset(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_FrameSource_reset_mEC10ABC34EF34630F7AD53E254F646D3984E9510 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_FrameSource_reset", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_FrameSource_reset)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createFrameSource_Empty()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createFrameSource_Empty_m255D71893EC1FC82ADE5448EF02E7F9E48F8E97B (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createFrameSource_Empty", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createFrameSource_Empty)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createFrameSource_Video(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createFrameSource_Video_m28038A4B44C5AAC60D1BF4934D154E87FBD11196 (String_t* ___fileName0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createFrameSource_Video", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___fileName0' to native representation
	char* ____fileName0_marshaled = NULL;
	____fileName0_marshaled = il2cpp_codegen_marshal_string(___fileName0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createFrameSource_Video)(____fileName0_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____fileName0_marshaled);
	#endif

	// Marshaling cleanup of parameter '___fileName0' native representation
	il2cpp_codegen_marshal_free(____fileName0_marshaled);
	____fileName0_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createFrameSource_Video_CUDA(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createFrameSource_Video_CUDA_m953B3223C4F1B5F16BE4060D1357AA54102A8101 (String_t* ___fileName0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createFrameSource_Video_CUDA", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___fileName0' to native representation
	char* ____fileName0_marshaled = NULL;
	____fileName0_marshaled = il2cpp_codegen_marshal_string(___fileName0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createFrameSource_Video_CUDA)(____fileName0_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____fileName0_marshaled);
	#endif

	// Marshaling cleanup of parameter '___fileName0' native representation
	il2cpp_codegen_marshal_free(____fileName0_marshaled);
	____fileName0_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createFrameSource_Camera(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createFrameSource_Camera_m814CF6BC8BF7C6A9C4E3C57FEEE327FF8AFFE4FC (int32_t ___deviceId0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createFrameSource_Camera", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createFrameSource_Camera)(___deviceId0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___deviceId0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_Ptr_FrameSource_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_Ptr_FrameSource_get_m1821FEDA50DD3903FE1F14982EADC7421350E9E9 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_Ptr_FrameSource_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_Ptr_FrameSource_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::superres_Ptr_FrameSource_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_Ptr_FrameSource_delete_m5EEAAB39CB1C2355A4906D3F3DF63FBF2572F78A (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_Ptr_FrameSource_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_Ptr_FrameSource_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::superres_SuperResolution_setInput(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_SuperResolution_setInput_mA6AD9C5CDD3E9A4179214A5386EAF8E292E9AE86 (intptr_t ___obj0, intptr_t ___frameSource1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_SuperResolution_setInput", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_SuperResolution_setInput)(___obj0, ___frameSource1);
	#else
	il2cppPInvokeFunc(___obj0, ___frameSource1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::superres_SuperResolution_nextFrame(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_SuperResolution_nextFrame_m63BD834C55EC7C1BCE1B0E8A313FCC80BD90F796 (intptr_t ___obj0, intptr_t ___frame1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_SuperResolution_nextFrame", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_SuperResolution_nextFrame)(___obj0, ___frame1);
	#else
	il2cppPInvokeFunc(___obj0, ___frame1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::superres_SuperResolution_reset(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_SuperResolution_reset_mE5C8A185D217950DA74F3CEC3A598E660B28D88E (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_SuperResolution_reset", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_SuperResolution_reset)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::superres_SuperResolution_collectGarbage(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_SuperResolution_collectGarbage_m84F5B26190C488016751ACBEC3A8EEBC9AAC9D60 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_SuperResolution_collectGarbage", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_SuperResolution_collectGarbage)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createSuperResolution_BTVL1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createSuperResolution_BTVL1_mA011A859CD08597ED69E97A80ADB46AFBEB95358 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createSuperResolution_BTVL1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createSuperResolution_BTVL1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createSuperResolution_BTVL1_CUDA()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createSuperResolution_BTVL1_CUDA_mDFE502B4FC60C9647E67159BC08D789F29A8DA32 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createSuperResolution_BTVL1_CUDA", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createSuperResolution_BTVL1_CUDA)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_Ptr_SuperResolution_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_Ptr_SuperResolution_get_m1E956C51CCFDC8A79305603AF6D3ECBB2B892220 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_Ptr_SuperResolution_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_Ptr_SuperResolution_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::superres_Ptr_SuperResolution_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_Ptr_SuperResolution_delete_m2E46FD5C02DF4EC3F4FF86C138418A5AE075D14F (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_Ptr_SuperResolution_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_Ptr_SuperResolution_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::superres_DenseOpticalFlowExt_calc(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_DenseOpticalFlowExt_calc_m44AE8CC3AF87D8DA80021AB7DDDA0CBD06F046F4 (intptr_t ___obj0, intptr_t ___frame01, intptr_t ___frame12, intptr_t ___flow13, intptr_t ___flow24, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_DenseOpticalFlowExt_calc", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_DenseOpticalFlowExt_calc)(___obj0, ___frame01, ___frame12, ___flow13, ___flow24);
	#else
	il2cppPInvokeFunc(___obj0, ___frame01, ___frame12, ___flow13, ___flow24);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::superres_DenseOpticalFlowExt_collectGarbage(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_DenseOpticalFlowExt_collectGarbage_mC17D2F2A0173A8387E681FD5AB6AE306CC8E769D (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_DenseOpticalFlowExt_collectGarbage", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_DenseOpticalFlowExt_collectGarbage)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::superres_Ptr_DenseOpticalFlowExt_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_Ptr_DenseOpticalFlowExt_get_m383EC9C78DEDB6DC464C077854186B1E0BCB5B5F (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_Ptr_DenseOpticalFlowExt_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_Ptr_DenseOpticalFlowExt_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::superres_Ptr_DenseOpticalFlowExt_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_Ptr_DenseOpticalFlowExt_delete_mE5D100E1D59C3DF14B10B59B3DDA17167ABAA343 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_Ptr_DenseOpticalFlowExt_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_Ptr_DenseOpticalFlowExt_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createOptFlow_Farneback()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createOptFlow_Farneback_m1B0880F2D21FD8F12243E529EB168BD09526B021 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createOptFlow_Farneback", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createOptFlow_Farneback)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createOptFlow_Farneback_CUDA()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createOptFlow_Farneback_CUDA_m981E4AD8927C714D3A4B086CB596FBFD723A4226 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createOptFlow_Farneback_CUDA", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createOptFlow_Farneback_CUDA)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createOptFlow_DualTVL1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createOptFlow_DualTVL1_m757FDE92368E416F2242460DADC7E76ABEDD2413 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createOptFlow_DualTVL1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createOptFlow_DualTVL1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createOptFlow_DualTVL1_CUDA()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createOptFlow_DualTVL1_CUDA_m7F26B6056B073D571A8B99463BB51D06EFB39358 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createOptFlow_DualTVL1_CUDA", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createOptFlow_DualTVL1_CUDA)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createOptFlow_Brox_CUDA()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createOptFlow_Brox_CUDA_mC2D9C2994346C810803E1B01DEF8319BDDEABD7E (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createOptFlow_Brox_CUDA", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createOptFlow_Brox_CUDA)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createOptFlow_PyrLK_CUDA()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createOptFlow_PyrLK_CUDA_m6513FFAEA140645BC9A83646F50B0543FB743CC1 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createOptFlow_PyrLK_CUDA", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createOptFlow_PyrLK_CUDA)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::text_computeNMChannels(System.IntPtr,System.IntPtr&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_computeNMChannels_mF0F8F1D831FCAC05DA16025C8C3CF4C3E485D11B (intptr_t ___img0, intptr_t* ___channels1, int32_t ___mode2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_computeNMChannels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_computeNMChannels)(___img0, ___channels1, ___mode2);
	#else
	il2cppPInvokeFunc(___img0, ___channels1, ___mode2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_MSERsToERStats(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_MSERsToERStats_m8EBFB802DEE89607433A2244B031DF1842A457A6 (intptr_t ___image0, intptr_t ___contours1, intptr_t ___region2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_MSERsToERStats", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_MSERsToERStats)(___image0, ___contours1, ___region2);
	#else
	il2cppPInvokeFunc(___image0, ___contours1, ___region2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_createOCRHMMTransitionsTable(System.String,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_createOCRHMMTransitionsTable_m2C6B0A1272D449B53909FCE745D7C9A72F370B86 (String_t* ___vocabulary0, intptr_t ___lexicon1, intptr_t ___transition_probabilities_table2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_createOCRHMMTransitionsTable", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vocabulary0' to native representation
	char* ____vocabulary0_marshaled = NULL;
	____vocabulary0_marshaled = il2cpp_codegen_marshal_string(___vocabulary0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_createOCRHMMTransitionsTable)(____vocabulary0_marshaled, ___lexicon1, ___transition_probabilities_table2);
	#else
	il2cppPInvokeFunc(____vocabulary0_marshaled, ___lexicon1, ___transition_probabilities_table2);
	#endif

	// Marshaling cleanup of parameter '___vocabulary0' native representation
	il2cpp_codegen_marshal_free(____vocabulary0_marshaled);
	____vocabulary0_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::text_detectRegions(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_detectRegions_mE0836A29FEF7B22C4D474818E8C5CDE4002E1D65 (intptr_t ___image0, intptr_t ___er_filter11, intptr_t ___er_filter22, intptr_t ___regions3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_detectRegions", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_detectRegions)(___image0, ___er_filter11, ___er_filter22, ___regions3);
	#else
	il2cppPInvokeFunc(___image0, ___er_filter11, ___er_filter22, ___regions3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_erGrouping1(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.String,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_erGrouping1_mAA03BE5B55FAE36BD2E26AE5FAD2EE438653CE62 (intptr_t ___img0, intptr_t ___channels1, intptr_t ___regions2, intptr_t ___groups3, intptr_t ___groups_rects4, int32_t ___method5, String_t* ___filename6, float ___minProbablity7, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, char*, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(char*) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_erGrouping1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___filename6' to native representation
	char* ____filename6_marshaled = NULL;
	____filename6_marshaled = il2cpp_codegen_marshal_string(___filename6);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_erGrouping1)(___img0, ___channels1, ___regions2, ___groups3, ___groups_rects4, ___method5, ____filename6_marshaled, ___minProbablity7);
	#else
	il2cppPInvokeFunc(___img0, ___channels1, ___regions2, ___groups3, ___groups_rects4, ___method5, ____filename6_marshaled, ___minProbablity7);
	#endif

	// Marshaling cleanup of parameter '___filename6' native representation
	il2cpp_codegen_marshal_free(____filename6_marshaled);
	____filename6_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::text_erGrouping2(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.String,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_erGrouping2_mF82CAE0080C31C38FA6F64C8D62EA99DD9090EB6 (intptr_t ___image0, intptr_t ___channel1, intptr_t ___regions2, intptr_t ___groups_rects3, int32_t ___method4, String_t* ___filename5, float ___minProbablity6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t, char*, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(char*) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_erGrouping2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___filename5' to native representation
	char* ____filename5_marshaled = NULL;
	____filename5_marshaled = il2cpp_codegen_marshal_string(___filename5);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_erGrouping2)(___image0, ___channel1, ___regions2, ___groups_rects3, ___method4, ____filename5_marshaled, ___minProbablity6);
	#else
	il2cppPInvokeFunc(___image0, ___channel1, ___regions2, ___groups_rects3, ___method4, ____filename5_marshaled, ___minProbablity6);
	#endif

	// Marshaling cleanup of parameter '___filename5' native representation
	il2cpp_codegen_marshal_free(____filename5_marshaled);
	____filename5_marshaled = NULL;

}
// System.IntPtr OpenCvSharp.NativeMethods::text_ERStat_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_ERStat_new1_mC6DDE06726DFEC426C39B82392CCA028F6BD6E60 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERStat_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_ERStat_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::text_ERStat_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_ERStat_new2_m6491D421CCF5B3FEA500CBE372D33CBDA629FF62 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERStat_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_ERStat_new2)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::text_ERStat_getRect(System.IntPtr,OpenCvSharp.Rect&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERStat_getRect_m0CB7297E57DBE800D299CDDEDF1594D2F0E3D50E (intptr_t ___obj0, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___output1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERStat_getRect", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERStat_getRect)(___obj0, ___output1);
	#else
	il2cppPInvokeFunc(___obj0, ___output1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::text_ERStat_getProbability(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_text_ERStat_getProbability_m954B7976D66D086DBFBD0886309241D05B0ABE0A (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERStat_getProbability", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(text_ERStat_getProbability)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::text_ERStat_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERStat_delete_m2D0CD7B9C990F5BB1699F7CD317CA284A7E943F1 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERStat_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERStat_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::text_loadOCRHMMClassifierCNN(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_loadOCRHMMClassifierCNN_mDA146F4065A9D091E76766E23173B9294CD089C4 (String_t* ___filename0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_loadOCRHMMClassifierCNN", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___filename0' to native representation
	char* ____filename0_marshaled = NULL;
	____filename0_marshaled = il2cpp_codegen_marshal_string(___filename0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_loadOCRHMMClassifierCNN)(____filename0_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____filename0_marshaled);
	#endif

	// Marshaling cleanup of parameter '___filename0' native representation
	il2cpp_codegen_marshal_free(____filename0_marshaled);
	____filename0_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::text_loadOCRHMMClassifierNM(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_loadOCRHMMClassifierNM_m980C7506DA6CD2158D4436F643535C73939B7499 (String_t* ___filename0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_loadOCRHMMClassifierNM", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___filename0' to native representation
	char* ____filename0_marshaled = NULL;
	____filename0_marshaled = il2cpp_codegen_marshal_string(___filename0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_loadOCRHMMClassifierNM)(____filename0_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____filename0_marshaled);
	#endif

	// Marshaling cleanup of parameter '___filename0' native representation
	il2cpp_codegen_marshal_free(____filename0_marshaled);
	____filename0_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::text_OCRHMMDecoder_ClassifierCallback_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_OCRHMMDecoder_ClassifierCallback_delete_mC8F6AB82881A5C1FC9EF6399CC9ABEA69DD6C733 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRHMMDecoder_ClassifierCallback_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_OCRHMMDecoder_ClassifierCallback_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_OCRHMMDecoder_ClassifierCallback_eval(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_OCRHMMDecoder_ClassifierCallback_eval_mD10390BCA6A56CB5533EE59D68BE2AFCC273B004 (intptr_t ___obj0, intptr_t ___image1, intptr_t ___vecIntClass2, intptr_t ___vecDoubleConfidence3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRHMMDecoder_ClassifierCallback_eval", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_OCRHMMDecoder_ClassifierCallback_eval)(___obj0, ___image1, ___vecIntClass2, ___vecDoubleConfidence3);
	#else
	il2cppPInvokeFunc(___obj0, ___image1, ___vecIntClass2, ___vecDoubleConfidence3);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::text_OCRHMMDecoder_create(System.IntPtr,System.String,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_OCRHMMDecoder_create_mC1743BD28BF2EA725100D7225B71E89B9554C0CD (intptr_t ___classifier0, String_t* ___vocabulary1, intptr_t ___transition_probabilities2, intptr_t ___emission_probabilities3, int32_t ___mode4, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, char*, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRHMMDecoder_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vocabulary1' to native representation
	char* ____vocabulary1_marshaled = NULL;
	____vocabulary1_marshaled = il2cpp_codegen_marshal_string(___vocabulary1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_OCRHMMDecoder_create)(___classifier0, ____vocabulary1_marshaled, ___transition_probabilities2, ___emission_probabilities3, ___mode4);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___classifier0, ____vocabulary1_marshaled, ___transition_probabilities2, ___emission_probabilities3, ___mode4);
	#endif

	// Marshaling cleanup of parameter '___vocabulary1' native representation
	il2cpp_codegen_marshal_free(____vocabulary1_marshaled);
	____vocabulary1_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::text_OCRHMMDecoder_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_OCRHMMDecoder_delete_mBA6492810BAC54BDC0E8E0D4D650624C8F762EC7 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRHMMDecoder_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_OCRHMMDecoder_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_OCRHMMDecoder_run(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_OCRHMMDecoder_run_m63A466AA3607C9211490ABD30E4F699DCAA7303C (intptr_t ___decoder0, intptr_t ___image1, intptr_t ___rects2, intptr_t ___texts3, intptr_t ___confidences4, int32_t ___component_level5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRHMMDecoder_run", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_OCRHMMDecoder_run)(___decoder0, ___image1, ___rects2, ___texts3, ___confidences4, ___component_level5);
	#else
	il2cppPInvokeFunc(___decoder0, ___image1, ___rects2, ___texts3, ___confidences4, ___component_level5);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::text_loadOCRBeamSearchClassifierCNN(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_loadOCRBeamSearchClassifierCNN_m891809A9E67E0EC56D6C7C93CBB5359B0C4B3025 (String_t* ___fileName0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_loadOCRBeamSearchClassifierCNN", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___fileName0' to native representation
	char* ____fileName0_marshaled = NULL;
	____fileName0_marshaled = il2cpp_codegen_marshal_string(___fileName0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_loadOCRBeamSearchClassifierCNN)(____fileName0_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____fileName0_marshaled);
	#endif

	// Marshaling cleanup of parameter '___fileName0' native representation
	il2cpp_codegen_marshal_free(____fileName0_marshaled);
	____fileName0_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::text_OCRBeamSearchDecoder_ClassifierCallback_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_OCRBeamSearchDecoder_ClassifierCallback_delete_mA1E1FBF3D89A374C6782A81832B0FB960D6564E9 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRBeamSearchDecoder_ClassifierCallback_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_OCRBeamSearchDecoder_ClassifierCallback_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_OCRBeamSearchDecoder_ClassifierCallback_eval(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_OCRBeamSearchDecoder_ClassifierCallback_eval_m4A0169C9DAFB34A737F3EBAF1381F2F8170DC7AC (intptr_t ___obj0, intptr_t ___input1, intptr_t ___recognition_probabilities2, intptr_t ___oversegmentation3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRBeamSearchDecoder_ClassifierCallback_eval", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_OCRBeamSearchDecoder_ClassifierCallback_eval)(___obj0, ___input1, ___recognition_probabilities2, ___oversegmentation3);
	#else
	il2cppPInvokeFunc(___obj0, ___input1, ___recognition_probabilities2, ___oversegmentation3);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::text_OCRBeamSearchDecoder_create(System.IntPtr,System.String,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_OCRBeamSearchDecoder_create_mD7892972DCFCF24C356FD48CDFCCAC2C5893D26E (intptr_t ___classifier0, String_t* ___vocabulary1, intptr_t ___transition_probabilities_table2, intptr_t ___emission_probabilities_table3, int32_t ___mode4, int32_t ___beam_size5, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, char*, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRBeamSearchDecoder_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___vocabulary1' to native representation
	char* ____vocabulary1_marshaled = NULL;
	____vocabulary1_marshaled = il2cpp_codegen_marshal_string(___vocabulary1);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_OCRBeamSearchDecoder_create)(___classifier0, ____vocabulary1_marshaled, ___transition_probabilities_table2, ___emission_probabilities_table3, ___mode4, ___beam_size5);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___classifier0, ____vocabulary1_marshaled, ___transition_probabilities_table2, ___emission_probabilities_table3, ___mode4, ___beam_size5);
	#endif

	// Marshaling cleanup of parameter '___vocabulary1' native representation
	il2cpp_codegen_marshal_free(____vocabulary1_marshaled);
	____vocabulary1_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::text_OCRBeamSearchDecoder_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_OCRBeamSearchDecoder_delete_m16E56382F104D5B7FA5195AD84E489AE82BDA6F3 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRBeamSearchDecoder_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_OCRBeamSearchDecoder_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_OCRBeamSearchDecoder_run(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_OCRBeamSearchDecoder_run_mEFA6BD5845FDA74AE47452D7D6F43721708FB492 (intptr_t ___decoder0, intptr_t ___image1, intptr_t ___rects2, intptr_t ___texts3, intptr_t ___confidences4, int32_t ___component_level5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRBeamSearchDecoder_run", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_OCRBeamSearchDecoder_run)(___decoder0, ___image1, ___rects2, ___texts3, ___confidences4, ___component_level5);
	#else
	il2cppPInvokeFunc(___decoder0, ___image1, ___rects2, ___texts3, ___confidences4, ___component_level5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_OCRBeamSearchDecoder_run2(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_OCRBeamSearchDecoder_run2_m41023D788EC0502BC6BD9A3F14393030A20A2CEC (intptr_t ___decoder0, intptr_t ___image1, intptr_t ___mask2, intptr_t ___rects3, intptr_t ___texts4, intptr_t ___confidences5, int32_t ___component_level6, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRBeamSearchDecoder_run2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_OCRBeamSearchDecoder_run2)(___decoder0, ___image1, ___mask2, ___rects3, ___texts4, ___confidences5, ___component_level6);
	#else
	il2cppPInvokeFunc(___decoder0, ___image1, ___mask2, ___rects3, ___texts4, ___confidences5, ___component_level6);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::text_ERFilter_Callback_eval(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_text_ERFilter_Callback_eval_m180CBFBF2CDB757F881798AFFEE48AC2B0421C29 (intptr_t ___obj0, intptr_t ___stat1, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_Callback_eval", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(text_ERFilter_Callback_eval)(___obj0, ___stat1);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0, ___stat1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::text_ERFilter_Callback_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERFilter_Callback_delete_m6F6116149E486B0F7DD9C33B97BC1644B560862F (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_Callback_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERFilter_Callback_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::text_loadClassifierNM1(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_loadClassifierNM1_mA37505ADFB7C0F38BD429530B5C70DA8D6190146 (String_t* ___filename0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_loadClassifierNM1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___filename0' to native representation
	char* ____filename0_marshaled = NULL;
	____filename0_marshaled = il2cpp_codegen_marshal_string(___filename0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_loadClassifierNM1)(____filename0_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____filename0_marshaled);
	#endif

	// Marshaling cleanup of parameter '___filename0' native representation
	il2cpp_codegen_marshal_free(____filename0_marshaled);
	____filename0_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::text_loadClassifierNM2(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_loadClassifierNM2_m8C1CFCB26E8288C2ED62DDD557A28B39785253F4 (String_t* ___filename0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_loadClassifierNM2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___filename0' to native representation
	char* ____filename0_marshaled = NULL;
	____filename0_marshaled = il2cpp_codegen_marshal_string(___filename0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_loadClassifierNM2)(____filename0_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____filename0_marshaled);
	#endif

	// Marshaling cleanup of parameter '___filename0' native representation
	il2cpp_codegen_marshal_free(____filename0_marshaled);
	____filename0_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::text_createERFilterNM1(System.IntPtr,System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_createERFilterNM1_mBC8761136D4CAD791CAD8D75BEFC51736991F3FF (intptr_t ___cb0, int32_t ___thresholdDelta1, float ___minArea2, float ___maxArea3, float ___minProbability4, bool ___nonMaxSuppression5, float ___minProbabilityDiff6, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, float, float, float, uint8_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(float) + sizeof(float) + sizeof(float) + 1 + 3 + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_createERFilterNM1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_createERFilterNM1)(___cb0, ___thresholdDelta1, ___minArea2, ___maxArea3, ___minProbability4, static_cast<uint8_t>(___nonMaxSuppression5), ___minProbabilityDiff6);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___cb0, ___thresholdDelta1, ___minArea2, ___maxArea3, ___minProbability4, static_cast<uint8_t>(___nonMaxSuppression5), ___minProbabilityDiff6);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::text_createERFilterNM2(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_createERFilterNM2_m76BDAC982023A0FE80E57E0541571BFEFECEABF4 (intptr_t ___cb0, float ___minProbability1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_createERFilterNM2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_createERFilterNM2)(___cb0, ___minProbability1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___cb0, ___minProbability1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::text_ERFilter_run(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERFilter_run_mA5E10241A9666FC2A79F1E176FBEBC135046FF8D (intptr_t ___obj0, intptr_t ___image1, intptr_t ___regions2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_run", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERFilter_run)(___obj0, ___image1, ___regions2);
	#else
	il2cppPInvokeFunc(___obj0, ___image1, ___regions2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_ERFilter_setCallback(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERFilter_setCallback_m34F4523BCEF1E32C0BB0D50B5AC859C5A8836805 (intptr_t ___obj0, intptr_t ___cb1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_setCallback", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERFilter_setCallback)(___obj0, ___cb1);
	#else
	il2cppPInvokeFunc(___obj0, ___cb1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_ERFilter_setThresholdDelta(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERFilter_setThresholdDelta_m2334471ADE94B2D3CDAB26AC84F8CE37734D056D (intptr_t ___obj0, int32_t ___thresholdDelta1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_setThresholdDelta", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERFilter_setThresholdDelta)(___obj0, ___thresholdDelta1);
	#else
	il2cppPInvokeFunc(___obj0, ___thresholdDelta1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_ERFilter_setMinArea(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERFilter_setMinArea_m1BB90FD276EDE39E21E8FAFDC2BEDA2ADFB84A16 (intptr_t ___obj0, float ___minArea1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_setMinArea", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERFilter_setMinArea)(___obj0, ___minArea1);
	#else
	il2cppPInvokeFunc(___obj0, ___minArea1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_ERFilter_setMaxArea(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERFilter_setMaxArea_m2F9AAD6312FCB851E4713E971CE6DFBA5E6751AC (intptr_t ___obj0, float ___maxArea1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_setMaxArea", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERFilter_setMaxArea)(___obj0, ___maxArea1);
	#else
	il2cppPInvokeFunc(___obj0, ___maxArea1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_ERFilter_setMinProbability(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERFilter_setMinProbability_m1AC3E1A2E0E5168F3E2351BBA92B6B4CB8B9611C (intptr_t ___obj0, float ___minProbability1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_setMinProbability", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERFilter_setMinProbability)(___obj0, ___minProbability1);
	#else
	il2cppPInvokeFunc(___obj0, ___minProbability1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_ERFilter_setMinProbabilityDiff(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERFilter_setMinProbabilityDiff_m823D0463621C572993E9DF2BF3151A0E99AFFE01 (intptr_t ___obj0, float ___minProbabilityDiff1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_setMinProbabilityDiff", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERFilter_setMinProbabilityDiff)(___obj0, ___minProbabilityDiff1);
	#else
	il2cppPInvokeFunc(___obj0, ___minProbabilityDiff1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_ERFilter_setNonMaxSuppression(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERFilter_setNonMaxSuppression_mA3C4DEF30909D4F496BA349407D71A55D23A9212 (intptr_t ___obj0, bool ___nonMaxSuppression1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_setNonMaxSuppression", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERFilter_setNonMaxSuppression)(___obj0, static_cast<int32_t>(___nonMaxSuppression1));
	#else
	il2cppPInvokeFunc(___obj0, static_cast<int32_t>(___nonMaxSuppression1));
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::text_ERFilter_getNumRejected(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_text_ERFilter_getNumRejected_mD0BCCA0BD612F9D23007B98CA71E5ABF42471713 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_getNumRejected", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(text_ERFilter_getNumRejected)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::tracking_Tracker_create(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_tracking_Tracker_create_m7457AA5E08C8F18C55103DA4DE286333CB9929A3 (String_t* ___trackerType0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "tracking_Tracker_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___trackerType0' to native representation
	char* ____trackerType0_marshaled = NULL;
	____trackerType0_marshaled = il2cpp_codegen_marshal_string(___trackerType0);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(tracking_Tracker_create)(____trackerType0_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____trackerType0_marshaled);
	#endif

	// Marshaling cleanup of parameter '___trackerType0' native representation
	il2cpp_codegen_marshal_free(____trackerType0_marshaled);
	____trackerType0_marshaled = NULL;

	return returnValue;
}
// System.Boolean OpenCvSharp.NativeMethods::tracking_Tracker_init(System.IntPtr,System.IntPtr,OpenCvSharp.Rect2d)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_tracking_Tracker_init_m53913EB90B1D62F4F4DBC0328E9120A7AE2BC0DE (intptr_t ___obj0, intptr_t ___image1, Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133 ___boundingBox2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "tracking_Tracker_init", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(tracking_Tracker_init)(___obj0, ___image1, ___boundingBox2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___image1, ___boundingBox2);
	#endif

	return static_cast<bool>(returnValue);
}
// System.Boolean OpenCvSharp.NativeMethods::tracking_Tracker_update(System.IntPtr,System.IntPtr,OpenCvSharp.Rect2d&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_tracking_Tracker_update_mCD1A2BF12ACA7F886BA41E881B9F27E03DCF1FE0 (intptr_t ___obj0, intptr_t ___image1, Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133* ___boundingBox2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "tracking_Tracker_update", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(tracking_Tracker_update)(___obj0, ___image1, ___boundingBox2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0, ___image1, ___boundingBox2);
	#endif

	return static_cast<bool>(returnValue);
}
// System.Void OpenCvSharp.NativeMethods::tracking_Ptr_Tracker_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_tracking_Ptr_Tracker_delete_mAA807CB4F935315977CBAC49919080FAF41601A4 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "tracking_Ptr_Tracker_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(tracking_Ptr_Tracker_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::tracking_Ptr_Tracker_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_tracking_Ptr_Tracker_get_m14E7183619860159B0FA58065AC386A03940D71B (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "tracking_Ptr_Tracker_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(tracking_Ptr_Tracker_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::xfeatures2d_BriefDescriptorExtractor_create(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_xfeatures2d_BriefDescriptorExtractor_create_m5015F97961A1A97E45ADC928B0B947B68B04E2C8 (int32_t ___bytes0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_BriefDescriptorExtractor_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_BriefDescriptorExtractor_create)(___bytes0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___bytes0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_Ptr_BriefDescriptorExtractor_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_Ptr_BriefDescriptorExtractor_delete_m10F564A5AF5E3F79EA926D60AC2F405BC860CDB6 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_Ptr_BriefDescriptorExtractor_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_Ptr_BriefDescriptorExtractor_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_BriefDescriptorExtractor_read(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_BriefDescriptorExtractor_read_m366AA7F5464468F834344BCBCC887157355B1EB4 (intptr_t ___obj0, intptr_t ___fn1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_BriefDescriptorExtractor_read", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_BriefDescriptorExtractor_read)(___obj0, ___fn1);
	#else
	il2cppPInvokeFunc(___obj0, ___fn1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_BriefDescriptorExtractor_write(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_BriefDescriptorExtractor_write_m78F3F733A26CE310B68074CF7B286F6D35A6C7EC (intptr_t ___obj0, intptr_t ___fs1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_BriefDescriptorExtractor_write", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_BriefDescriptorExtractor_write)(___obj0, ___fs1);
	#else
	il2cppPInvokeFunc(___obj0, ___fs1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::xfeatures2d_BriefDescriptorExtractor_descriptorSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_xfeatures2d_BriefDescriptorExtractor_descriptorSize_m50A13AB15F2BCD31CD4118DA9BB98B795063E8B1 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_BriefDescriptorExtractor_descriptorSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_BriefDescriptorExtractor_descriptorSize)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::xfeatures2d_BriefDescriptorExtractor_descriptorType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_xfeatures2d_BriefDescriptorExtractor_descriptorType_mAD31253B985491E8A9DBAD3A46323469E060B82E (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_BriefDescriptorExtractor_descriptorType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_BriefDescriptorExtractor_descriptorType)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::xfeatures2d_Ptr_BriefDescriptorExtractor_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_xfeatures2d_Ptr_BriefDescriptorExtractor_get_m8772F081771FA4C5DF79B6204BD8730731DA8C96 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_Ptr_BriefDescriptorExtractor_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_Ptr_BriefDescriptorExtractor_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::xfeatures2d_FREAK_create(System.Int32,System.Int32,System.Single,System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_xfeatures2d_FREAK_create_m6BAA77C51B120C192AF6FEE08A003413427AEA07 (int32_t ___orientationNormalized0, int32_t ___scaleNormalized1, float ___patternScale2, int32_t ___nOctaves3, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___selectedPairs4, int32_t ___selectedPairsLength5, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, float, int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(float) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_FREAK_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___selectedPairs4' to native representation
	int32_t* ____selectedPairs4_marshaled = NULL;
	if (___selectedPairs4 != NULL)
	{
		____selectedPairs4_marshaled = reinterpret_cast<int32_t*>((___selectedPairs4)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_FREAK_create)(___orientationNormalized0, ___scaleNormalized1, ___patternScale2, ___nOctaves3, ____selectedPairs4_marshaled, ___selectedPairsLength5);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___orientationNormalized0, ___scaleNormalized1, ___patternScale2, ___nOctaves3, ____selectedPairs4_marshaled, ___selectedPairsLength5);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_Ptr_FREAK_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_Ptr_FREAK_delete_m6A4AED9065806BE0A28ADED57FACFAE2E2BF26AC (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_Ptr_FREAK_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_Ptr_FREAK_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::xfeatures2d_Ptr_FREAK_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_xfeatures2d_Ptr_FREAK_get_m4E375E1C73136248A286E38F6950D41020872BE4 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_Ptr_FREAK_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_Ptr_FREAK_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::xfeatures2d_StarDetector_create(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_xfeatures2d_StarDetector_create_mFDFDE4BEE50B5DFC12FF6185472CCC9456623038 (int32_t ___maxSize0, int32_t ___responseThreshold1, int32_t ___lineThresholdProjected2, int32_t ___lineThresholdBinarized3, int32_t ___suppressNonmaxSize4, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_StarDetector_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_StarDetector_create)(___maxSize0, ___responseThreshold1, ___lineThresholdProjected2, ___lineThresholdBinarized3, ___suppressNonmaxSize4);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___maxSize0, ___responseThreshold1, ___lineThresholdProjected2, ___lineThresholdBinarized3, ___suppressNonmaxSize4);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_Ptr_StarDetector_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_Ptr_StarDetector_delete_mE3E7A0BCE419241713D5963A403B624B67962851 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_Ptr_StarDetector_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_Ptr_StarDetector_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::xfeatures2d_Ptr_StarDetector_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_xfeatures2d_Ptr_StarDetector_get_m3B6B823B82A52CF93AC71E7AEF8CF81FA634DD9F (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_Ptr_StarDetector_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_Ptr_StarDetector_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::xfeatures2d_SURF_create(System.Double,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_xfeatures2d_SURF_create_mC10079F0B965E06E6C3DC80FDF0A2F2F3BEC1F42 (double ___hessianThreshold0, int32_t ___nOctaves1, int32_t ___nOctaveLayers2, int32_t ___extended3, int32_t ___upright4, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_create)(___hessianThreshold0, ___nOctaves1, ___nOctaveLayers2, ___extended3, ___upright4);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___hessianThreshold0, ___nOctaves1, ___nOctaveLayers2, ___extended3, ___upright4);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_Ptr_SURF_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_Ptr_SURF_delete_mA11B70A0F240AA1E1BFF852BC5FC5BC5EC017BCF (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_Ptr_SURF_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_Ptr_SURF_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::xfeatures2d_Ptr_SURF_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_xfeatures2d_Ptr_SURF_get_m5AA9F1A969997ED333A5EB5996856DA2CF6E8BD8 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_Ptr_SURF_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_Ptr_SURF_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::xfeatures2d_SURF_getHessianThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_xfeatures2d_SURF_getHessianThreshold_m0D43810B432D25D2D54982FAC5E4A142416D34BE (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_getHessianThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_getHessianThreshold)(___obj0);
	#else
	double returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::xfeatures2d_SURF_getNOctaves(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_xfeatures2d_SURF_getNOctaves_mB8F621BAD31BBA632DBB346F0148D93AEAD1DA3C (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_getNOctaves", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_getNOctaves)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::xfeatures2d_SURF_getNOctaveLayers(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_xfeatures2d_SURF_getNOctaveLayers_mAEED98D455DAF1FD8EDCF4111091F83C95A4FFAA (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_getNOctaveLayers", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_getNOctaveLayers)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::xfeatures2d_SURF_getExtended(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_xfeatures2d_SURF_getExtended_mFD548F56FDE69AD743EBA6B3098DA806E1A4FAE5 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_getExtended", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_getExtended)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::xfeatures2d_SURF_getUpright(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_xfeatures2d_SURF_getUpright_mFC0CDFD2DA4975775922BC14C5C08150E0F3DE66 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_getUpright", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_getUpright)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_SURF_setHessianThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_SURF_setHessianThreshold_m6969E64BD15F6077D1A620389806F885A6F41ECC (intptr_t ___obj0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_setHessianThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_setHessianThreshold)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_SURF_setNOctaves(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_SURF_setNOctaves_m64055D60B201FA7F27E2ECA96747683E6C75056A (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_setNOctaves", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_setNOctaves)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_SURF_setNOctaveLayers(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_SURF_setNOctaveLayers_mA145A2071BA9CE5B4B90705A38AD368B6EF9A08F (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_setNOctaveLayers", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_setNOctaveLayers)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_SURF_setExtended(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_SURF_setExtended_mB39D26A8F231539EE45FC289E2481BBDCD94762C (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_setExtended", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_setExtended)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_SURF_setUpright(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_SURF_setUpright_mDDE689B1781052087CD0136D72C07B803688F28D (intptr_t ___obj0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_setUpright", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_setUpright)(___obj0, ___value1);
	#else
	il2cppPInvokeFunc(___obj0, ___value1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::xfeatures2d_SIFT_create(System.Int32,System.Int32,System.Double,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_xfeatures2d_SIFT_create_m9F070DBCC0C06FFB5CBF71B991F2E15298285FB6 (int32_t ___nfeatures0, int32_t ___nOctaveLayers1, double ___contrastThreshold2, double ___edgeThreshold3, double ___sigma4, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, double, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SIFT_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_SIFT_create)(___nfeatures0, ___nOctaveLayers1, ___contrastThreshold2, ___edgeThreshold3, ___sigma4);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___nfeatures0, ___nOctaveLayers1, ___contrastThreshold2, ___edgeThreshold3, ___sigma4);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_Ptr_SIFT_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_Ptr_SIFT_delete_mAD53500FEA879B229CAC6D926D313B9206FEC920 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_Ptr_SIFT_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_Ptr_SIFT_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::xfeatures2d_Ptr_SIFT_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_xfeatures2d_Ptr_SIFT_get_m6886D29A5CE86ABD37F19A2E33A76239E2411AB7 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_Ptr_SIFT_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_Ptr_SIFT_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::xphoto_balanceWhite(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xphoto_balanceWhite_mE3B5DC2160B85908F0B844E8FE9350D39FA4BF7F (intptr_t ___src0, intptr_t ___dst1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xphoto_balanceWhite", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xphoto_balanceWhite)(___src0, ___dst1);
	#else
	il2cppPInvokeFunc(___src0, ___dst1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_inpaint(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_inpaint_m1AF9E3FCEF28E19FAFD1D0B2D296A38EFB8AAF21 (intptr_t ___src0, intptr_t ___inpaintMask1, intptr_t ___dst2, double ___inpaintRadius3, int32_t ___flags4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_inpaint", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_inpaint)(___src0, ___inpaintMask1, ___dst2, ___inpaintRadius3, ___flags4);
	#else
	il2cppPInvokeFunc(___src0, ___inpaintMask1, ___dst2, ___inpaintRadius3, ___flags4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_fastNlMeansDenoising(System.IntPtr,System.IntPtr,System.Single,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_fastNlMeansDenoising_mA9EA20420E108C77377E9006058BD17C5C98C4F8 (intptr_t ___src0, intptr_t ___dst1, float ___h2, int32_t ___templateWindowSize3, int32_t ___searchWindowSize4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, float, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_fastNlMeansDenoising", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_fastNlMeansDenoising)(___src0, ___dst1, ___h2, ___templateWindowSize3, ___searchWindowSize4);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___h2, ___templateWindowSize3, ___searchWindowSize4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_fastNlMeansDenoisingColored(System.IntPtr,System.IntPtr,System.Single,System.Single,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_fastNlMeansDenoisingColored_m2E44282A684D12E9226B2BD60498557E9EAE16CC (intptr_t ___src0, intptr_t ___dst1, float ___h2, float ___hColor3, int32_t ___templateWindowSize4, int32_t ___searchWindowSize5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, float, float, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(float) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_fastNlMeansDenoisingColored", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_fastNlMeansDenoisingColored)(___src0, ___dst1, ___h2, ___hColor3, ___templateWindowSize4, ___searchWindowSize5);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___h2, ___hColor3, ___templateWindowSize4, ___searchWindowSize5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_fastNlMeansDenoisingMulti(System.IntPtr[],System.Int32,System.IntPtr,System.Int32,System.Int32,System.Single,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_fastNlMeansDenoisingMulti_mFCB0C20A42E19523FD0ACF5F965ABB6EDFEC0C5B (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___srcImgs0, int32_t ___srcImgsLength1, intptr_t ___dst2, int32_t ___imgToDenoiseIndex3, int32_t ___temporalWindowSize4, float ___h5, int32_t ___templateWindowSize6, int32_t ___searchWindowSize7, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, int32_t, intptr_t, int32_t, int32_t, float, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(float) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_fastNlMeansDenoisingMulti", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___srcImgs0' to native representation
	intptr_t* ____srcImgs0_marshaled = NULL;
	if (___srcImgs0 != NULL)
	{
		____srcImgs0_marshaled = reinterpret_cast<intptr_t*>((___srcImgs0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_fastNlMeansDenoisingMulti)(____srcImgs0_marshaled, ___srcImgsLength1, ___dst2, ___imgToDenoiseIndex3, ___temporalWindowSize4, ___h5, ___templateWindowSize6, ___searchWindowSize7);
	#else
	il2cppPInvokeFunc(____srcImgs0_marshaled, ___srcImgsLength1, ___dst2, ___imgToDenoiseIndex3, ___temporalWindowSize4, ___h5, ___templateWindowSize6, ___searchWindowSize7);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_fastNlMeansDenoisingColoredMulti(System.IntPtr[],System.Int32,System.IntPtr,System.Int32,System.Int32,System.Single,System.Single,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_fastNlMeansDenoisingColoredMulti_mA3E8884EBF4A99FA9D0B91721363029A6261FAB6 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___srcImgs0, int32_t ___srcImgsLength1, intptr_t ___dst2, int32_t ___imgToDenoiseIndex3, int32_t ___temporalWindowSize4, float ___h5, float ___hColor6, int32_t ___templateWindowSize7, int32_t ___searchWindowSize8, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, int32_t, intptr_t, int32_t, int32_t, float, float, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(float) + sizeof(float) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_fastNlMeansDenoisingColoredMulti", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___srcImgs0' to native representation
	intptr_t* ____srcImgs0_marshaled = NULL;
	if (___srcImgs0 != NULL)
	{
		____srcImgs0_marshaled = reinterpret_cast<intptr_t*>((___srcImgs0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_fastNlMeansDenoisingColoredMulti)(____srcImgs0_marshaled, ___srcImgsLength1, ___dst2, ___imgToDenoiseIndex3, ___temporalWindowSize4, ___h5, ___hColor6, ___templateWindowSize7, ___searchWindowSize8);
	#else
	il2cppPInvokeFunc(____srcImgs0_marshaled, ___srcImgsLength1, ___dst2, ___imgToDenoiseIndex3, ___temporalWindowSize4, ___h5, ___hColor6, ___templateWindowSize7, ___searchWindowSize8);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_denoise_TVL1(System.IntPtr[],System.Int32,System.IntPtr,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_denoise_TVL1_mC690B11D84742A0F6B03366355B1121B32F9FFA6 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___observations0, int32_t ___observationsSize1, intptr_t ___result2, double ___lambda3, int32_t ___niters4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, int32_t, intptr_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_denoise_TVL1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___observations0' to native representation
	intptr_t* ____observations0_marshaled = NULL;
	if (___observations0 != NULL)
	{
		____observations0_marshaled = reinterpret_cast<intptr_t*>((___observations0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_denoise_TVL1)(____observations0_marshaled, ___observationsSize1, ___result2, ___lambda3, ___niters4);
	#else
	il2cppPInvokeFunc(____observations0_marshaled, ___observationsSize1, ___result2, ___lambda3, ___niters4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_decolor(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_decolor_m9102DB96060E7F3B82411C74589DCD6546246F75 (intptr_t ___src0, intptr_t ___grayscale1, intptr_t ___color_boost2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_decolor", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_decolor)(___src0, ___grayscale1, ___color_boost2);
	#else
	il2cppPInvokeFunc(___src0, ___grayscale1, ___color_boost2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_seamlessClone(System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Point,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_seamlessClone_mE570CA1860859C7B2831B85C5E08CDCDE4EECE39 (intptr_t ___src0, intptr_t ___dst1, intptr_t ___mask2, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___p3, intptr_t ___blend4, int32_t ___flags5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_seamlessClone", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_seamlessClone)(___src0, ___dst1, ___mask2, ___p3, ___blend4, ___flags5);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___mask2, ___p3, ___blend4, ___flags5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_colorChange(System.IntPtr,System.IntPtr,System.IntPtr,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_colorChange_m0662CF429E2F9347238CB3C02D7904017B6EC631 (intptr_t ___src0, intptr_t ___mask1, intptr_t ___dst2, float ___red_mul3, float ___green_mul4, float ___blue_mul5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, float, float, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_colorChange", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_colorChange)(___src0, ___mask1, ___dst2, ___red_mul3, ___green_mul4, ___blue_mul5);
	#else
	il2cppPInvokeFunc(___src0, ___mask1, ___dst2, ___red_mul3, ___green_mul4, ___blue_mul5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_illuminationChange(System.IntPtr,System.IntPtr,System.IntPtr,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_illuminationChange_mA47BC7751B80651EA53A0787D693698E0D8C5EE4 (intptr_t ___src0, intptr_t ___mask1, intptr_t ___dst2, float ___alpha3, float ___beta4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, float, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_illuminationChange", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_illuminationChange)(___src0, ___mask1, ___dst2, ___alpha3, ___beta4);
	#else
	il2cppPInvokeFunc(___src0, ___mask1, ___dst2, ___alpha3, ___beta4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_textureFlattening(System.IntPtr,System.IntPtr,System.IntPtr,System.Single,System.Single,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_textureFlattening_m924B470CAE872FD7FB4317B0C9F1C0024F8725BD (intptr_t ___src0, intptr_t ___mask1, intptr_t ___dst2, float ___low_threshold3, float ___high_threshold4, int32_t ___kernel_size5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, float, float, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(float) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_textureFlattening", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_textureFlattening)(___src0, ___mask1, ___dst2, ___low_threshold3, ___high_threshold4, ___kernel_size5);
	#else
	il2cppPInvokeFunc(___src0, ___mask1, ___dst2, ___low_threshold3, ___high_threshold4, ___kernel_size5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_edgePreservingFilter(System.IntPtr,System.IntPtr,System.Int32,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_edgePreservingFilter_m4A43A2403A6231A6C67AFCB6167A5F11CF9425FC (intptr_t ___src0, intptr_t ___dst1, int32_t ___flags2, float ___sigma_s3, float ___sigma_r4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, float, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_edgePreservingFilter", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_edgePreservingFilter)(___src0, ___dst1, ___flags2, ___sigma_s3, ___sigma_r4);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___flags2, ___sigma_s3, ___sigma_r4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_detailEnhance(System.IntPtr,System.IntPtr,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_detailEnhance_m46FF16A6CE1986D1D271592DFA1B139DFB3E7221 (intptr_t ___src0, intptr_t ___dst1, float ___sigma_s2, float ___sigma_r3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, float, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_detailEnhance", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_detailEnhance)(___src0, ___dst1, ___sigma_s2, ___sigma_r3);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___sigma_s2, ___sigma_r3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_pencilSketch(System.IntPtr,System.IntPtr,System.IntPtr,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_pencilSketch_m2AC3B2FF44101D7FBC0BC2AB5CCD997EB09D7187 (intptr_t ___src0, intptr_t ___dst11, intptr_t ___dst22, float ___sigma_s3, float ___sigma_r4, float ___shade_factor5, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, float, float, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_pencilSketch", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_pencilSketch)(___src0, ___dst11, ___dst22, ___sigma_s3, ___sigma_r4, ___shade_factor5);
	#else
	il2cppPInvokeFunc(___src0, ___dst11, ___dst22, ___sigma_s3, ___sigma_r4, ___shade_factor5);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_stylization(System.IntPtr,System.IntPtr,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_stylization_m19B40EFC5E4B7C5FBD30CB63D9042335F0F79460 (intptr_t ___src0, intptr_t ___dst1, float ___sigma_s2, float ___sigma_r3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, float, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_stylization", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_stylization)(___src0, ___dst1, ___sigma_s2, ___sigma_r3);
	#else
	il2cppPInvokeFunc(___src0, ___dst1, ___sigma_s2, ___sigma_r3);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::photo_createCalibrateDebevec(System.Int32,System.Single,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_photo_createCalibrateDebevec_m262F2ECC2ED7E0893F307B8053E91C874E86A5D0 (int32_t ___samples0, float ___lambda1, int32_t ___random2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, float, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(float) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_createCalibrateDebevec", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(photo_createCalibrateDebevec)(___samples0, ___lambda1, ___random2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___samples0, ___lambda1, ___random2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::photo_createCalibrateRobertson(System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_photo_createCalibrateRobertson_mB353A5C7EC9C69D6D5AD0A9457F8FD73D540175B (int32_t ___maxIter0, float ___threshold1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_createCalibrateRobertson", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(photo_createCalibrateRobertson)(___maxIter0, ___threshold1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___maxIter0, ___threshold1);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::photo_Ptr_CalibrateDebevec_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_Ptr_CalibrateDebevec_delete_mE802598AEA19BD0B5C3BA3448A352F1DD9B46D55 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_Ptr_CalibrateDebevec_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_Ptr_CalibrateDebevec_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_Ptr_CalibrateRobertson_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_Ptr_CalibrateRobertson_delete_m6AF7D25CAC503EC595B3CE2B51084CE43BCFBE31 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_Ptr_CalibrateRobertson_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_Ptr_CalibrateRobertson_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::photo_Ptr_CalibrateDebevec_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_photo_Ptr_CalibrateDebevec_get_m67AD4F23D879341D7B9CC0ED7579423BBFE3A32D (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_Ptr_CalibrateDebevec_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(photo_Ptr_CalibrateDebevec_get)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::photo_Ptr_CalibrateRobertson_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_photo_Ptr_CalibrateRobertson_get_mBBE6E1FD87F20A8E953E70C2CDB6AF2E5C093474 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_Ptr_CalibrateRobertson_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(photo_Ptr_CalibrateRobertson_get)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::photo_CalibrateCRF_process(System.IntPtr,System.IntPtr[],System.Int32,System.IntPtr,System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_CalibrateCRF_process_mEC2C96DC4516AEF3D0041CF7ED425B90FDADDA99 (intptr_t ___obj0, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___srcImgs1, int32_t ___srcImgsLength2, intptr_t ___dst3, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___times4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, intptr_t, float*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_CalibrateCRF_process", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___srcImgs1' to native representation
	intptr_t* ____srcImgs1_marshaled = NULL;
	if (___srcImgs1 != NULL)
	{
		____srcImgs1_marshaled = reinterpret_cast<intptr_t*>((___srcImgs1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___times4' to native representation
	float* ____times4_marshaled = NULL;
	if (___times4 != NULL)
	{
		____times4_marshaled = reinterpret_cast<float*>((___times4)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_CalibrateCRF_process)(___obj0, ____srcImgs1_marshaled, ___srcImgsLength2, ___dst3, ____times4_marshaled);
	#else
	il2cppPInvokeFunc(___obj0, ____srcImgs1_marshaled, ___srcImgsLength2, ___dst3, ____times4_marshaled);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::shape_ShapeDistanceExtractor_computeDistance(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_shape_ShapeDistanceExtractor_computeDistance_m79BD8A5D95EC25106CA1907E3941A62BF0AAD5B9 (intptr_t ___obj0, intptr_t ___contour11, intptr_t ___contour22, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeDistanceExtractor_computeDistance", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeDistanceExtractor_computeDistance)(___obj0, ___contour11, ___contour22);
	#else
	float returnValue = il2cppPInvokeFunc(___obj0, ___contour11, ___contour22);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_Ptr_ShapeContextDistanceExtractor_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_Ptr_ShapeContextDistanceExtractor_delete_mDA65D552C687081E72BAB95397E24354C78558DE (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_Ptr_ShapeContextDistanceExtractor_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_Ptr_ShapeContextDistanceExtractor_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::shape_Ptr_ShapeContextDistanceExtractor_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_shape_Ptr_ShapeContextDistanceExtractor_get_mA37B686E6F503513365DE860B5DECA097D910305 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_Ptr_ShapeContextDistanceExtractor_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(shape_Ptr_ShapeContextDistanceExtractor_get)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setAngularBins(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setAngularBins_m4B27F12AB5F23D8497034C3A7687C8414E733B80 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setAngularBins", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setAngularBins)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getAngularBins(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_shape_ShapeContextDistanceExtractor_getAngularBins_m840495F297807B6B1CBE3B51B882FAEB0ABF494D (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getAngularBins", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getAngularBins)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setRadialBins(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setRadialBins_mE1661B27D2A8CC6C2B7797BEF115F08B595F2F62 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setRadialBins", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setRadialBins)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getRadialBins(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_shape_ShapeContextDistanceExtractor_getRadialBins_m7F866F3FA691F9B7128D02683FC3E70EDC27D12B (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getRadialBins", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getRadialBins)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setInnerRadius(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setInnerRadius_mCA2E678C2049F39FECA70B3B26C8738ACA588977 (intptr_t ___obj0, float ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setInnerRadius", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setInnerRadius)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getInnerRadius(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_shape_ShapeContextDistanceExtractor_getInnerRadius_m0D4F746FBE58EE310ACA1853AD5F8B46623BFCFF (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getInnerRadius", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getInnerRadius)(___obj0);
	#else
	float returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setOuterRadius(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setOuterRadius_m0D93FFB0C0F57C830531194D2DD56E43F12CED98 (intptr_t ___obj0, float ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setOuterRadius", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setOuterRadius)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getOuterRadius(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_shape_ShapeContextDistanceExtractor_getOuterRadius_mBDF2A760F199757CCF0C263508C5C99E68944BE2 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getOuterRadius", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getOuterRadius)(___obj0);
	#else
	float returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setRotationInvariant(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setRotationInvariant_mA9EE246ADF3D32176776746276E233DEB1CC06A2 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setRotationInvariant", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setRotationInvariant)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getRotationInvariant(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_shape_ShapeContextDistanceExtractor_getRotationInvariant_mDE15F30E66C9959F6303DF6B78688359EB13DD3D (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getRotationInvariant", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getRotationInvariant)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setShapeContextWeight(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setShapeContextWeight_mD9227B808E687633D510D40DFBC742F825740542 (intptr_t ___obj0, float ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setShapeContextWeight", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setShapeContextWeight)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getShapeContextWeight(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_shape_ShapeContextDistanceExtractor_getShapeContextWeight_mC49FC024EC6111F95E793B1E4C558BBD9362289B (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getShapeContextWeight", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getShapeContextWeight)(___obj0);
	#else
	float returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setImageAppearanceWeight(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setImageAppearanceWeight_mC0F5CCB28CA0B2B016EA872160142CA49F533697 (intptr_t ___obj0, float ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setImageAppearanceWeight", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setImageAppearanceWeight)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getImageAppearanceWeight(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_shape_ShapeContextDistanceExtractor_getImageAppearanceWeight_m0973F15607B17383C13ED54ABFC859973350FC82 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getImageAppearanceWeight", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getImageAppearanceWeight)(___obj0);
	#else
	float returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setBendingEnergyWeight(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setBendingEnergyWeight_mC93454EE7245534688B737FA9F99AC63B3946783 (intptr_t ___obj0, float ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setBendingEnergyWeight", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setBendingEnergyWeight)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getBendingEnergyWeight(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_shape_ShapeContextDistanceExtractor_getBendingEnergyWeight_mFE1F97941807F26C260105779A85919CCDABAE33 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getBendingEnergyWeight", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getBendingEnergyWeight)(___obj0);
	#else
	float returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setImages(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setImages_m677A52D9B2433A51F76CA7CABE1057C80BEBE503 (intptr_t ___obj0, intptr_t ___image11, intptr_t ___image22, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setImages", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setImages)(___obj0, ___image11, ___image22);
	#else
	il2cppPInvokeFunc(___obj0, ___image11, ___image22);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getImages(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_getImages_m51E831C430EA50AF848C4474F771DC297C4F0D4E (intptr_t ___obj0, intptr_t ___image11, intptr_t ___image22, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getImages", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getImages)(___obj0, ___image11, ___image22);
	#else
	il2cppPInvokeFunc(___obj0, ___image11, ___image22);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setIterations(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setIterations_m3EFF28D7F4C3B9ACEBB498E5A1FC5D2B4A44528B (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setIterations", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setIterations)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getIterations(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_shape_ShapeContextDistanceExtractor_getIterations_m83E4A7D22C138C5CB98443E55279FB61882FB807 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getIterations", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getIterations)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setStdDev(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setStdDev_m134A90F6C93D9EF6E83D7467858C987B596908F3 (intptr_t ___obj0, float ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setStdDev", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setStdDev)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getStdDev(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_shape_ShapeContextDistanceExtractor_getStdDev_mF70E0783F2D701242E467CEEBFE24343E8AF48A3 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getStdDev", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getStdDev)(___obj0);
	#else
	float returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::shape_createShapeContextDistanceExtractor(System.Int32,System.Int32,System.Single,System.Single,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_shape_createShapeContextDistanceExtractor_m8704FE47AC6818F2DBE93F643B6ACE038815B024 (int32_t ___nAngularBins0, int32_t ___nRadialBins1, float ___innerRadius2, float ___outerRadius3, int32_t ___iterations4, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, float, float, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(float) + sizeof(float) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_createShapeContextDistanceExtractor", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(shape_createShapeContextDistanceExtractor)(___nAngularBins0, ___nRadialBins1, ___innerRadius2, ___outerRadius3, ___iterations4);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___nAngularBins0, ___nRadialBins1, ___innerRadius2, ___outerRadius3, ___iterations4);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_Ptr_HausdorffDistanceExtractor_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_Ptr_HausdorffDistanceExtractor_delete_mE0668CB0B16950D0C21DFCF2DD7B42DDB9D88AAA (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_Ptr_HausdorffDistanceExtractor_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_Ptr_HausdorffDistanceExtractor_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::shape_Ptr_HausdorffDistanceExtractor_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_shape_Ptr_HausdorffDistanceExtractor_get_m578DD740D05729CF0BC6921D2CDAF57D24BDFBE9 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_Ptr_HausdorffDistanceExtractor_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(shape_Ptr_HausdorffDistanceExtractor_get)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_HausdorffDistanceExtractor_setDistanceFlag(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_HausdorffDistanceExtractor_setDistanceFlag_m68DE5035FAAE12485F28EEE93F0F648D62576FF3 (intptr_t ___obj0, int32_t ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_HausdorffDistanceExtractor_setDistanceFlag", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_HausdorffDistanceExtractor_setDistanceFlag)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::shape_HausdorffDistanceExtractor_getDistanceFlag(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_shape_HausdorffDistanceExtractor_getDistanceFlag_m790996CE6FD16DACCF77F06825603B858F7FD522 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_HausdorffDistanceExtractor_getDistanceFlag", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(shape_HausdorffDistanceExtractor_getDistanceFlag)(___obj0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_HausdorffDistanceExtractor_setRankProportion(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_HausdorffDistanceExtractor_setRankProportion_m4B1963FCBB3711A7A9DA166541C18A6B1BFE67C1 (intptr_t ___obj0, float ___val1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_HausdorffDistanceExtractor_setRankProportion", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_HausdorffDistanceExtractor_setRankProportion)(___obj0, ___val1);
	#else
	il2cppPInvokeFunc(___obj0, ___val1);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::shape_HausdorffDistanceExtractor_getRankProportion(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_shape_HausdorffDistanceExtractor_getRankProportion_m014634AECBC0DA6E2225568710B19B6C27A183A3 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_HausdorffDistanceExtractor_getRankProportion", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(shape_HausdorffDistanceExtractor_getRankProportion)(___obj0);
	#else
	float returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::shape_createHausdorffDistanceExtractor(System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_shape_createHausdorffDistanceExtractor_mA33755FFCD85075297D75A992A13DAA0E6ABC841 (int32_t ___distanceFlag0, float ___rankProp1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_createHausdorffDistanceExtractor", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(shape_createHausdorffDistanceExtractor)(___distanceFlag0, ___rankProp1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___distanceFlag0, ___rankProp1);
	#endif

	return returnValue;
}
// OpenCvSharp.RotatedRect OpenCvSharp.NativeMethods::video_CamShift(System.IntPtr,OpenCvSharp.Rect&,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 NativeMethods_video_CamShift_m4D072509E7E28640C07B99507E889F6430BA4617 (intptr_t ___probImage0, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___window1, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___criteria2, const RuntimeMethod* method) 
{
	typedef RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 (CDECL *PInvokeFunc) (intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_CamShift", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = reinterpret_cast<PInvokeFunc>(video_CamShift)(___probImage0, ___window1, ___criteria2);
	#else
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = il2cppPInvokeFunc(___probImage0, ___window1, ___criteria2);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::video_meanShift(System.IntPtr,OpenCvSharp.Rect&,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_meanShift_mB38BC1CF851B84BAAA6105661F20C647070E683B (intptr_t ___probImage0, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___window1, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___criteria2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_meanShift", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_meanShift)(___probImage0, ___window1, ___criteria2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___probImage0, ___window1, ___criteria2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_new1_m0D274015F558654F74432E64E8F1CCCEFD6BF5C5 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_new2(System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_new2_m0165F475C087DB8D3BB0A15707D8EC9FA949E041 (int32_t ___dynamParams0, int32_t ___measureParams1, int32_t ___controlParams2, int32_t ___type3, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_new2)(___dynamParams0, ___measureParams1, ___controlParams2, ___type3);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___dynamParams0, ___measureParams1, ___controlParams2, ___type3);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_KalmanFilter_init(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_KalmanFilter_init_mC6FEB64396A88BF8A21FAE33221500B549B2C042 (intptr_t ___obj0, int32_t ___dynamParams1, int32_t ___measureParams2, int32_t ___controlParams3, int32_t ___type4, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_init", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_KalmanFilter_init)(___obj0, ___dynamParams1, ___measureParams2, ___controlParams3, ___type4);
	#else
	il2cppPInvokeFunc(___obj0, ___dynamParams1, ___measureParams2, ___controlParams3, ___type4);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::video_KalmanFilter_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_KalmanFilter_delete_m0754403AA1A2EFB698E816FFB38807F323567EEF (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_KalmanFilter_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_predict(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_predict_mE0B72C846211FFB16E1C1373E3CF0C6C4AAE9361 (intptr_t ___obj0, intptr_t ___control1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_predict", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_predict)(___obj0, ___control1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ___control1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_correct(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_correct_mC3FE5B4EE330C7B44A3651E74EA75879A329DFC4 (intptr_t ___obj0, intptr_t ___measurement1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_correct", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_correct)(___obj0, ___measurement1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0, ___measurement1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_statePre(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_statePre_m181C291BD2B7080322C8F81279DCC657AC6F52CD (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_statePre", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_statePre)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_statePost(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_statePost_m333DCDEBFD0E74D104BDB773642689B0CE58FB6B (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_statePost", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_statePost)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_transitionMatrix(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_transitionMatrix_mB022EE0E3FCD71D4994928D70FC3FDB3AF8E718D (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_transitionMatrix", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_transitionMatrix)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_controlMatrix(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_controlMatrix_m55E709ED83FE804E2A0D581F094C8417A55C9E21 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_controlMatrix", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_controlMatrix)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_measurementMatrix(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_measurementMatrix_mEC5E3FA6FFD8AFF5B1EB04DC2CB2C831B22CB67A (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_measurementMatrix", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_measurementMatrix)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_processNoiseCov(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_processNoiseCov_m3341B15936D6D5C19B7BE2CA2745DBC71AD2B9EA (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_processNoiseCov", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_processNoiseCov)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_measurementNoiseCov(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_measurementNoiseCov_m53616B179FF5668DA7823F761BDDBF001ABDFE60 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_measurementNoiseCov", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_measurementNoiseCov)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_errorCovPre(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_errorCovPre_m16B6D25E4E97F8BC57100C26C399ED511D82E64E (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_errorCovPre", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_errorCovPre)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_gain(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_gain_m3E0EDBE9B65ADCAC1139D510A54B7FF9E16EE5D1 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_gain", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_gain)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_errorCovPost(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_errorCovPost_mEBBF07BBE9FE8F8FBA5E95DDD1B6AAC80EC25FA6 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_errorCovPost", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_errorCovPost)(___obj0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___obj0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::video_buildOpticalFlowPyramid1(System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_buildOpticalFlowPyramid1_mFB1ACE9A0EBE5D16BCF8C2FB22519B693BDEED3E (intptr_t ___img0, intptr_t ___pyramid1, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___winSize2, int32_t ___maxLevel3, int32_t ___withDerivatives4, int32_t ___pyrBorder5, int32_t ___derivBorder6, int32_t ___tryReuseInputImage7, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_buildOpticalFlowPyramid1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_buildOpticalFlowPyramid1)(___img0, ___pyramid1, ___winSize2, ___maxLevel3, ___withDerivatives4, ___pyrBorder5, ___derivBorder6, ___tryReuseInputImage7);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___img0, ___pyramid1, ___winSize2, ___maxLevel3, ___withDerivatives4, ___pyrBorder5, ___derivBorder6, ___tryReuseInputImage7);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::video_buildOpticalFlowPyramid2(System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_buildOpticalFlowPyramid2_mCEF567ABFE6BBBAC7F084A24E840AA7E43B8DC00 (intptr_t ___img0, intptr_t ___pyramidVec1, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___winSize2, int32_t ___maxLevel3, int32_t ___withDerivatives4, int32_t ___pyrBorder5, int32_t ___derivBorder6, int32_t ___tryReuseInputImage7, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_buildOpticalFlowPyramid2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_buildOpticalFlowPyramid2)(___img0, ___pyramidVec1, ___winSize2, ___maxLevel3, ___withDerivatives4, ___pyrBorder5, ___derivBorder6, ___tryReuseInputImage7);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___img0, ___pyramidVec1, ___winSize2, ___maxLevel3, ___withDerivatives4, ___pyrBorder5, ___derivBorder6, ___tryReuseInputImage7);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_calcOpticalFlowPyrLK_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Int32,OpenCvSharp.TermCriteria,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_calcOpticalFlowPyrLK_InputArray_m273A9753E65CC47E82FF016EC2517061FC7E0DAA (intptr_t ___prevImg0, intptr_t ___nextImg1, intptr_t ___prevPts2, intptr_t ___nextPts3, intptr_t ___status4, intptr_t ___err5, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___winSize6, int32_t ___maxLevel7, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___criteria8, int32_t ___flags9, double ___minEigThreshold10, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_calcOpticalFlowPyrLK_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_calcOpticalFlowPyrLK_InputArray)(___prevImg0, ___nextImg1, ___prevPts2, ___nextPts3, ___status4, ___err5, ___winSize6, ___maxLevel7, ___criteria8, ___flags9, ___minEigThreshold10);
	#else
	il2cppPInvokeFunc(___prevImg0, ___nextImg1, ___prevPts2, ___nextPts3, ___status4, ___err5, ___winSize6, ___maxLevel7, ___criteria8, ___flags9, ___minEigThreshold10);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::video_calcOpticalFlowPyrLK_vector(System.IntPtr,System.IntPtr,OpenCvSharp.Point2f[],System.Int32,System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Int32,OpenCvSharp.TermCriteria,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_calcOpticalFlowPyrLK_vector_mBB70AE3F311F22322EAA004B2A4677DCF54006AC (intptr_t ___prevImg0, intptr_t ___nextImg1, Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___prevPts2, int32_t ___prevPtsSize3, intptr_t ___nextPts4, intptr_t ___status5, intptr_t ___err6, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___winSize7, int32_t ___maxLevel8, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___criteria9, int32_t ___flags10, double ___minEigThreshold11, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_calcOpticalFlowPyrLK_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___prevPts2' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____prevPts2_marshaled = NULL;
	if (___prevPts2 != NULL)
	{
		____prevPts2_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___prevPts2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_calcOpticalFlowPyrLK_vector)(___prevImg0, ___nextImg1, ____prevPts2_marshaled, ___prevPtsSize3, ___nextPts4, ___status5, ___err6, ___winSize7, ___maxLevel8, ___criteria9, ___flags10, ___minEigThreshold11);
	#else
	il2cppPInvokeFunc(___prevImg0, ___nextImg1, ____prevPts2_marshaled, ___prevPtsSize3, ___nextPts4, ___status5, ___err6, ___winSize7, ___maxLevel8, ___criteria9, ___flags10, ___minEigThreshold11);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::video_calcOpticalFlowFarneback(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_calcOpticalFlowFarneback_m6FC38FA3E50967F448EE7F65CEB7C150C6360F9E (intptr_t ___prev0, intptr_t ___next1, intptr_t ___flow2, double ___pyrScale3, int32_t ___levels4, int32_t ___winSize5, int32_t ___iterations6, int32_t ___polyN7, double ___polySigma8, int32_t ___flags9, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, int32_t, int32_t, int32_t, int32_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_calcOpticalFlowFarneback", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_calcOpticalFlowFarneback)(___prev0, ___next1, ___flow2, ___pyrScale3, ___levels4, ___winSize5, ___iterations6, ___polyN7, ___polySigma8, ___flags9);
	#else
	il2cppPInvokeFunc(___prev0, ___next1, ___flow2, ___pyrScale3, ___levels4, ___winSize5, ___iterations6, ___polyN7, ___polySigma8, ___flags9);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::video_estimateRigidTransform(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_estimateRigidTransform_m455ECC97B9A4C4B989EEF345450FE8EC1D97C628 (intptr_t ___src0, intptr_t ___dst1, int32_t ___fullAffine2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_estimateRigidTransform", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_estimateRigidTransform)(___src0, ___dst1, ___fullAffine2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___src0, ___dst1, ___fullAffine2);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_DenseOpticalFlow_calc(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_DenseOpticalFlow_calc_mEDDD354A7536FA9EBBE1FF60FC9E075BC21FCE66 (intptr_t ___obj0, intptr_t ___i01, intptr_t ___i12, intptr_t ___flow3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_DenseOpticalFlow_calc", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_DenseOpticalFlow_calc)(___obj0, ___i01, ___i12, ___flow3);
	#else
	il2cppPInvokeFunc(___obj0, ___i01, ___i12, ___flow3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::video_DenseOpticalFlow_collectGarbage(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_DenseOpticalFlow_collectGarbage_mB661ED24B298B1A6A2E4290EDD6C99D1C4D91210 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_DenseOpticalFlow_collectGarbage", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_DenseOpticalFlow_collectGarbage)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::video_createOptFlow_DualTVL1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_createOptFlow_DualTVL1_mAC34ED5530F7611E0BBFB19DB544F9312208E282 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_createOptFlow_DualTVL1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_createOptFlow_DualTVL1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_Ptr_DenseOpticalFlow_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_Ptr_DenseOpticalFlow_get_mA58B506C7BA50F7710B12E05FD70070537EADC5E (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_Ptr_DenseOpticalFlow_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_Ptr_DenseOpticalFlow_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_Ptr_DenseOpticalFlow_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_Ptr_DenseOpticalFlow_delete_m356838B24A2F0435C173F6EB2387BE077F4C9CF2 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_Ptr_DenseOpticalFlow_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_Ptr_DenseOpticalFlow_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractor_getBackgroundImage(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractor_getBackgroundImage_m8CCBA05B545262C36812DF3A79FBFDD898B87F4B (intptr_t ___self0, intptr_t ___backgroundImage1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractor_getBackgroundImage", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractor_getBackgroundImage)(___self0, ___backgroundImage1);
	#else
	il2cppPInvokeFunc(___self0, ___backgroundImage1);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractor_apply(System.IntPtr,System.IntPtr,System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractor_apply_m4037F803C06C68E6AC9C79CC7D172C27B6CB9100 (intptr_t ___self0, intptr_t ___image1, intptr_t ___fgmask2, double ___learningRate3, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractor_apply", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractor_apply)(___self0, ___image1, ___fgmask2, ___learningRate3);
	#else
	il2cppPInvokeFunc(___self0, ___image1, ___fgmask2, ___learningRate3);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::video_Ptr_BackgroundSubtractor_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_Ptr_BackgroundSubtractor_delete_mA0C04B816D87212402148060F1BD0B0FC67BFD0C (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_Ptr_BackgroundSubtractor_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_Ptr_BackgroundSubtractor_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::video_Ptr_BackgroundSubtractor_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_Ptr_BackgroundSubtractor_get_m122D480E4247FC3125E435A649026AA9EA4F6AB3 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_Ptr_BackgroundSubtractor_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_Ptr_BackgroundSubtractor_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_createBackgroundSubtractorMOG2(System.Int32,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_createBackgroundSubtractorMOG2_mD3EAAB7728F7FFC419B9C654DAA012AE4CD6A614 (int32_t ___history0, double ___varThreshold1, int32_t ___detectShadows2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_createBackgroundSubtractorMOG2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_createBackgroundSubtractorMOG2)(___history0, ___varThreshold1, ___detectShadows2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___history0, ___varThreshold1, ___detectShadows2);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_Ptr_BackgroundSubtractorMOG2_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_Ptr_BackgroundSubtractorMOG2_delete_mCFAF33C0144A0BF4E2AA058CD7707179B6A63151 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_Ptr_BackgroundSubtractorMOG2_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_Ptr_BackgroundSubtractorMOG2_delete)(___ptr0);
	#else
	il2cppPInvokeFunc(___ptr0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::video_Ptr_BackgroundSubtractorMOG2_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_Ptr_BackgroundSubtractorMOG2_get_mD4B4CB74C8AA0E71F9FBCF97F8E57E187B48C56C (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_Ptr_BackgroundSubtractorMOG2_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_Ptr_BackgroundSubtractorMOG2_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getHistory(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_BackgroundSubtractorMOG2_getHistory_m9497104C9BAD9D4F526BB05C21CB4F8636E819E0 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getHistory", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getHistory)(___ptr0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setHistory(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setHistory_m94ECAC4A568A31B27EE4425C2B439AD99A538ED7 (intptr_t ___ptr0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setHistory", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setHistory)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getNMixtures(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_BackgroundSubtractorMOG2_getNMixtures_m7C25F2651E88AE7C0E593269CEDCB07D735A7954 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getNMixtures", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getNMixtures)(___ptr0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setNMixtures(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setNMixtures_m3F9C8D90CC9EEBEC00AE86235C9B69BBE8CB7308 (intptr_t ___ptr0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setNMixtures", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setNMixtures)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getBackgroundRatio(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_video_BackgroundSubtractorMOG2_getBackgroundRatio_mF44759F29EC8966EC48FDAF7267CE3E56A2C2462 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getBackgroundRatio", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getBackgroundRatio)(___ptr0);
	#else
	double returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setBackgroundRatio(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setBackgroundRatio_m2B0E4E9BA7F258BD587AF50BA691203662C8F98A (intptr_t ___ptr0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setBackgroundRatio", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setBackgroundRatio)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getVarThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_video_BackgroundSubtractorMOG2_getVarThreshold_mAF514AB1696BB7FFCE3CF4769FE31876F508B9FF (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getVarThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getVarThreshold)(___ptr0);
	#else
	double returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setVarThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setVarThreshold_mE751265965F68584E73D4E495B31391A680F4FB3 (intptr_t ___ptr0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setVarThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setVarThreshold)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getVarThresholdGen(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_video_BackgroundSubtractorMOG2_getVarThresholdGen_mC2F1B23356010DF1A6A570EE729B87A6785873E5 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getVarThresholdGen", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getVarThresholdGen)(___ptr0);
	#else
	double returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setVarThresholdGen(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setVarThresholdGen_mCBA48B992CAD5E9545F0C1AC613A311DC91E9E35 (intptr_t ___ptr0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setVarThresholdGen", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setVarThresholdGen)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getVarInit(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_video_BackgroundSubtractorMOG2_getVarInit_m32548A757E0CDDF6135059989CE1E928117D15E0 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getVarInit", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getVarInit)(___ptr0);
	#else
	double returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setVarInit(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setVarInit_m367C27C4AE85D90E86E7C921E6BEF13D23850A07 (intptr_t ___ptr0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setVarInit", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setVarInit)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getVarMin(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_video_BackgroundSubtractorMOG2_getVarMin_m8AD6B6EE8A0B545EB340EC905380ED8D044FB79E (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getVarMin", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getVarMin)(___ptr0);
	#else
	double returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setVarMin(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setVarMin_m2E9402AAA74E8ACE12B3EEADF2C6F2EB76CA687D (intptr_t ___ptr0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setVarMin", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setVarMin)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getVarMax(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_video_BackgroundSubtractorMOG2_getVarMax_m43371658A6A3EF4CB8265A5EA8ECDE3E2E2C928B (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getVarMax", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getVarMax)(___ptr0);
	#else
	double returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setVarMax(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setVarMax_mCE19099ED759871B335735798406DF5527E58529 (intptr_t ___ptr0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setVarMax", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setVarMax)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getComplexityReductionThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_video_BackgroundSubtractorMOG2_getComplexityReductionThreshold_mF2EFA6E93E713EAE0E6954D142F64B6363883CDA (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getComplexityReductionThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getComplexityReductionThreshold)(___ptr0);
	#else
	double returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setComplexityReductionThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setComplexityReductionThreshold_m54C3D52E193AF3DA76CAAAC1741791CDC0C0C252 (intptr_t ___ptr0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setComplexityReductionThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setComplexityReductionThreshold)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getDetectShadows(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_BackgroundSubtractorMOG2_getDetectShadows_m576782AE953FFD98C697337E75CE9FEA881166ED (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getDetectShadows", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getDetectShadows)(___ptr0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setDetectShadows(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setDetectShadows_m47DAF430C057526AC9884738C2FBC7F7F69A66CF (intptr_t ___ptr0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setDetectShadows", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setDetectShadows)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getShadowValue(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_BackgroundSubtractorMOG2_getShadowValue_m380326CA9B0D70DED4ABBBE8CDFF19C08E2E4256 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getShadowValue", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getShadowValue)(___ptr0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setShadowValue(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setShadowValue_m74A114B4F7C812F8944891D4F646A82BE4D65FFE (intptr_t ___ptr0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setShadowValue", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setShadowValue)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getShadowThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_video_BackgroundSubtractorMOG2_getShadowThreshold_mF499EC7764A0B892226EAE02FB70C663FB81BB84 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getShadowThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getShadowThreshold)(___ptr0);
	#else
	double returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setShadowThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setShadowThreshold_mAEF2AD05B53A46D8E819D85438756C4B02F6D46E (intptr_t ___ptr0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setShadowThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setShadowThreshold)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::video_createBackgroundSubtractorKNN(System.Int32,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_createBackgroundSubtractorKNN_mCCD7B48D1CA45204A0A4E1B07F024F99E40AC3D6 (int32_t ___history0, double ___dist2Threshold1, int32_t ___detectShadows2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_createBackgroundSubtractorKNN", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_createBackgroundSubtractorKNN)(___history0, ___dist2Threshold1, ___detectShadows2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___history0, ___dist2Threshold1, ___detectShadows2);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_Ptr_BackgroundSubtractorKNN_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_Ptr_BackgroundSubtractorKNN_delete_m4AB5AB4EAAE8A2B9E0366EE58F8FCDBD5B7AF819 (intptr_t ___obj0, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_Ptr_BackgroundSubtractorKNN_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_Ptr_BackgroundSubtractorKNN_delete)(___obj0);
	#else
	il2cppPInvokeFunc(___obj0);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::video_Ptr_BackgroundSubtractorKNN_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_Ptr_BackgroundSubtractorKNN_get_m70C43CC7E59477D0AECC075A10F1DE7565659B16 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_Ptr_BackgroundSubtractorKNN_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_Ptr_BackgroundSubtractorKNN_get)(___ptr0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_getHistory(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_BackgroundSubtractorKNN_getHistory_mC59C66C79A084F1704150D0FEEB38C90C99F3BF4 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_getHistory", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_getHistory)(___ptr0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_setHistory(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorKNN_setHistory_m85EEB1221253D4E1CF21801FE8AE985D847D8CF8 (intptr_t ___ptr0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_setHistory", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_setHistory)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_getNSamples(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_BackgroundSubtractorKNN_getNSamples_m88592B5CEFC4BF3B7917842D64601B6ED149C534 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_getNSamples", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_getNSamples)(___ptr0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_setNSamples(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorKNN_setNSamples_m49C72301D4F493695AD46AC9B6B730F7E146A7D4 (intptr_t ___ptr0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_setNSamples", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_setNSamples)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_getDist2Threshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_BackgroundSubtractorKNN_getDist2Threshold_m052F09CC704BDC8B2AFA5BEEC346FDD65A88C28E (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_getDist2Threshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_getDist2Threshold)(___ptr0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_setDist2Threshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorKNN_setDist2Threshold_mD42CFE9EC32559F624D3A92A62E9E5F78E8661CF (intptr_t ___ptr0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_setDist2Threshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_setDist2Threshold)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_getkNNSamples(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_BackgroundSubtractorKNN_getkNNSamples_m193D7637607B08CA86DF3B461B75134E705EDFFE (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_getkNNSamples", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_getkNNSamples)(___ptr0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_setkNNSamples(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorKNN_setkNNSamples_m5898D5942EEF6F5240A25838E60E016474882A35 (intptr_t ___ptr0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_setkNNSamples", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_setkNNSamples)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_getDetectShadows(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_BackgroundSubtractorKNN_getDetectShadows_mCC030F78FBA41617B788E39F3E2F3B3F59E7DDA7 (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_getDetectShadows", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_getDetectShadows)(___ptr0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_setDetectShadows(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorKNN_setDetectShadows_m8DE37205A5DA1BE4E14CB9646D159B761A58715D (intptr_t ___ptr0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_setDetectShadows", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_setDetectShadows)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_getShadowValue(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_BackgroundSubtractorKNN_getShadowValue_m0CE46BB4B39143E8BEED92DD8AE7A2F026A67E6D (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_getShadowValue", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_getShadowValue)(___ptr0);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_setShadowValue(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorKNN_setShadowValue_m2D15AF8E0C58BED2226BAFCE3E8C9BC1A91B4014 (intptr_t ___ptr0, int32_t ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_setShadowValue", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_setShadowValue)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_getShadowThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_video_BackgroundSubtractorKNN_getShadowThreshold_mC98C4DDDF02636CA70B11AE86DC413EC4BD1FD8F (intptr_t ___ptr0, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_getShadowThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_getShadowThreshold)(___ptr0);
	#else
	double returnValue = il2cppPInvokeFunc(___ptr0);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_setShadowThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorKNN_setShadowThreshold_mEFCAF813562914EACE901583DFD5CA6A7B373DEB (intptr_t ___ptr0, double ___value1, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_setShadowThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_setShadowThreshold)(___ptr0, ___value1);
	#else
	il2cppPInvokeFunc(___ptr0, ___value1);
	#endif

}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* TMP_Text_get_textInfo_mA24C606B8EA51436E4AA3B9D6DCDFA7A8995E10E_inline (TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* __this, const RuntimeMethod* method) 
{
	{
		// get { return m_textInfo; }
		TMP_TextInfo_t09A8E906329422C3F0C059876801DD695B8D524D* L_0 = __this->___m_textInfo_152;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7* __this, float ___x0, float ___y1, const RuntimeMethod* method) 
{
	{
		float L_0 = ___x0;
		__this->___x_0 = L_0;
		float L_1 = ___y1;
		__this->___y_1 = L_1;
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* __this, float ___x0, float ___y1, float ___z2, const RuntimeMethod* method) 
{
	{
		float L_0 = ___x0;
		__this->___x_2 = L_0;
		float L_1 = ___y1;
		__this->___y_3 = L_1;
		float L_2 = ___z2;
		__this->___z_4 = L_2;
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_op_Addition_m087D6F0EC60843D455F9F83D25FE42B2433AAD1D_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___a0, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___b1, const RuntimeMethod* method) 
{
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = ___a0;
		float L_1 = L_0.___x_2;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_2 = ___b1;
		float L_3 = L_2.___x_2;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_4 = ___a0;
		float L_5 = L_4.___y_3;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_6 = ___b1;
		float L_7 = L_6.___y_3;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_8 = ___a0;
		float L_9 = L_8.___z_4;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_10 = ___b1;
		float L_11 = L_10.___z_4;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_12;
		memset((&L_12), 0, sizeof(L_12));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_12), ((float)il2cpp_codegen_add(L_1, L_3)), ((float)il2cpp_codegen_add(L_5, L_7)), ((float)il2cpp_codegen_add(L_9, L_11)), /*hidden argument*/NULL);
		V_0 = L_12;
		goto IL_0030;
	}

IL_0030:
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_13 = V_0;
		return L_13;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Color32__ctor_mC9C6B443F0C7CA3F8B174158B2AF6F05E18EAC4E_inline (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B* __this, uint8_t ___r0, uint8_t ___g1, uint8_t ___b2, uint8_t ___a3, const RuntimeMethod* method) 
{
	{
		__this->___rgba_0 = 0;
		uint8_t L_0 = ___r0;
		__this->___r_1 = L_0;
		uint8_t L_1 = ___g1;
		__this->___g_2 = L_1;
		uint8_t L_2 = ___b2;
		__this->___b_3 = L_2;
		uint8_t L_3 = ___a3;
		__this->___a_4 = L_3;
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Color_tD001788D726C3A7F1379BEED0260B9591F440C1F Color32_op_Implicit_m203A634DBB77053C9400C68065CA29529103D172_inline (Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B ___c0, const RuntimeMethod* method) 
{
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_0 = ___c0;
		uint8_t L_1 = L_0.___r_1;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_2 = ___c0;
		uint8_t L_3 = L_2.___g_2;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_4 = ___c0;
		uint8_t L_5 = L_4.___b_3;
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_6 = ___c0;
		uint8_t L_7 = L_6.___a_4;
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_8;
		memset((&L_8), 0, sizeof(L_8));
		Color__ctor_m3786F0D6E510D9CFA544523A955870BD2A514C8C_inline((&L_8), ((float)(((float)L_1)/(255.0f))), ((float)(((float)L_3)/(255.0f))), ((float)(((float)L_5)/(255.0f))), ((float)(((float)L_7)/(255.0f))), /*hidden argument*/NULL);
		V_0 = L_8;
		goto IL_003d;
	}

IL_003d:
	{
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_9 = V_0;
		return L_9;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_get_zero_m9D7F7B580B5A276411267E96AA3425736D9BDC83_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = ((Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_StaticFields*)il2cpp_codegen_static_fields_for(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_il2cpp_TypeInfo_var))->___zeroVector_5;
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_1 = V_0;
		return L_1;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 Quaternion_get_identity_mB9CAEEB21BC81352CBF32DB9664BFC06FA7EA27B_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_0 = ((Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974_StaticFields*)il2cpp_codegen_static_fields_for(Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974_il2cpp_TypeInfo_var))->___identityQuaternion_4;
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_1 = V_0;
		return L_1;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B Color32_op_Implicit_m7EFA0B83AD1AE15567E9BC2FA2B8E66D3BFE1395_inline (Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___c0, const RuntimeMethod* method) 
{
	Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_0 = ___c0;
		float L_1 = L_0.___r_0;
		float L_2;
		L_2 = Mathf_Clamp01_mD921B23F47F5347996C56DC789D1DE16EE27D9B1_inline(L_1, NULL);
		float L_3;
		L_3 = bankers_roundf(((float)il2cpp_codegen_multiply(L_2, (255.0f))));
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_4 = ___c0;
		float L_5 = L_4.___g_1;
		float L_6;
		L_6 = Mathf_Clamp01_mD921B23F47F5347996C56DC789D1DE16EE27D9B1_inline(L_5, NULL);
		float L_7;
		L_7 = bankers_roundf(((float)il2cpp_codegen_multiply(L_6, (255.0f))));
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_8 = ___c0;
		float L_9 = L_8.___b_2;
		float L_10;
		L_10 = Mathf_Clamp01_mD921B23F47F5347996C56DC789D1DE16EE27D9B1_inline(L_9, NULL);
		float L_11;
		L_11 = bankers_roundf(((float)il2cpp_codegen_multiply(L_10, (255.0f))));
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_12 = ___c0;
		float L_13 = L_12.___a_3;
		float L_14;
		L_14 = Mathf_Clamp01_mD921B23F47F5347996C56DC789D1DE16EE27D9B1_inline(L_13, NULL);
		float L_15;
		L_15 = bankers_roundf(((float)il2cpp_codegen_multiply(L_14, (255.0f))));
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_16;
		memset((&L_16), 0, sizeof(L_16));
		Color32__ctor_mC9C6B443F0C7CA3F8B174158B2AF6F05E18EAC4E_inline((&L_16), (uint8_t)il2cpp_codegen_cast_floating_point<uint8_t, int32_t, float>(L_3), (uint8_t)il2cpp_codegen_cast_floating_point<uint8_t, int32_t, float>(L_7), (uint8_t)il2cpp_codegen_cast_floating_point<uint8_t, int32_t, float>(L_11), (uint8_t)il2cpp_codegen_cast_floating_point<uint8_t, int32_t, float>(L_15), /*hidden argument*/NULL);
		V_0 = L_16;
		goto IL_0065;
	}

IL_0065:
	{
		Color32_t73C5004937BF5BB8AD55323D51AAA40A898EF48B L_17 = V_0;
		return L_17;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Mathf_Clamp_m154E404AF275A3B2EC99ECAA3879B4CB9F0606DC_inline (float ___value0, float ___min1, float ___max2, const RuntimeMethod* method) 
{
	bool V_0 = false;
	bool V_1 = false;
	float V_2 = 0.0f;
	{
		float L_0 = ___value0;
		float L_1 = ___min1;
		V_0 = (bool)((((float)L_0) < ((float)L_1))? 1 : 0);
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_000e;
		}
	}
	{
		float L_3 = ___min1;
		___value0 = L_3;
		goto IL_0019;
	}

IL_000e:
	{
		float L_4 = ___value0;
		float L_5 = ___max2;
		V_1 = (bool)((((float)L_4) > ((float)L_5))? 1 : 0);
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_0019;
		}
	}
	{
		float L_7 = ___max2;
		___value0 = L_7;
	}

IL_0019:
	{
		float L_8 = ___value0;
		V_2 = L_8;
		goto IL_001d;
	}

IL_001d:
	{
		float L_9 = V_2;
		return L_9;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_op_Subtraction_m1690F44F6DC92B770A940B6CF8AE0535625A9824_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___a0, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___b1, const RuntimeMethod* method) 
{
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = ___a0;
		float L_1 = L_0.___x_2;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_2 = ___b1;
		float L_3 = L_2.___x_2;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_4 = ___a0;
		float L_5 = L_4.___y_3;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_6 = ___b1;
		float L_7 = L_6.___y_3;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_8 = ___a0;
		float L_9 = L_8.___z_4;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_10 = ___b1;
		float L_11 = L_10.___z_4;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_12;
		memset((&L_12), 0, sizeof(L_12));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_12), ((float)il2cpp_codegen_subtract(L_1, L_3)), ((float)il2cpp_codegen_subtract(L_5, L_7)), ((float)il2cpp_codegen_subtract(L_9, L_11)), /*hidden argument*/NULL);
		V_0 = L_12;
		goto IL_0030;
	}

IL_0030:
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_13 = V_0;
		return L_13;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Mathf_Max_mA9DCA91E87D6D27034F56ABA52606A9090406016_inline (float ___a0, float ___b1, const RuntimeMethod* method) 
{
	float V_0 = 0.0f;
	float G_B3_0 = 0.0f;
	{
		float L_0 = ___a0;
		float L_1 = ___b1;
		if ((((float)L_0) > ((float)L_1)))
		{
			goto IL_0008;
		}
	}
	{
		float L_2 = ___b1;
		G_B3_0 = L_2;
		goto IL_0009;
	}

IL_0008:
	{
		float L_3 = ___a0;
		G_B3_0 = L_3;
	}

IL_0009:
	{
		V_0 = G_B3_0;
		goto IL_000c;
	}

IL_000c:
	{
		float L_4 = V_0;
		return L_4;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Vector4__ctor_m96B2CD8B862B271F513AF0BDC2EABD58E4DBC813_inline (Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3* __this, float ___x0, float ___y1, float ___z2, float ___w3, const RuntimeMethod* method) 
{
	{
		float L_0 = ___x0;
		__this->___x_1 = L_0;
		float L_1 = ___y1;
		__this->___y_2 = L_1;
		float L_2 = ___z2;
		__this->___z_3 = L_2;
		float L_3 = ___w3;
		__this->___w_4 = L_3;
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR CharacterSelectionEvent_t5D7AF67F47A37175CF8615AD66DEC4A0AA021392* TMP_TextEventHandler_get_onCharacterSelection_mA62049738125E3C48405E6DFF09E2D42300BE8C3_inline (TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* __this, const RuntimeMethod* method) 
{
	{
		// get { return m_OnCharacterSelection; }
		CharacterSelectionEvent_t5D7AF67F47A37175CF8615AD66DEC4A0AA021392* L_0 = __this->___m_OnCharacterSelection_4;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR SpriteSelectionEvent_t770551D2973013622C464E817FA74D53BCD4FD95* TMP_TextEventHandler_get_onSpriteSelection_m95CDEB7394FFF38F310717EEEFDCD481D96A5E82_inline (TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* __this, const RuntimeMethod* method) 
{
	{
		// get { return m_OnSpriteSelection; }
		SpriteSelectionEvent_t770551D2973013622C464E817FA74D53BCD4FD95* L_0 = __this->___m_OnSpriteSelection_5;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR WordSelectionEvent_t340E6006406B5E90F7190C56218E8F7E3712945E* TMP_TextEventHandler_get_onWordSelection_mF22771B4213EEB3AEFCDA390A4FF28FED5D9184C_inline (TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* __this, const RuntimeMethod* method) 
{
	{
		// get { return m_OnWordSelection; }
		WordSelectionEvent_t340E6006406B5E90F7190C56218E8F7E3712945E* L_0 = __this->___m_OnWordSelection_6;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR LineSelectionEvent_t526120C6113E0638913B951E3D1D7B1CF94F0880* TMP_TextEventHandler_get_onLineSelection_mDDF07E7000993FCD6EAF2FBD2D2226EB66273908_inline (TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* __this, const RuntimeMethod* method) 
{
	{
		// get { return m_OnLineSelection; }
		LineSelectionEvent_t526120C6113E0638913B951E3D1D7B1CF94F0880* L_0 = __this->___m_OnLineSelection_7;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR LinkSelectionEvent_t5CE74F742D231580ED2C810ECE394E1A2BC81B3D* TMP_TextEventHandler_get_onLinkSelection_m87FB9EABE7F917B2F910A18A3B5F1AE3020D976D_inline (TMP_TextEventHandler_t1B20EF196557E1AC0E6AB6AACFA95740CC17A333* __this, const RuntimeMethod* method) 
{
	{
		// get { return m_OnLinkSelection; }
		LinkSelectionEvent_t5CE74F742D231580ED2C810ECE394E1A2BC81B3D* L_0 = __this->___m_OnLinkSelection_8;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 Vector2_op_Implicit_m8F73B300CB4E6F9B4EB5FB6130363D76CEAA230B_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___v0, const RuntimeMethod* method) 
{
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = ___v0;
		float L_1 = L_0.___x_2;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_2 = ___v0;
		float L_3 = L_2.___y_3;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_4;
		memset((&L_4), 0, sizeof(L_4));
		Vector2__ctor_m9525B79969AFFE3254B303A40997A56DEEB6F548_inline((&L_4), L_1, L_3, /*hidden argument*/NULL);
		V_0 = L_4;
		goto IL_0015;
	}

IL_0015:
	{
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_5 = V_0;
		return L_5;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_op_Division_mD7200D6D432BAFC4135C5B17A0B0A812203B0270_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___a0, float ___d1, const RuntimeMethod* method) 
{
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = ___a0;
		float L_1 = L_0.___x_2;
		float L_2 = ___d1;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_3 = ___a0;
		float L_4 = L_3.___y_3;
		float L_5 = ___d1;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_6 = ___a0;
		float L_7 = L_6.___z_4;
		float L_8 = ___d1;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_9;
		memset((&L_9), 0, sizeof(L_9));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_9), ((float)(L_1/L_2)), ((float)(L_4/L_5)), ((float)(L_7/L_8)), /*hidden argument*/NULL);
		V_0 = L_9;
		goto IL_0021;
	}

IL_0021:
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_10 = V_0;
		return L_10;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector2_op_Implicit_mCD214B04BC52AED3C89C3BEF664B6247E5F8954A_inline (Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___v0, const RuntimeMethod* method) 
{
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_0 = ___v0;
		float L_1 = L_0.___x_0;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_2 = ___v0;
		float L_3 = L_2.___y_1;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_4;
		memset((&L_4), 0, sizeof(L_4));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_4), L_1, L_3, (0.0f), /*hidden argument*/NULL);
		V_0 = L_4;
		goto IL_001a;
	}

IL_001a:
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_5 = V_0;
		return L_5;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_get_one_mE6A2D5C6578E94268024613B596BF09F990B1260_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = ((Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_StaticFields*)il2cpp_codegen_static_fields_for(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_il2cpp_TypeInfo_var))->___oneVector_6;
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_1 = V_0;
		return L_1;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_op_Multiply_m516FE285F5342F922C6EB3FCB33197E9017FF484_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___a0, float ___d1, const RuntimeMethod* method) 
{
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = ___a0;
		float L_1 = L_0.___x_2;
		float L_2 = ___d1;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_3 = ___a0;
		float L_4 = L_3.___y_3;
		float L_5 = ___d1;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_6 = ___a0;
		float L_7 = L_6.___z_4;
		float L_8 = ___d1;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_9;
		memset((&L_9), 0, sizeof(L_9));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_9), ((float)il2cpp_codegen_multiply(L_1, L_2)), ((float)il2cpp_codegen_multiply(L_4, L_5)), ((float)il2cpp_codegen_multiply(L_7, L_8)), /*hidden argument*/NULL);
		V_0 = L_9;
		goto IL_0021;
	}

IL_0021:
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_10 = V_0;
		return L_10;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Mathf_PingPong_m157C55BCFEA2BB96680B7B29D714C3F9390551C9_inline (float ___t0, float ___length1, const RuntimeMethod* method) 
{
	float V_0 = 0.0f;
	{
		float L_0 = ___t0;
		float L_1 = ___length1;
		float L_2;
		L_2 = Mathf_Repeat_m1ACDE7EF466FB6CCAD29B3866E4A239A8530E9D5_inline(L_0, ((float)il2cpp_codegen_multiply(L_1, (2.0f))), NULL);
		___t0 = L_2;
		float L_3 = ___length1;
		float L_4 = ___t0;
		float L_5 = ___length1;
		float L_6;
		L_6 = fabsf(((float)il2cpp_codegen_subtract(L_4, L_5)));
		V_0 = ((float)il2cpp_codegen_subtract(L_3, L_6));
		goto IL_001d;
	}

IL_001d:
	{
		float L_7 = V_0;
		return L_7;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Mathf_SmoothStep_mF724C7893D0F0C02FB14D573DDB7F92935451B81_inline (float ___from0, float ___to1, float ___t2, const RuntimeMethod* method) 
{
	float V_0 = 0.0f;
	{
		float L_0 = ___t2;
		float L_1;
		L_1 = Mathf_Clamp01_mD921B23F47F5347996C56DC789D1DE16EE27D9B1_inline(L_0, NULL);
		___t2 = L_1;
		float L_2 = ___t2;
		float L_3 = ___t2;
		float L_4 = ___t2;
		float L_5 = ___t2;
		float L_6 = ___t2;
		___t2 = ((float)il2cpp_codegen_add(((float)il2cpp_codegen_multiply(((float)il2cpp_codegen_multiply(((float)il2cpp_codegen_multiply((-2.0f), L_2)), L_3)), L_4)), ((float)il2cpp_codegen_multiply(((float)il2cpp_codegen_multiply((3.0f), L_5)), L_6))));
		float L_7 = ___to1;
		float L_8 = ___t2;
		float L_9 = ___from0;
		float L_10 = ___t2;
		V_0 = ((float)il2cpp_codegen_add(((float)il2cpp_codegen_multiply(L_7, L_8)), ((float)il2cpp_codegen_multiply(L_9, ((float)il2cpp_codegen_subtract((1.0f), L_10))))));
		goto IL_0030;
	}

IL_0030:
	{
		float L_11 = V_0;
		return L_11;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 Quaternion_Euler_mD4601D966F1F58F3FCA01B3FC19A12D0AD0396DD_inline (float ___x0, float ___y1, float ___z2, const RuntimeMethod* method) 
{
	Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		float L_0 = ___x0;
		float L_1 = ___y1;
		float L_2 = ___z2;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_3;
		memset((&L_3), 0, sizeof(L_3));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_3), L_0, L_1, L_2, /*hidden argument*/NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_4;
		L_4 = Vector3_op_Multiply_m516FE285F5342F922C6EB3FCB33197E9017FF484_inline(L_3, (0.0174532924f), NULL);
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_5;
		L_5 = Quaternion_Internal_FromEulerRad_m2842B9FFB31CDC0F80B7C2172E22831D11D91E93(L_4, NULL);
		V_0 = L_5;
		goto IL_001b;
	}

IL_001b:
	{
		Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 L_6 = V_0;
		return L_6;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR bool TMP_Text_get_havePropertiesChanged_m42ECC7D1CA0DF6E59ACF761EB20635E81FCB8EFF_inline (TMP_Text_tE8D677872D43AD4B2AAF0D6101692A17D0B251A9* __this, const RuntimeMethod* method) 
{
	{
		// get { return m_havePropertiesChanged; }
		bool L_0 = __this->___m_havePropertiesChanged_153;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_op_UnaryNegation_m3AC523A7BED6E843165BDF598690F0560D8CAA63_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___a0, const RuntimeMethod* method) 
{
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = ___a0;
		float L_1 = L_0.___x_2;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_2 = ___a0;
		float L_3 = L_2.___y_3;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_4 = ___a0;
		float L_5 = L_4.___z_4;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_6;
		memset((&L_6), 0, sizeof(L_6));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_6), ((-L_1)), ((-L_3)), ((-L_5)), /*hidden argument*/NULL);
		V_0 = L_6;
		goto IL_001e;
	}

IL_001e:
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_7 = V_0;
		return L_7;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Vector3__ctor_m5F87930F9B0828E5652E2D9D01ED907C01122C86_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* __this, float ___x0, float ___y1, const RuntimeMethod* method) 
{
	{
		float L_0 = ___x0;
		__this->___x_2 = L_0;
		float L_1 = ___y1;
		__this->___y_3 = L_1;
		__this->___z_4 = (0.0f);
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_get_normalized_m736BBF65D5CDA7A18414370D15B4DFCC1E466F07_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* __this, const RuntimeMethod* method) 
{
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = (*(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2*)__this);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_1;
		L_1 = Vector3_Normalize_m6120F119433C5B60BBB28731D3D4A0DA50A84DDD_inline(L_0, NULL);
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_2 = V_0;
		return L_2;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Vector3_Dot_m4688A1A524306675DBDB1E6D483F35E85E3CE6D8_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___lhs0, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___rhs1, const RuntimeMethod* method) 
{
	float V_0 = 0.0f;
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = ___lhs0;
		float L_1 = L_0.___x_2;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_2 = ___rhs1;
		float L_3 = L_2.___x_2;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_4 = ___lhs0;
		float L_5 = L_4.___y_3;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_6 = ___rhs1;
		float L_7 = L_6.___y_3;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_8 = ___lhs0;
		float L_9 = L_8.___z_4;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_10 = ___rhs1;
		float L_11 = L_10.___z_4;
		V_0 = ((float)il2cpp_codegen_add(((float)il2cpp_codegen_add(((float)il2cpp_codegen_multiply(L_1, L_3)), ((float)il2cpp_codegen_multiply(L_5, L_7)))), ((float)il2cpp_codegen_multiply(L_9, L_11))));
		goto IL_002d;
	}

IL_002d:
	{
		float L_12 = V_0;
		return L_12;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_Cross_m77F64620D73934C56BEE37A64016DBDCB9D21DB8_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___lhs0, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___rhs1, const RuntimeMethod* method) 
{
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = ___lhs0;
		float L_1 = L_0.___y_3;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_2 = ___rhs1;
		float L_3 = L_2.___z_4;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_4 = ___lhs0;
		float L_5 = L_4.___z_4;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_6 = ___rhs1;
		float L_7 = L_6.___y_3;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_8 = ___lhs0;
		float L_9 = L_8.___z_4;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_10 = ___rhs1;
		float L_11 = L_10.___x_2;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_12 = ___lhs0;
		float L_13 = L_12.___x_2;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_14 = ___rhs1;
		float L_15 = L_14.___z_4;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_16 = ___lhs0;
		float L_17 = L_16.___x_2;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_18 = ___rhs1;
		float L_19 = L_18.___y_3;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_20 = ___lhs0;
		float L_21 = L_20.___y_3;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_22 = ___rhs1;
		float L_23 = L_22.___x_2;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_24;
		memset((&L_24), 0, sizeof(L_24));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_24), ((float)il2cpp_codegen_subtract(((float)il2cpp_codegen_multiply(L_1, L_3)), ((float)il2cpp_codegen_multiply(L_5, L_7)))), ((float)il2cpp_codegen_subtract(((float)il2cpp_codegen_multiply(L_9, L_11)), ((float)il2cpp_codegen_multiply(L_13, L_15)))), ((float)il2cpp_codegen_subtract(((float)il2cpp_codegen_multiply(L_17, L_19)), ((float)il2cpp_codegen_multiply(L_21, L_23)))), /*hidden argument*/NULL);
		V_0 = L_24;
		goto IL_005a;
	}

IL_005a:
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_25 = V_0;
		return L_25;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* WindowsLibraryLoader_get_Instance_m019E55E3951CDB6FDDAA19F411741DAC90A6AFD3_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public static WindowsLibraryLoader Instance { get { return instance; } }
		il2cpp_codegen_runtime_class_init_inline(WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_il2cpp_TypeInfo_var);
		WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* L_0 = ((WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_StaticFields*)il2cpp_codegen_static_fields_for(WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_il2cpp_TypeInfo_var))->___instance_0;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* WindowsLibraryLoader_get_AdditionalPaths_m3305759C5A1160F085A7B8E8842870B8D1E36E19_inline (WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* __this, const RuntimeMethod* method) 
{
	{
		// public List<string> AdditionalPaths { get; private set; }
		List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* L_0 = __this->___U3CAdditionalPathsU3Ek__BackingField_7;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Exception_t* Exception_get_InnerException_m0C1BDB339C786BA4DA7D2C1AD214571CFBBB1410_inline (Exception_t* __this, const RuntimeMethod* method) 
{
	{
		Exception_t* L_0 = __this->____innerException_4;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t OperatingSystem_get_Platform_m01AF3D6217E4031C3AA824481BBE9E2933347E26_inline (OperatingSystem_t08A94435A5C7D999B5553B6C58763A6F2E3C8557* __this, const RuntimeMethod* method) 
{
	{
		int32_t L_0 = __this->____platform_1;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Clear_m6CD2E5AAE6552A27AECCC57936767B4DCFC902B1_gshared_inline (List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918* __this, const RuntimeMethod* method) 
{
	int32_t V_0 = 0;
	{
		int32_t L_0 = (int32_t)__this->____version_3;
		__this->____version_3 = ((int32_t)il2cpp_codegen_add(L_0, 1));
		if (!false)
		{
			goto IL_0035;
		}
	}
	{
		int32_t L_1 = (int32_t)__this->____size_2;
		V_0 = L_1;
		__this->____size_2 = 0;
		int32_t L_2 = V_0;
		if ((((int32_t)L_2) <= ((int32_t)0)))
		{
			goto IL_003c;
		}
	}
	{
		SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* L_3 = (SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C*)__this->____items_1;
		int32_t L_4 = V_0;
		Array_Clear_m48B57EC27CADC3463CA98A33373D557DA587FF1B((RuntimeArray*)L_3, 0, L_4, NULL);
		return;
	}

IL_0035:
	{
		__this->____size_2 = 0;
	}

IL_003c:
	{
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Clear_mF6795DE5F49C1D0B91D6A0955F448B22970D67A9_gshared_inline (List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73* __this, const RuntimeMethod* method) 
{
	int32_t V_0 = 0;
	{
		int32_t L_0 = (int32_t)__this->____version_3;
		__this->____version_3 = ((int32_t)il2cpp_codegen_add(L_0, 1));
		if (!false)
		{
			goto IL_0035;
		}
	}
	{
		int32_t L_1 = (int32_t)__this->____size_2;
		V_0 = L_1;
		__this->____size_2 = 0;
		int32_t L_2 = V_0;
		if ((((int32_t)L_2) <= ((int32_t)0)))
		{
			goto IL_003c;
		}
	}
	{
		Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* L_3 = (Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C*)__this->____items_1;
		int32_t L_4 = V_0;
		Array_Clear_m48B57EC27CADC3463CA98A33373D557DA587FF1B((RuntimeArray*)L_3, 0, L_4, NULL);
		return;
	}

IL_0035:
	{
		__this->____size_2 = 0;
	}

IL_003c:
	{
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Add_m2F86E252D086E288E02FA1C830B7E86C0A431E51_gshared_inline (List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918* __this, float ___item0, const RuntimeMethod* method) 
{
	SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* V_0 = NULL;
	int32_t V_1 = 0;
	{
		int32_t L_0 = (int32_t)__this->____version_3;
		__this->____version_3 = ((int32_t)il2cpp_codegen_add(L_0, 1));
		SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* L_1 = (SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C*)__this->____items_1;
		V_0 = L_1;
		int32_t L_2 = (int32_t)__this->____size_2;
		V_1 = L_2;
		int32_t L_3 = V_1;
		SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* L_4 = V_0;
		NullCheck(L_4);
		if ((!(((uint32_t)L_3) < ((uint32_t)((int32_t)(((RuntimeArray*)L_4)->max_length))))))
		{
			goto IL_0034;
		}
	}
	{
		int32_t L_5 = V_1;
		__this->____size_2 = ((int32_t)il2cpp_codegen_add(L_5, 1));
		SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* L_6 = V_0;
		int32_t L_7 = V_1;
		float L_8 = ___item0;
		NullCheck(L_6);
		(L_6)->SetAt(static_cast<il2cpp_array_size_t>(L_7), (float)L_8);
		return;
	}

IL_0034:
	{
		float L_9 = ___item0;
		((  void (*) (List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918*, float, const RuntimeMethod*))il2cpp_codegen_get_method_pointer(il2cpp_rgctx_method(method->klass->rgctx_data, 11)))(__this, L_9, il2cpp_rgctx_method(method->klass->rgctx_data, 11));
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m545762F67009314D9C63DD209B42FFF950569B05_gshared_inline (List_1_t0D1C46FD8DDDE974D93CA4F3474EEC05AF950918* __this, const RuntimeMethod* method) 
{
	{
		int32_t L_0 = (int32_t)__this->____size_2;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Add_m0248A96C5334E9A93E6994B7780478BCD994EA3D_gshared_inline (List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73* __this, int32_t ___item0, const RuntimeMethod* method) 
{
	Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* V_0 = NULL;
	int32_t V_1 = 0;
	{
		int32_t L_0 = (int32_t)__this->____version_3;
		__this->____version_3 = ((int32_t)il2cpp_codegen_add(L_0, 1));
		Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* L_1 = (Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C*)__this->____items_1;
		V_0 = L_1;
		int32_t L_2 = (int32_t)__this->____size_2;
		V_1 = L_2;
		int32_t L_3 = V_1;
		Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* L_4 = V_0;
		NullCheck(L_4);
		if ((!(((uint32_t)L_3) < ((uint32_t)((int32_t)(((RuntimeArray*)L_4)->max_length))))))
		{
			goto IL_0034;
		}
	}
	{
		int32_t L_5 = V_1;
		__this->____size_2 = ((int32_t)il2cpp_codegen_add(L_5, 1));
		Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* L_6 = V_0;
		int32_t L_7 = V_1;
		int32_t L_8 = ___item0;
		NullCheck(L_6);
		(L_6)->SetAt(static_cast<il2cpp_array_size_t>(L_7), (int32_t)L_8);
		return;
	}

IL_0034:
	{
		int32_t L_9 = ___item0;
		((  void (*) (List_1_t05915E9237850A58106982B7FE4BC5DA4E872E73*, int32_t, const RuntimeMethod*))il2cpp_codegen_get_method_pointer(il2cpp_rgctx_method(method->klass->rgctx_data, 11)))(__this, L_9, il2cpp_rgctx_method(method->klass->rgctx_data, 11));
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Add_mEBCF994CC3814631017F46A387B1A192ED6C85C7_gshared_inline (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, RuntimeObject* ___item0, const RuntimeMethod* method) 
{
	ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* V_0 = NULL;
	int32_t V_1 = 0;
	{
		int32_t L_0 = (int32_t)__this->____version_3;
		__this->____version_3 = ((int32_t)il2cpp_codegen_add(L_0, 1));
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_1 = (ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918*)__this->____items_1;
		V_0 = L_1;
		int32_t L_2 = (int32_t)__this->____size_2;
		V_1 = L_2;
		int32_t L_3 = V_1;
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_4 = V_0;
		NullCheck(L_4);
		if ((!(((uint32_t)L_3) < ((uint32_t)((int32_t)(((RuntimeArray*)L_4)->max_length))))))
		{
			goto IL_0034;
		}
	}
	{
		int32_t L_5 = V_1;
		__this->____size_2 = ((int32_t)il2cpp_codegen_add(L_5, 1));
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_6 = V_0;
		int32_t L_7 = V_1;
		RuntimeObject* L_8 = ___item0;
		NullCheck(L_6);
		(L_6)->SetAt(static_cast<il2cpp_array_size_t>(L_7), (RuntimeObject*)L_8);
		return;
	}

IL_0034:
	{
		RuntimeObject* L_9 = ___item0;
		((  void (*) (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D*, RuntimeObject*, const RuntimeMethod*))il2cpp_codegen_get_method_pointer(il2cpp_rgctx_method(method->klass->rgctx_data, 11)))(__this, L_9, il2cpp_rgctx_method(method->klass->rgctx_data, 11));
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Color__ctor_m3786F0D6E510D9CFA544523A955870BD2A514C8C_inline (Color_tD001788D726C3A7F1379BEED0260B9591F440C1F* __this, float ___r0, float ___g1, float ___b2, float ___a3, const RuntimeMethod* method) 
{
	{
		float L_0 = ___r0;
		__this->___r_0 = L_0;
		float L_1 = ___g1;
		__this->___g_1 = L_1;
		float L_2 = ___b2;
		__this->___b_2 = L_2;
		float L_3 = ___a3;
		__this->___a_3 = L_3;
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Mathf_Clamp01_mD921B23F47F5347996C56DC789D1DE16EE27D9B1_inline (float ___value0, const RuntimeMethod* method) 
{
	bool V_0 = false;
	float V_1 = 0.0f;
	bool V_2 = false;
	{
		float L_0 = ___value0;
		V_0 = (bool)((((float)L_0) < ((float)(0.0f)))? 1 : 0);
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0015;
		}
	}
	{
		V_1 = (0.0f);
		goto IL_002d;
	}

IL_0015:
	{
		float L_2 = ___value0;
		V_2 = (bool)((((float)L_2) > ((float)(1.0f)))? 1 : 0);
		bool L_3 = V_2;
		if (!L_3)
		{
			goto IL_0029;
		}
	}
	{
		V_1 = (1.0f);
		goto IL_002d;
	}

IL_0029:
	{
		float L_4 = ___value0;
		V_1 = L_4;
		goto IL_002d;
	}

IL_002d:
	{
		float L_5 = V_1;
		return L_5;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Mathf_Repeat_m1ACDE7EF466FB6CCAD29B3866E4A239A8530E9D5_inline (float ___t0, float ___length1, const RuntimeMethod* method) 
{
	float V_0 = 0.0f;
	{
		float L_0 = ___t0;
		float L_1 = ___t0;
		float L_2 = ___length1;
		float L_3;
		L_3 = floorf(((float)(L_1/L_2)));
		float L_4 = ___length1;
		float L_5 = ___length1;
		float L_6;
		L_6 = Mathf_Clamp_m154E404AF275A3B2EC99ECAA3879B4CB9F0606DC_inline(((float)il2cpp_codegen_subtract(L_0, ((float)il2cpp_codegen_multiply(L_3, L_4)))), (0.0f), L_5, NULL);
		V_0 = L_6;
		goto IL_001b;
	}

IL_001b:
	{
		float L_7 = V_0;
		return L_7;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_Normalize_m6120F119433C5B60BBB28731D3D4A0DA50A84DDD_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___value0, const RuntimeMethod* method) 
{
	float V_0 = 0.0f;
	bool V_1 = false;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_2;
	memset((&V_2), 0, sizeof(V_2));
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = ___value0;
		float L_1;
		L_1 = Vector3_Magnitude_m6AD0BEBF88AAF98188A851E62D7A32CB5B7830EF_inline(L_0, NULL);
		V_0 = L_1;
		float L_2 = V_0;
		V_1 = (bool)((((float)L_2) > ((float)(9.99999975E-06f)))? 1 : 0);
		bool L_3 = V_1;
		if (!L_3)
		{
			goto IL_001e;
		}
	}
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_4 = ___value0;
		float L_5 = V_0;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_6;
		L_6 = Vector3_op_Division_mD7200D6D432BAFC4135C5B17A0B0A812203B0270_inline(L_4, L_5, NULL);
		V_2 = L_6;
		goto IL_0026;
	}

IL_001e:
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_7;
		L_7 = Vector3_get_zero_m9D7F7B580B5A276411267E96AA3425736D9BDC83_inline(NULL);
		V_2 = L_7;
		goto IL_0026;
	}

IL_0026:
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_8 = V_2;
		return L_8;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Vector3_Magnitude_m6AD0BEBF88AAF98188A851E62D7A32CB5B7830EF_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___vector0, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Math_tEB65DE7CA8B083C412C969C92981C030865486CE_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = ___vector0;
		float L_1 = L_0.___x_2;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_2 = ___vector0;
		float L_3 = L_2.___x_2;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_4 = ___vector0;
		float L_5 = L_4.___y_3;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_6 = ___vector0;
		float L_7 = L_6.___y_3;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_8 = ___vector0;
		float L_9 = L_8.___z_4;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_10 = ___vector0;
		float L_11 = L_10.___z_4;
		il2cpp_codegen_runtime_class_init_inline(Math_tEB65DE7CA8B083C412C969C92981C030865486CE_il2cpp_TypeInfo_var);
		double L_12;
		L_12 = sqrt(((double)((float)il2cpp_codegen_add(((float)il2cpp_codegen_add(((float)il2cpp_codegen_multiply(L_1, L_3)), ((float)il2cpp_codegen_multiply(L_5, L_7)))), ((float)il2cpp_codegen_multiply(L_9, L_11))))));
		V_0 = ((float)L_12);
		goto IL_0034;
	}

IL_0034:
	{
		float L_13 = V_0;
		return L_13;
	}
}
